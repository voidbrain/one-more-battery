(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6599],{27543:(ft,N,t)=>{"use strict";t.d(N,{C:()=>s});var e=t(41653);function s(i,E){Array.isArray(i)||(i=[i]),i.forEach(m=>{null!=m&&e.ZSL.assert("complex64"!==m.dtype,()=>`${E} does not support complex64 tensors in the CPU backend.`)})}},21750:(ft,N,t)=>{"use strict";t.d(N,{Um:()=>c});var e=t(41653),s=t(10467),i=t(27543);const E=e.kpo.YO;let m=(()=>{class ct extends e.uI_{nextDataId(){return ct.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new e.GJx(this,(0,e.Hi9)())}write(R,X,$){this.firstUse&&(this.firstUse=!1,(0,e._K2)().get("IS_NODE")&&e.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const Q={id:this.nextDataId()};return this.data.set(Q,{values:R,dtype:$,refCount:1}),Q}makeTensorInfo(R,X,$){let Q;if("string"===X&&null!=$&&$.length>0&&e.ZSL.isString($[0])){const yt=$.map(_t=>e.ZSL.encodeString(_t));Q=this.write(yt,R,X)}else Q=this.write($,R,X);return{dataId:Q,shape:R,dtype:X}}refCount(R){return this.data.has(R)?this.data.get(R).refCount:0}incRef(R){this.data.get(R).refCount++}decRef(R){this.data.has(R)&&this.data.get(R).refCount--}move(R,X,$,Q,yt){this.data.set(R,{values:X,dtype:Q,refCount:yt})}numDataIds(){return this.data.numDataIds()}read(R){var X=this;return(0,s.A)(function*(){return X.readSync(R)})()}readSync(R){const{dtype:X,complexTensorInfos:$}=this.data.get(R);if("complex64"===X){const Q=this.readSync($.real.dataId),yt=this.readSync($.imag.dataId);return e.C0T.mergeRealAndImagArrays(Q,yt)}return e.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(R).values,X)}bufferSync(R){const X=this.readSync(R.dataId);if("string"===R.dtype)try{const $=X.map(Q=>e.ZSL.decodeString(Q));return(0,e.ra8)(R.shape,R.dtype,$)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,e.ra8)(R.shape,R.dtype,X)}makeOutput(R,X,$){return(0,e.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(X,$,R),this)}disposeData(R,X=!1){if(this.data.has(R)){if(this.data.get(R).refCount--,!X&&this.data.get(R).refCount>0)return!1;const{complexTensorInfos:$}=this.data.get(R);null!=$&&(this.disposeData($.real.dataId,!0),this.disposeData($.imag.dataId,!0)),this.data.delete(R)}return!0}disposeIntermediateTensorInfo(R){this.disposeData(R.dataId)}time(R){return(0,s.A)(function*(){const X=e.ZSL.now();return R(),{kernelMs:e.ZSL.now()-X}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(R){(0,i.C)([R],"where");const X=this.readSync(R.dataId);return E(R.shape,X)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return ct.nextDataId=0,ct})();const c="4.22.0";(0,e.gJX)("cpu",()=>new m,1);var x=t(80345);const g=(0,x.v)(e.Pah,ct=>ct>=0?ct:Math.exp(ct)-1),h={kernelName:e.Pah,backendName:"cpu",kernelFunc:g};var f=t(5029);function p(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{alpha:Q}=X;(0,i.C)([$],"leakyRelu");const yt=e.ZSL.sizeFromShape($.shape),_t=R.data.get($.dataId).values,vt=e.ZSL.getTypedArrayFromDType("float32",yt);for(let gt=0;gt<_t.length;gt++)vt[gt]=_t[gt]<0?Q*_t[gt]:_t[gt];return R.makeTensorInfo($.shape,"float32",vt)}const u={kernelName:e.X0$,backendName:"cpu",kernelFunc:p};var d=t(99800);const C=(0,d.Z)((ct,mt)=>ct<0?mt*ct:ct);function T(ct){const{inputs:mt,backend:R}=ct,{x:X,alpha:$}=mt;(0,i.C)([X,$],"prelu");const Q=R.data.get(X.dataId).values,yt=R.data.get($.dataId).values,[_t,vt]=C(X.shape,$.shape,Q,yt,"float32");return R.makeTensorInfo(vt,"float32",_t)}const D={kernelName:e.Ncv,backendName:"cpu",kernelFunc:T},S=(0,x.v)(e.fUj,ct=>Math.max(0,ct)),b={kernelName:e.fUj,backendName:"cpu",kernelFunc:S},w=(0,x.v)(e.P_L,ct=>Math.min(Math.max(0,ct),6)),G={kernelName:e.P_L,backendName:"cpu",kernelFunc:w};var H=t(94303);function F(ct,mt,R,X,$){if("linear"===R)return(0,f.D)({inputs:{x:mt},backend:ct});if("relu"===R)return S({inputs:{x:mt},backend:ct});if("elu"===R)return g({inputs:{x:mt},backend:ct});if("relu6"===R)return w({inputs:{x:mt},backend:ct});if("prelu"===R)return T({inputs:{x:mt,alpha:X},backend:ct});if("leakyrelu"===R)return p({inputs:{x:mt},backend:ct,attrs:{alpha:$}});if("sigmoid"===R)return(0,H.ry)({inputs:{x:mt},backend:ct});throw new Error(`Activation ${R} has not been implemented for the CPU backend.`)}var B=t(6936);function A(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{shape:Q}=X,yt=e.ZSL.sizeFromShape($.shape),_t=e.ZSL.inferFromImplicitShape(Q,yt),vt=e.ZSL.sizeFromShape(_t);e.ZSL.assert(yt===vt,()=>`The new shape (${_t}) has ${vt} elements and the old shape (${$.shape}) has ${yt} elements. The new shape and old shape must have the same number of elements.`),R.incRef($.dataId);const gt=R.data.get($.dataId);if(null!=gt.complexTensorInfos){const St=gt.complexTensorInfos.imag;gt.complexTensorInfos.real.shape=_t,St.shape=_t}return{dataId:$.dataId,shape:_t,dtype:$.dtype}}const k={kernelName:e.R23,backendName:"cpu",kernelFunc:A};function _(ct){const{inputs:mt,backend:R,attrs:X}=ct,{a:$,b:Q}=mt,{transposeA:yt,transposeB:_t}=X;(0,i.C)([$,Q],"matMul");const vt=$.shape.length,gt=Q.shape.length,ht=yt?$.shape[vt-2]:$.shape[vt-1],St=_t?Q.shape[gt-1]:Q.shape[gt-2],Pt=yt?$.shape[vt-1]:$.shape[vt-2],Lt=_t?Q.shape[gt-2]:Q.shape[gt-1],Vt=$.shape.slice(0,-2),Ft=Q.shape.slice(0,-2),zt=e.ZSL.sizeFromShape(Vt),Zt=e.ZSL.sizeFromShape(Ft),se=e.ZEY.assertAndGetBroadcastShape($.shape.slice(0,-2),Q.shape.slice(0,-2)).concat([Pt,Lt]);e.ZSL.assert(ht===St,()=>`Error in matMul: inner shapes (${ht}) and (${St}) of Tensors with shapes ${$.shape} and ${Q.shape} and transposeA=${yt} and transposeB=${_t} must match.`);const de=_t?[Zt,Lt,St]:[Zt,St,Lt],me=A({inputs:{x:$},backend:R,attrs:{shape:yt?[zt,ht,Pt]:[zt,Pt,ht]}}),xe=A({inputs:{x:Q},backend:R,attrs:{shape:de}}),we=yt?me.shape[1]:me.shape[2],Ue=yt?me.shape[2]:me.shape[1],ke=_t?xe.shape[1]:xe.shape[2],Ge=Math.max(zt,Zt),Ze=R.data.get(me.dataId).values,Me=R.data.get(xe.dataId).values,Be=e.ZSL.computeStrides(me.shape),Ne=e.ZSL.computeStrides(xe.shape),[Re,Ve,Le]=yt?[Be[0],1,Be[1]]:[Be[0],Be[1],1],[Fe,Ye,je]=_t?[1,Ne[1],Ne[0]]:[Ne[1],1,Ne[0]],rn=Ue*ke,Xe=(0,e.ra8)([Ge,Ue,ke],me.dtype),an=Xe.values,Qe=R.blockSize;for(let hn=0;hn<Ge;hn++){const yn=hn%zt,In=hn%Zt;for(let Cn=0;Cn<Ue;Cn+=Qe){const Mn=Math.min(Cn+Qe,Ue);for(let Rn=0;Rn<ke;Rn+=Qe){const Xn=Math.min(Rn+Qe,ke);for(let qn=0;qn<we;qn+=Qe){const as=Math.min(qn+Qe,we);for(let ts=Cn;ts<Mn;ts++)for(let Qn=Rn;Qn<Xn;Qn++){let is=0;for(let ns=qn;ns<as;ns++)is+=Ze[yn*Re+ts*Ve+ns*Le]*Me[ns*Fe+Qn*Ye+In*je];an[hn*rn+(ts*ke+Qn)]+=is}}}}}return R.disposeIntermediateTensorInfo(me),R.disposeIntermediateTensorInfo(xe),R.makeTensorInfo(se,Xe.dtype,Xe.values)}const U={kernelName:e.jAQ,backendName:"cpu",kernelFunc:_},Z={kernelName:e.Dr,backendName:"cpu",kernelFunc:function W(ct){const{inputs:mt,backend:R,attrs:X}=ct,{a:$,b:Q,bias:yt,preluActivationWeights:_t}=mt,{transposeA:vt,transposeB:gt,activation:ht,leakyreluAlpha:St}=X;let Pt,Lt,Vt;const Ft=[];Pt=_({inputs:{a:$,b:Q},attrs:{transposeA:vt,transposeB:gt},backend:R}),yt&&(Lt=(0,B.WQ)({inputs:{a:Pt,b:yt},backend:R}),Ft.push(Pt),Pt=Lt),ht&&(Vt=F(R,Pt,ht,_t,St),Ft.push(Pt),Pt=Vt);for(const Zt of Ft)R.disposeIntermediateTensorInfo(Zt);return Pt}};var j=t(13375);const it=(0,x.v)(e.Vvy,ct=>Math.acos(ct)),at={kernelName:e.Vvy,backendName:"cpu",kernelFunc:it},J=(0,x.v)(e.PH8,ct=>Math.acosh(ct)),ot={kernelName:e.PH8,backendName:"cpu",kernelFunc:J},tt={kernelName:e.EkD,backendName:"cpu",kernelFunc:function rt(ct){const{inputs:mt,backend:R}=ct,X=mt;(0,i.C)(mt,"addN");const $=X.map(_t=>R.data.get(_t.dataId).values),Q=(0,e.ra8)(X[0].shape,X[0].dtype),yt=Q.values;for(let _t=0;_t<X.length;_t++){const vt=$[_t];for(let gt=0;gt<yt.length;gt++)yt[gt]+=vt[gt]}return R.makeTensorInfo(Q.shape,Q.dtype,Q.values)}};var Tt=t(87599);const At={kernelName:e.u8Z,backendName:"cpu",kernelFunc:function Et(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,keepDims:yt}=X;(0,i.C)($,"all");const _t=e.ZSL.parseAxisParam(Q,$.shape);let vt=_t;const gt=e.C0T.getAxesPermutation(vt,$.shape.length);let ht=$;null!=gt&&(ht=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:gt}}),vt=e.C0T.getInnerMostAxes(vt.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("all",vt,ht.shape.length);const[St,Pt]=e.C0T.computeOutAndReduceShapes(ht.shape,vt),Lt=e.ZSL.sizeFromShape(Pt),Vt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(St),ht.dtype),Ft=R.data.get(ht.dataId).values;for(let Zt=0;Zt<Vt.length;++Zt){const ne=Zt*Lt;let se=Ft[ne];for(let qt=0;qt<Lt;++qt)se=se&&Ft[ne+qt];Vt[Zt]=se}null!=gt&&R.disposeIntermediateTensorInfo(ht);const zt=R.makeTensorInfo(St,ht.dtype,Vt);if(yt){const ne=A({inputs:{x:zt},backend:R,attrs:{shape:e.C0T.expandShapeToKeepDim(St,_t)}});return R.disposeIntermediateTensorInfo(zt),ne}return zt}},Gt={kernelName:e.FSt,backendName:"cpu",kernelFunc:function oe(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,keepDims:yt}=X;(0,i.C)($,"any");const _t=e.ZSL.parseAxisParam(Q,$.shape);let vt=_t;const gt=e.C0T.getAxesPermutation(vt,$.shape.length);let ht=$;null!=gt&&(ht=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:gt}}),vt=e.C0T.getInnerMostAxes(vt.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("any",vt,ht.shape.length);const[St,Pt]=e.C0T.computeOutAndReduceShapes(ht.shape,vt),Lt=e.ZSL.sizeFromShape(Pt),Vt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(St),ht.dtype),Ft=R.data.get(ht.dataId).values;for(let Zt=0;Zt<Vt.length;++Zt){const ne=Zt*Lt;let se=Ft[ne];for(let qt=0;qt<Lt;++qt)se=se||Ft[ne+qt];Vt[Zt]=se}null!=gt&&R.disposeIntermediateTensorInfo(ht);const zt=R.makeTensorInfo(St,ht.dtype,Vt);if(yt){const ne=A({inputs:{x:zt},backend:R,attrs:{shape:e.C0T.expandShapeToKeepDim(St,_t)}});return R.disposeIntermediateTensorInfo(zt),ne}return zt}},Jt={kernelName:e.Jp_,backendName:"cpu",kernelFunc:function ce(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q}=X;(0,i.C)($,"argMax");let yt=e.ZSL.parseAxisParam(Q,$.shape);const _t=e.C0T.getAxesPermutation(yt,$.shape.length);let vt=$;const gt=[];null!=_t&&(vt=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:_t}}),gt.push(vt),yt=e.C0T.getInnerMostAxes(yt.length,vt.shape.length)),yt=[yt[0]],e.C0T.assertAxesAreInnerMostDims("argMax",yt,vt.shape.length);const[ht,St]=e.C0T.computeOutAndReduceShapes(vt.shape,yt),Pt=e.ZSL.sizeFromShape(ht),Lt=e.ZSL.makeZerosTypedArray(Pt,"int32"),Vt=e.ZSL.sizeFromShape(St),Ft=R.data.get(vt.dataId).values;for(let zt=0;zt<Lt.length;++zt){const Zt=zt*Vt;let ne=Ft[Zt],se=0;for(let qt=0;qt<Vt;++qt){const de=Ft[Zt+qt];de>ne&&(ne=de,se=qt)}Lt[zt]=se}return gt.forEach(zt=>R.disposeIntermediateTensorInfo(zt)),R.makeTensorInfo(ht,"int32",Lt)}},ie={kernelName:e.p_m,backendName:"cpu",kernelFunc:function ue(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q}=X;(0,i.C)($,"argMin");let yt=e.ZSL.parseAxisParam(Q,$.shape);const _t=e.C0T.getAxesPermutation(yt,$.shape.length);let vt=$;const gt=[];null!=_t&&(vt=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:_t}}),gt.push(vt),yt=e.C0T.getInnerMostAxes(yt.length,vt.shape.length)),yt=[yt[0]],e.C0T.assertAxesAreInnerMostDims("argMin",yt,vt.shape.length);const[ht,St]=e.C0T.computeOutAndReduceShapes(vt.shape,yt),Pt=e.ZSL.sizeFromShape(ht),Lt=e.ZSL.makeZerosTypedArray(Pt,"int32"),Vt=e.ZSL.sizeFromShape(St),Ft=R.data.get(vt.dataId).values;for(let zt=0;zt<Lt.length;++zt){const Zt=zt*Vt;let ne=Ft[Zt],se=0;for(let qt=0;qt<Vt;++qt){const de=Ft[Zt+qt];de<ne&&(ne=de,se=qt)}Lt[zt]=se}return gt.forEach(zt=>R.disposeIntermediateTensorInfo(zt)),R.makeTensorInfo(ht,"int32",Lt)}},re=(0,x.v)(e.QKF,ct=>Math.asin(ct)),Se={kernelName:e.QKF,backendName:"cpu",kernelFunc:re},Oe=(0,x.v)(e.epO,ct=>Math.asinh(ct)),Dt={kernelName:e.epO,backendName:"cpu",kernelFunc:Oe},Kt=(0,x.v)(e.TyE,ct=>Math.atan(ct)),te={kernelName:e.TyE,backendName:"cpu",kernelFunc:Kt};var he=t(445);const Ke=(0,d.Z)((ct,mt)=>Math.atan2(ct,mt)),on=(0,he.j)(e.lxb,Ke),vn={kernelName:e.lxb,backendName:"cpu",kernelFunc:on},fn=(0,x.v)(e.zP9,ct=>Math.atanh(ct)),dn={kernelName:e.zP9,backendName:"cpu",kernelFunc:fn};function $n(ct,mt,R,X,$,Q){const yt=$.strideHeight,_t=$.strideWidth,vt=$.dilationHeight,gt=$.dilationWidth,ht=$.effectiveFilterHeight,St=$.effectiveFilterWidth,Pt=$.padInfo.top,Lt=$.padInfo.left,Vt="max"===Q?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,Ft=(0,e.ra8)($.outShape,R),zt=Ft.values,Zt=$.outShape[1]*$.outShape[2]*$.outShape[3],ne=$.outShape[2]*$.outShape[3],se=$.outShape[3];for(let qt=0;qt<$.batchSize;++qt){const de=qt*Zt,me=qt*X[0];for(let xe=0;xe<$.inChannels;++xe)for(let we=0;we<$.outHeight;++we){const Ue=we*yt-Pt,ke=Math.max(0,Ue),Ge=Math.min($.inHeight,ht+Ue),Ze=de+we*ne;for(let Me=0;Me<$.outWidth;++Me){const Be=Me*_t-Lt,Ne=Math.max(0,Be),Re=Math.min($.inWidth,St+Be);let Ve=Vt,Le=0,Fe=0;for(let je=ke;je<Ge;je+=vt){const rn=me+je*X[1];for(let Xe=Ne;Xe<Re;Xe+=gt){const Qe=ct[rn+Xe*X[2]+xe];"max"===Q&&Qe>Ve?Ve=Qe:"avg"===Q&&(Le+=Qe,Fe++)}if(isNaN(Ve))break}zt[Ze+Me*se+xe]="avg"===Q?Le/Fe:Ve}}}return Ft}function wn(ct,mt,R,X,$=!1,Q=!1){const yt=(0,e.ra8)(X.outShape,"int32"),_t=X.strideHeight,vt=X.strideWidth,gt=X.dilationHeight,ht=X.dilationWidth,St=X.effectiveFilterHeight,Pt=X.effectiveFilterWidth,Lt=X.padInfo.top,Vt=X.padInfo.left,Ft=(0,e.ra8)(mt,R,ct);for(let zt=0;zt<X.batchSize;++zt)for(let Zt=0;Zt<X.inChannels;++Zt)for(let ne=0;ne<X.outHeight;++ne){const se=ne*_t-Lt;let qt=se;for(;qt<0;)qt+=gt;const de=Math.min(X.inHeight,St+se);for(let me=0;me<X.outWidth;++me){const xe=me*vt-Vt;let we=xe;for(;we<0;)we+=ht;const Ue=Math.min(X.inWidth,Pt+xe);let ke=Number.NEGATIVE_INFINITY,Ge=-1;for(let Ze=qt;Ze<de;Ze+=gt){const Me=Ze-se;for(let Be=we;Be<Ue;Be+=ht){const Ne=Be-xe,Re=Ft.get(zt,Ze,Be,Zt);Re>ke&&(ke=Re,Ge=$?Q?((zt*X.inHeight+Ze)*X.inWidth+Be)*X.inChannels+Zt:(Ze*X.inWidth+Be)*X.inChannels+Zt:Me*Pt+Ne)}}yt.set(Ge,zt,ne,me,Zt)}}return yt}function zn(ct,mt,R,X,$,Q){const yt=$.strideDepth,_t=$.strideHeight,vt=$.strideWidth,gt=$.dilationDepth,ht=$.dilationHeight,St=$.dilationWidth,Pt=$.effectiveFilterDepth,Lt=$.effectiveFilterHeight,Vt=$.effectiveFilterWidth,Ft=$.padInfo.front,zt=$.padInfo.top,Zt=$.padInfo.left,ne="max"===Q?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,se=(0,e.ra8)($.outShape,R),qt=se.values,de=$.outShape[1]*$.outShape[2]*$.outShape[3]*$.outShape[4],me=$.outShape[2]*$.outShape[3]*$.outShape[4],xe=$.outShape[3]*$.outShape[4],we=$.outShape[4];for(let Ue=0;Ue<$.batchSize;++Ue){const ke=Ue*de,Ge=Ue*X[0];for(let Ze=0;Ze<$.inChannels;++Ze)for(let Me=0;Me<$.outDepth;++Me){const Be=Me*yt-Ft;let Ne=Be;for(;Ne<0;)Ne+=gt;const Re=Math.min($.inDepth,Pt+Be),Ve=ke+Me*me;for(let Le=0;Le<$.outHeight;++Le){const Fe=Le*_t-zt;let Ye=Fe;for(;Ye<0;)Ye+=ht;const je=Math.min($.inHeight,Lt+Fe),rn=Ve+Le*xe;for(let Xe=0;Xe<$.outWidth;++Xe){const an=Xe*vt-Zt;let Qe=an;for(;Qe<0;)Qe+=St;const hn=Math.min($.inWidth,Vt+an),yn=rn+Xe*we;let In=ne,Cn=0,Mn=0;for(let Xn=Ne;Xn<Re;Xn+=gt){const qn=Ge+Xn*X[1];for(let as=Ye;as<je;as+=ht){const ts=qn+as*X[2];for(let Qn=Qe;Qn<hn;Qn+=St){const ns=ct[ts+Qn*X[3]+Ze];if("max"===Q&&ns>In?In=ns:"avg"===Q&&(Cn+=ns,Mn++),isNaN(In))break}if(isNaN(In))break}if(isNaN(In))break}qt[yn+Ze]="avg"===Q?Cn/Math.max(Mn,1):In}}}}return se}const Jn={kernelName:e.ho8,backendName:"cpu",kernelFunc:function rs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt;(0,i.C)($,"avgPool");const{filterSize:Q,strides:yt,pad:_t,dimRoundingMode:vt}=X;e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(yt,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${yt} and dilations '1'`);const ht=e.C0T.computePool2DInfo($.shape,Q,yt,1,_t,vt);let St;if(1===ht.filterWidth&&1===ht.filterHeight&&e.ZSL.arraysEqual(ht.inShape,ht.outShape))St=(0,f.D)({inputs:{x:$},backend:R});else{const Pt=R.data.get($.dataId).values,Lt=e.ZSL.computeStrides($.shape),Vt=$n(Pt,0,$.dtype,Lt,ht,"avg");St=R.makeTensorInfo(ht.outShape,$.dtype,Vt.values)}return St}},As={kernelName:e.cS,backendName:"cpu",kernelFunc:function gs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{filterSize:Q,strides:yt,pad:_t,dimRoundingMode:vt,dataFormat:gt}=X;(0,i.C)($,"avgPool3d");const ht=e.C0T.computePool3DInfo($.shape,Q,yt,1,_t,vt,gt),Pt=zn(R.data.get($.dataId).values,0,$.dtype,e.ZSL.computeStrides($.shape),ht,"avg");return R.makeTensorInfo(Pt.shape,"float32",Pt.values)}},us={kernelName:e.wwC,backendName:"cpu",kernelFunc:function Gs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,input:Q}=mt,{filterSize:yt,strides:_t,pad:vt,dimRoundingMode:gt}=X;(0,i.C)([$,Q],"avgPool3DGrad");const ht=e.C0T.computePool3DInfo(Q.shape,yt,_t,1,vt,gt),St=ht.strideDepth,Pt=ht.strideHeight,Lt=ht.strideWidth,Vt=ht.filterDepth,Ft=ht.filterHeight,zt=ht.filterWidth,Zt=ht.dilationDepth,ne=ht.dilationHeight,se=ht.dilationWidth,qt=ht.effectiveFilterDepth,de=ht.effectiveFilterHeight,me=ht.effectiveFilterWidth,xe=qt-1-ht.padInfo.front,we=me-1-ht.padInfo.left,Ue=de-1-ht.padInfo.top,ke=(0,e.ra8)(Q.shape,"float32"),Ge=1/(Vt*Ft*zt),Ze=R.bufferSync($);for(let Me=0;Me<ht.batchSize;++Me)for(let Be=0;Be<ht.inChannels;++Be)for(let Ne=0;Ne<ht.inDepth;++Ne)for(let Re=0;Re<ht.inHeight;++Re)for(let Ve=0;Ve<ht.inWidth;++Ve){const Le=Ne-xe,Fe=Re-Ue,Ye=Ve-we;let je=0;for(let rn=0;rn<qt;rn+=Zt){const Xe=(Le+rn)/St;if(!(Xe<0||Xe>=ht.outDepth||Math.floor(Xe)!==Xe))for(let an=0;an<de;an+=ne){const Qe=(Fe+an)/Pt;if(!(Qe<0||Qe>=ht.outHeight||Math.floor(Qe)!==Qe))for(let hn=0;hn<me;hn+=se){const yn=(Ye+hn)/Lt;yn<0||yn>=ht.outWidth||Math.floor(yn)!==yn||(je+=Ze.get(Me,Xe,Qe,yn,Be))}}}ke.set(je*Ge,Me,Ne,Re,Ve,Be)}return R.makeTensorInfo(ke.shape,ke.dtype,ke.values)}},Rt={kernelName:e.VCH,backendName:"cpu",kernelFunc:function ks(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,input:Q}=mt,yt=Q;(0,i.C)([$,Q],"avgPoolGrad");const{filterSize:_t,strides:vt,pad:gt}=X,ht=e.C0T.computePool2DInfo(yt.shape,_t,vt,1,gt),St=ht.strideHeight,Pt=ht.strideWidth,Lt=ht.filterHeight,Vt=ht.filterWidth,Ft=ht.dilationHeight,zt=ht.dilationWidth,Zt=ht.effectiveFilterHeight,ne=ht.effectiveFilterWidth,se=ne-1-ht.padInfo.left,qt=Zt-1-ht.padInfo.top,de=(0,e.ra8)(yt.shape,"float32"),me=1/(Lt*Vt),xe=R.data.get($.dataId).values,we=(0,e.ra8)($.shape,"float32",xe);for(let Ue=0;Ue<ht.batchSize;++Ue)for(let ke=0;ke<ht.inChannels;++ke)for(let Ge=0;Ge<ht.inHeight;++Ge)for(let Ze=0;Ze<ht.inWidth;++Ze){const Me=Ge-qt,Be=Ze-se;let Ne=0;for(let Re=0;Re<Zt;Re+=Ft){const Ve=(Me+Re)/St;if(!(Ve<0||Ve>=ht.outHeight||Math.floor(Ve)!==Ve))for(let Le=0;Le<ne;Le+=zt){const Fe=(Be+Le)/Pt;Fe<0||Fe>=ht.outWidth||Math.floor(Fe)!==Fe||(Ne+=we.get(Ue,Ve,Fe,ke))}}de.set(Ne*me,Ue,Ge,Ze,ke)}return R.makeTensorInfo(de.shape,de.dtype,de.values)}},lt={kernelName:e.i5R,backendName:"cpu",kernelFunc:function Ut(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,scale:Q,offset:yt,mean:_t,variance:vt}=mt;e.ZSL.assert(_t.shape.length===vt.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),e.ZSL.assert(null==yt||_t.shape.length===yt.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),e.ZSL.assert(null==Q||_t.shape.length===Q.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),(0,i.C)([$,_t,vt,Q,yt],"batchNorm");let{varianceEpsilon:gt}=X;null==gt&&(gt=.001);const ht=R.data.get($.dataId).values,St=R.data.get(_t.dataId).values,Pt=R.data.get(vt.dataId).values,Lt=Q?R.data.get(Q.dataId).values:new Float32Array([1]),Vt=yt?R.data.get(yt.dataId).values:new Float32Array([0]),Ft=new Float32Array(ht.length),zt=Vt.length,Zt=Lt.length,ne=Pt.length,se=St.length;let qt=0,de=0,me=0,xe=0;for(let we=0;we<ht.length;++we)Ft[we]=Vt[qt++]+(ht[we]-St[de++])*Lt[me++]/Math.sqrt(Pt[xe++]+gt),qt>=zt&&(qt=0),de>=se&&(de=0),me>=Zt&&(me=0),xe>=ne&&(xe=0);return R.makeTensorInfo($.shape,$.dtype,Ft)}};var kt=t(63685);const xt={kernelName:e.Ik2,backendName:"cpu",kernelFunc:function q(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{blockShape:Q,crops:yt}=X;(0,i.C)([$],"batchToSpaceND");const _t=Q.reduce((Zt,ne)=>Zt*ne),vt=e.C0T.getReshaped($.shape,Q,_t),gt=e.C0T.getPermuted(vt.length,Q.length),ht=e.C0T.getReshapedPermuted($.shape,Q,_t),St=e.C0T.getSliceBeginCoords(yt,Q.length),Pt=e.C0T.getSliceSize(ht,yt,Q.length),Lt=A({inputs:{x:$},backend:R,attrs:{shape:vt}}),Vt=(0,Tt.m)({inputs:{x:Lt},backend:R,attrs:{perm:gt}}),Ft=A({inputs:{x:Vt},backend:R,attrs:{shape:ht}}),zt=(0,kt.di)({inputs:{x:Ft},backend:R,attrs:{begin:St,size:Pt}});return R.disposeIntermediateTensorInfo(Lt),R.disposeIntermediateTensorInfo(Vt),R.disposeIntermediateTensorInfo(Ft),zt}};var It=t(40364);const pt={kernelName:e.N4F,backendName:"cpu",kernelFunc:function dt(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,weights:Q}=mt,{size:yt}=X,_t=R.data.get($.dataId).values,vt=R.data.get(Q.dataId).values,gt=(0,It.X)(_t,vt,Q.dtype,Q.shape,yt);return R.makeTensorInfo([yt],Q.dtype,gt)}};var Xt=t(74291);const ve={kernelName:e.vj7,backendName:"cpu",kernelFunc:function Yt(ct){const{inputs:mt,backend:R}=ct,{s0:X,s1:$}=mt,Q=R.data.get(X.dataId).values,yt=R.data.get($.dataId).values,_t=e.C0T.assertAndGetBroadcastShape(Array.from(Q),Array.from(yt));return R.makeTensorInfo([_t.length],"int32",Int32Array.from(_t))}};var be=t(75148),tn=t(18946);const ln=(0,x.v)(e.vaV,(ct,mt)=>ct>mt.clipValueMax?mt.clipValueMax:ct<mt.clipValueMin?mt.clipValueMin:ct),Ee={kernelName:e.vaV,backendName:"cpu",kernelFunc:ln};var _e=t(46499);const Te={kernelName:e.$zE,backendName:"cpu",kernelFunc:ct=>{const{x:mt}=ct.inputs,R=ct.backend,X=new Float32Array(e.ZSL.sizeFromShape(mt.shape)),$=R.data.get(mt.dataId),yt=$.complexTensorInfos.imag,_t=R.data.get($.complexTensorInfos.real.dataId).values,vt=R.data.get(yt.dataId).values;for(let gt=0;gt<_t.length;gt++)X[gt]=Math.hypot(_t[gt],vt[gt]);return R.makeOutput(X,mt.shape,"float32")}};var en=t(91332);function ze(ct){const{inputs:mt,backend:R}=ct,{input:X}=mt,$=R.data.get(X.dataId).complexTensorInfos.imag,Q=R.data.get($.dataId).values;return R.makeTensorInfo($.shape,$.dtype,Q)}const un={kernelName:e.dv8,backendName:"cpu",kernelFunc:ze};var Sn=t(80363);function Un(ct){const{inputs:mt,backend:R,attrs:X}=ct,{axis:$}=X,Q=e.ZSL.parseAxisParam($,mt[0].shape)[0],yt=mt.map(Ft=>Ft.shape);e.C0T.assertParamsConsistent(yt,Q);let _t=e.C0T.computeOutShape(mt.map(Ft=>Ft.shape),Q);if(0===e.ZSL.sizeFromShape(_t))return R.makeTensorInfo(_t,mt[0].dtype,[]);const vt=mt.filter(Ft=>e.ZSL.sizeFromShape(Ft.shape)>0);if(1===vt.length)return(0,f.D)({inputs:{x:vt[0]},backend:R});if("complex64"===vt[0].dtype){const Ft=vt.map(qt=>(0,Sn.x)({inputs:{input:qt},backend:R})),zt=vt.map(qt=>ze({inputs:{input:qt},backend:R})),Zt=Un({inputs:Ft,backend:R,attrs:{axis:Q}}),ne=Un({inputs:zt,backend:R,attrs:{axis:Q}}),se=(0,_e.f)({inputs:{real:Zt,imag:ne},backend:R});return Ft.forEach(qt=>R.disposeIntermediateTensorInfo(qt)),zt.forEach(qt=>R.disposeIntermediateTensorInfo(qt)),R.disposeIntermediateTensorInfo(Zt),R.disposeIntermediateTensorInfo(ne),se}const gt=vt.map(Ft=>{const Zt=[-1,e.ZSL.sizeFromShape(Ft.shape.slice(Q))];return A({inputs:{x:Ft},backend:R,attrs:{shape:Zt}})}),ht=gt.map(Ft=>({vals:R.data.get(Ft.dataId).values,shape:Ft.shape}));_t=e.C0T.computeOutShape(gt.map(Ft=>Ft.shape),1);const Pt=(0,en.h)(ht,_t,mt[0].dtype,1===gt[0].shape[0]),Lt=e.C0T.computeOutShape(vt.map(Ft=>Ft.shape),Q),Vt=R.makeTensorInfo(Lt,mt[0].dtype,Pt);return gt.forEach(Ft=>R.disposeIntermediateTensorInfo(Ft)),Vt}const bn={kernelName:e.$dB,backendName:"cpu",kernelFunc:Un};function es(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,filter:Q}=mt,{strides:yt,pad:_t,dataFormat:vt,dilations:gt,dimRoundingMode:ht}=X;(0,i.C)([$,Q],"conv2d");const St=e.C0T.convertConv2DDataFormat(vt),Pt=e.C0T.computeConv2DInfo($.shape,Q.shape,yt,gt,_t,ht,!1,St),Lt=Pt.filterHeight,Vt=Pt.filterWidth,Ft=Pt.dilationHeight,zt=Pt.dilationWidth,Zt=Pt.padInfo.left,ne=Pt.padInfo.top,se="channelsLast"===Pt.dataFormat,qt=new e.ylz(Pt.outShape,$.dtype),de=e.ZSL.computeStrides($.shape),me=e.ZSL.computeStrides(Q.shape),xe=de[0],we=se?de[1]:de[2],Ue=se?de[2]:1,ke=se?1:de[1],Ge=qt.strides[0],Ze=se?qt.strides[1]:qt.strides[2],Me=se?qt.strides[2]:1,Be=se?1:qt.strides[1],Ne=R.data.get($.dataId).values,Re=R.data.get(Q.dataId).values,Ve=qt.values;for(let Le=0;Le<Pt.batchSize;++Le){const Fe=Le*xe,Ye=Le*Ge;for(let je=0;je<Pt.outHeight;++je){const rn=Ye+je*Ze,Xe=je*Pt.strideHeight-ne;for(let an=0;an<Lt;++an){const Qe=Xe+an*Ft;if(Qe<0||Qe>=Pt.inHeight)continue;const hn=an*me[0],yn=Fe+Qe*we;for(let In=0;In<Pt.outWidth;++In){const Cn=rn+In*Me,Mn=In*Pt.strideWidth-Zt;for(let Rn=0;Rn<Vt;++Rn){const Xn=Mn+Rn*zt;if(Xn<0||Xn>=Pt.inWidth)continue;const as=yn+Xn*Ue;let ts=hn+Rn*me[1];for(let Qn=0;Qn<Pt.inChannels;++Qn){const is=Ne[as+Qn*ke];for(let ns=0;ns<Pt.outChannels;++ns)Ve[Cn+ns*Be]+=is*Re[ts+ns];ts+=Pt.outChannels}}}}}}return R.makeTensorInfo(qt.shape,qt.dtype,Ve)}const kn={kernelName:e.p2J,backendName:"cpu",kernelFunc:es},Es={kernelName:e.rFm,backendName:"cpu",kernelFunc:function Zn(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,dy:Q}=mt,{strides:yt,pad:_t,dataFormat:vt,dimRoundingMode:gt,filterShape:ht}=X;(0,i.C)([$,Q],"conv2dBackpropFilter");const St=e.C0T.convertConv2DDataFormat(vt),Pt=e.C0T.computeConv2DInfo($.shape,ht,yt,1,_t,gt,!1,St),{strideHeight:Lt,strideWidth:Vt,filterHeight:Ft,filterWidth:zt}=Pt,Zt="channelsLast"===Pt.dataFormat,ne=new e.ylz(Pt.filterShape,"float32"),se=Pt.padInfo.left,qt=Pt.padInfo.top,de=R.data.get($.dataId).values,me=R.data.get(Q.dataId).values,xe=new e.ylz($.shape,$.dtype,de),we=new e.ylz(Q.shape,Q.dtype,me);for(let Ue=0;Ue<Ft;++Ue){const ke=Math.max(0,Math.ceil((qt-Ue)/Lt)),Ge=Math.min(Pt.outHeight,(Pt.inHeight+qt-Ue)/Lt);for(let Ze=0;Ze<zt;++Ze){const Me=Math.max(0,Math.ceil((se-Ze)/Vt)),Be=Math.min(Pt.outWidth,(Pt.inWidth+se-Ze)/Vt);for(let Ne=0;Ne<Pt.inChannels;++Ne)for(let Re=0;Re<Pt.outChannels;++Re){let Ve=0;for(let Le=0;Le<Pt.batchSize;++Le)for(let Fe=ke;Fe<Ge;++Fe){const Ye=Ue+Fe*Lt-qt;for(let je=Me;je<Be;++je){const rn=Ze+je*Vt-se;Ve+=Zt?xe.get(Le,Ye,rn,Ne)*we.get(Le,Fe,je,Re):xe.get(Le,Ne,Ye,rn)*we.get(Le,Re,Fe,je)}}ne.set(Ve,Ue,Ze,Ne,Re)}}}return R.makeTensorInfo(ne.shape,ne.dtype,ne.values)}},fs={kernelName:e.jfg,backendName:"cpu",kernelFunc:function cs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,filter:Q}=mt,{inputShape:yt,strides:_t,pad:vt,dataFormat:gt,dimRoundingMode:ht}=X;(0,i.C)([$,Q],"conv2dBackpropInput");const St=e.ZSL.computeStrides(Q.shape),Pt=e.ZSL.computeStrides($.shape);let Lt=e.C0T.convertConv2DDataFormat(gt);const Vt=e.C0T.computeConv2DInfo(yt,Q.shape,_t,1,vt,ht,!1,Lt),Ft=new e.ylz(Vt.inShape,"float32"),zt=Ft.values,Zt=R.data.get($.dataId).values,ne=R.data.get(Q.dataId).values,[se,qt,de]=St,{batchSize:me,filterHeight:xe,filterWidth:we,inChannels:Ue,inHeight:ke,inWidth:Ge,outChannels:Ze,outHeight:Me,outWidth:Be,strideHeight:Ne,strideWidth:Re}=Vt;Lt=Vt.dataFormat;const Ve=xe-1-Vt.padInfo.top,Le=we-1-Vt.padInfo.left,Fe="channelsLast"===Lt,Ye=Ft.strides[0],je=Fe?Ft.strides[1]:Ft.strides[2],rn=Fe?Ft.strides[2]:1,Xe=Fe?1:Ft.strides[1],an=Pt[0],Qe=Fe?Pt[1]:Pt[2],hn=Fe?Pt[2]:1,yn=Fe?1:Pt[1];for(let In=0;In<me;++In)for(let Cn=0;Cn<Ue;++Cn)for(let Mn=0;Mn<ke;++Mn){const Rn=Mn-Ve,Xn=Math.max(0,Math.ceil(Rn/Ne)),qn=Math.min(Me,(xe+Rn)/Ne);for(let as=0;as<Ge;++as){const ts=as-Le,Qn=Math.max(0,Math.ceil(ts/Re)),is=Math.min(Be,(we+ts)/Re);let ns=0;for(let ls=Xn;ls<qn;++ls){const Lr=ls*Ne-Rn;for(let ws=Qn;ws<is;++ws){const Bs=an*In+Qe*ls+hn*ws,vr=se*(xe-1-Lr)+qt*(we-1-(ws*Re-ts))+de*Cn;for(let Tr=0;Tr<Ze;++Tr)ns+=Zt[Bs+yn*Tr]*ne[vr+Tr]}}zt[Ye*In+je*Mn+rn*as+Xe*Cn]=ns}}return R.makeTensorInfo(Ft.shape,Ft.dtype,Ft.values)}},js={kernelName:e.A1h,backendName:"cpu",kernelFunc:function Hs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,filter:Q}=mt,{strides:yt,pad:_t,dilations:vt}=X;(0,i.C)([$,Q],"conv3d");const gt=e.C0T.computeConv3DInfo($.shape,Q.shape,yt,vt,_t),{filterDepth:ht,filterHeight:St,filterWidth:Pt,dilationDepth:Lt,dilationHeight:Vt,dilationWidth:Ft,padInfo:zt}=gt,Zt=zt.front,ne=zt.left,se=zt.top,qt=new e.ylz(gt.outShape,$.dtype),de=R.data.get($.dataId).values,me=R.data.get(Q.dataId).values,xe=qt.values,we=e.ZSL.computeStrides($.shape),Ue=e.ZSL.computeStrides(Q.shape);for(let ke=0;ke<gt.batchSize;++ke){const Ge=ke*we[0],Ze=ke*qt.strides[0];for(let Me=0;Me<gt.outDepth;++Me){const Be=Ze+Me*qt.strides[1],Ne=Me*gt.strideDepth-Zt;for(let Re=0;Re<ht;++Re){const Ve=Ne+Re*Lt;if(Ve<0||Ve>=gt.inDepth)continue;const Le=Re*Ue[0],Fe=Ge+Ve*we[1];for(let Ye=0;Ye<gt.outHeight;++Ye){const je=Be+Ye*qt.strides[2],rn=Ye*gt.strideHeight-se;for(let Xe=0;Xe<St;++Xe){const an=rn+Xe*Vt;if(an<0||an>=gt.inHeight)continue;const Qe=Le+Xe*Ue[1],hn=Fe+an*we[2];for(let yn=0;yn<gt.outWidth;++yn){const In=je+yn*gt.outChannels,Cn=yn*gt.strideWidth-ne;for(let Mn=0;Mn<Pt;++Mn){const Rn=Cn+Mn*Ft;if(Rn<0||Rn>=gt.inWidth)continue;const qn=hn+Rn*gt.inChannels;let as=Qe+Mn*Ue[2];for(let ts=0;ts<gt.inChannels;++ts){const Qn=de[qn+ts];for(let is=0;is<gt.outChannels;++is)xe[In+is]+=Qn*me[as+is];as+=gt.outChannels}}}}}}}}return R.makeTensorInfo(qt.shape,qt.dtype,qt.values)}},ys={kernelName:e.iGz,backendName:"cpu",kernelFunc:function Ds(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,dy:Q}=mt,{strides:yt,pad:_t,filterShape:vt}=X;(0,i.C)([$,Q],"conv3dBackpropFilterV2");const gt=e.ZSL.computeStrides($.shape),ht=e.ZSL.computeStrides(Q.shape),St=e.C0T.computeConv3DInfo($.shape,vt,yt,1,_t),Pt=St.strideDepth,Lt=St.strideHeight,Vt=St.strideWidth,Ft=St.filterDepth,zt=St.filterHeight,Zt=St.filterWidth,ne=new e.ylz(St.filterShape,"float32"),se=ne.values,[qt,de,me,xe]=ne.strides,we=R.data.get(Q.dataId).values,[Ue,ke,Ge,Ze]=ht,Me=R.data.get($.dataId).values,[Be,Ne,Re,Ve]=gt,Le=St.padInfo.front,Fe=St.padInfo.left,Ye=St.padInfo.top;for(let je=0;je<Ft;++je){const rn=Math.max(0,Math.ceil((Le-je)/Pt)),Xe=Math.min(St.outDepth,(St.inDepth+Le-je)/Pt),an=je*qt;for(let Qe=0;Qe<zt;++Qe){const hn=Math.max(0,Math.ceil((Ye-Qe)/Lt)),yn=Math.min(St.outHeight,(St.inHeight+Ye-Qe)/Lt),In=Qe*de+an;for(let Cn=0;Cn<Zt;++Cn){const Mn=Math.max(0,Math.ceil((Fe-Cn)/Vt)),Rn=Math.min(St.outWidth,(St.inWidth+Fe-Cn)/Vt),Xn=Cn*me+In;for(let qn=0;qn<St.inChannels;++qn){const as=qn*xe+Xn;for(let ts=0;ts<St.outChannels;++ts){let Qn=0;for(let is=0;is<St.batchSize;++is){const ns=is*Be,xr=is*Ue;for(let ls=rn;ls<Xe;++ls){const ws=(je+ls*Pt-Le)*Ne+ns,Xr=ls*ke+xr;for(let Bs=hn;Bs<yn;++Bs){const Tr=(Qe+Bs*Lt-Ye)*Re+ws,$r=Bs*Ge+Xr;for(let wr=Mn;wr<Rn;++wr)Qn+=Me[(Cn+wr*Vt-Fe)*Ve+Tr+qn]*we[wr*Ze+$r+ts]}}}se[as+ts]=Qn}}}}}return R.makeTensorInfo(ne.shape,ne.dtype,ne.values)}},Fs={kernelName:e.gC7,backendName:"cpu",kernelFunc:function bs(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,filter:Q}=mt,{pad:yt,strides:_t,inputShape:vt}=X;(0,i.C)([$],"conv3dBackpropInputV2");const gt=e.ZSL.computeStrides($.shape),ht=e.ZSL.computeStrides(Q.shape),St=e.C0T.computeConv3DInfo(vt,Q.shape,_t,1,yt),Pt=new e.ylz(St.inShape,"float32"),Lt=Pt.values,[Vt,Ft,zt,Zt]=Pt.strides,ne=R.data.get($.dataId).values,[se,qt,de,me]=gt,xe=R.data.get(Q.dataId).values,[we,Ue,ke,Ge]=ht,{batchSize:Ze,filterDepth:Me,filterHeight:Be,filterWidth:Ne,inChannels:Re,inDepth:Ve,inHeight:Le,inWidth:Fe,outChannels:Ye,outDepth:je,outHeight:rn,outWidth:Xe,strideDepth:an,strideHeight:Qe,strideWidth:hn}=St,yn=Me-1-St.padInfo.front,In=Be-1-St.padInfo.top,Cn=Ne-1-St.padInfo.left;for(let Mn=0;Mn<Ze;++Mn)for(let Rn=0;Rn<Re;++Rn)for(let Xn=0;Xn<Ve;++Xn){const qn=Xn-yn,as=Math.max(0,Math.ceil(qn/an)),ts=Math.min(je,(Me+qn)/an);for(let Qn=0;Qn<Le;++Qn){const is=Qn-In,ns=Math.max(0,Math.ceil(is/Qe)),xr=Math.min(rn,(Be+is)/Qe);for(let ls=0;ls<Fe;++ls){const Lr=ls-Cn,ws=Math.max(0,Math.ceil(Lr/hn)),Xr=Math.min(Xe,(Ne+Lr)/hn);let Bs=0;for(let vr=as;vr<ts;++vr){const Tr=vr*an-qn;for(let $r=ns;$r<xr;++$r){const wr=$r*Qe-is;for(let lo=ws;lo<Xr;++lo){const No=se*Mn+qt*vr+de*$r+me*lo,yl=we*(Me-1-Tr)+Ue*(Be-1-wr)+ke*(Ne-1-(lo*hn-Lr))+Ge*Rn;for(let To=0;To<Ye;++To)Bs+=ne[No+To]*xe[yl+To]}}}Lt[Vt*Mn+Ft*Xn+zt*Qn+Zt*ls+Rn]=Bs}}}return R.makeTensorInfo(Pt.shape,Pt.dtype,Pt.values)}},Qs=(0,x.v)(e.Mn0,ct=>Math.cos(ct)),Dr={kernelName:e.Mn0,backendName:"cpu",kernelFunc:Qs},Ir=(0,x.v)(e.MnK,ct=>Math.cosh(ct)),Pr={kernelName:e.MnK,backendName:"cpu",kernelFunc:Ir},Ws={kernelName:e.MRQ,backendName:"cpu",kernelFunc:function lr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{image:$,boxes:Q,boxInd:yt}=mt,{cropSize:_t,method:vt,extrapolationValue:gt}=X,[ht,St,Pt,Lt]=$.shape,Vt=Q.shape[0],[Ft,zt]=_t,Zt=(0,e.ra8)([Vt,Ft,zt,Lt],"float32"),ne=R.data.get(Q.dataId).values,se=R.data.get(yt.dataId).values,qt=R.data.get($.dataId).values,de=e.ZSL.computeStrides($.shape),me=e.ZSL.computeStrides(Zt.shape);for(let xe=0;xe<Vt;xe++){const we=4*xe,Ue=ne[we],ke=ne[we+1],Ge=ne[we+2],Ze=ne[we+3],Me=se[xe];if(Me>=ht)continue;const Be=Ft>1?(Ge-Ue)*(St-1)/(Ft-1):0,Ne=zt>1?(Ze-ke)*(Pt-1)/(zt-1):0;for(let Re=0;Re<Ft;Re++){const Ve=Ft>1?Ue*(St-1)+Re*Be:.5*(Ue+Ge)*(St-1);if(Ve<0||Ve>St-1)for(let Le=0;Le<zt;Le++)for(let Fe=0;Fe<Lt;Fe++)Zt.values[Fe+Le*me[2]+Re*me[1]+xe*me[0]]=gt;else if("bilinear"===vt){const Le=Math.floor(Ve),Fe=Math.ceil(Ve),Ye=Ve-Le;for(let je=0;je<zt;je++){const rn=zt>1?ke*(Pt-1)+je*Ne:.5*(ke+Ze)*(Pt-1);if(rn<0||rn>Pt-1){for(let hn=0;hn<Lt;hn++)Zt.values[hn+je*me[2]+Re*me[1]+xe*me[0]]=gt;continue}const Xe=Math.floor(rn),an=Math.ceil(rn),Qe=rn-Xe;for(let hn=0;hn<Lt;hn++){let yn=hn+Xe*de[2]+Le*de[1]+Me*de[0];const In=qt[yn];yn=hn+an*de[2]+Le*de[1]+Me*de[0];const Cn=qt[yn];yn=hn+Xe*de[2]+Fe*de[1]+Me*de[0];const Mn=qt[yn];yn=hn+an*de[2]+Fe*de[1]+Me*de[0];const Rn=qt[yn],Xn=In+(Cn-In)*Qe;yn=hn+je*me[2]+Re*me[1]+xe*me[0],Zt.values[yn]=Xn+(Mn+(Rn-Mn)*Qe-Xn)*Ye}}}else for(let Le=0;Le<zt;++Le){const Fe=zt>1?ke*(Pt-1)+Le*Ne:.5*(ke+Ze)*(Pt-1);if(Fe<0||Fe>Pt-1){for(let rn=0;rn<Lt;rn++)Zt.values[rn+Le*me[2]+Re*me[1]+xe*me[0]]=gt;continue}const Ye=Math.round(Fe),je=Math.round(Ve);for(let rn=0;rn<Lt;rn++)Zt.values[rn+Le*me[2]+Re*me[1]+xe*me[0]]=qt[rn+Ye*de[2]+je*de[1]+Me*de[0]]}}}return R.makeTensorInfo(Zt.shape,Zt.dtype,Zt.values)}},Or={kernelName:e.jj_,backendName:"cpu",kernelFunc:function ur(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,exclusive:yt,reverse:_t}=X;(0,i.C)($,"cumprod");const vt=e.C0T.getAxesPermutation([Q],$.shape.length);let gt=$;null!=vt&&(gt=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:vt}}));const ht=e.C0T.getInnerMostAxes(1,$.shape.length)[0];if(ht!==gt.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${gt.shape.length-1} but got axis=${ht}`);const St=(0,e.TuY)(gt.dtype,"int32"),Pt=e.ZSL.makeOnesTypedArray(e.ZSL.sizeFromShape(gt.shape),St),Lt=R.data.get(gt.dataId).values,Vt=gt.shape[gt.shape.length-1],Ft=_t?(Zt,ne)=>Zt+Vt-ne-1:(Zt,ne)=>Zt+ne;for(let Zt=0;Zt<Lt.length;Zt+=Vt)for(let ne=0;ne<Vt;ne++){const se=Ft(Zt,ne);if(0===ne)Pt[se]=yt?1:Lt[se];else{const qt=Ft(Zt,ne-1);Pt[se]=yt?Lt[qt]*Pt[qt]:Lt[se]*Pt[qt]}}const zt=R.makeTensorInfo(gt.shape,St,Pt);if(null!=vt){const Zt=e.C0T.getUndoAxesPermutation(vt),ne=(0,Tt.m)({inputs:{x:zt},backend:R,attrs:{perm:Zt}});return R.disposeIntermediateTensorInfo(zt),R.disposeIntermediateTensorInfo(gt),ne}return zt}},Js={kernelName:e.nY8,backendName:"cpu",kernelFunc:function Is(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,exclusive:yt,reverse:_t}=X;(0,i.C)($,"cumsum");const vt=e.C0T.getAxesPermutation([Q],$.shape.length);let gt=$;null!=vt&&(gt=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:vt}}));const ht=e.C0T.getInnerMostAxes(1,$.shape.length)[0];if(ht!==gt.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${gt.shape.length-1} but got axis=${ht}`);const St=(0,e.TuY)(gt.dtype,"int32"),Pt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(gt.shape),St),Lt=R.data.get(gt.dataId).values,Vt=gt.shape[gt.shape.length-1],Ft=_t?(Zt,ne)=>Zt+Vt-ne-1:(Zt,ne)=>Zt+ne;for(let Zt=0;Zt<Lt.length;Zt+=Vt)for(let ne=0;ne<Vt;ne++){const se=Ft(Zt,ne);if(0===ne)Pt[se]=yt?0:Lt[se];else{const qt=Ft(Zt,ne-1);Pt[se]=yt?Lt[qt]+Pt[qt]:Lt[se]+Pt[qt]}}const zt=R.makeTensorInfo(gt.shape,St,Pt);if(null!=vt){const Zt=e.C0T.getUndoAxesPermutation(vt),ne=(0,Tt.m)({inputs:{x:zt},backend:R,attrs:{perm:Zt}});return R.disposeIntermediateTensorInfo(zt),R.disposeIntermediateTensorInfo(gt),ne}return zt}},qs={kernelName:e.wNW,backendName:"cpu",kernelFunc:function cr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,weights:Q}=mt,{size:yt,binaryOutput:_t}=X;if(1===$.shape.length){const vt=R.data.get($.dataId).values,gt=R.data.get(Q.dataId).values,ht=(0,It.X)(vt,gt,Q.dtype,Q.shape,yt);return R.makeTensorInfo([yt],Q.dtype,ht)}if(2===$.shape.length){const vt=R.bufferSync($),gt=R.bufferSync(Q),ht=(0,It.N)(vt,gt,yt,_t);return R.makeTensorInfo(ht.shape,Q.dtype,ht.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${$.shape.length}.`)}},Ps={kernelName:e.TMz,backendName:"cpu",kernelFunc:function dr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{blockSize:Q,dataFormat:yt}=X;e.ZSL.assert("NHWC"===yt,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${yt}`);const _t=$.shape[0],vt=$.shape[1],gt=$.shape[2],ht=$.shape[3],St=vt*Q,Pt=gt*Q,Lt=ht/(Q*Q),Vt=R.data.get($.dataId).values,Ft=new Float32Array(_t*St*Pt*Lt);let zt=0;for(let Zt=0;Zt<_t;++Zt)for(let ne=0;ne<St;++ne){const se=Math.floor(ne/Q),qt=ne%Q;for(let de=0;de<Pt;++de){const me=Math.floor(de/Q),we=(qt*Q+de%Q)*Lt;for(let Ue=0;Ue<Lt;++Ue)Ft[zt++]=Vt[Ue+we+ht*(me+gt*(se+vt*Zt))]}}return R.makeTensorInfo([_t,St,Pt,Lt],$.dtype,Ft)}};function Us(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,filter:Q}=mt,{strides:yt,pad:_t,dilations:vt,dimRoundingMode:gt}=X;(0,i.C)([$,Q],"depthwiseConv2DNative");const ht=e.ZSL.computeStrides($.shape),St=e.ZSL.computeStrides(Q.shape);let Pt=vt;null==Pt&&(Pt=[1,1]),e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(yt,Pt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${yt} and dilations '${Pt}'`);const Lt=e.C0T.computeConv2DInfo($.shape,Q.shape,yt,Pt,_t,gt,!0),{filterHeight:Vt,filterWidth:Ft,dilationHeight:zt,dilationWidth:Zt,padInfo:ne}=Lt,se=ne.left,qt=ne.top,de=Lt.outChannels/Lt.inChannels,me=new e.ylz(Lt.outShape,$.dtype),xe=R.data.get($.dataId).values,we=R.data.get(Q.dataId).values,Ue=me.values;for(let ke=0;ke<Lt.batchSize;++ke){const Ge=ke*ht[0],Ze=ke*me.strides[0];for(let Me=0;Me<Lt.outHeight;++Me){const Be=Ze+Me*me.strides[1],Ne=Me*Lt.strideHeight-qt;for(let Re=0;Re<Vt;++Re){const Ve=Ne+Re*zt;if(Ve<0||Ve>=Lt.inHeight)continue;const Le=Re*St[0],Fe=Ge+Ve*ht[1];for(let Ye=0;Ye<Lt.outWidth;++Ye){const je=Be+Ye*me.strides[2],rn=Ye*Lt.strideWidth-se;for(let Xe=0;Xe<Ft;++Xe){const an=rn+Xe*Zt;if(an<0||an>=Lt.inWidth)continue;const hn=Fe+an*Lt.inChannels;let yn=je,In=Le+Xe*St[1];for(let Cn=0;Cn<Lt.inChannels;++Cn){const Mn=xe[hn+Cn];for(let Rn=0;Rn<de;++Rn)Ue[yn+Rn]+=Mn*we[In+Rn];yn+=de,In+=de}}}}}}return R.makeTensorInfo(me.shape,me.dtype,me.values)}const pr={kernelName:e.tGH,backendName:"cpu",kernelFunc:Us},fr={kernelName:e.X$8,backendName:"cpu",kernelFunc:function hr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,dy:Q}=mt,{strides:yt,dilations:_t,pad:vt,dimRoundingMode:gt,filterShape:ht}=X;(0,i.C)([$,Q],"depthwiseConv2dNativeBackpropFilter");const St=e.C0T.computeConv2DInfo($.shape,ht,yt,_t,vt,gt,!0),{strideHeight:Pt,strideWidth:Lt,filterHeight:Vt,filterWidth:Ft}=St,zt=new e.ylz(St.filterShape,"float32"),Zt=St.padInfo.left,ne=St.padInfo.top,se=St.outChannels/St.inChannels,qt=R.data.get($.dataId).values,de=new e.ylz($.shape,$.dtype,qt),me=R.data.get(Q.dataId).values,xe=new e.ylz(Q.shape,Q.dtype,me);for(let we=0;we<Vt;++we){const Ue=Math.max(0,Math.ceil((ne-we)/Pt)),ke=Math.min(St.outHeight,(St.inHeight+ne-we)/Pt);for(let Ge=0;Ge<Ft;++Ge){const Ze=Math.max(0,Math.ceil((Zt-Ge)/Lt)),Me=Math.min(St.outWidth,(St.inWidth+Zt-Ge)/Lt);for(let Be=0;Be<St.outChannels;++Be){const Ne=Math.trunc(Be/se),Re=Be%se;let Ve=0;for(let Le=0;Le<St.batchSize;++Le)for(let Fe=Ue;Fe<ke;++Fe){const Ye=we+Fe*Pt-ne;for(let je=Ze;je<Me;++je)Ve+=de.get(Le,Ye,Ge+je*Lt-Zt,Ne)*xe.get(Le,Fe,je,Be)}zt.set(Ve,we,Ge,Ne,Re)}}}return R.makeTensorInfo(zt.shape,zt.dtype,zt.values)}},Sr={kernelName:e.nVu,backendName:"cpu",kernelFunc:function tr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,filter:Q}=mt,{strides:yt,dilations:_t,pad:vt,dimRoundingMode:gt,inputShape:ht}=X;(0,i.C)([$,Q],"depthwiseConv2DNativeBackpropInput");const St=e.ZSL.computeStrides($.shape),Pt=e.ZSL.computeStrides(Q.shape),Lt=e.C0T.computeConv2DInfo(ht,Q.shape,yt,_t,vt,gt,!0),Vt=new e.ylz(Lt.inShape,"float32"),Ft=Vt.values,[zt,Zt,ne]=Vt.strides,se=R.data.get($.dataId).values,[qt,de,me]=St,xe=R.data.get(Q.dataId).values,[we,Ue,ke]=Pt,{batchSize:Ge,filterHeight:Ze,filterWidth:Me,inChannels:Be,inHeight:Ne,inWidth:Re,outChannels:Ve,outHeight:Le,outWidth:Fe,strideHeight:Ye,strideWidth:je}=Lt,rn=Ze-1-Lt.padInfo.top,Xe=Me-1-Lt.padInfo.left,an=Ve/Be;for(let Qe=0;Qe<Ge;++Qe)for(let hn=0;hn<Be;++hn)for(let yn=0;yn<Ne;++yn){const In=yn-rn,Cn=Math.max(0,Math.ceil(In/Ye)),Mn=Math.min(Le,(Ze+In)/Ye);for(let Rn=0;Rn<Re;++Rn){const Xn=Rn-Xe,qn=Math.max(0,Math.ceil(Xn/je)),as=Math.min(Fe,(Me+Xn)/je);let ts=0;for(let Qn=Cn;Qn<Mn;++Qn){const is=Qn*Ye-In;for(let ns=qn;ns<as;++ns){const ls=qt*Qe+de*Qn+me*ns,Lr=we*(Ze-1-is)+Ue*(Me-1-(ns*je-Xn))+ke*hn;for(let ws=0;ws<an;++ws)ts+=se[ls+(hn*an+ws)]*xe[Lr+ws]}}Ft[zt*Qe+Zt*yn+ne*Rn+hn]=ts}}return R.makeTensorInfo(Vt.shape,Vt.dtype,Vt.values)}},Ms={kernelName:e.ORI,backendName:"cpu",kernelFunc:function Zs(ct){const{inputs:mt,backend:R}=ct,{x:X}=mt,$=e.ZSL.sizeFromShape(X.shape),Q=R.data.get(X.dataId).values,yt=(0,e.ra8)([$,$],X.dtype),_t=yt.values;for(let gt=0;gt<Q.length;gt++)_t[gt*$+gt]=Q[gt];const vt=[...X.shape,...X.shape];return R.makeTensorInfo(vt,yt.dtype,yt.values)}},mr={kernelName:e.jxD,backendName:"cpu",kernelFunc:({inputs:ct,backend:mt,attrs:R})=>{const{x:X,filter:$}=ct,{strides:Q,pad:yt,dilations:_t}=R,vt=mt,gt=vt.data.get(X.dataId).values,ht=X.shape.length,St=vt.data.get($.dataId).values,Pt=$.shape.length,{batchSize:Lt,inHeight:Vt,inWidth:Ft,inChannels:zt,outHeight:Zt,outWidth:ne,padInfo:se,strideHeight:qt,strideWidth:de,filterHeight:me,filterWidth:xe,dilationHeight:we,dilationWidth:Ue,outShape:ke}=e.C0T.computeDilation2DInfo(X.shape,$.shape,Q,yt,"NHWC",_t),Ge=e.ZSL.sizeFromShape(ke),Ze=ke.length,Me=e.ZSL.getArrayFromDType(X.dtype,Ge);for(let Ne=0;Ne<Lt;++Ne)for(let Re=0;Re<Zt;++Re){const Ve=Re*qt-se.top;for(let Le=0;Le<ne;++Le){const Fe=Le*de-se.left;for(let Ye=0;Ye<zt;++Ye){let je=Number.MIN_SAFE_INTEGER;for(let Xe=0;Xe<me;++Xe){const an=Ve+Xe*we;if(an>=0&&an<Vt)for(let Qe=0;Qe<xe;++Qe){const hn=Fe+Qe*Ue;if(hn>=0&&hn<Ft){const yn=e.ZSL.locToIndex([Ne,an,hn,Ye],ht,e.ZSL.computeStrides(X.shape)),In=e.ZSL.locToIndex([Xe,Qe,Ye],Pt,e.ZSL.computeStrides($.shape)),Cn=gt[yn]+St[In];Cn>je&&(je=Cn)}}}Me[e.ZSL.locToIndex([Ne,Re,Le,Ye],Ze,e.ZSL.computeStrides(ke))]=je}}}return{dataId:vt.write(e.ZSL.toTypedArray(Me,X.dtype),ke,X.dtype),shape:ke,dtype:X.dtype}}},gr={kernelName:e.pk0,backendName:"cpu",kernelFunc:({inputs:ct,backend:mt,attrs:R})=>{const{x:X,filter:$,dy:Q}=ct,{strides:yt,pad:_t,dilations:vt}=R,gt=mt,ht=e.ZSL.toNestedArray(X.shape,gt.data.get(X.dataId).values),St=e.ZSL.toNestedArray($.shape,gt.data.get($.dataId).values),{batchSize:Pt,inHeight:Lt,inWidth:Vt,inChannels:Ft,outHeight:zt,outWidth:Zt,padInfo:ne,strideHeight:se,strideWidth:qt,filterHeight:de,filterWidth:me,dilationHeight:xe,dilationWidth:we,outShape:Ue}=e.C0T.computeDilation2DInfo(X.shape,$.shape,yt,_t,"NHWC",vt);e.ZSL.assert(Q.rank===Ue.length,()=>`Error in ${e.pk0}, dy must have the same rank as output ${Ue.length}, but got ${Q.rank}`);const ke=e.ZSL.toNestedArray(Ue,gt.data.get(Q.dataId).values),Ge=e.ZSL.makeZerosNestedTypedArray($.shape,$.dtype);for(let Me=0;Me<Pt;++Me)for(let Be=0;Be<zt;++Be){const Ne=Be*se-ne.top;for(let Re=0;Re<Zt;++Re){const Ve=Re*qt-ne.left;for(let Le=0;Le<Ft;++Le){let Fe=Number.MIN_SAFE_INTEGER,Ye=0,je=0;for(let rn=0;rn<de;++rn){const Xe=Ne+rn*xe;if(Xe>=0&&Xe<Lt)for(let an=0;an<me;++an){const Qe=Ve+an*we;if(Qe>=0&&Qe<Vt){const hn=ht[Me][Xe][Qe][Le]+St[rn][an][Le];hn>Fe&&(Fe=hn,Ye=rn,je=an)}}}Ge[Ye][je][Le]+=ke[Me][Be][Re][Le]}}}return{dataId:gt.write(e.ZSL.toTypedArray(Ge,X.dtype),$.shape,$.dtype),shape:$.shape,dtype:$.dtype}}},O={kernelName:e.bP9,backendName:"cpu",kernelFunc:({inputs:ct,backend:mt,attrs:R})=>{const{x:X,filter:$,dy:Q}=ct,{strides:yt,pad:_t,dilations:vt}=R,gt=mt,ht=e.ZSL.toNestedArray(X.shape,gt.data.get(X.dataId).values),St=e.ZSL.toNestedArray($.shape,gt.data.get($.dataId).values),{batchSize:Pt,inHeight:Lt,inWidth:Vt,inChannels:Ft,outHeight:zt,outWidth:Zt,padInfo:ne,strideHeight:se,strideWidth:qt,filterHeight:de,filterWidth:me,dilationHeight:xe,dilationWidth:we,outShape:Ue}=e.C0T.computeDilation2DInfo(X.shape,$.shape,yt,_t,"NHWC",vt);e.ZSL.assert(Q.rank===Ue.length,()=>`Error in ${e.bP9}, dy must have the same rank as output ${Ue.length}, but got ${Q.rank}`);const ke=e.ZSL.toNestedArray(Ue,gt.data.get(Q.dataId).values),Ge=e.ZSL.makeZerosNestedTypedArray(X.shape,X.dtype);for(let Me=0;Me<Pt;++Me)for(let Be=0;Be<zt;++Be){const Ne=Be*se-ne.top;for(let Re=0;Re<Zt;++Re){const Ve=Re*qt-ne.left;for(let Le=0;Le<Ft;++Le){let Fe=Number.MIN_SAFE_INTEGER,Ye=Ne<0?0:Ne,je=Ve<0?0:Ve;for(let rn=0;rn<de;++rn){const Xe=Ne+rn*xe;if(Xe>=0&&Xe<Lt)for(let an=0;an<me;++an){const Qe=Ve+an*we;if(Qe>=0&&Qe<Vt){const hn=ht[Me][Xe][Qe][Le]+St[rn][an][Le];hn>Fe&&(Fe=hn,Ye=Xe,je=Qe)}}}Ge[Me][Ye][je][Le]+=ke[Me][Be][Re][Le]}}}return{dataId:gt.write(e.ZSL.toTypedArray(Ge,X.dtype),X.shape,X.dtype),shape:X.shape,dtype:X.dtype}}},I={kernelName:e.XmO,backendName:"cpu",kernelFunc:function y(ct){const{inputs:mt,backend:R,attrs:X}=ct,{image:$}=mt,{canvas:Q,options:yt}=X,{contextOptions:_t,imageOptions:vt}=yt||{},gt=(null==vt?void 0:vt.alpha)||1,ht=(null==_t?void 0:_t.contextType)||"2d";if("2d"!==ht)throw new Error(`Context type ${_t.contextType} is not supported by the CPU backend.`);const St=Q.getContext(ht,(null==_t?void 0:_t.contextAttributes)||{});if(null==St)throw new Error(`Could not get the context with ${ht} type.`);const[Pt,Lt]=$.shape.slice(0,2),Vt=2===$.shape.length?1:$.shape[2],Ft=R.data.get($.dataId).values,zt="float32"===$.dtype?255:1,Zt=new Uint8ClampedArray(Lt*Pt*4);for(let se=0;se<Pt*Lt;++se){const qt=[0,0,0,255*gt];for(let me=0;me<Vt;me++){const xe=Ft[se*Vt+me];if("float32"===$.dtype){if(xe<0||xe>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${xe}.`)}else if("int32"===$.dtype&&(xe<0||xe>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${xe}.`);1===Vt?(qt[0]=xe*zt,qt[1]=xe*zt,qt[2]=xe*zt):qt[me]=xe*zt}const de=4*se;Zt[de+0]=Math.round(qt[0]),Zt[de+1]=Math.round(qt[1]),Zt[de+2]=Math.round(qt[2]),Zt[de+3]=Math.round(qt[3])}Q.width=Lt,Q.height=Pt;const ne=new ImageData(Zt,Lt,Pt);return St.putImageData(ne,0,0),$}};var K=t(92287),nt=t(10708);function st(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,keepDims:yt}=X;let _t;(0,i.C)($,"sum"),_t="bool"===$.dtype?(0,be.wg)({inputs:{x:$},backend:R,attrs:{dtype:"int32"}}):(0,f.D)({inputs:{x:$},backend:R});const vt=_t.shape.length,gt=e.ZSL.parseAxisParam(Q,_t.shape),ht=e.C0T.getAxesPermutation(gt,vt);let St=gt,Pt=_t;null!=ht&&(Pt=(0,Tt.m)({inputs:{x:_t},backend:R,attrs:{perm:ht}}),St=e.C0T.getInnerMostAxes(St.length,vt)),e.C0T.assertAxesAreInnerMostDims("sum",St,Pt.shape.length);const[Lt,Vt]=e.C0T.computeOutAndReduceShapes(Pt.shape,St),Ft=e.C0T.upcastType(Pt.dtype,"int32");let zt=(0,nt.U)(R,Lt,Ft);const Zt=e.ZSL.sizeFromShape(Vt),ne=R.data.get(zt.dataId).values,se=R.data.get(Pt.dataId).values;for(let qt=0;qt<ne.length;++qt){const de=qt*Zt;let me=0;for(let xe=0;xe<Zt;++xe)me+=se[de+xe];ne[qt]=me}if(yt){const de=zt;zt=A({inputs:{x:zt},backend:R,attrs:{shape:e.C0T.expandShapeToKeepDim(zt.shape,gt)}}),R.disposeIntermediateTensorInfo(de)}return R.disposeIntermediateTensorInfo(_t),null!=ht&&R.disposeIntermediateTensorInfo(Pt),zt}const Mt={kernelName:e.WuN,backendName:"cpu",kernelFunc:st},ee={kernelName:e.Qgm,backendName:"cpu",kernelFunc:function Ot(ct){const{inputs:mt,backend:R,attrs:X}=ct,{equation:$}=X,Q=mt,{allDims:yt,summedDims:_t,idDims:vt}=e.C0T.decodeEinsumEquation($,Q.length);e.C0T.checkEinsumDimSizes(yt.length,vt,Q);const{path:gt,steps:ht}=e.C0T.getEinsumComputePath(_t,vt),St=ht.length;let Pt=null,Lt=yt.length;const Vt=[];for(let Ft=0;Ft<St;++Ft){for(const zt of ht[Ft]){const{permutationIndices:Zt,expandDims:ne}=e.C0T.getEinsumPermutation(Lt,vt[zt]);let se;e.C0T.isIdentityPermutation(Zt)?se=Q[zt]:(se=(0,Tt.m)({inputs:{x:Q[zt]},backend:R,attrs:{perm:Zt}}),Vt.push(se));const qt=se.shape.slice();for(let de=0;de<ne.length;++de)qt.splice(ne[de],0,1);e.ZSL.arraysEqual(se.shape,qt)||(se=A({inputs:{x:se},backend:R,attrs:{shape:qt}}),Vt.push(se)),null===Pt?Pt=se:(Pt=(0,K.lw)({inputs:{a:se,b:Pt},backend:R}),Vt.push(Pt))}Ft<St-1&&(gt[Ft]>=0&&(Pt=st({inputs:{x:Pt},backend:R,attrs:{axis:gt[Ft]-(yt.length-Lt),keepDims:!1}}),Vt.push(Pt)),Lt--)}for(const Ft of Vt)Ft!==Pt&&R.disposeIntermediateTensorInfo(Ft);return Pt}},$e={kernelName:e.rsH,backendName:"cpu",kernelFunc:function Pe(ct){const{inputs:mt,backend:R}=ct,{dy:X,y:$}=mt;(0,i.C)([X,$],"eluGrad");const Q=new Float32Array(e.ZSL.sizeFromShape($.shape)),yt=R.data.get($.dataId).values,_t=R.data.get(X.dataId).values;for(let vt=0;vt<yt.length;++vt){const gt=yt[vt];Q[vt]=gt>=0?_t[vt]:_t[vt]*(gt+1)}return R.makeTensorInfo($.shape,"float32",Q)}};var He=t(71007);const qe=e.C0T.ERF_P,Tn=e.C0T.ERF_A1,Ln=e.C0T.ERF_A2,xn=e.C0T.ERF_A3,sn=e.C0T.ERF_A4,Pn=e.C0T.ERF_A5,ss=(0,x.v)(e._s9,ct=>{const mt=Math.sign(ct),R=Math.abs(ct),X=1/(1+qe*R);return mt*(1-((((Pn*X+sn)*X+xn)*X+Ln)*X+Tn)*X*Math.exp(-R*R))}),xs={kernelName:e._s9,backendName:"cpu",kernelFunc:ss};var ds=t(18692);function Bn(ct){const{inputs:mt,backend:R,attrs:X}=ct,{input:$}=mt,{dim:Q}=X,yt=$.shape.length,_t=$.shape.slice();let vt=Q;return Q<0&&(e.ZSL.assert(-(yt+1)<=Q,()=>`Axis must be in the interval [${-(yt+1)}, ${yt}]`),vt=yt+Q+1),_t.splice(vt,0,1),A({inputs:{x:$},backend:R,attrs:{shape:_t}})}const Ns={kernelName:e.ybN,backendName:"cpu",kernelFunc:Bn};var Vs=t(3878);const er=(0,d.Z)((ct,mt)=>ct/mt),nr=(0,he.j)(e.sDr,er),sr={kernelName:e.sDr,backendName:"cpu",kernelFunc:nr};var rr=t(33197);function Ar(ct,mt,R){const X=ct.shape,$=X[0],Q=X[1],yt=R.data.get(ct.dataId),_t=yt.complexTensorInfos.real,vt=yt.complexTensorInfos.imag,gt=[$,Q],ht=e.ZSL.sizeFromShape(gt),St=e.ZSL.getTypedArrayFromDType("float32",ht),Pt=e.ZSL.getTypedArrayFromDType("float32",ht);for(let zt=0;zt<$;zt++){const Zt=(0,kt.di)({inputs:{x:_t},backend:R,attrs:{begin:[zt,0],size:[1,Q]}}),ne=(0,kt.di)({inputs:{x:vt},backend:R,attrs:{begin:[zt,0],size:[1,Q]}}),se=(0,_e.f)({inputs:{real:Zt,imag:ne},backend:R}),{real:qt,imag:de}=br(se,mt,R),me=e.C0T.mergeRealAndImagArrays(qt,de);for(let xe=0;xe<Q;xe++){const we=e.C0T.getComplexWithIndex(me,xe);St[zt*Q+xe]=we.real,Pt[zt*Q+xe]=we.imag}R.disposeIntermediateTensorInfo(Zt),R.disposeIntermediateTensorInfo(ne),R.disposeIntermediateTensorInfo(se)}const Lt=R.makeTensorInfo(gt,"float32",St),Vt=R.makeTensorInfo(gt,"float32",Pt),Ft=(0,_e.f)({inputs:{real:Lt,imag:Vt},backend:R});return R.disposeIntermediateTensorInfo(Lt),R.disposeIntermediateTensorInfo(Vt),Ft}function br(ct,mt,R){const X=e.ZSL.sizeFromShape(ct.shape),$=R.data.get(ct.dataId),Q=R.data.get($.complexTensorInfos.real.dataId).values,yt=R.data.get($.complexTensorInfos.imag.dataId).values;if(function kr(ct){return!(ct&ct-1)}(X)){const _t=Er(Q,yt,X,mt,R),vt=[ct.shape[0],ct.shape[1]];if(mt){const gt=R.makeTensorInfo(vt,"float32",_t.real),ht=R.makeTensorInfo(vt,"float32",_t.imag),St=R.makeTensorInfo([],"float32",e.ZSL.createScalarValue(X,"float32")),Pt=(0,f.D)({inputs:{x:St},backend:R}),Lt=sr.kernelFunc({inputs:{a:gt,b:St},backend:R}),Vt=sr.kernelFunc({inputs:{a:ht,b:Pt},backend:R}),Ft=R.data.get(Lt.dataId).values,zt=R.data.get(Vt.dataId).values;return R.disposeIntermediateTensorInfo(gt),R.disposeIntermediateTensorInfo(ht),R.disposeIntermediateTensorInfo(St),R.disposeIntermediateTensorInfo(Pt),R.disposeIntermediateTensorInfo(Lt),R.disposeIntermediateTensorInfo(Vt),{real:Ft,imag:zt}}return _t}{const vt=function Fr(ct,mt,R){const X=new Float32Array(2*mt);for(let $=0;$<mt;$++){let Q=0,yt=0;for(let _t=0;_t<mt;_t++){const vt=e.C0T.exponent($*_t,mt,R),gt=e.C0T.getComplexWithIndex(ct,_t);Q+=gt.real*vt.real-gt.imag*vt.imag,yt+=gt.real*vt.imag+gt.imag*vt.real}R&&(Q/=mt,yt/=mt),e.C0T.assignToTypedArray(X,Q,yt,$)}return X}(e.C0T.mergeRealAndImagArrays(Q,yt),X,mt);return e.C0T.splitRealAndImagArrays(vt)}}function Er(ct,mt,R,X,$){if(1===R)return{real:ct,imag:mt};const Q=e.C0T.mergeRealAndImagArrays(ct,mt),yt=R/2,_t=e.C0T.complexWithEvenIndex(Q),vt=_t.real,gt=_t.imag,ht=[vt.length],St=$.makeTensorInfo(ht,"float32",vt),Pt=$.makeTensorInfo(ht,"float32",gt),Lt=(0,_e.f)({inputs:{real:St,imag:Pt},backend:$}),Vt=e.C0T.complexWithOddIndex(Q),Ft=Vt.real,zt=Vt.imag,Zt=[Ft.length],ne=$.makeTensorInfo(Zt,"float32",Ft),se=$.makeTensorInfo(Zt,"float32",zt),qt=(0,_e.f)({inputs:{real:ne,imag:se},backend:$}),de=Er(vt,gt,yt,X,$),me=de.real,xe=de.imag,we=[me.length],Ue=$.makeTensorInfo(we,"float32",me),ke=$.makeTensorInfo(we,"float32",xe),Ge=(0,_e.f)({inputs:{real:Ue,imag:ke},backend:$}),Ze=Er(Ft,zt,yt,X,$),Me=Ze.real,Be=Ze.imag,Ne=[Me.length],Re=$.makeTensorInfo(Ne,"float32",Me),Ve=$.makeTensorInfo(Ne,"float32",Be),Le=(0,_e.f)({inputs:{real:Re,imag:Ve},backend:$}),Fe=e.C0T.exponents(R,X),Ye=[Fe.real.length],je=$.makeTensorInfo(Ye,"float32",Fe.real),rn=$.makeTensorInfo(Ye,"float32",Fe.imag),Xe=(0,_e.f)({inputs:{real:je,imag:rn},backend:$}),an=(0,K.lw)({inputs:{a:Xe,b:Le},backend:$}),Qe=(0,B.WQ)({inputs:{a:Ge,b:an},backend:$}),hn=(0,rr.jb)({inputs:{a:Ge,b:an},backend:$}),yn=(0,Sn.x)({inputs:{input:Qe},backend:$}),In=(0,Sn.x)({inputs:{input:hn},backend:$}),Cn=ze({inputs:{input:Qe},backend:$}),Mn=ze({inputs:{input:hn},backend:$}),Rn=Un({inputs:[yn,In],backend:$,attrs:{axis:0}}),Xn=Un({inputs:[Cn,Mn],backend:$,attrs:{axis:0}}),qn=$.data.get(Rn.dataId).values,as=$.data.get(Xn.dataId).values;return $.disposeIntermediateTensorInfo(St),$.disposeIntermediateTensorInfo(Pt),$.disposeIntermediateTensorInfo(Lt),$.disposeIntermediateTensorInfo(ne),$.disposeIntermediateTensorInfo(se),$.disposeIntermediateTensorInfo(qt),$.disposeIntermediateTensorInfo(Ue),$.disposeIntermediateTensorInfo(ke),$.disposeIntermediateTensorInfo(Ge),$.disposeIntermediateTensorInfo(Re),$.disposeIntermediateTensorInfo(Ve),$.disposeIntermediateTensorInfo(Le),$.disposeIntermediateTensorInfo(je),$.disposeIntermediateTensorInfo(rn),$.disposeIntermediateTensorInfo(Xe),$.disposeIntermediateTensorInfo(an),$.disposeIntermediateTensorInfo(Qe),$.disposeIntermediateTensorInfo(hn),$.disposeIntermediateTensorInfo(yn),$.disposeIntermediateTensorInfo(Cn),$.disposeIntermediateTensorInfo(In),$.disposeIntermediateTensorInfo(Mn),$.disposeIntermediateTensorInfo(Rn),$.disposeIntermediateTensorInfo(Xn),{real:qn,imag:as}}const Ur={kernelName:e.rGP,backendName:"cpu",kernelFunc:function Wr(ct){const{inputs:mt,backend:R}=ct,{input:X}=mt,$=e.ZSL.sizeFromShape(X.shape),Q=X.shape[X.shape.length-1],_t=A({inputs:{x:X},backend:R,attrs:{shape:[$/Q,Q]}}),vt=Ar(_t,!1,R),gt=A({inputs:{x:vt},backend:R,attrs:{shape:X.shape}});return R.disposeIntermediateTensorInfo(_t),R.disposeIntermediateTensorInfo(vt),gt}};function _r(ct){const{backend:mt,attrs:R}=ct,{shape:X,value:$,dtype:Q}=R,yt=Q||e.ZSL.inferDtype($),_t=e.ZSL.getArrayFromDType(yt,e.ZSL.sizeFromShape(X));return function Mr(ct,mt){ct.fill(mt)}(_t,$),mt.makeTensorInfo(X,yt,_t)}const Vr={kernelName:e.SQl,backendName:"cpu",kernelFunc:_r},Kr={kernelName:e.BxF,backendName:"cpu",kernelFunc:({inputs:ct,backend:R})=>{const{image:X}=ct,$=R,Q=e.ZSL.getTypedArrayFromDType(X.dtype,e.ZSL.sizeFromShape(X.shape)),[yt,_t,vt,gt]=X.shape,ht=$.data.get(X.dataId).values;for(let Pt=0;Pt<yt;Pt++){const Lt=Pt*vt*_t*gt;for(let Vt=0;Vt<_t;Vt++){const Ft=Vt*(vt*gt);for(let zt=0;zt<vt;zt++){const Zt=zt*gt;for(let ne=0;ne<gt;ne++){const se=Math.round(vt-zt-1),qt=Lt+Ft+Zt+ne;let de=ht[qt];se>=0&&se<vt&&(de=ht[Lt+Ft+se*gt+ne]),Q[qt]=de}}}}return{dataId:$.write(Q,X.shape,X.dtype),shape:X.shape,dtype:X.dtype}}};var or=t(2017);const wt=(0,d.Z)((ct,mt)=>Math.floor(ct/mt)),ae=(0,he.j)(e.ElG,wt,null,"int32"),ge={kernelName:e.ElG,backendName:"cpu",kernelFunc:ae},cn={kernelName:e.aAr,backendName:"cpu",kernelFunc:function De(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,filter:Q,bias:yt,preluActivationWeights:_t}=mt,{strides:vt,pad:gt,dataFormat:ht,dilations:St,dimRoundingMode:Pt,activation:Lt,leakyreluAlpha:Vt}=X;let Ft=es({inputs:{x:$,filter:Q},backend:R,attrs:{strides:vt,pad:gt,dataFormat:ht,dilations:St,dimRoundingMode:Pt}});if(yt){const zt=Ft;if("NCHW"===ht&&1===yt.shape.length&&1!==yt.shape[0]){const Zt=A({inputs:{x:yt},backend:R,attrs:{shape:[yt.shape[0],1,1]}});Ft=(0,B.WQ)({inputs:{a:Ft,b:Zt},backend:R}),R.disposeIntermediateTensorInfo(Zt)}else Ft=(0,B.WQ)({inputs:{a:Ft,b:yt},backend:R});R.disposeIntermediateTensorInfo(zt)}if(Lt){const zt=Ft;if("NCHW"===ht&&"prelu"===Lt&&1===_t.shape.length&&1!==_t.shape[0]){const Zt=A({inputs:{x:_t},backend:R,attrs:{shape:[_t.shape[0],1,1]}});Ft=F(R,Ft,Lt,Zt,Vt),R.disposeIntermediateTensorInfo(Zt)}else Ft=F(R,Ft,Lt,_t,Vt);R.disposeIntermediateTensorInfo(zt)}return Ft}},En={kernelName:e.T7M,backendName:"cpu",kernelFunc:function mn(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,filter:Q,bias:yt,preluActivationWeights:_t}=mt,{strides:vt,pad:gt,dataFormat:ht,dilations:St,dimRoundingMode:Pt,activation:Lt,leakyreluAlpha:Vt}=X;let Ft=Us({inputs:{x:$,filter:Q},backend:R,attrs:{strides:vt,pad:gt,dataFormat:ht,dilations:St,dimRoundingMode:Pt}});if(yt){const zt=Ft;Ft=(0,B.WQ)({inputs:{a:Ft,b:yt},backend:R}),R.disposeIntermediateTensorInfo(zt)}if(Lt){const zt=Ft;Ft=F(R,Ft,Lt,_t,Vt),R.disposeIntermediateTensorInfo(zt)}return Ft}};var _n=t(86315);const vs={kernelName:e.O4G,backendName:"cpu",kernelFunc:function Yn(ct){const{inputs:mt,backend:R}=ct,{params:X,indices:$}=mt,Q=e.ZSL.sizeFromShape(X.shape),yt=$.shape,_t=yt[yt.length-1],[vt,gt,ht,St]=e.C0T.prepareAndValidate(X,$);if(0===gt)return R.makeTensorInfo(vt,X.dtype,[]);const Pt=R.data.get($.dataId).values,Lt=R.bufferSync(X),Vt=(0,_n.q)(Pt,Lt,X.dtype,gt,_t,ht,St,X.shape,Q);return R.makeTensorInfo(vt,X.dtype,Vt.values)}};var Vn=t(60509);const Rs={kernelName:e.mxL,backendName:"cpu",kernelFunc:function os(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,indices:Q}=mt,{axis:yt,batchDims:_t}=X;(0,i.C)([$,Q],"gatherV2");const vt=e.ZSL.parseAxisParam(yt,$.shape)[0],gt=R.data.get(Q.dataId).values,ht=$.shape[vt];for(let qt=0;qt<gt.length;++qt){const de=gt[qt];e.ZSL.assert(de<=ht-1&&de>=0,()=>`GatherV2: the index value ${de} is not in [0, ${ht-1}]`)}let St=_t;null==_t&&(St=0);const Pt=e.ZSL.sizeFromShape(Q.shape),Lt=e.C0T.segment_util.collectGatherOpShapeInfo($,Q,vt,St),Vt=A({inputs:{x:$},backend:R,attrs:{shape:[Lt.batchSize,Lt.outerSize,Lt.dimSize,Lt.sliceSize]}}),Ft=A({inputs:{x:Q},backend:R,attrs:{shape:[Lt.batchSize,Pt/Lt.batchSize]}}),zt=[Lt.batchSize,Lt.outerSize,Pt/Lt.batchSize,Lt.sliceSize],Zt=R.bufferSync(Ft),ne=R.bufferSync(Vt),se=(0,Vn.G)(ne,Zt,zt);return R.disposeIntermediateTensorInfo(Vt),R.disposeIntermediateTensorInfo(Ft),R.makeTensorInfo(Lt.outputShape,se.dtype,se.values)}};var zr=t(89505),eo=t(1885);const Qr={kernelName:e.OAQ,backendName:"cpu",kernelFunc:function no(ct){const{inputs:mt,backend:R}=ct,{input:X}=mt,$=e.ZSL.sizeFromShape(X.shape),Q=X.shape[X.shape.length-1],_t=A({inputs:{x:X},backend:R,attrs:{shape:[$/Q,Q]}}),vt=Ar(_t,!0,R),gt=A({inputs:{x:vt},backend:R,attrs:{shape:X.shape}});return R.disposeIntermediateTensorInfo(_t),R.disposeIntermediateTensorInfo(vt),gt}},Jr=(0,x.v)(e.gIW,ct=>Number.isFinite(ct)?1:0,"bool"),co={kernelName:e.gIW,backendName:"cpu",kernelFunc:Jr},bt=(0,x.v)(e.E3$,ct=>Math.abs(ct)===1/0?1:0,"bool"),Qt={kernelName:e.E3$,backendName:"cpu",kernelFunc:bt},Bt=(0,x.v)(e.iPs,ct=>Number.isNaN(ct)?1:0,"bool"),Ht={kernelName:e.iPs,backendName:"cpu",kernelFunc:Bt};var le=t(64730),fe=t(11040),Ce=t(43905);const ye={kernelName:e.mnI,backendName:"cpu",kernelFunc:function pe(ct){const{backend:mt,attrs:R}=ct,{start:X,stop:$,num:Q}=R,yt=(0,Ce.G)(X,$,Q);return mt.makeTensorInfo([yt.length],"float32",yt)}};var gn=t(94621);const An=(0,x.v)(e.Cg$,ct=>Math.log1p(ct)),Hn={kernelName:e.Cg$,backendName:"cpu",kernelFunc:An},Kn=(0,d.Z)((ct,mt)=>ct&&mt),jn=(0,he.j)(e.RUm,Kn,null,"bool"),Ys={kernelName:e.RUm,backendName:"cpu",kernelFunc:jn},yr=(0,x.v)(e.nZd,ct=>ct?0:1,"bool"),Ks={kernelName:e.nZd,backendName:"cpu",kernelFunc:yr},po=(0,d.Z)((ct,mt)=>ct||mt),ho=(0,he.j)(e.LXA,po,null,"bool"),fo={kernelName:e.LXA,backendName:"cpu",kernelFunc:ho},Gr={kernelName:e.jM4,backendName:"cpu",kernelFunc:function ps(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{depthRadius:Q,bias:yt,alpha:_t,beta:vt}=X;(0,i.C)($,"LRN");const gt=$.shape[3],ht=gt-1,St=R.data.get($.dataId).values,Pt=e.ZSL.sizeFromShape($.shape),Lt=new Float32Array(Pt);function Vt(Ft){const zt=Ft%gt;let Zt=Ft-zt+Math.max(0,zt-Q);const ne=Ft-zt+Math.min(zt+Q,ht);let se=0;for(;Zt<=ne;Zt++){const qt=St[Zt];se+=qt*qt}return se}for(let Ft=0;Ft<Pt;Ft++){const zt=Vt(Ft),Zt=St[Ft]*Math.pow(yt+_t*zt,-vt);Lt[Ft]=Zt}return R.makeTensorInfo($.shape,$.dtype,Lt)}},mo={kernelName:e.ToN,backendName:"cpu",kernelFunc:function Po(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,y:Q,dy:yt}=mt,{depthRadius:_t,bias:vt,alpha:gt,beta:ht}=X;(0,i.C)(yt,"LRNGrad");const St=e.ZSL.sizeFromShape(yt.shape),Pt=yt.shape[3],Lt=R.data.get(yt.dataId).values,Vt=R.data.get($.dataId).values,Ft=R.data.get(Q.dataId).values,zt=new Float32Array(St),Zt=St;for(let ne=0;ne<Zt;ne++){const se=ne%Pt,qt=ne-se+Math.max(0,se-_t),de=ne-se+Math.min(Pt,se+_t+1);let me=0;for(let xe=qt;xe<de;xe++)me+=Math.pow(Vt[xe],2);me=gt*me+vt;for(let xe=qt;xe<de;xe++){let we=-2*gt*ht*Vt[xe]*Ft[ne]/me;ne===xe&&(we+=Math.pow(me,-ht)),we*=Lt[ne],zt[xe]+=we}}return R.makeTensorInfo(yt.shape,$.dtype,zt)}};var Oo=t(33438),so=t(44169);function go(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{reductionIndices:Q,keepDims:yt}=X,_t=R;let vt=$.shape;const gt=vt.length,ht=e.ZSL.parseAxisParam(Q,vt);let St=ht;const Pt=e.C0T.getAxesPermutation(St,gt);let Lt=_t.data.get($.dataId).values;if(null!=Pt){const qt=new Array(gt);for(let de=0;de<qt.length;de++)qt[de]=vt[Pt[de]];Lt=(0,so._)(Lt,vt,$.dtype,Pt,qt),St=e.C0T.getInnerMostAxes(St.length,gt),vt=qt}(0,i.C)($,"max"),e.C0T.assertAxesAreInnerMostDims("max",St,gt);const[Vt,Ft]=e.C0T.computeOutAndReduceShapes(vt,St),zt=e.ZSL.sizeFromShape(Ft),Zt=(0,Oo.j)(Lt,zt,Vt,$.dtype),ne=_t.write(Zt,Vt,$.dtype);let se=Vt;return yt&&(se=e.C0T.expandShapeToKeepDim(Vt,ht)),{dataId:ne,shape:se,dtype:$.dtype}}const Ea={kernelName:e.VAI,backendName:"cpu",kernelFunc:go};var _a=t(40553);const xa={kernelName:e.t3d,backendName:"cpu",kernelFunc:function ya(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt;(0,i.C)($,"maxPool");const{filterSize:Q,strides:yt,pad:_t,dimRoundingMode:vt}=X;e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(yt,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${yt} and dilations '1'`);const ht=e.C0T.computePool2DInfo($.shape,Q,yt,1,_t,vt);let St;if(1===ht.filterWidth&&1===ht.filterHeight&&e.ZSL.arraysEqual(ht.inShape,ht.outShape))St=(0,f.D)({inputs:{x:$},backend:R});else{const Pt=R.data.get($.dataId).values,Lt=e.ZSL.computeStrides($.shape),Vt=$n(Pt,0,$.dtype,Lt,ht,"max");St=R.makeTensorInfo(ht.outShape,$.dtype,Vt.values)}return St}},va={kernelName:e.ySp,backendName:"cpu",kernelFunc:function $o(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{filterSize:Q,strides:yt,pad:_t,dimRoundingMode:vt,dataFormat:gt}=X;(0,i.C)($,"maxPool3d");const ht=e.C0T.computePool3DInfo($.shape,Q,yt,1,_t,vt,gt),Pt=zn(R.data.get($.dataId).values,0,$.dtype,e.ZSL.computeStrides($.shape),ht,"max");return R.makeTensorInfo(Pt.shape,"float32",Pt.values)}},Ca={kernelName:e.cHb,backendName:"cpu",kernelFunc:function Ta(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,input:Q}=mt,{filterSize:yt,strides:_t,pad:vt,dimRoundingMode:gt}=X;(0,i.C)([$,Q],"maxPool3DGrad");const ht=e.C0T.computePool3DInfo(Q.shape,yt,_t,1,vt,gt),Pt=function Gn(ct,mt){const R=(0,e.ra8)(mt.outShape,"int32"),X=mt.strideDepth,$=mt.strideHeight,Q=mt.strideWidth,yt=mt.dilationDepth,_t=mt.dilationHeight,vt=mt.dilationWidth,gt=mt.effectiveFilterDepth,ht=mt.effectiveFilterHeight,St=mt.effectiveFilterWidth,Pt=mt.padInfo.front,Lt=mt.padInfo.top,Vt=mt.padInfo.left;for(let Ft=0;Ft<mt.batchSize;++Ft)for(let zt=0;zt<mt.inChannels;++zt)for(let Zt=0;Zt<mt.outDepth;++Zt){const ne=Zt*X-Pt;let se=ne;for(;se<0;)se+=yt;const qt=Math.min(mt.inDepth,gt+ne);for(let de=0;de<mt.outHeight;++de){const me=de*$-Lt;let xe=me;for(;xe<0;)xe+=_t;const we=Math.min(mt.inHeight,ht+me);for(let Ue=0;Ue<mt.outWidth;++Ue){const ke=Ue*Q-Vt;let Ge=ke;for(;Ge<0;)Ge+=vt;const Ze=Math.min(mt.inWidth,St+ke);let Me=Number.NEGATIVE_INFINITY,Be=-1;for(let Ne=se;Ne<qt;Ne+=yt){const Re=Ne-ne;for(let Ve=xe;Ve<we;Ve+=_t){const Le=Ve-me;for(let Fe=Ge;Fe<Ze;Fe+=vt){const Ye=Fe-ke,je=ct.get(Ft,Ne,Ve,Fe,zt);je>=Me&&(Me=je,Be=Re*ht*St+Le*ht+Ye)}}}R.set(Be,Ft,Zt,de,Ue,zt)}}}return R}(R.bufferSync(Q),ht),Lt=ht.strideDepth,Vt=ht.strideHeight,Ft=ht.strideWidth,zt=ht.dilationDepth,Zt=ht.dilationHeight,ne=ht.dilationWidth,se=ht.effectiveFilterDepth,qt=ht.effectiveFilterHeight,de=ht.effectiveFilterWidth,me=se-1-ht.padInfo.front,xe=de-1-ht.padInfo.left,we=qt-1-ht.padInfo.top,Ue=(0,e.ra8)(Q.shape,"float32"),ke=R.bufferSync($);for(let Ge=0;Ge<ht.batchSize;++Ge)for(let Ze=0;Ze<ht.inChannels;++Ze)for(let Me=0;Me<ht.inDepth;++Me)for(let Be=0;Be<ht.inHeight;++Be)for(let Ne=0;Ne<ht.inWidth;++Ne){const Re=Me-me,Ve=Be-we,Le=Ne-xe;let Fe=0;for(let Ye=0;Ye<se;Ye+=zt){const je=(Re+Ye)/Lt;if(!(je<0||je>=ht.outDepth||Math.floor(je)!==je))for(let rn=0;rn<qt;rn+=Zt){const Xe=(Ve+rn)/Vt;if(!(Xe<0||Xe>=ht.outHeight||Math.floor(Xe)!==Xe))for(let an=0;an<de;an+=ne){const Qe=(Le+an)/Ft;if(Qe<0||Qe>=ht.outWidth||Math.floor(Qe)!==Qe)continue;const In=se*qt*de-1-Pt.get(Ge,je,Xe,Qe,Ze)===Ye*qt*de+rn*de+an?1:0;0!==In&&(Fe+=ke.get(Ge,je,Xe,Qe,Ze)*In)}}}Ue.set(Fe,Ge,Me,Be,Ne,Ze)}return R.makeTensorInfo(Ue.shape,Ue.dtype,Ue.values)}},Ia={kernelName:e.RXX,backendName:"cpu",kernelFunc:function Da(ct){const{inputs:mt,backend:R,attrs:X}=ct,{dy:$,input:Q,output:yt}=mt,_t=Q;(0,i.C)([Q,yt],"maxPoolGrad");const{filterSize:vt,strides:gt,pad:ht,dimRoundingMode:St}=X,Pt=e.C0T.computePool2DInfo(_t.shape,vt,gt,1,ht,St),Lt=R.data.get(_t.dataId).values,Vt=(0,e.ra8)(Pt.outShape,_t.dtype,wn(Lt,_t.shape,_t.dtype,Pt).values),Ft=Pt.strideHeight,zt=Pt.strideWidth,Zt=Pt.dilationHeight,ne=Pt.dilationWidth,se=Pt.effectiveFilterHeight,qt=Pt.effectiveFilterWidth,de=qt-1-Pt.padInfo.left,me=se-1-Pt.padInfo.top,xe=(0,e.ra8)(_t.shape,"float32"),we=R.data.get($.dataId).values,Ue=(0,e.ra8)($.shape,"float32",we);for(let ke=0;ke<Pt.batchSize;++ke)for(let Ge=0;Ge<Pt.inChannels;++Ge)for(let Ze=0;Ze<Pt.inHeight;++Ze)for(let Me=0;Me<Pt.inWidth;++Me){const Be=Ze-me,Ne=Me-de;let Re=0;for(let Ve=0;Ve<se;Ve+=Zt){const Le=(Be+Ve)/Ft;if(!(Le<0||Le>=Pt.outHeight||Math.floor(Le)!==Le))for(let Fe=0;Fe<qt;Fe+=ne){const Ye=(Ne+Fe)/zt;if(Ye<0||Ye>=Pt.outWidth||Math.floor(Ye)!==Ye)continue;const Xe=se*qt-1-Vt.get(ke,Le,Ye,Ge)===Ve*qt+Fe?1:0;0!==Xe&&(Re+=Ue.get(ke,Le,Ye,Ge)*Xe)}}xe.set(Re,ke,Ze,Me,Ge)}return R.makeTensorInfo(xe.shape,xe.dtype,xe.values)}},Oa={kernelName:e.TL8,backendName:"cpu",kernelFunc:({inputs:ct,attrs:mt,backend:R})=>{const{x:X}=ct,{filterSize:$,strides:Q,pad:yt,includeBatchInIndex:_t}=mt,vt=R;(0,i.C)(X,"MaxPoolWithArgmax");const gt=vt.data.get(X.dataId).values,ht=e.C0T.computePool2DInfo(X.shape,$,Q,[1,1],yt),[St,Pt]=function Pa(ct,mt,R,X,$){const yt=$n(ct,0,R,e.ZSL.computeStrides(mt),$,"max"),_t=wn(ct,mt,R,$,!0,X);return[yt.values,_t.values]}(gt,X.shape,X.dtype,_t,ht),Lt=vt.write(St,ht.outShape,X.dtype),Vt=vt.write(Pt,ht.outShape,X.dtype);return[{dataId:Lt,shape:ht.outShape,dtype:X.dtype},{dataId:Vt,shape:ht.outShape,dtype:"int32"}]}},Aa={kernelName:e.g5A,backendName:"cpu",kernelFunc:function Sa(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,keepDims:yt}=X,_t=e.ZSL.parseAxisParam(Q,$.shape),gt=e.C0T.computeOutAndReduceShapes($.shape,_t)[1],ht=e.ZSL.sizeFromShape(gt),St=[],Pt=R.makeTensorInfo([],"float32",new Float32Array([ht]));St.push(Pt);const Lt=(0,be.wg)({inputs:{x:$},backend:R,attrs:{dtype:"float32"}});St.push(Lt);const Vt=nr({inputs:{a:Lt,b:Pt},backend:R});St.push(Vt);const Ft=st({inputs:{x:Vt},backend:R,attrs:{axis:Q,keepDims:yt}});return St.forEach(zt=>R.disposeIntermediateTensorInfo(zt)),Ft}},Ma={kernelName:e.lNG,backendName:"cpu",kernelFunc:function ba(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{axis:Q,keepDims:yt}=X;(0,i.C)($,"min");const _t=e.ZSL.parseAxisParam(Q,$.shape);let vt=_t;const gt=e.C0T.getAxesPermutation(vt,$.shape.length);let ht=$;null!=gt&&(ht=(0,Tt.m)({inputs:{x:$},backend:R,attrs:{perm:gt}}),vt=e.C0T.getInnerMostAxes(vt.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("min",vt,ht.shape.length);const[St,Pt]=e.C0T.computeOutAndReduceShapes(ht.shape,vt),Lt=e.ZSL.sizeFromShape(Pt),Vt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(St),ht.dtype),Ft=R.data.get(ht.dataId).values;for(let Zt=0;Zt<Vt.length;++Zt){const ne=Zt*Lt;let se=Ft[ne];for(let qt=0;qt<Lt;++qt){const de=Ft[ne+qt];(Number.isNaN(de)||de<se)&&(se=de)}Vt[Zt]=se}null!=gt&&R.disposeIntermediateTensorInfo(ht);const zt=R.makeTensorInfo(St,ht.dtype,Vt);if(yt){const ne=A({inputs:{x:zt},backend:R,attrs:{shape:e.C0T.expandShapeToKeepDim(St,_t)}});return R.disposeIntermediateTensorInfo(zt),ne}return zt}};var Na=t(32747);const La={kernelName:e.x7F,backendName:"cpu",kernelFunc:function Ra(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{paddings:Q,mode:yt}=X;(0,i.C)($,"mirrorPad");const _t=Q.map((se,qt)=>se[0]+$.shape[qt]+se[1]),vt=Q.map(se=>se[0]),gt=Q.map((se,qt)=>se[0]+$.shape[qt]),ht="reflect"===yt?0:1,St=R.data.get($.dataId).values,Pt=$.shape.length,Lt=e.ZSL.computeStrides($.shape),Vt=e.ZSL.sizeFromShape(_t),Ft=_t.length,zt=e.ZSL.computeStrides(_t),Zt=e.ZSL.getTypedArrayFromDType($.dtype,Vt);for(let se=0;se<Vt;se++){let qt=e.ZSL.indexToLoc(se,Ft,zt);for(let me=0;me<Ft;me++)qt[me]<vt[me]?qt[me]=2*vt[me]-qt[me]-ht:qt[me]>=gt[me]&&(qt[me]=2*(gt[me]-1)-qt[me]+ht);qt=qt.map((me,xe)=>me-vt[xe]);const de=e.ZSL.locToIndex(qt,Pt,Lt);Zt[se]=St[de]}return{dataId:R.write(Zt,_t,$.dtype),shape:_t,dtype:$.dtype}}},$a=(0,d.Z)((ct,mt)=>{const R=ct%mt;return ct<0&&mt<0||ct>=0&&mt>=0?R:(R+mt)%mt}),wa=(0,he.j)(e.BLA,$a),Ba={kernelName:e.BLA,backendName:"cpu",kernelFunc:wa};var ka=t(48814);function wo(ct){const{inputs:mt,backend:R,attrs:X}=ct,{logits:$}=mt,{dim:Q}=X,yt=$.shape.length;let _t=Q;if(-1===_t&&(_t=yt-1),_t!==yt-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${yt} and dim was ${_t}`);const vt=e.ZSL.parseAxisParam([_t],$.shape),gt=go({inputs:{x:$},backend:R,attrs:{reductionIndices:vt,keepDims:!1}}),ht=e.C0T.expandShapeToKeepDim(gt.shape,vt),St=A({inputs:{x:gt},backend:R,attrs:{shape:ht}}),Pt=(0,rr.jb)({inputs:{a:$,b:St},backend:R}),Lt=(0,ds.oN)({inputs:{x:Pt},backend:R}),Vt=st({inputs:{x:Lt},backend:R,attrs:{axis:vt,keepDims:!1}}),Ft=A({inputs:{x:Vt},backend:R,attrs:{shape:ht}}),zt=nr({inputs:{a:Lt,b:Ft},backend:R});return R.disposeIntermediateTensorInfo(gt),R.disposeIntermediateTensorInfo(St),R.disposeIntermediateTensorInfo(Pt),R.disposeIntermediateTensorInfo(Lt),R.disposeIntermediateTensorInfo(Vt),R.disposeIntermediateTensorInfo(Ft),zt}const Fa={kernelName:e.rFG,backendName:"cpu",kernelFunc:wo},Ua={kernelName:e.WT3,backendName:"cpu",kernelFunc:function Wa(ct){const{inputs:mt,backend:R,attrs:X}=ct,{logits:$}=mt,{numSamples:Q,seed:yt,normalized:_t}=X;(0,i.C)($,"multinomial");const vt=_t?$:wo({inputs:{logits:$},backend:R,attrs:{dim:-1}}),gt=vt.shape[0],ht=vt.shape[1],St=R.data.get(vt.dataId).values,Pt=[gt,Q],Lt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(Pt),"int32");for(let Vt=0;Vt<gt;++Vt){const Ft=Vt*ht,zt=new Float32Array(ht-1);zt[0]=St[Ft];for(let se=1;se<zt.length;++se)zt[se]=zt[se-1]+St[Ft+se];const Zt=ka.alea(yt.toString()),ne=Vt*Q;for(let se=0;se<Q;++se){const qt=Zt();Lt[ne+se]=zt.length;for(let de=0;de<zt.length;de++)if(qt<zt[de]){Lt[ne+se]=de;break}}}return _t||R.disposeIntermediateTensorInfo(vt),R.makeTensorInfo(Pt,"int32",Lt)}};var Va=t(86705);const Ka=e.kpo.c7,Ga={kernelName:e.SDM,backendName:"cpu",kernelFunc:function za(ct){const{inputs:mt,backend:R,attrs:X}=ct,{boxes:$,scores:Q}=mt,{maxOutputSize:yt,iouThreshold:_t,scoreThreshold:vt}=X;(0,i.C)($,"NonMaxSuppression");const gt=R.data.get($.dataId).values,ht=R.data.get(Q.dataId).values,{selectedIndices:St}=Ka(gt,ht,yt,_t,vt);return R.makeTensorInfo([St.length],"int32",new Int32Array(St))}},Ha=e.kpo.ZS,Za={kernelName:e.Zl4,backendName:"cpu",kernelFunc:function ja(ct){const{inputs:mt,backend:R,attrs:X}=ct,{boxes:$,scores:Q}=mt,{maxOutputSize:yt,iouThreshold:_t,scoreThreshold:vt,padToMaxOutputSize:gt}=X;(0,i.C)($,"NonMaxSuppressionPadded");const ht=R.data.get($.dataId).values,St=R.data.get(Q.dataId).values,{selectedIndices:Pt,validOutputs:Lt}=Ha(ht,St,yt,_t,vt,gt);return[R.makeTensorInfo([Pt.length],"int32",new Int32Array(Pt)),R.makeTensorInfo([],"int32",new Int32Array([Lt]))]}},Ya=e.kpo.ut,Bo={kernelName:e.e0f,backendName:"cpu",kernelFunc:function Xa(ct){const{inputs:mt,backend:R,attrs:X}=ct,{boxes:$,scores:Q}=mt,{maxOutputSize:yt,iouThreshold:_t,scoreThreshold:vt,softNmsSigma:gt}=X;(0,i.C)($,"NonMaxSuppressionWithScore");const ht=R.data.get($.dataId).values,St=R.data.get(Q.dataId).values,Pt=yt,Lt=_t,Vt=vt,Ft=gt,{selectedIndices:zt,selectedScores:Zt}=Ya(ht,St,Pt,Lt,Vt,Ft);return[R.makeTensorInfo([zt.length],"int32",new Int32Array(zt)),R.makeTensorInfo([Zt.length],"float32",new Float32Array(Zt))]}};var Qa=t(13432);const qa={kernelName:e.urI,backendName:"cpu",kernelFunc:function Ja(ct){const{inputs:mt,backend:R,attrs:X}=ct,{indices:$}=mt,{dtype:Q,depth:yt,onValue:_t,offValue:vt}=X;(0,i.C)($,"oneHot");const gt=e.ZSL.sizeFromShape($.shape),ht=new Float32Array(gt*yt);ht.fill(vt);const St=R.data.get($.dataId).values;for(let Pt=0;Pt<gt;++Pt)St[Pt]>=0&&St[Pt]<yt&&(ht[Pt*yt+St[Pt]]=_t);return R.makeTensorInfo([...$.shape,yt],Q,ht)}};function ro(ct){const{inputs:mt,backend:R}=ct,{x:X}=mt;if("string"===X.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===X.dtype){const $=(0,Sn.x)({inputs:{input:X},backend:R}),Q=ro({inputs:{x:$},backend:R}),yt=ze({inputs:{input:X},backend:R}),_t=ro({inputs:{x:yt},backend:R}),vt=(0,_e.f)({inputs:{real:Q,imag:_t},backend:R});return R.disposeIntermediateTensorInfo($),R.disposeIntermediateTensorInfo(Q),R.disposeIntermediateTensorInfo(yt),R.disposeIntermediateTensorInfo(_t),vt}return _r({backend:R,attrs:{shape:X.shape,value:0,dtype:X.dtype}})}const ti={kernelName:e.xJ3,backendName:"cpu",kernelFunc:ro},ei={kernelName:e.LWX,backendName:"cpu",kernelFunc:function ko(ct){const{inputs:mt,backend:R}=ct,{x:X}=mt;if("string"===X.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===X.dtype){const $=(0,Sn.x)({inputs:{input:X},backend:R}),Q=ko({inputs:{x:$},backend:R}),yt=ze({inputs:{input:X},backend:R}),_t=ro({inputs:{x:yt},backend:R}),vt=(0,_e.f)({inputs:{real:Q,imag:_t},backend:R});return R.disposeIntermediateTensorInfo($),R.disposeIntermediateTensorInfo(Q),R.disposeIntermediateTensorInfo(yt),R.disposeIntermediateTensorInfo(_t),vt}return _r({backend:R,attrs:{shape:X.shape,value:1,dtype:X.dtype}})}};function Fo(ct){const{inputs:mt,backend:R,attrs:X}=ct,{axis:$}=X;if(1===mt.length)return Bn({inputs:{input:mt[0]},backend:R,attrs:{dim:$}});const Q=mt[0].shape,yt=mt[0].dtype;mt.forEach(ht=>{e.ZSL.assertShapesMatch(Q,ht.shape,"All tensors passed to stack must have matching shapes"),e.ZSL.assert(yt===ht.dtype,()=>"All tensors passed to stack must have matching dtypes")});const _t=[],gt=Un({inputs:mt.map(ht=>{const St=Bn({inputs:{input:ht},backend:R,attrs:{dim:$}});return _t.push(St),St}),backend:R,attrs:{axis:$}});return _t.forEach(ht=>R.disposeIntermediateTensorInfo(ht)),gt}const ni={kernelName:e.mM$,backendName:"cpu",kernelFunc:Fo},Wo={kernelName:e.ODT,backendName:"cpu",kernelFunc:function si(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{paddings:Q,constantValue:yt}=X;(0,i.C)($,"pad");const _t=Q.map((ne,se)=>ne[0]+$.shape[se]+ne[1]),vt=Q.map(ne=>ne[0]),gt=R.data.get($.dataId).values,ht=e.ZSL.sizeFromShape($.shape),St=$.shape.length,Pt=e.ZSL.computeStrides($.shape),Lt=e.ZSL.sizeFromShape(_t),Vt=_t.length,Ft=e.ZSL.computeStrides(_t),zt=e.ZSL.getTypedArrayFromDType($.dtype,Lt);0!==yt&&zt.fill(yt);for(let ne=0;ne<ht;ne++){const qt=e.ZSL.indexToLoc(ne,St,Pt).map((me,xe)=>me+vt[xe]);zt[e.ZSL.locToIndex(qt,Vt,Ft)]=gt[ne]}return{dataId:R.write(zt,_t,$.dtype),shape:_t,dtype:$.dtype}}},ri=(0,d.Z)((ct,mt)=>Math.pow(ct,mt)),oi=(0,he.j)(e.pyJ,ri),So={kernelName:e.pyJ,backendName:"cpu",kernelFunc:oi};var ai=t(88054),Uo=t(6567);const ii={kernelName:e.oJ2,backendName:"cpu",kernelFunc:function Ts(ct){const{inputs:mt,backend:R,attrs:X}=ct,{paramsNestedSplits:$,paramsDenseValues:Q,indices:yt}=mt,{outputRaggedRank:_t}=X,vt=$.map(Zt=>R.data.get(Zt.dataId).values),gt=$.map(Zt=>Zt.shape),ht=R.data.get(Q.dataId).values,St=R.data.get(yt.dataId).values,[Pt,Lt,Vt]=(0,Uo.u)(vt,gt,ht,Q.shape,Q.dtype,St,yt.shape,_t),Ft=Pt.map(Zt=>R.makeTensorInfo([Zt.length],"int32",Zt)),zt=R.makeTensorInfo(Vt,Q.dtype,Lt);return Ft.concat([zt])}};var li=t(8161);const ui={kernelName:e.CQC,backendName:"cpu",kernelFunc:function Vo(ct){const{inputs:mt,backend:R}=ct,{starts:X,limits:$,deltas:Q}=mt,yt=R.data.get(X.dataId).values,_t=R.data.get($.dataId).values,vt=R.data.get(Q.dataId).values,[gt,ht]=(0,li._)(yt,X.shape,X.dtype,_t,$.shape,vt,Q.shape);return[R.makeTensorInfo([gt.length],"int32",gt),R.makeTensorInfo([ht.length],X.dtype,ht)]}};var ci=t(673);const Ko={kernelName:e.mH5,backendName:"cpu",kernelFunc:function di(ct){const{inputs:mt,backend:R,attrs:X}=ct,{shape:$,values:Q,defaultValue:yt,rowPartitionTensors:_t}=mt,{rowPartitionTypes:vt}=X,gt=R.data.get($.dataId).values,ht=R.data.get(Q.dataId).values,St=R.data.get(yt.dataId).values,Pt=_t.map(zt=>R.data.get(zt.dataId).values),Lt=_t.map(zt=>zt.shape),[Vt,Ft]=(0,ci.K)(gt,$.shape,ht,Q.shape,Q.dtype,St,yt.shape,Pt,Lt,vt);return R.makeTensorInfo(Vt,Q.dtype,Ft)}};var pi=t(6251);const zo={kernelName:e.Q6t,backendName:"cpu",kernelFunc:function hi(ct){const{backend:mt,attrs:R}=ct,{start:X,stop:$,dtype:Q,step:yt}=R,_t=(0,pi.q)(X,$,yt,Q);return mt.makeTensorInfo([_t.length],Q,_t)}},Go=(0,x.v)(e.huO,ct=>1/ct),ar={kernelName:e.huO,backendName:"cpu",kernelFunc:Go},fi={kernelName:e.hgw,backendName:"cpu",kernelFunc:function Ls(ct){const{inputs:mt,backend:R,attrs:X}=ct,{images:$}=mt,{alignCorners:Q,halfPixelCenters:yt,size:_t}=X;(0,i.C)($,"resizeBilinear");const vt=e.ZSL.computeStrides($.shape),[gt,ht]=_t,[St,Pt,Lt,Vt]=$.shape,Ft=R.data.get($.dataId).values,zt=new Float32Array(e.ZSL.sizeFromShape([St,gt,ht,Vt])),Zt=[Q&&gt>1?Pt-1:Pt,Q&&ht>1?Lt-1:Lt],ne=[Q&&gt>1?gt-1:gt,Q&&ht>1?ht-1:ht];let se=0;const qt=Zt[0]/ne[0],de=Zt[1]/ne[1];for(let me=0;me<St;me++)for(let xe=0;xe<gt;xe++){let we;we=yt?qt*(xe+.5)-.5:qt*xe;const Ue=Math.max(0,Math.floor(we)),ke=we-Ue,Ge=Math.min(Pt-1,Math.ceil(we)),Ze=me*vt[0]+Ue*vt[1],Me=me*vt[0]+Ge*vt[1];for(let Be=0;Be<ht;Be++){let Ne;Ne=yt?de*(Be+.5)-.5:de*Be;const Re=Math.max(0,Math.floor(Ne)),Ve=Ne-Re,Le=Math.min(Lt-1,Math.ceil(Ne)),Fe=Ze+Re*vt[2],Ye=Me+Re*vt[2],je=Ze+Le*vt[2],rn=Me+Le*vt[2];for(let Xe=0;Xe<Vt;Xe++){const an=Ft[Fe+Xe],Qe=Ft[Ye+Xe],In=an+(Ft[je+Xe]-an)*Ve;zt[se++]=In+(Qe+(Ft[rn+Xe]-Qe)*Ve-In)*ke}}}return R.makeTensorInfo([St,gt,ht,Vt],"float32",zt)}},Pl={kernelName:e.FCQ,backendName:"cpu",kernelFunc:function Ho(ct){const{inputs:mt,backend:R,attrs:X}=ct,{images:$,dy:Q}=mt,{alignCorners:yt}=X;(0,i.C)([Q,$],"resizeBilinearGrad");const _t=e.ZSL.computeStrides($.shape),[vt,gt,ht,St]=$.shape,[,Pt,Lt]=Q.shape,Vt=new Float32Array(vt*gt*ht*St),Ft=[yt&&Pt>1?gt-1:gt,yt&&Lt>1?ht-1:ht],zt=[yt&&Pt>1?Pt-1:Pt,yt&&Lt>1?Lt-1:Lt],Zt=Ft[0]/zt[0],ne=Ft[1]/zt[1],se=R.data.get(Q.dataId).values;let qt=0;for(let de=0;de<vt;de++){const me=de*_t[0];for(let xe=0;xe<Pt;xe++){const we=xe*Zt,Ue=Math.floor(we),ke=Math.min(Math.ceil(we),gt-1),Ge=me+Ue*_t[1],Ze=me+ke*_t[1],Me=we-Ue,Be=1-Me;for(let Ne=0;Ne<Lt;Ne++){const Re=Ne*ne,Ve=Math.floor(Re),Le=Math.min(Math.ceil(Re),ht-1),Fe=Re-Ve,Ye=1-Fe,je=Ge+Ve*_t[2],rn=Ge+Le*_t[2],Xe=Ze+Ve*_t[2],an=Ze+Le*_t[2],Qe=Be*Ye,hn=Be*Fe,yn=Me*Ye,In=Me*Fe;for(let Cn=0;Cn<St;Cn++){const Mn=se[qt++];Vt[je+Cn]+=Mn*Qe,Vt[rn+Cn]+=Mn*hn,Vt[Xe+Cn]+=Mn*yn,Vt[an+Cn]+=Mn*In}}}}return R.makeTensorInfo([vt,ht,gt,St],"float32",Vt)}},gi={kernelName:e.jOE,backendName:"cpu",kernelFunc:function mi(ct){const{inputs:mt,backend:R,attrs:X}=ct,{images:$}=mt,{alignCorners:Q,halfPixelCenters:yt,size:_t}=X;(0,i.C)($,"resizeNearestNeighbor");const vt=e.ZSL.computeStrides($.shape),[gt,ht]=_t,[St,Pt,Lt,Vt]=$.shape,Ft=R.data.get($.dataId).values,zt=new Float32Array(St*gt*ht*Vt),Zt=[Q&&gt>1?Pt-1:Pt,Q&&ht>1?Lt-1:Lt],ne=[Q&&gt>1?gt-1:gt,Q&&ht>1?ht-1:ht],se=Zt[0]/ne[0],qt=Zt[1]/ne[1];let de=0;for(let me=0;me<St;me++){const xe=me*vt[0];for(let we=0;we<gt;we++){const Ue=yt?se*(we+.5):se*we;let ke=Math.min(Pt-1,Q?Math.round(Ue):Math.floor(Ue));yt&&(ke=Math.max(0,ke));const Ge=xe+ke*vt[1];for(let Ze=0;Ze<ht;Ze++){const Me=yt?qt*(Ze+.5):qt*Ze;let Be=Math.min(Lt-1,Q?Math.round(Me):Math.floor(Me));yt&&(Be=Math.max(0,Be));const Ne=Ge+Be*vt[2];for(let Re=0;Re<Vt;Re++)zt[de++]=Ft[Ne+Re]}}}return R.makeTensorInfo([St,gt,ht,Vt],$.dtype,zt)}},Nr={kernelName:e.XQy,backendName:"cpu",kernelFunc:function Ei(ct){const{inputs:mt,backend:R,attrs:X}=ct,{images:$,dy:Q}=mt,{alignCorners:yt}=X;(0,i.C)([Q,$],"resizeNearestNeighborGrad");const _t=e.ZSL.computeStrides($.shape),vt=e.ZSL.computeStrides(Q.shape),[gt,ht,St,Pt]=$.shape,[,Lt,Vt]=Q.shape,Ft=new Float32Array(gt*ht*St*Pt),zt=R.data.get(Q.dataId).values,Zt=[yt&&Lt>1?ht-1:ht,yt&&Vt>1?St-1:St],ne=[yt&&Lt>1?Lt-1:Lt,yt&&Vt>1?Vt-1:Vt],se=Zt[0]/ne[0],qt=Zt[1]/ne[1],de=1/se,me=1/qt,xe=2*Math.ceil(de)+2,we=2*Math.ceil(me)+2;for(let Ue=0;Ue<gt;Ue++){const ke=Ue*_t[0];for(let Ge=0;Ge<ht;Ge++){const Ze=ke+Ge*_t[1],Me=Math.floor(Ge*de),Be=Math.floor(Me-xe/2);for(let Ne=0;Ne<St;Ne++){const Re=Ze+Ne*_t[2],Ve=Math.floor(Ne*me),Le=Math.floor(Ve-we/2);for(let Fe=0;Fe<Pt;Fe++){let Ye=0;for(let je=0;je<xe;je++){const rn=je+Be;if(rn<0||rn>=Lt)continue;const Xe=ke+rn*vt[1],an=rn*se;if(Ge===Math.min(ht-1,yt?Math.round(an):Math.floor(an)))for(let hn=0;hn<we;hn++){const yn=hn+Le;if(yn<0||yn>=Vt)continue;const In=Xe+yn*vt[2],Cn=yn*qt;Ne===Math.min(St-1,yt?Math.round(Cn):Math.floor(Cn))&&(Ye+=zt[In+Fe])}}Ft[Re+Fe]=Ye}}}}return R.makeTensorInfo($.shape,$.dtype,Ft)}},yi={kernelName:e.D7i,backendName:"cpu",kernelFunc:function _i(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{dims:Q}=X;(0,i.C)($,"reverse");const yt=$.shape.length,_t=e.ZSL.parseAxisParam(Q,$.shape);if(0===yt)return(0,f.D)({inputs:{x:$},backend:R});const vt=new e.ylz($.shape,$.dtype),gt=R.bufferSync($);for(let ht=0;ht<vt.size;ht++){const St=vt.indexToLoc(ht),Pt=St.slice();_t.forEach(Lt=>Pt[Lt]=$.shape[Lt]-1-Pt[Lt]),vt.set(gt.get(...Pt),...St)}return R.makeTensorInfo(vt.shape,vt.dtype,vt.values)}},xi={kernelName:e.BK4,backendName:"cpu",kernelFunc:({inputs:ct,attrs:mt,backend:R})=>{const{image:X}=ct,{radians:$,fillValue:Q,center:yt}=mt,_t=R,vt=e.ZSL.getTypedArrayFromDType(X.dtype,e.ZSL.sizeFromShape(X.shape)),[gt,ht,St,Pt]=X.shape,[Lt,Vt]=e.C0T.getImageCenter(yt,ht,St),zt=Math.sin($),Zt=Math.cos($),ne=_t.data.get(X.dataId).values;for(let qt=0;qt<gt;qt++){const de=qt*St*ht*Pt;for(let me=0;me<ht;me++){const xe=me*(St*Pt);for(let we=0;we<St;we++){const Ue=we*Pt;for(let ke=0;ke<Pt;ke++){const Ge=[gt,me,we,ke],Ze=Ge[2],Me=Ge[1];let Be=(Ze-Lt)*Zt-(Me-Vt)*zt,Ne=(Ze-Lt)*zt+(Me-Vt)*Zt;Be=Math.round(Be+Lt),Ne=Math.round(Ne+Vt);let Re=Q;"number"!=typeof Q&&(Re=3===ke?255:Q[ke]),Be>=0&&Be<St&&Ne>=0&&Ne<ht&&(Re=ne[de+Ne*(St*Pt)+Be*Pt+ke]),vt[de+xe+Ue+ke]=Re}}}}return{dataId:_t.write(vt,X.shape,X.dtype),shape:X.shape,dtype:X.dtype}}},vi=(0,x.v)(e.hVg,ct=>{const mt=Math.floor(ct);return ct-mt<.5?Math.floor(ct):ct-mt>.5?Math.ceil(ct):mt%2==0?mt:mt+1}),Ti={kernelName:e.hVg,backendName:"cpu",kernelFunc:vi};var Ci=t(36499),$s=t(94014);const Ii={kernelName:e.pJc,backendName:"cpu",kernelFunc:function Di(ct){const{inputs:mt,backend:R,attrs:X}=ct,{indices:$,updates:Q}=mt,{shape:yt}=X,{sliceRank:_t,numUpdates:vt,sliceSize:gt,strides:ht,outputSize:St}=e.C0T.calculateShapes(Q,$,yt),Lt=R.bufferSync($),Vt=R.bufferSync(Q),Ft=(0,$s.b)(Lt,Vt,yt,St,gt,vt,_t,ht,0,!0);return R.makeTensorInfo(yt,Ft.dtype,Ft.values)}};function Pi(ct,mt){let R=0,X=ct.length,$=0;for(;R<X;)$=Math.floor((R+X)/2),ct[$]<mt?R=$+1:X=$;return X}function Oi(ct,mt){let R=0,X=ct.length,$=0;for(;R<X;)$=Math.floor((R+X)/2),ct[$]<=mt?R=$+1:X=$;return X}const Ai={kernelName:e.uWl,backendName:"cpu",kernelFunc:function Si(ct){const{inputs:mt,backend:R,attrs:X}=ct,{sortedSequence:$,values:Q}=mt,{side:yt}=X,gt=function Eo(ct,mt,R,X,$,Q){const yt=e.ZSL.getArrayFromDType("int32",R*$);for(let _t=0;_t<R;++_t){const vt=ct.slice(_t*X,(_t+1)*X),gt=_t*$;for(let ht=0;ht<$;++ht)yt[gt+ht]="left"===Q?Pi(vt,mt[ht+gt]):Oi(vt,mt[ht+gt])}return yt}(R.data.get($.dataId).values,R.data.get(Q.dataId).values,$.shape[0],$.shape[1],Q.shape[1],yt);return R.makeTensorInfo(Q.shape,"int32",gt)}},Mi={kernelName:e.l6P,backendName:"cpu",kernelFunc:function bi(ct){const{inputs:mt,backend:R}=ct,{condition:X,t:$,e:Q}=mt;(0,i.C)([X,$,Q],"select");const yt=X.shape.length,_t=R.data.get(X.dataId).values,vt=R.data.get($.dataId).values,gt=R.data.get(Q.dataId).values,ht=(0,e.TuY)($.dtype,Q.dtype),St=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape($.shape),ht);let Pt=0;const Lt=0===yt||yt>1||1===$.shape.length?1:e.ZSL.sizeFromShape($.shape.slice(1));for(let Vt=0;Vt<_t.length;Vt++)for(let Ft=0;Ft<Lt;Ft++)St[Pt++]=1===_t[Vt]?vt[Vt]:gt[Vt];return R.makeTensorInfo($.shape,ht,St)}},Ni=e.C0T.SELU_SCALEALPHA,Ri=e.C0T.SELU_SCALE,Li=(0,x.v)(e.u$b,ct=>ct>=0?Ri*ct:Ni*(Math.exp(ct)-1)),$i={kernelName:e.u$b,backendName:"cpu",kernelFunc:Li},Ol=(0,x.v)(e.YVe,ct=>ct<0?-1:ct>0?1:0),Ao={kernelName:e.YVe,backendName:"cpu",kernelFunc:Ol},Sl=(0,x.v)(e.hql,ct=>Math.sin(ct)),Hr={kernelName:e.hql,backendName:"cpu",kernelFunc:Sl},jr=(0,x.v)(e.J3C,ct=>Math.sinh(ct)),Al={kernelName:e.J3C,backendName:"cpu",kernelFunc:jr},Zr=Math.log(1.1920928955078125e-7)+2,Os=(0,x.v)(e.Fin,ct=>{const mt=ct>-Zr,R=ct<Zr,X=Math.exp(ct);let $;return $=R?X:mt?ct:Math.log(1+X),$}),wi={kernelName:e.Fin,backendName:"cpu",kernelFunc:Os},Bi={kernelName:e.A8B,backendName:"cpu",kernelFunc:function Rr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{blockShape:Q,paddings:yt}=X;(0,i.C)([$],"spaceToBatchND");const _t=e.ZSL.sizeFromShape(Q),vt=[[0,0]];vt.push(...yt);for(let me=1+Q.length;me<$.shape.length;++me)vt.push([0,0]);const gt=Wo.kernelFunc({inputs:{x:$},backend:R,attrs:{paddings:vt,constantValue:0}}),ht=e.C0T.getReshaped(gt.shape,Q,_t,!1),St=e.C0T.getPermuted(ht.length,Q.length,!1),Pt=e.C0T.getReshapedPermuted(gt.shape,Q,_t,!1),Ft=A({inputs:{x:gt},backend:R,attrs:{shape:ht}}),ne=(0,Tt.m)({inputs:{x:Ft},backend:R,attrs:{perm:St}}),de=A({inputs:{x:ne},backend:R,attrs:{shape:Pt}});return R.disposeIntermediateTensorInfo(gt),R.disposeIntermediateTensorInfo(Ft),R.disposeIntermediateTensorInfo(ne),de}};var jo=t(20273);const ki={kernelName:e.C8s,backendName:"cpu",kernelFunc:function Zo(ct){const{inputs:mt,backend:R}=ct,{indices:X,values:$,denseShape:Q,defaultValue:yt}=mt;if(1!==Q.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${Q.shape}`);if(2!==X.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${X.shape}`);if(1!==$.shape.length)throw new Error(`Values must be a vector, saw:\n        ${$.shape}`);if(0!==yt.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${yt.shape}`);const _t=R.data.get(X.dataId).values,vt=R.data.get($.dataId).values,gt=R.data.get(Q.dataId).values,ht=R.data.get(yt.dataId).values[0],[St,Pt,Lt,Vt,Ft]=(0,jo.y)(_t,X.shape,X.dtype,vt,$.dtype,gt,ht);return[R.makeTensorInfo(Pt,X.dtype,St),R.makeTensorInfo([Pt[0]],$.dtype,Lt),R.makeTensorInfo([Vt.length],"bool",new Uint8Array(Vt.map(zt=>Number(zt)))),R.makeTensorInfo([Ft.length],X.dtype,new Int32Array(Ft))]}};var Fi=t(35298);const Xo={kernelName:e.BoJ,backendName:"cpu",kernelFunc:function Yo(ct){const{inputs:mt,backend:R}=ct,{inputIndices:X,inputShape:$,newShape:Q}=mt;if(2!==X.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${X.shape}`);if(1!==$.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${$.shape}`);if(1!==Q.shape.length)throw new Error(`Target shape should be a vector but received shape ${Q.shape}`);const yt=Array.from(R.data.get($.dataId).values),_t=R.data.get(X.dataId).values,vt=Array.from(R.data.get(Q.dataId).values),[gt,ht,St]=(0,Fi.l)(_t,X.shape,X.dtype,yt,vt);return[R.makeTensorInfo(ht,X.dtype,gt),R.makeTensorInfo([St.length],Q.dtype,new Int32Array(St))]}};var Qo=t(19454);const qr={kernelName:e.L6G,backendName:"cpu",kernelFunc:function Wi(ct){const{inputs:mt,backend:R}=ct,{data:X,indices:$,segmentIds:Q}=mt;if(X.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==$.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${$.shape}`);if(1!==Q.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${Q.shape}`);if($.shape[0]!==Q.shape[0])throw new Error("segmentIds and indices should have same size.");const yt=R.data.get(X.dataId).values,_t=R.data.get($.dataId).values,vt=R.data.get(Q.dataId).values,[gt,ht]=(0,Qo.z)(yt,X.shape,X.dtype,_t,vt,!0);return R.makeTensorInfo(ht,X.dtype,gt)}},_s={kernelName:e.DvZ,backendName:"cpu",kernelFunc:function Fn(ct){const{inputs:mt,backend:R}=ct,{data:X,indices:$,segmentIds:Q}=mt;if(X.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==$.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${$.shape}`);if(1!==Q.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${Q.shape}`);if($.shape[0]!==Q.shape[0])throw new Error("segmentIds and indices should have same size.");const yt=R.data.get(X.dataId).values,_t=R.data.get($.dataId).values,vt=R.data.get(Q.dataId).values,[gt,ht]=(0,Qo.z)(yt,X.shape,X.dtype,_t,vt);return R.makeTensorInfo(ht,X.dtype,gt)}},Jo={kernelName:e.jgd,backendName:"cpu",kernelFunc:function oo(ct){const{inputs:mt,backend:R,attrs:X}=ct,{sparseIndices:$,sparseValues:Q,defaultValue:yt}=mt,{outputShape:_t}=X,{sliceRank:vt,numUpdates:gt,sliceSize:ht,strides:St,outputSize:Pt}=e.C0T.calculateShapes(Q,$,_t),Lt=!1,Vt=R.bufferSync($);let Ft;switch(Q.dtype){case"bool":{const zt=R.bufferSync(Q),Zt=!!R.data.get(yt.dataId).values[0];Ft=(0,$s.b)(Vt,zt,_t,Pt,ht,gt,vt,St,Zt,Lt);break}case"float32":{const zt=R.bufferSync(Q),Zt=R.data.get(yt.dataId).values[0];Ft=(0,$s.b)(Vt,zt,_t,Pt,ht,gt,vt,St,Zt,Lt);break}case"int32":{const zt=R.bufferSync(Q),Zt=R.data.get(yt.dataId).values[0];Ft=(0,$s.b)(Vt,zt,_t,Pt,ht,gt,vt,St,Zt,Lt);break}case"string":{const zt=R.bufferSync(Q),Zt=e.ZSL.decodeString(R.data.get(yt.dataId).values[0]);Ft=(0,$s.b)(Vt,zt,_t,Pt,ht,gt,vt,St,Zt,Lt);break}default:throw new Error(`Unsupported type ${Q.dtype}`)}return R.makeTensorInfo(_t,Ft.dtype,Ft.values)}},ta={kernelName:e.Blb,backendName:"cpu",kernelFunc:function qo(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{numOrSizeSplits:Q,axis:yt}=X,_t=e.ZSL.parseAxisParam(yt,$.shape)[0],vt=e.C0T.prepareSplitSize($,Q,_t),gt=new Array($.shape.length).fill(0),ht=$.shape.slice();return vt.map(St=>{const Pt=[...ht];Pt[_t]=St;const Lt=(0,kt.di)({inputs:{x:$},backend:R,attrs:{begin:gt,size:Pt}});return gt[_t]+=St,Lt})}};var ea=t(94985);const bo={kernelName:e.M6A,backendName:"cpu",kernelFunc:({inputs:ct,backend:mt})=>{const{x:R}=ct,X=mt;(0,i.C)(R,"square");const $=X.data.get(R.dataId).values,Q=new Float32Array($.length);for(let _t=0;_t<$.length;++_t){const vt=$[_t];Q[_t]=vt*vt}return{dataId:X.write(Q,R.shape,R.dtype),shape:R.shape,dtype:R.dtype}}},Ui=(0,d.Z)((ct,mt)=>{const R=ct-mt;return R*R}),Vi=(0,he.j)(e.Ddj,Ui),nn={kernelName:e.Ddj,backendName:"cpu",kernelFunc:Vi};var Ki=t(32596);const na=(0,x.v)(e.pnw,(ct,mt)=>{const R=mt;return isNaN(ct)?NaN:ct>0?1:R.alpha}),zi={kernelName:e.pnw,backendName:"cpu",kernelFunc:na};var Gi=t(2821);const Hi={kernelName:e.UcO,backendName:"cpu",kernelFunc:function Yr(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{begin:Q,end:yt,strides:_t,beginMask:vt,endMask:gt,ellipsisMask:ht,newAxisMask:St,shrinkAxisMask:Pt}=X;(0,i.C)($,"stridedSlice");const{finalShapeSparse:Lt,finalShape:Vt,isIdentity:Ft,sliceDim0:zt,isSimpleSlice:Zt,begin:ne,end:se,strides:qt}=e.Kro.sliceInfo($.shape,Q,yt,_t,vt,gt,ht,St,Pt);let de;if(Ft)de=A({inputs:{x:$},backend:R,attrs:{shape:Vt}});else if(zt||Zt){e.ZSL.assert($.shape.length>=1,()=>`Input must have rank at least 1, got: ${$.shape.length}`);const me=e.Kro.computeOutShape(ne,se,qt),xe=(0,kt.di)({inputs:{x:$},backend:R,attrs:{begin:ne,size:me}});de=A({inputs:{x:xe},backend:R,attrs:{shape:Vt}}),R.disposeIntermediateTensorInfo(xe)}else{const me=R.bufferSync($),xe=(0,Gi.e)(Lt,me,qt,ne);de=R.makeTensorInfo(Vt,xe.dtype,xe.values)}return de}};var ji=t(48953);const _o={kernelName:e.YAb,backendName:"cpu",kernelFunc:function Zi(ct){const{inputs:mt,backend:R,attrs:X}=ct,{separator:$,nGramWidths:Q,leftPad:yt,rightPad:_t,padWidth:vt,preserveShortSequences:gt}=X,{data:ht,dataSplits:St}=mt,Pt=R.data.get(ht.dataId).values,Lt=R.data.get(St.dataId).values,[Vt,Ft]=(0,ji.G)(Pt,Lt,$,Q,yt,_t,vt,gt);return[R.makeTensorInfo([Vt.length],"string",Vt),R.makeTensorInfo(St.shape,"int32",Ft)]}};var Yi=t(70065);const Xi={kernelName:e.iW0,backendName:"cpu",kernelFunc:function yo(ct){const{inputs:mt,backend:R,attrs:X}=ct,{skipEmpty:$}=X,{input:Q,delimiter:yt}=mt;if("string"!==Q.dtype)throw new Error("Input must be of datatype string");if(1!==Q.shape.length)throw new Error(`Input must be a vector, got shape: ${Q.shape}`);if(0!==yt.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${yt.shape}`);const _t=R.data.get(Q.dataId).values,vt=R.data.get(yt.dataId).values[0],[gt,ht,St]=(0,Yi.S)(_t,vt,$),Pt=ht.length;return[R.makeTensorInfo([Pt,2],"int32",gt),R.makeTensorInfo([Pt],"string",ht),R.makeTensorInfo([2],"int32",new Int32Array(St))]}};var Cs=t(72856);const sa={kernelName:e.$jE,backendName:"cpu",kernelFunc:function Qi(ct){const{inputs:mt,backend:R,attrs:X}=ct,{numBuckets:$}=X,{input:Q}=mt;if("string"!==Q.dtype)throw new Error("Input must be of datatype string");if($<=0)throw new Error("Number of buckets must be at least 1");const yt=R.data.get(Q.dataId).values,_t=(0,Cs.f)(yt,$);return R.makeTensorInfo(Q.shape,"int32",_t)}},xo=(0,x.v)(e.oFs,ct=>Math.tan(ct)),Ji={kernelName:e.oFs,backendName:"cpu",kernelFunc:xo},qi=(0,x.v)(e.iuW,ct=>Math.tanh(ct)),ra={kernelName:e.iuW,backendName:"cpu",kernelFunc:qi},el={kernelName:e.X4r,backendName:"cpu",kernelFunc:function tl(ct){const{inputs:mt,backend:R}=ct,{tensor:X,indices:$,updates:Q}=mt,{sliceRank:yt,numUpdates:_t,sliceSize:vt,strides:gt,outputSize:ht}=e.C0T.calculateShapes(Q,$,X.shape),Pt=R.bufferSync($),Lt=R.bufferSync(Q),Vt=R.bufferSync(X),Ft=(0,$s.b)(Pt,Lt,X.shape,ht,vt,_t,yt,gt,Vt,!1);return R.makeTensorInfo(X.shape,Ft.dtype,Ft.values)}};var nl=t(8440);const rl={kernelName:e.FAs,backendName:"cpu",kernelFunc:function sl(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{reps:Q}=X;(0,i.C)($,"tile");const yt=(0,nl.D)(R.bufferSync($),Q);return R.makeTensorInfo(yt.shape,yt.dtype,yt.values)}};var ol=t(29956);const il={kernelName:e.TBb,backendName:"cpu",kernelFunc:function al(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$}=mt,{k:Q,sorted:yt}=X;(0,i.C)($,"topk");const _t=R.data.get($.dataId).values,[vt,gt]=(0,ol.x)(_t,$.shape,$.dtype,Q,yt);return[R.makeTensorInfo(vt.shape,vt.dtype,vt.values),R.makeTensorInfo(gt.shape,gt.dtype,gt.values)]}},ll={kernelName:e.dLy,backendName:"cpu",kernelFunc:function oa(ct){const{inputs:mt,attrs:R,backend:X}=ct,{image:$,transforms:Q}=mt,{interpolation:yt,fillMode:_t,fillValue:vt,outputShape:gt}=R,[ht,St,Pt,Lt]=$.shape,[Vt,Ft]=null!=gt?gt:[St,Pt],zt=[ht,Vt,Ft,Lt],Zt=e.ZSL.computeStrides($.shape),ne=Zt[0],se=Zt[1],qt=Zt[2],de=e.ZSL.computeStrides(zt),me=de[0],xe=de[1],we=de[2],Ue=e.ZSL.getTypedArrayFromDType($.dtype,e.ZSL.sizeFromShape(zt));Ue.fill(vt);const ke=X.data.get($.dataId).values,Ge=X.data.get(Q.dataId).values;for(let Me=0;Me<ht;++Me){const Be=1===Q.shape[0]?Ge:Ge.subarray(8*Me,8*Me+8);for(let Ne=0;Ne<Vt;++Ne)for(let Re=0;Re<Ft;++Re)for(let Ve=0;Ve<Lt;++Ve){let Le;const Fe=Be[6]*Re+Be[7]*Ne+1;if(0===Fe)continue;const je=(Be[3]*Re+Be[4]*Ne+Be[5])/Fe,rn=aa((Be[0]*Re+Be[1]*Ne+Be[2])/Fe,Pt,_t),Xe=aa(je,St,_t);switch(yt){case"nearest":Le=pl(ke,St,Pt,ne,se,qt,Me,Xe,rn,Ve,vt);break;case"bilinear":Le=hl(ke,St,Pt,ne,se,qt,Me,Xe,rn,Ve,vt);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${yt}`)}Ue[Me*me+Ne*xe+Re*we+Ve]=Le}return X.makeTensorInfo(zt,$.dtype,Ue)}return{dataId:X.write(Ue,zt,$.dtype),shape:$.shape,dtype:$.dtype}}};function aa(ct,mt,R){switch(R){case"reflect":return function ul(ct,mt){let R=ct;if(R<0)if(mt<=1)R=0;else{const X=2*mt;R<X&&(R=X*Math.trunc(-R/X)+R),R=R<-mt?R+X:-R-1}else if(R>mt-1)if(mt<=1)R=0;else{const X=2*mt;R-=X*Math.trunc(R/X),R>=mt&&(R=X-R-1)}return e.ZSL.clamp(0,R,mt-1)}(ct,mt);case"wrap":return function cl(ct,mt){let R=ct;return R<0?mt<=1?R=0:R+=mt*(Math.trunc(-R/(mt-1))+1):R>mt-1&&(mt<=1?R=0:R-=mt*Math.trunc(R/(mt-1))),e.ZSL.clamp(0,R,mt-1)}(ct,mt);case"nearest":return function dl(ct,mt){return e.ZSL.clamp(0,ct,mt-1)}(ct,mt);default:return function vo(ct){return ct}(ct)}}function ao(ct,mt,R,X,$,Q,yt,_t,vt,gt,ht){return 0<=_t&&_t<mt&&0<=vt&&vt<R?ct[yt*X+_t*$+vt*Q+gt]:ht}function pl(ct,mt,R,X,$,Q,yt,_t,vt,gt,ht){return ao(ct,mt,R,X,$,Q,yt,Math.round(_t),Math.round(vt),gt,ht)}function hl(ct,mt,R,X,$,Q,yt,_t,vt,gt,ht){const St=Math.floor(_t),Pt=Math.floor(vt),Lt=St+1,Vt=Pt+1;return(Lt-_t)*((Vt-vt)*ao(ct,mt,R,X,$,Q,yt,St,Pt,gt,ht)+(vt-Pt)*ao(ct,mt,R,X,$,Q,yt,St,Vt,gt,ht))+(_t-St)*((Vt-vt)*ao(ct,mt,R,X,$,Q,yt,Lt,Pt,gt,ht)+(vt-Pt)*ao(ct,mt,R,X,$,Q,yt,Lt,Vt,gt,ht))}var fl=t(73033);const _l=[Z,j.lO,at,ot,B.UK,tt,At,Gt,Jt,ie,Se,Dt,te,vn,dn,Jn,As,us,Rt,U,lt,xt,pt,Xt.LY,ve,be.Ml,tn.uf,Ee,_e.v,Te,bn,kn,Es,fs,js,ys,Fs,Dr,Pr,Ws,Or,Js,qs,Ps,pr,fr,Sr,Ms,mr,gr,O,I,ee,h,$e,He.RY,xs,ds.AC,Ns,Vs.Yp,Ur,Vr,Kr,or.Hc,ge,cn,En,vs,Rs,zr.xp,eo.VM,f.F,Qr,un,co,Qt,Ht,u,le.YW,fe.Q,ye,gn.Fx,Hn,Ys,Ks,fo,Gr,mo,Ea,_a.l9,xa,va,Ca,Ia,Oa,Aa,Ma,Na.Nu,La,Ba,Ua,K.tJ,Va.hd,Ga,Za,Bo,Qa.AL,qa,ei,ni,Wo,So,D,ai.S3,ii,ui,Ko,zo,Sn.r,sr,ar,b,G,k,fi,Pl,gi,Nr,yi,xi,Ti,Ci.Lt,Ii,Ai,Mi,$i,H.X3,Ao,Hr,Al,kt.lv,Fa,wi,Bi,ki,Xo,qr,_s,Jo,ta,ea.Fu,bo,nn,Ki.C,zi,Hi,_o,Xi,sa,rr.Zl,Mt,Ji,ra,el,rl,il,ll,Tt.W,{kernelName:e.EwU,backendName:"cpu",kernelFunc:function ml(ct){const{inputs:mt,attrs:R,backend:X}=ct,{axis:$}=R,{x:Q}=mt;(0,i.C)(Q,"unique");const yt=X.data.get(Q.dataId).values,{outputValues:_t,outputShape:vt,indices:gt}=(0,fl.w)(yt,$,Q.shape,Q.dtype);return[X.makeTensorInfo(vt,Q.dtype,_t),X.makeTensorInfo([gt.length],"int32",gt)]}},{kernelName:e.dXR,backendName:"cpu",kernelFunc:function ia(ct){const{inputs:mt,backend:R,attrs:X}=ct,{value:$}=mt;let{axis:Q}=X;Q<0&&(Q+=$.shape.length);const yt=$.shape.length,_t=$.shape[Q],vt=new Array(yt-1);let gt=0;for(let Lt=0;Lt<yt;Lt++)Lt!==Q&&(vt[gt++]=$.shape[Lt]);const ht=new Array(yt).fill(0),St=$.shape.slice();St[Q]=1;const Pt=new Array(_t);for(let Lt=0;Lt<Pt.length;Lt++){ht[Q]=Lt;const Vt=(0,kt.di)({inputs:{x:$},backend:R,attrs:{begin:ht,size:St}});Pt[Lt]=A({inputs:{x:Vt},backend:R,attrs:{shape:vt}}),R.disposeIntermediateTensorInfo(Vt)}return Pt}},{kernelName:e.pPe,backendName:"cpu",kernelFunc:function ua(ct){const{inputs:mt,backend:R,attrs:X}=ct,{x:$,segmentIds:Q}=mt,{numSegments:yt}=X;(0,i.C)($,"unsortedSegmentSum");const gt=[],ht=[],St=$.shape.length-Q.shape.length;let Pt=Q;for(let Vt=0;Vt<St;++Vt){const Ft=Bn({inputs:{input:Pt},backend:R,attrs:{dim:Vt+1}});Pt=Ft,ht.push(Ft)}for(let Vt=0;Vt<yt;++Vt){const Ft=e.ZSL.createScalarValue(Vt,"int32"),zt=R.makeTensorInfo([],"int32",Ft),Zt=(0,He.LC)({inputs:{a:zt,b:Pt},backend:R}),ne=(0,be.wg)({inputs:{x:Zt},backend:R,attrs:{dtype:"float32"}}),se=(0,K.lw)({inputs:{a:ne,b:$},backend:R}),qt=st({inputs:{x:se},backend:R,attrs:{axis:0,keepDims:!1}});gt.push(qt),ht.push(zt),ht.push(Zt),ht.push(ne),ht.push(se),ht.push(qt)}const Lt=Fo({inputs:gt,backend:R,attrs:{axis:0}});return ht.forEach(Vt=>R.disposeIntermediateTensorInfo(Vt)),Lt}},ti];for(const ct of _l)(0,e.tAK)(ct)},13375:(ft,N,t)=>{"use strict";t.d(N,{dH:()=>i,lO:()=>m});var e=t(41653),s=t(27543);function i(c){const x=new Float32Array(c.length);for(let g=0;g<c.length;++g)x[g]=Math.abs(c[g]);return x}const m={kernelName:e.ljI,backendName:"cpu",kernelFunc:c=>{const{x}=c.inputs,g=c.backend;(0,s.C)(x,"abs");let h=new Float32Array(e.ZSL.sizeFromShape(x.shape));return h=i(g.data.get(x.dataId).values),g.makeOutput(h,x.shape,x.dtype)}}},6936:(ft,N,t)=>{"use strict";t.d(N,{UK:()=>x,WQ:()=>c,mx:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((g,h)=>g+h),m=(0,i.B)((g,h,f,p)=>({real:g+f,imag:h+p})),c=(0,i.j)(e.OMN,E,m),x={kernelName:e.OMN,backendName:"cpu",kernelFunc:c}},40364:(ft,N,t)=>{"use strict";t.d(N,{N:()=>i,X:()=>s});var e=t(41653);function s(E,m,c,x,g){const h=e.ZSL.sizeFromShape(x),f=e.ZSL.makeZerosTypedArray(g,c);for(let p=0;p<E.length;p++){const u=E[p];if(u<0)throw new Error("Input x must be non-negative!");u>=g||(f[u]+=h>0?m[p]:1)}return f}function i(E,m,c,x=!1){const g=E.shape[0],h=E.shape[1],f=(0,e.ra8)([g,c],m.dtype);for(let p=0;p<g;p++)for(let u=0;u<h;u++){const d=E.get(p,u);if(d<0)throw new Error("Input x must be non-negative!");d>=c||f.set(x?1:m.size>0?f.get(p,d)+m.get(p,u):f.get(p,d)+1,p,d)}return f}},74291:(ft,N,t)=>{"use strict";t.d(N,{LY:()=>c,f6:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x&g),m=(0,i.j)(e.HNs,E),c={kernelName:e.HNs,backendName:"cpu",kernelFunc:m}},75148:(ft,N,t)=>{"use strict";t.d(N,{Ml:()=>h,ct:()=>x,wg:()=>g});var e=t(41653),s=t(99800),i=t(10708),E=t(46499),m=t(5029),c=t(80363);function x(f,p,u,d){if("int32"===d)return[p,"int32",Int32Array.from(f)];if("bool"===d){const C=e.ZSL.toTypedArray([0],u),[T,D]=(0,s.Z)((S,b)=>S!==b?1:0)(p,[],f,C,"bool");return[D,"bool",T]}throw new Error(`Error in Cast: failed to cast ${u} to ${d}`)}function g(f){const{inputs:p,backend:u,attrs:d}=f,{x:C}=p,{dtype:T}=d;if("complex64"===T){if("complex64"===C.dtype)return(0,m.D)({inputs:{x:C},backend:u});const G=(0,i.U)(u,C.shape,C.dtype),H=g({inputs:{x:C},backend:u,attrs:{dtype:"float32"}}),F=(0,E.f)({inputs:{real:H,imag:G},backend:u});return u.disposeIntermediateTensorInfo(G),u.disposeIntermediateTensorInfo(H),F}if("complex64"===C.dtype){const G=(0,c.x)({inputs:{input:C},backend:u}),H=g({inputs:{x:G},backend:u,attrs:{dtype:T}});return u.disposeIntermediateTensorInfo(G),H}if(!e.ZSL.hasEncodingLoss(C.dtype,T)){const G=(0,m.D)({inputs:{x:C},backend:u});return{dataId:G.dataId,shape:G.shape,dtype:T}}const D=u.data.get(C.dataId).values,[S,b,w]=x(D,C.shape,C.dtype,T);return u.makeTensorInfo(S,b,w)}const h={kernelName:e.KXH,backendName:"cpu",kernelFunc:g}},18946:(ft,N,t)=>{"use strict";t.d(N,{YG:()=>E,uf:()=>c});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.ceil(x)),m=(0,i.F)(e.QDP,E),c={kernelName:e.QDP,backendName:"cpu",kernelFunc:m}},46499:(ft,N,t)=>{"use strict";function s(E){const{inputs:m,backend:c}=E,{real:x,imag:g}=m,h=c.data.get(x.dataId).values,f=c.data.get(g.dataId).values,p=c.makeTensorInfo(x.shape,"complex64");return c.data.get(p.dataId).complexTensorInfos={real:c.makeTensorInfo(x.shape,"float32",h),imag:c.makeTensorInfo(g.shape,"float32",f)},p}t.d(N,{f:()=>s,v:()=>i});const i={kernelName:t(41653).pr3,backendName:"cpu",kernelFunc:s}},91332:(ft,N,t)=>{"use strict";t.d(N,{h:()=>s});var e=t(41653);function s(i,E,m,c){const x=e.ZSL.getArrayFromDType(m,e.ZSL.sizeFromShape(E));if(c&&"string"!==m){let g=0;i.forEach(h=>{const f=e.ZSL.sizeFromShape(h.shape);x.set(h.vals,g),g+=f})}else{let g=0;i.forEach(h=>{const f="string"===m?e.C0T.fromUint8ToStringArray(h.vals):h.vals;let p=0;for(let u=0;u<h.shape[0];++u){const d=u*E[1]+g;for(let C=0;C<h.shape[1];++C)x[d+C]=f[p++]}g+=h.shape[1]})}return x}},71007:(ft,N,t)=>{"use strict";t.d(N,{LC:()=>m,RY:()=>c,z3:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x===g?1:0),m=(0,i.j)(e.BRl,E,null,"bool"),c={kernelName:e.BRl,backendName:"cpu",kernelFunc:m}},18692:(ft,N,t)=>{"use strict";t.d(N,{AC:()=>c,oN:()=>m,sG:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.exp(x)),m=(0,i.F)(e.ox3,E,"float32"),c={kernelName:e.ox3,backendName:"cpu",kernelFunc:m}},3878:(ft,N,t)=>{"use strict";t.d(N,{Yp:()=>c,uM:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.expm1(x)),m=(0,i.F)(e.ybj,E),c={kernelName:e.ybj,backendName:"cpu",kernelFunc:m}},2017:(ft,N,t)=>{"use strict";t.d(N,{Hc:()=>c,vS:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.floor(x)),m=(0,i.F)(e.ZgB,E),c={kernelName:e.ZgB,backendName:"cpu",kernelFunc:m}},86315:(ft,N,t)=>{"use strict";t.d(N,{q:()=>s});var e=t(41653);function s(i,E,m,c,x,g,h,f,p){const u=(0,e.ra8)([c,g],m);for(let d=0;d<c;d++){const C=[];let T=0;for(let D=0;D<x;D++){const S=i[d*x+D];T+=S*h[D],C.push(S)}if(T<0||T>=p/g)throw new Error(`Invalid indices: ${C} does not index into ${f}`);for(let D=0;D<g;D++)u.values[d*g+D]=E.get(...E.indexToLoc(T*g+D))}return u}},60509:(ft,N,t)=>{"use strict";t.d(N,{G:()=>s});var e=t(41653);function s(i,E,m){const c=(0,e.ra8)(m,i.dtype);for(let x=0;x<c.size;++x){const h=c.indexToLoc(x).slice(),u=E.locToIndex([h[0],h[2]]);h[2]=E.values[u];const d=i.locToIndex(h);0<=d&&d<i.values.length&&(c.values[x]=i.values[d])}return c}},89505:(ft,N,t)=>{"use strict";t.d(N,{rq:()=>E,xp:()=>c});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x>g?1:0),m=(0,i.j)(e.XhZ,E,null,"bool"),c={kernelName:e.XhZ,backendName:"cpu",kernelFunc:m}},1885:(ft,N,t)=>{"use strict";t.d(N,{VM:()=>c,lg:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x>=g?1:0),m=(0,i.j)(e.lLS,E,null,"bool"),c={kernelName:e.lLS,backendName:"cpu",kernelFunc:m}},5029:(ft,N,t)=>{"use strict";function s(E){const{inputs:m,backend:c}=E,{x}=m;return c.incRef(x.dataId),{dataId:x.dataId,shape:x.shape,dtype:x.dtype}}t.d(N,{D:()=>s,F:()=>i});const i={kernelName:t(41653).lzr,backendName:"cpu",kernelFunc:s}},64730:(ft,N,t)=>{"use strict";t.d(N,{WR:()=>E,YW:()=>c});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x<g?1:0),m=(0,i.j)(e.mIA,E,null,"bool"),c={kernelName:e.mIA,backendName:"cpu",kernelFunc:m}},11040:(ft,N,t)=>{"use strict";t.d(N,{Q:()=>c,cu:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x<=g?1:0),m=(0,i.j)(e.CwD,E,null,"bool"),c={kernelName:e.CwD,backendName:"cpu",kernelFunc:m}},43905:(ft,N,t)=>{"use strict";t.d(N,{G:()=>s});var e=t(41653);function s(i,E,m){const c=(E-i)/(m-1),x=e.ZSL.makeZerosTypedArray(m,"float32");x[0]=i;for(let g=1;g<x.length;g++)x[g]=x[g-1]+c;return x}},94621:(ft,N,t)=>{"use strict";t.d(N,{Fx:()=>c,px:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.log(x)),m=(0,i.F)(e.tG8,E),c={kernelName:e.tG8,backendName:"cpu",kernelFunc:m}},33438:(ft,N,t)=>{"use strict";t.d(N,{j:()=>s});var e=t(41653);function s(i,E,m,c){const x=e.ZSL.getTypedArrayFromDType(c,e.ZSL.sizeFromShape(m));for(let g=0;g<x.length;++g){const h=g*E;let f=i[h];for(let p=0;p<E;++p){const u=i[h+p];(Number.isNaN(u)||u>f)&&(f=u)}x[g]=f}return x}},40553:(ft,N,t)=>{"use strict";t.d(N,{He:()=>E,l9:()=>c});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>Math.max(x,g)),m=(0,i.j)(e.LDN,E),c={kernelName:e.LDN,backendName:"cpu",kernelFunc:m}},32747:(ft,N,t)=>{"use strict";t.d(N,{Nu:()=>c,hE:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>Math.min(x,g)),m=(0,i.j)(e.LG0,E),c={kernelName:e.LG0,backendName:"cpu",kernelFunc:m}},92287:(ft,N,t)=>{"use strict";t.d(N,{BF:()=>E,lw:()=>c,tJ:()=>x});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((g,h)=>g*h),m=(0,i.B)((g,h,f,p)=>({real:g*f-h*p,imag:g*p+h*f})),c=(0,i.j)(e.xu7,E,m),x={kernelName:e.xu7,backendName:"cpu",kernelFunc:c}},86705:(ft,N,t)=>{"use strict";t.d(N,{Dk:()=>E,hd:()=>c});var e=t(41653),s=t(27543),i=t(92287);function E(x,g,h){const f=e.ZSL.createScalarValue(-1,h);return(0,i.BF)([],g,f,x,h)}const c={kernelName:e.l0G,backendName:"cpu",kernelFunc:function m(x){const{inputs:g,backend:h}=x,{x:f}=g;(0,s.C)(f,"neg");const p=h.data.get(f.dataId).values,[u,d]=E(p,f.shape,f.dtype);return h.makeTensorInfo(d,f.dtype,u)}}},13432:(ft,N,t)=>{"use strict";t.d(N,{AL:()=>c,cl:()=>E});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((x,g)=>x!==g?1:0),m=(0,i.j)(e.ylV,E,null,"bool"),c={kernelName:e.ylV,backendName:"cpu",kernelFunc:m}},88054:(ft,N,t)=>{"use strict";t.d(N,{S3:()=>c,_B:()=>E});var e=t(41653),s=t(27543),i=t(87599);function E(x,g,h,f){const[p,u]=e.C0T.computeOutAndReduceShapes(x,f),d=(0,e.TuY)(g,"int32"),C=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(p),d),T=e.ZSL.sizeFromShape(u);for(let D=0;D<C.length;++D){const S=D*T;let b=1;for(let w=0;w<T;++w)b*=h[S+w];C[D]=b}return{outVals:C,outShape:p,outDtype:d}}const c={kernelName:e.kdj,backendName:"cpu",kernelFunc:function m(x){const{inputs:g,backend:h,attrs:f}=x,{x:p}=g,{axis:u,keepDims:d}=f;(0,s.C)(p,"prod");const C=p.shape.length,T=e.ZSL.parseAxisParam(u,p.shape),D=e.C0T.getAxesPermutation(T,C);let S=T,b=p;const w=[];null!=D&&(b=(0,i.m)({inputs:{x:p},backend:h,attrs:{perm:D}}),w.push(b),S=e.C0T.getInnerMostAxes(S.length,C));const G=h.data.get(b.dataId).values,{outVals:H,outShape:F,outDtype:B}=E(b.shape,b.dtype,G,S);let A=F;return d&&(A=e.C0T.expandShapeToKeepDim(F,T)),w.forEach(k=>h.disposeIntermediateTensorInfo(k)),h.makeTensorInfo(A,B,H)}}},6567:(ft,N,t)=>{"use strict";t.d(N,{u:()=>h});var e=t(41653);function c(f,p){const u=f.slice(0,p);for(;u.length<p;)u.push(1);for(let d=p;d<f.length;d++)u[p-1]*=f[d];return u}function h(f,p,u,d,C,T,D,S){if(0===f.length)throw new Error("paramsNestedSplits must be non empty");if(0===p[0].length)throw new Error("Split tensors must not be scalars");if(function s(f,p,u){f.forEach((d,C)=>{if(d<0||d>=u){const T=e.ZSL.indexToLoc(C,p.length,e.ZSL.computeStrides(p)).join(",");throw new Error(`indices[${T}] = ${d} is not in [0, ${u})`)}})}(T,D,p[0][0]-1),0===d.length)throw new Error("params.rank must be nonzero");const w=d[0],{outSplits:G,valueSlices:H,numValues:F}=function E(f,p,u,d){const C=[];let T=0;const S=new Array(p.length-1+u.length).fill(null).map(()=>[0]);!function i(f,p){for(let u=0;u<f.length;++u){const d=f[u],C=u===f.length-1?p:f[u+1].length;if(0===d.length)throw new Error("Ragged splits may not be empty");if(d[0]<0)throw new Error("Ragged splits must be non-negative");if(d[d.length-1]>C)throw new Error("Ragged splits must not point past values");for(let T=1;T<d.length;++T)if(d[T-1]>d[T])throw new Error("Ragged splits must be sorted in ascending order")}}(u,d);let b=1;for(let w=0;w<p.length-1;++w){b*=p[w];const G=p[w+1];for(let H=1;H<b+1;++H)S[w].push(H*G)}for(let w=0;w<f.length;++w){let G=f[w],H=f[w]+1;for(let F=0;F<u.length;++F){const B=u[F],A=F+p.length-1;if(A>=0){const k=S[A],_=k[k.length-1]-B[G];for(let U=G;U<H;++U)S[A].push(B[U+1]+_)}G=B[G],H=B[H]}H!==G&&(C.push([G,H]),T+=H-G)}return{outSplits:S,valueSlices:C,numValues:T}}(T,D,f,w),B=function m(f){const p=[];for(let u=0;u<f.length;++u){const C=e.ZSL.getArrayFromDType("int32",f[u].length);p.push(C),f[u].forEach((T,D)=>C[D]=T)}return p}(G),A=function g(f,p,u,d,C){const T=p.slice();T[0]=C;const D=e.ZSL.getArrayFromDType(u,e.ZSL.sizeFromShape(T)),S=f.length;return function x(f,p,u,d,C,T){const D=c(p,2)[1],S=c(T,2)[1];let b=0;for(const w of u)for(let G=w[0];G<w[1];++G){for(let H=0;H<d;++H)C[b*S+H]=f[G*D+H];++b}}(f,p,d,0===S?0:S/p[0],D,T),[D,T]}(u,d,C,H,F);return[B,A[0],A[1]]}},8161:(ft,N,t)=>{"use strict";t.d(N,{_:()=>i});var e=t(41653);const s=2147483647;function i(E,m,c,x,g,h,f){if(m.length>1)throw new Error("starts must be a scalar or vector");if(g.length>1)throw new Error("limits must be a scalar or vector");if(f.length>1)throw new Error("deltas must be a scalar or vector");const p=0===m.length,u=0===g.length,d=0===f.length,C=[];p||C.push(m[0]),u||C.push(g[0]),d||C.push(f[0]);for(let G=1;G<C.length;++G)if(C[G]!==C[G-1])throw new Error("starts, limits, and deltas must have the same shape");const T=0===C.length?1:C[0],D=e.ZSL.getArrayFromDType("int32",T+1);D[0]=0;for(let G=0;G<T;++G){const H=p?E[0]:E[G],F=u?x[0]:x[G],B=d?h[0]:h[G];if(0===B)throw new Error("Requires delta != 0");let A;if(B>0&&F<H||B<0&&F>H)A=0;else if(A=Math.ceil(Math.abs((F-H)/B)),A>s)throw new Error(`Requires ((limit - start) / delta) <= ${s}`);D[G+1]=D[G]+A}const b=e.ZSL.getArrayFromDType(c,D[T]);let w=0;for(let G=0;G<T;++G){const H=D[G+1]-D[G];let F=p?E[0]:E[G];const B=d?h[0]:h[G];for(let A=0;A<H;++A)b[w++]=F,F+=B}return[D,b]}},673:(ft,N,t)=>{"use strict";t.d(N,{K:()=>c});var e=t(41653),s=e.C0T.RowPartitionType;class i{constructor(g,h,f,p,u,d,C,T,D,S){this.shape=g,this.shapeShape=h,this.values=f,this.valuesShape=p,this.valuesDType=u,this.defaultValue=d,this.defaultValueShape=C,this.rowPartitionValues=T,this.rowPartitionValuesShapes=D,this.rowPartitionTypes=e.C0T.getRowPartitionTypesHelper(S),this.raggedRank=e.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(g){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[g+1]:this.rowPartitionTypes[g]}getRowPartitionTensor(g){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[g+1]:this.rowPartitionValues[g]}getMaxWidth(g){const h=this.getRowPartitionTensor(g-1);switch(this.getRowPartitionTypeByDimension(g-1)){case s.VALUE_ROWIDS:return i.getMaxWidthValueRowID(h);case s.ROW_SPLITS:return i.getMaxWidthRowSplit(h);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(g-1)]}`)}}static getMaxWidthRowSplit(g){const h=g.length;if(0===h||1===h)return 0;let f=0;for(let p=0;p<h-1;++p){const u=g[p+1]-g[p];u>f&&(f=u)}return f}static getMaxWidthValueRowID(g){const h=g.length;if(0===h)return 0;let f=0,p=g[0],u=0;for(let d=1;d<h;++d){const C=g[d];C!==p&&(p=C,u=Math.max(d-f,u),f=d)}return Math.max(h-f,u)}tensorShapeFromTensor(g,h,f=!0){if(0===h.length){if(-1===g[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return m(g,f)}calculateOutputSize(g){const h=this.valuesShape;e.C0T.validateDefaultValueShape(this.defaultValueShape,h);const p=this.tensorShapeFromTensor(this.shape,this.shapeShape),d=e.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,p,h);d[0]<0&&(d[0]=g);for(let C=1;C<=this.raggedRank;++C)d[C]<0&&(d[C]=this.getMaxWidth(C));return d}calculateFirstParentOutputIndex(g,h,f){const p=Math.min(g,f),u=[];let d=0;for(let C=0;C<p;++C,d+=h)u.push(d);for(let C=p;C<g;++C)u.push(-1);return e.ZSL.assert(u.length===g,()=>"Final length of result must be equal to firstDimension."),u}calculateOutputIndexRowSplit(g,h,f,p){const u=g.length,d=[];for(let C=0;C<u-1;++C){const T=g[C+1]-g[C];let D=Math.min(p,T),S=h[C];-1===S&&(D=0);for(let b=0;b<D;++b)d.push(S),S+=f;for(let b=0;b<T-D;++b)d.push(-1)}if(u>0&&d.length!==g[u-1])throw new Error("Invalid row split size.");return d}calculateOutputIndexValueRowID(g,h,f,p){const u=g.length,d=[];if(0===u)return[];let C=0,T=g[0];if(T>=h.length)throw new Error(`Got currentValueRowId=${T}, which is not less than ${h.length}`);let D=h[T];d.push(D);for(let S=1;S<u;++S){const b=g[S];if(b===T)D>=0&&(++C,C<p?D+=f:D=-1);else{if(C=0,T=b,b>=h.length)throw new Error(`Got nextValueRowId=${b} which is not less than ${h.length}`);D=h[b]}d.push(D)}if(d.length!==g.length)throw new Error("Invalid row ids.");return d}calculateOutputIndex(g,h,f,p){const u=this.getRowPartitionTensor(g),d=this.getRowPartitionTypeByDimension(g);switch(d){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(u,h,f,p);case s.ROW_SPLITS:if(u.length-1>h.length)throw new Error(`Row partition size is greater than output size: ${u.length-1} > ${h.length}`);return this.calculateOutputIndexRowSplit(u,h,f,p);default:throw new Error(`Unsupported partition type: ${s[d]}`)}}getFirstDimensionSize(){const g=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const h=this.rowPartitionTypes[0];switch(h){case s.FIRST_DIM_SIZE:return g[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[h]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const h=this.getFirstDimensionSize(),f=this.calculateOutputSize(h),p=new Array(this.raggedRank+1);p[p.length-1]=1;for(let T=p.length-2;T>=0;--T)p[T]=p[T+1]*f[T+1];const u=m(f,!1),d=e.ZSL.getArrayFromDType(this.valuesDType,e.ZSL.sizeFromShape(u));if(p[0]*f[0]>0){let T=this.calculateFirstParentOutputIndex(h,p[0],f[0]);for(let D=1;D<=this.raggedRank;++D)T=this.calculateOutputIndex(D-1,T,p[D],f[D]);this.setOutput(this.raggedRank,T,d,u)}return[u,d]}setOutput(g,h,f,p){if(0===f.length)return;const u=this.values,d=f;let C=p.slice();C=C.slice(g+1);const T=e.ZSL.sizeFromShape(C),D=h.length;let S=this.defaultValue;if(S.length!==T&&1!==S.length){const H=this.defaultValueShape;(0,e.DZQ)(()=>{const F=(0,e.tQQ)(S,H);S=(0,e.hOW)(F,C).dataSync()})}let b=0,w=0,G=0;for(let H=0;H<=D;++H){let F=H<D?h[H]:-1;if(F!==G){if(w<G){const B=u.subarray(b*T);E(d.subarray(w*T),B,(G-w)*T)}if(H>=D&&(F=Math.floor(f.length/T)),F>G)if(1===this.defaultValue.length)d.subarray(G*T,F*T).fill(this.defaultValue[0]),G=F;else for(;F>G;)E(d.slice(G*T),S,T),++G;F<0?(b=H+1,w=G):(b=H,w=G,G=w+1)}else++G}}}function E(x,g,h){for(let f=0;f<h;f++)x[f]=g[f]}function m(x,g){const h=[];for(let f of x){if(f<0){if(!g)throw new Error(`Dimension ${f} must be >= 0`);if(f<-1)throw new Error(`Dimension ${f} must be >= -1`);f=-1}h.push(f)}return h}function c(x,g,h,f,p,u,d,C,T,D){return new i(x,g,h,f,p,u,d,C,T,D).compute()}},6251:(ft,N,t)=>{"use strict";t.d(N,{q:()=>s});var e=t(41653);function s(i,E,m,c){if(i===E||i<E&&m<0||E<i&&m>1)return e.ZSL.makeZerosTypedArray(0,c);const f=Math.abs(Math.ceil((E-i)/m)),p=e.ZSL.makeZerosTypedArray(f,c);E<i&&1===m&&(m=-1),p[0]=i;for(let u=1;u<p.length;u++)p[u]=p[u-1]+m;return p}},80363:(ft,N,t)=>{"use strict";function s(E){const{inputs:m,backend:c}=E,{input:x}=m,g=c.data.get(x.dataId).complexTensorInfos.real,h=c.data.get(g.dataId).values;return c.makeTensorInfo(g.shape,g.dtype,h)}t.d(N,{r:()=>i,x:()=>s});const i={kernelName:t(41653).LRy,backendName:"cpu",kernelFunc:s}},36499:(ft,N,t)=>{"use strict";t.d(N,{Lt:()=>c,Zy:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>1/Math.sqrt(x)),m=(0,i.F)(e.TOR,E),c={kernelName:e.TOR,backendName:"cpu",kernelFunc:m}},94014:(ft,N,t)=>{"use strict";t.d(N,{b:()=>s});var e=t(41653);function s(i,E,m,c,x,g,h,f,p,u){const d=[c/x,x],C=i.values,T=E.values;if(0===c)return(0,e.ra8)(m,E.dtype);const D=p instanceof e.ylz?p:(0,e.ra8)(d,E.dtype);"string"==typeof p||"number"==typeof p?D.values.fill(p):"boolean"==typeof p&&D.values.fill(+p);for(let S=0;S<g;S++){const b=[];let w=0;for(let G=0;G<h;G++){const H=C[S*h+G];b.push(H),w+=H*f[G]}if(w<0||w>=c/x)throw new Error(`Invalid indices: ${b} does not index into ${m}`);for(let G=0;G<x;G++)u?D.values[w*x+G]+=T[S*x+G]:D.values[w*x+G]=0===E.rank?T[0]:T[S*x+G]}return D}},94303:(ft,N,t)=>{"use strict";t.d(N,{X3:()=>c,ry:()=>m,zv:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>1/(1+Math.exp(-x))),m=(0,i.v)(e.vI1,x=>1/(1+Math.exp(-x))),c={kernelName:e.vI1,backendName:"cpu",kernelFunc:m}},63685:(ft,N,t)=>{"use strict";t.d(N,{HS:()=>i,di:()=>E,lv:()=>m});var e=t(41653),s=t(27543);function i(c,x,g,h,f){const p=e.Kro.isSliceContinous(h,x,g),u=e.ZSL.sizeFromShape(g),d=e.ZSL.computeStrides(h);if(p){const S=e.Kro.computeFlatOffset(x,d);return"string"===f?c.slice(S,S+u):c.subarray(S,S+u)}const C="string"===f?e.C0T.fromUint8ToStringArray(c):c,T=(0,e.ra8)(h,f,C),D=(0,e.ra8)(g,f);for(let S=0;S<D.size;++S){const b=D.indexToLoc(S),w=b.map((G,H)=>G+x[H]);D.set(T.get(...w),...b)}return"string"===f?e.C0T.fromStringArrayToUint8(D.values):D.values}function E(c){const{inputs:x,backend:g,attrs:h}=c,{x:f}=x,{begin:p,size:u}=h;(0,s.C)(f,"slice");const[d,C]=e.Kro.parseSliceParams(f,p,u);e.Kro.assertParamsValid(f,d,C);const D=i(g.data.get(f.dataId).values,d,C,f.shape,f.dtype);return g.makeTensorInfo(C,f.dtype,D)}const m={kernelName:e.JiE,backendName:"cpu",kernelFunc:E}},20273:(ft,N,t)=>{"use strict";t.d(N,{y:()=>s});var e=t(41653);function s(i,E,m,c,x,g,h){const f=E[0],p=g[0],u=new Array(p),d=new Array(f),C=E[1];if(0===p){if(0!==f)throw new Error(e.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(f));return[e.ZSL.getArrayFromDType(m,0),[0,C],e.ZSL.getArrayFromDType(x,0),u,d]}let T=!0,D=0;const S=new Array(p).fill(0);for(let w=0;w<f;++w){const G=i[w*C];if(G<0)throw new Error(e.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(w,G));if(G>=p)throw new Error(e.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(w,G,p));++S[G],T=T&&G>=D,D=G}let b=!0;for(let w=0;w<p;++w){const G=0===S[w];u[w]=G,b=b&&!G,S[w]=Math.max(S[w],1),w>0&&(S[w]+=S[w-1])}if(b&&T){const w=i,G=c;for(let H=0;H<f;++H)d[H]=H;return[w,[f,C],G,u,d]}{const w=S[p-1],G=e.ZSL.getArrayFromDType(m,w*C),H=e.ZSL.getArrayFromDType(x,w),F=new Array(p).fill(0);for(let B=0;B<f;++B){const A=i[B*C],_=(0===A?0:S[A-1])+F[A];F[A]++;for(let U=0;U<C;++U)G[_*C+U]=i[B*C+U];H[_]=c[B],d[B]=_}for(let B=0;B<p;++B)if(0===F[B]){const k=0===B?0:S[B-1];G[k*C+0]=B;for(let _=1;_<C;++_)G[k*C+_]=0;H[k]=h}return[G,[w,C],H,u,d]}}},35298:(ft,N,t)=>{"use strict";t.d(N,{l:()=>s});var e=t(41653);function s(i,E,m,c,x){const g=e.ZSL.sizeFromShape(c),h=E[0],f=x.length,p=[];let u=1,d=-1;for(let w=0;w<f;++w){const G=x[w];if(-1===G){if(-1!==d)throw new Error(e.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,w));d=w,p.push(1)}else{if(G<0)throw new Error(e.C0T.getSparseReshapeNegativeOutputDimErrorMessage(w,G));u*=G,p.push(G)}}if(-1!==d){if(u<=0)throw new Error(e.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const w=Math.trunc(g/u);if(u*w!==g)throw new Error(e.C0T.getSparseReshapeInputOutputMultipleErrorMessage(c,p));p[d]=w}if(e.ZSL.sizeFromShape(p)!==g)throw new Error(e.C0T.getSparseReshapeInputOutputMismatchErrorMessage(c,p));const T=c.length,D=[];if(T>0){D[T-1]=1;for(let w=T-2;w>=0;--w)D[w]=D[w+1]*c[w+1]}const S=[];if(f>0){S[f-1]=1;for(let w=f-2;w>=0;--w)S[w]=S[w+1]*p[w+1]}const b=e.ZSL.getArrayFromDType(m,h*f);for(let w=0;w<h;++w){let G=0;for(let H=0;H<T;++H)G+=i[w*T+H]*D[H];for(let H=0;H<f;++H)b[w*f+H]=Math.trunc(G/S[H]),G%=S[H]}return[b,[h,f],p]}},19454:(ft,N,t)=>{"use strict";t.d(N,{z:()=>s});var e=t(41653);function s(i,E,m,c,x,g=!1,h=0){const f=c.length,p=[E[0],i.length/E[0]],u=p[1],C=f>0?x[f-1]+1:0;if(C<0)throw new Error(e.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const T=E.slice();T[0]=C;const D=T.reduce((F,B)=>F*B,1),S=e.ZSL.getArrayFromDType(m,D);if(0===f)return C>0&&S.fill(h),[S,T];if(C<=0)throw new Error(e.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let b=0,w=1,G=0,H=x[b];for(;;){let F=0;if(w<f){if(F=x[w],H===F){++w;continue}if(H>=F)throw new Error(e.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(H<0||H>=C)throw new Error(e.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(H,C));H>G&&S.fill(h,G*u,H*u);for(let B=b;B<w;++B){const A=c[B];if(A<0||A>=p[0])throw new Error(e.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(B,c[B],p[0]));for(let k=0;k<u;k++)S[H*u+k]+=i[A*u+k]}if(g)for(let B=0;B<u;B++)S[H*u+B]/=w-b;if(b=w,++w,G=H+1,H=F,w>f)break}return G<C&&S.fill(h,G*u,C*u),[S,T]}},94985:(ft,N,t)=>{"use strict";t.d(N,{Fu:()=>c,x6:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)(x=>Math.sqrt(x)),m=(0,i.v)(e.dFH,x=>Math.sqrt(x)),c={kernelName:e.dFH,backendName:"cpu",kernelFunc:m}},32596:(ft,N,t)=>{"use strict";t.d(N,{C:()=>c,_:()=>E});var e=t(41653),s=t(20820),i=t(80345);const E=(0,s.o)((x,g)=>{const{pattern:h,replaceGlobal:f,rewrite:p}=g;return x.replace(new RegExp(h,f?"g":""),p)}),m=(0,i.F)(e.GZp,E),c={kernelName:e.GZp,backendName:"cpu",kernelFunc:m}},2821:(ft,N,t)=>{"use strict";t.d(N,{e:()=>s});var e=t(41653);function s(i,E,m,c){const x=(0,e.ra8)(i,E.dtype);for(let g=0;g<x.size;g++){const h=x.indexToLoc(g),f=new Array(h.length);for(let p=0;p<f.length;p++)f[p]=h[p]*m[p]+c[p];x.set(E.get(...f),...h)}return x}},48953:(ft,N,t)=>{"use strict";t.d(N,{G:()=>i});var e=t(41653);class s{constructor(m,c,x,g,h,f){this.separator=e.ZSL.encodeString(m),this.nGramWidths=c,this.leftPad=e.ZSL.encodeString(x),this.rightPad=e.ZSL.encodeString(g),this.padWidth=h,this.preserveShort=f}getPadWidth(m){return Math.min(this.padWidth<0?m-1:this.padWidth,m-1)}getNumNGrams(m,c){const x=this.getPadWidth(c);return Math.max(0,m+2*x-c+1)}createNGrams(m,c,x,g,h,f){for(let p=0;p<h;++p){const u=this.getPadWidth(f),d=Math.max(0,u-p),C=Math.max(0,u-(h-(p+1))),T=f-(d+C),D=c+(d>0?0:p-u);let S=0;S+=d*this.leftPad.length;for(let F=0;F<T;++F)S+=m[D+F].length;S+=C*this.rightPad.length,S+=(d+C+T-1)*this.separator.length,x[g+p]=new Uint8Array(S);const w=x[g+p];let G=0;const H=F=>F.forEach(B=>w[G++]=B);for(let F=0;F<d;++F)H(this.leftPad),H(this.separator);for(let F=0;F<T-1;++F)H(m[D+F]),H(this.separator);if(T>0){H(m[D+T-1]);for(let F=0;F<C;++F)H(this.separator),H(this.rightPad)}else{for(let F=0;F<C-1;++F)H(this.rightPad),H(this.separator);H(this.rightPad)}}}compute(m,c){const x=m.length,g=c.length;if(g>0){let u=c[0];if(0!==u)throw new Error(`First split value must be 0, got ${u}`);for(let d=1;d<g;++d){let C=c[d]>=u;if(C=C&&c[d]<=x,!C)throw new Error(`Invalid split value ${c[d]}, must be in [${u}, ${x}]`);u=c[d]}if(u!==x)throw new Error(`Last split value must be data size. Expected ${x}, got ${u}`)}const h=g-1,f=e.ZSL.getArrayFromDType("int32",g);if(0===x||0===g){const u=new Array(x);for(let d=0;d<=h;++d)f[d]=0;return[u,f]}f[0]=0;for(let u=1;u<=h;++u){const d=c[u]-c[u-1];let C=0;this.nGramWidths.forEach(T=>{C+=this.getNumNGrams(d,T)}),this.preserveShort&&d>0&&0===C&&(C=1),f[u]=f[u-1]+C}const p=new Array(f[h]);for(let u=0;u<h;++u){const d=c[u];let C=f[u];if(this.nGramWidths.forEach(T=>{const S=this.getNumNGrams(c[u+1]-c[u],T);this.createNGrams(m,d,p,C,S,T),C+=S}),this.preserveShort&&C===f[u]){const T=c[u+1]-c[u];if(0===T)continue;this.createNGrams(m,d,p,C,1,T+2*this.padWidth)}}return[p,f]}}function i(E,m,c,x,g,h,f,p){return new s(c,x,g,h,f,p).compute(E,m)}},70065:(ft,N,t)=>{"use strict";t.d(N,{S:()=>i});var e=t(41653);function s(E,m,c,x){if(!E.length)return;if(0===m.length){for(let h=0;h<E.length;++h)x.push(E.subarray(h,h+1));return}if(1===m.length){const h=m[0];let f=E.indexOf(h);for(;-1!==f;){const p=E.subarray(0,f);(!c||0!==p.length)&&x.push(p),f=(E=E.subarray(f+1)).indexOf(h)}return void((!c||0!==E.length)&&x.push(E))}let g=0;for(let h=0;h<E.length+1;h++)if(h===E.length||-1!==m.indexOf(E[h])){const f=E.subarray(g,h);(!c||0!==f.length)&&x.push(f),g=h+1}}function i(E,m,c){const x=E.length,g=[];let h=0,f=0;const p=new Array(x);for(let D=0;D<x;++D){const S=g.length;s(E[D],m,c,g);const b=g.length-S;p[D]=b,h+=b,f=Math.max(f,b)}const u=e.ZSL.getArrayFromDType("int32",2*h),d=new Array(h),C=[x,f];let T=0;for(let D=0;D<x;++D)for(let S=0;S<p[D];++S)u[2*T]=D,u[2*T+1]=S,d[T]=g[T],++T;return[u,d,C]}},72856:(ft,N,t)=>{"use strict";t.d(N,{f:()=>s});var e=t(41653);function s(i,E){const m=e.ZSL.getArrayFromDType("int32",i.length);for(let c=0;c<i.length;++c)m[c]=e.ZSL.fingerPrint64(i[c]).modulo(E).getLowBitsUnsigned();return m}},33197:(ft,N,t)=>{"use strict";t.d(N,{Zl:()=>x,dl:()=>E,jb:()=>c});var e=t(41653),s=t(99800),i=t(445);const E=(0,s.Z)((g,h)=>g-h),m=(0,i.B)((g,h,f,p)=>({real:g-f,imag:h-p})),c=(0,i.j)(e.PbM,E,m),x={kernelName:e.PbM,backendName:"cpu",kernelFunc:c}},8440:(ft,N,t)=>{"use strict";t.d(N,{D:()=>s});var e=t(41653);function s(i,E){const m=new Array(i.rank);for(let x=0;x<m.length;x++)m[x]=i.shape[x]*E[x];const c=(0,e.ra8)(m,i.dtype);for(let x=0;x<c.values.length;++x){const g=c.indexToLoc(x),h=new Array(i.rank);for(let p=0;p<h.length;p++)h[p]=g[p]%i.shape[p];const f=i.locToIndex(h);c.values[x]=i.values[f]}return c}},29956:(ft,N,t)=>{"use strict";t.d(N,{x:()=>E});var e=t(41653);const s=(m,c)=>{const x=c.value-m.value;return 0===x?m.index-c.index:x};function i(m,c,x=0,g=m.length-1){for(;g>x;){if(g-x>600){const u=g-x+1,d=c-x+1,C=Math.log(u),T=.5*Math.exp(2*C/3),D=.5*Math.sqrt(C*T*(u-T)/u)*Math.sign(d-u/2);i(m,c,Math.max(x,Math.floor(c-d*T/u+D)),Math.min(g,Math.floor(c+(u-d)*T/u+D)))}const h=m[c];let f=x,p=g;for(e.ZSL.swap(m,x,c),s(m[g],h)>0&&e.ZSL.swap(m,x,g);f<p;){for(e.ZSL.swap(m,f,p),f++,p--;s(m[f],h)<0;)f+=1;for(;s(m[p],h)>0;)p-=1}0===s(m[x],h)?e.ZSL.swap(m,x,p):(p+=1,e.ZSL.swap(m,p,g)),p<=c&&(x=p+1),c<=p&&(g=p-1)}}function E(m,c,x,g,h){const f=c[c.length-1],[p,u]=[m.length/f,f],d=e.ZSL.getTypedArrayFromDType(x,p*g),C=e.ZSL.getTypedArrayFromDType("int32",p*g);for(let D=0;D<p;D++){const S=D*u,b=m.subarray(S,S+u);let w=new Array(b.length);b.forEach((B,A)=>w[A]={value:B,index:A}),g<w.length&&(i(w,g),w=w.slice(0,g)),h&&w.sort(s);const G=D*g,H=d.subarray(G,G+g),F=C.subarray(G,G+g);for(let B=0;B<g;B++)H[B]=w[B].value,F[B]=w[B].index}const T=c.slice();return T[T.length-1]=g,[(0,e.ra8)(T,x,d),(0,e.ra8)(T,"int32",C)]}},87599:(ft,N,t)=>{"use strict";t.d(N,{W:()=>m,m:()=>E});var e=t(41653),s=t(27543),i=t(44169);function E(c){const{inputs:x,attrs:g,backend:h}=c,{x:f}=x,{perm:p}=g;(0,s.C)(f,"transpose");const d=new Array(f.shape.length);for(let S=0;S<d.length;S++)d[S]=f.shape[p[S]];const C=h.data.get(f.dataId).values,T=(0,i._)(C,f.shape,f.dtype,p,d);return{dataId:h.write(T,d,f.dtype),shape:d,dtype:f.dtype}}const m={kernelName:e.wx0,backendName:"cpu",kernelFunc:E}},44169:(ft,N,t)=>{"use strict";t.d(N,{_:()=>s});var e=t(41653);function s(i,E,m,c,x){const g=E.length,h=e.ZSL.sizeFromShape(E),f=e.ZSL.computeStrides(E),p=e.ZSL.computeStrides(x),u=e.ZSL.getTypedArrayFromDType(m,e.ZSL.sizeFromShape(x));for(let d=0;d<h;++d){const C=e.ZSL.indexToLoc(d,g,f),T=new Array(C.length);for(let S=0;S<T.length;S++)T[S]=C[c[S]];u[e.ZSL.locToIndex(T,g,p)]=i[d]}return u}},73033:(ft,N,t)=>{"use strict";t.d(N,{w:()=>s});var e=t(41653);function s(i,E,m,c){const x=e.ZSL.parseAxisParam(E,m)[0],g=[1,m[0],1];for(let S=0;S<x;S++)g[0]*=m[S];g[1]=m[x];for(let S=x+1;S<m.length;S++)g[2]*=m[S];const h=new Map,f=new Int32Array(m[x]),p=new e.ylz(g,c,i),u=[],d=1===g[0]&&1===g[2];for(let S=0;S<m[x];S++){let b;if(d)b=i[S].toString();else{const G=[];for(let H=0;H<g[0];H++)for(let F=0;F<g[2];F++)G.push(p.get(H,S,F));b=G.join(",")}const w=h.get(b);if(null!=w)f[S]=w;else{const G=h.size;h.set(b,G),f[S]=G,u.push(S)}}const C=g.slice();C[1]=h.size;const T=new e.ylz(C,c);u.forEach((S,b)=>{for(let w=0;w<g[0];w++)for(let G=0;G<g[2];G++)T.set(p.get(w,S,G),w,b,G)});const D=m.slice();return D[x]=C[1],{outputValues:T.values,outputShape:D,indices:f}}},99800:(ft,N,t)=>{"use strict";t.d(N,{Z:()=>s});var e=t(41653);function s(i){return(E,m,c,x,g)=>{const h=e.C0T.assertAndGetBroadcastShape(E,m),f=h.length,p=e.ZSL.computeStrides(h),u=e.ZSL.sizeFromShape(h),d=e.ZSL.getTypedArrayFromDType(g,u),C=E.length,T=m.length,D=e.ZSL.computeStrides(E),S=e.ZSL.computeStrides(m),b=e.C0T.getBroadcastDims(E,h),w=e.C0T.getBroadcastDims(m,h);if(b.length+w.length===0)for(let G=0;G<d.length;++G)d[G]=i(c[G%c.length],x[G%x.length]);else for(let G=0;G<d.length;++G){const H=e.ZSL.indexToLoc(G,f,p),F=H.slice(-C);b.forEach(_=>F[_]=0);const B=e.ZSL.locToIndex(F,C,D),A=H.slice(-T);w.forEach(_=>A[_]=0);const k=e.ZSL.locToIndex(A,T,S);d[G]=i(c[B],x[k])}return[d,h]}}},445:(ft,N,t)=>{"use strict";t.d(N,{B:()=>c,j:()=>m});var e=t(41653),s=t(27543),i=t(75148),E=t(46499);function m(x,g,h,f){return null==h?({inputs:p,backend:u})=>{const{a:d,b:C}=p,T=u;(0,s.C)([d,C],x);const D=T.data.get(d.dataId).values,S=T.data.get(C.dataId).values,b="string"===d.dtype?e.C0T.fromUint8ToStringArray(D):D,w="string"===d.dtype?e.C0T.fromUint8ToStringArray(S):S,G=f||d.dtype,[H,F]=g(d.shape,C.shape,b,w,G);return T.makeTensorInfo(F,G,H)}:({inputs:p,backend:u})=>{const{a:d,b:C}=p,T=u;if("complex64"===d.dtype||"complex64"===C.dtype){const D=(0,i.wg)({inputs:{x:d},backend:T,attrs:{dtype:"complex64"}}),S=T.data.get(D.dataId),w=S.complexTensorInfos.imag,G=T.data.get(S.complexTensorInfos.real.dataId).values,H=T.data.get(w.dataId).values,F=(0,i.wg)({inputs:{x:C},backend:T,attrs:{dtype:"complex64"}}),B=T.data.get(F.dataId),k=B.complexTensorInfos.imag,_=T.data.get(B.complexTensorInfos.real.dataId).values,U=T.data.get(k.dataId).values,[W,Z,j]=h(d.shape,C.shape,G,H,_,U),it=T.makeTensorInfo(j,"float32",W),at=T.makeTensorInfo(j,"float32",Z),J=(0,E.f)({inputs:{real:it,imag:at},backend:T});return T.disposeIntermediateTensorInfo(D),T.disposeIntermediateTensorInfo(F),T.disposeIntermediateTensorInfo(it),T.disposeIntermediateTensorInfo(at),J}{const D=T.data.get(d.dataId).values,S=T.data.get(C.dataId).values,b=f||d.dtype,[w,G]=g(d.shape,C.shape,D,S,b);return T.makeTensorInfo(G,b,w)}}}function c(x){return(g,h,f,p,u,d)=>{const C=e.C0T.assertAndGetBroadcastShape(g,h),T=e.ZSL.sizeFromShape(C),D=C.length,S=e.ZSL.computeStrides(C),b=e.ZSL.getTypedArrayFromDType("float32",T),w=e.ZSL.getTypedArrayFromDType("float32",T),G=e.C0T.getBroadcastDims(g,C),H=e.C0T.getBroadcastDims(h,C),F=e.C0T.mergeRealAndImagArrays(f,p),B=e.C0T.mergeRealAndImagArrays(u,d),A=g.length,k=e.ZSL.computeStrides(g),_=h.length,U=e.ZSL.computeStrides(h);if(G.length+H.length===0)for(let W=0;W<b.length;W++){const Z=W%F.length,j=W%B.length,it=x(F[2*Z],F[2*Z+1],B[2*j],B[2*j+1]);b[W]=it.real,w[W]=it.imag}else for(let W=0;W<b.length;W++){const Z=e.ZSL.indexToLoc(W,D,S),j=Z.slice(-A);G.forEach(rt=>j[rt]=0);const it=e.ZSL.locToIndex(j,A,k),at=Z.slice(-_);H.forEach(rt=>at[rt]=0);const J=e.ZSL.locToIndex(at,_,U),ot=x(F[2*it],F[2*it+1],B[2*J],B[2*J+1]);b[W]=ot.real,w[W]=ot.imag}return[b,w,C]}}},20820:(ft,N,t)=>{"use strict";t.d(N,{o:()=>s});var e=t(41653);function s(i){return(E,m,c)=>{const x=e.ZSL.getArrayFromDType(m,E.length);for(let g=0;g<E.length;++g)x[g]=i(E[g],c);return x}}},80345:(ft,N,t)=>{"use strict";t.d(N,{F:()=>m,v:()=>E});var e=t(41653),s=t(27543),i=t(20820);function E(c,x,g){return m(c,(0,i.o)(x),g)}function m(c,x,g){return({inputs:h,attrs:f,backend:p})=>{const{x:u}=h;(0,s.C)(u,c);const d=p,C=d.data.get(u.dataId).values;let T;if("string"===u.dtype){if(!Array.isArray(C))throw new Error("String tensor's value was not an instance of Array");T=e.C0T.fromUint8ToStringArray(C)}else T=C;const D=g||u.dtype,S=x(T,D,f);return d.makeTensorInfo(u.shape,D,S)}}},10708:(ft,N,t)=>{"use strict";t.d(N,{U:()=>i});var e=t(41653),s=t(46499);function i(E,m,c="float32"){if("complex64"===c){const g=i(E,m,"float32"),h=i(E,m,"float32");return(0,s.f)({inputs:{real:g,imag:h},backend:E})}const x=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(m),c);return E.makeTensorInfo(m,c,x)}},22412:(ft,N,t)=>{"use strict";t.d(N,{$p:()=>Li});var e={};t.r(e),t.d(e,{mx:()=>ge.mx,XI:()=>De.X,Nk:()=>De.N,f6:()=>cn.f6,ct:()=>mn.ct,YG:()=>En.YG,hH:()=>_n.h,z3:()=>Yn.z3,sG:()=>vs.sG,uM:()=>Vn.uM,vS:()=>os.vS,qB:()=>Rs.q,GG:()=>zr.G,lg:()=>no.lg,rq:()=>eo.rq,cu:()=>Jr.cu,WR:()=>Qr.WR,GE:()=>co.G,px:()=>bt.px,jC:()=>Qt.j,He:()=>Bt.He,hE:()=>Ht.hE,BF:()=>le.BF,Dk:()=>fe.Dk,cl:()=>Ce.cl,_B:()=>pe._B,ub:()=>ye.u,_f:()=>gn._,Ku:()=>An.K,qy:()=>Hn.q,Zy:()=>Kn.Zy,bu:()=>jn.b,zv:()=>Ys.zv,dH:()=>ae.dH,HS:()=>yr.HS,yH:()=>Ks.y,l3:()=>po.l,z9:()=>ho.z,x6:()=>fo.x6,_m:()=>ps._,eW:()=>Gr.e,GK:()=>Po.G,SP:()=>mo.S,yr:()=>Oo.f,dl:()=>so.dl,Dw:()=>go.D,xT:()=>Ea.x,_X:()=>_a._,wz:()=>ya.w});var s=t(41653),i=t(10467);const E={},m={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function g(o,r){if(!(o in E)||null!=r){const a=function f(o,r){if(1!==o&&2!==o)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==r?function h(o){if(!(0,s._K2)().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===o)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(o):r;return n.addEventListener("webglcontextlost",a=>{a.preventDefault(),delete E[o]},!1),(0,s._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(m.failIfMajorPerformanceCaveat=!1),1===o?n.getContext("webgl",m)||n.getContext("experimental-webgl",m):n.getContext("webgl2",m)}(o,r);if(null===a)return console.log("Could not get context for WebGL version",o),null;E[o]=a}const n=E[o];return null==n||n.isContextLost()?(delete E[o],g(o)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),E[o])}var p=function(o){return o[o.DENSE=0]="DENSE",o[o.SHARED_BATCH=1]="SHARED_BATCH",o}(p||{}),u=function(o){return o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD",o}(u||{}),d=function(o){return o[o.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",o[o.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",o[o.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",o[o.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",o[o.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",o}(d||{});function C(o,r){return[r,o]}function S(o){const r=s.ZSL.sizeFromShape(o),n=Math.ceil(r/4);return s.ZSL.sizeToSquarishShape(n)}function G(o,r){return[Math.max(1,Math.ceil(r/2)),Math.max(1,Math.ceil(o/2))]}function F(o,r){const n=o;let a,l,v,P,L,M,V,z,Y,et;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(a=n.R32F,l=n.R16F,v=n.RGBA16F,P=n.RGBA32F,L=n.RED,V=4,z=1,Y=n.HALF_FLOAT,et=n.FLOAT,M=n.RGBA8):(a=o.RGBA,l=o.RGBA,v=o.RGBA,P=n.RGBA,L=o.RGBA,V=4,z=4,Y=null!=r?r.HALF_FLOAT_OES:null,et=o.FLOAT,M=o.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:l,internalFormatPackedHalfFloat:v,internalFormatPackedFloat:P,textureFormatFloat:L,downloadTextureFormat:M,downloadUnpackNumChannels:V,defaultNumChannels:z,textureTypeHalfFloat:Y,textureTypeFloat:et}}function B(o,r){const n=r();return(0,s._K2)().getBool("DEBUG")&&function A(o){const r=o.getError();if(r!==o.NO_ERROR)throw new Error("WebGL Error: "+function W(o,r){switch(r){case o.NO_ERROR:return"NO_ERROR";case o.INVALID_ENUM:return"INVALID_ENUM";case o.INVALID_VALUE:return"INVALID_VALUE";case o.INVALID_OPERATION:return"INVALID_OPERATION";case o.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case o.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case o.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${r}`}}(o,r))}(o),n}function U(o){return!!((0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===o||5.96e-8<Math.abs(o)&&Math.abs(o)<65504)}function Z(o,r){return on(o,()=>o.getExtension(r),'Extension "'+r+'" not supported on this browser.')}const at=/ERROR: [0-9]+:([0-9]+):/g;function J(o,r){const n=at.exec(r);if(null==n)return console.log(`Couldn't parse line number in error: ${r}`),void console.log(o);const a=+n[1],l=o.split("\n"),v=l.length.toString().length+2,P=l.map((Y,et)=>s.ZSL.rightPad((et+1).toString(),v)+Y);let L=0;for(let Y=0;Y<P.length;Y++)L=Math.max(P[Y].length,L);const M=P.slice(0,a-1),V=P.slice(a-1,a),z=P.slice(a);console.log(M.join("\n")),console.log(r.split("\n")[0]),console.log(`%c ${s.ZSL.rightPad(V[0],L)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(z.join("\n"))}function tt(o,r){if(B(o,()=>o.validateProgram(r)),!1===o.getProgramParameter(r,o.VALIDATE_STATUS))throw console.log(o.getProgramInfoLog(r)),new Error("Shader program validation failed.")}function Jt(o,r,n,a,l,v,P){const L=o.getAttribLocation(r,n);return-1!==L&&(B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,a)),B(o,()=>o.vertexAttribPointer(L,l,o.FLOAT,!1,v,P)),B(o,()=>o.enableVertexAttribArray(L)),!0)}function Oe(o,r,n,a){B(o,()=>function ue(o,r,n){(function vn(o,r){const n=o.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=r+o.TEXTURE0;if(a<o.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(o,n),B(o,()=>o.activeTexture(o.TEXTURE0+n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,r))}(o,r,a)),B(o,()=>o.uniform1i(n,a))}function Kt(o,r,n){B(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,n)),B(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,r,0))}function te(o,r){B(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,r)),B(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,null,0))}function he(o){const r=o.checkFramebufferStatus(o.FRAMEBUFFER);if(r!==o.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function Ke(o,r){switch(r){case o.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case o.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${r}`}}(o,r))}function on(o,r,n){const a=B(o,()=>r());if(null==a)throw new Error(n);return a}function fn(o,r=2){return s.ZSL.sizeFromShape(o.slice(0,o.length-r))}function dn(o){if(0===o.length)throw Error("Cannot get rows and columns of an empty shape array.");return[o.length>1?o[o.length-2]:1,o[o.length-1]]}function $n(o){let r=[1,1,1];return 0===o.length||1===o.length&&1===o[0]||(r=[fn(o),...dn(o)]),r}function zn(o){return o%2==0}function Gn(o,r){if(o=o.slice(-2),r=r.slice(-2),s.ZSL.arraysEqual(o,r)||!o.length||!r.length||0===o[0]||0===o[1]||0===r[0]||0===r[1])return!0;if(o.length!==r.length){const n=o[o.length-1],a=r[r.length-1];if(n===a||zn(n)&&zn(a)&&(1===o[0]||1===r[0]))return!0}return o[1]===r[1]&&zn(o[0])&&zn(r[0])}let rs,Jn;function Rt(o,r){return null!=o.getExtension(r)}function Ut(o){try{if(null!=g(o))return!0}catch(r){return console.log("Error when getting WebGL context: ",r),!1}return!1}function q(o){const r=F(o),n=o.createTexture();o.bindTexture(o.TEXTURE_2D,n),o.texImage2D(o.TEXTURE_2D,0,r.internalFormatFloat,1,1,0,r.textureFormatFloat,r.textureTypeFloat,null);const v=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,v),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,n,0);const P=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(n),o.deleteFramebuffer(v),P}function dt(o,r){Array.isArray(o)||(o=[o]),o.forEach(n=>{null!=n&&s.ZSL.assert("complex64"!==n.dtype,()=>`${r} does not support complex64 tensors in the WebGL backend.`)})}const pt=(0,s._K2)();function Xt(){let o,r,n,a,l,v,P,L,M,V;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(o="#version 300 es",r="in",n="out",a="in",l="texture",v="outputColor",P="out vec4 outputColor;",L=(0,s._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",M="",V="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(o="",r="attribute",n="varying",a="varying",l="texture2D",v="gl_FragColor",P="",L="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",M="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",V="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:o,attribute:r,varyingVs:n,varyingFs:a,texture2D:l,output:v,defineOutput:P,defineSpecialNaN:L,defineSpecialInf:M,defineRound:V}}function Yt(o,r,n="index"){const a=s.ZSL.computeStrides(r);return a.map((l,v)=>`int ${o[v]} = ${n} / ${l}; ${v===a.length-1?`int ${o[v+1]} = ${n} - ${o[v]} * ${l}`:`index -= ${o[v]} * ${l}`};`).join("")}function ve(o,r,n="index"){const a=s.ZSL.computeStrides(r);return a.map((l,v)=>`int ${o[v]} = ${n} / outShapeStrides[${v}]; ${v===a.length-1?`int ${o[v+1]} = ${n} - ${o[v]} * outShapeStrides[${v}]`:`index -= ${o[v]} * outShapeStrides[${v}]`};`).join("")}function _e(o){const r=s.ZSL.computeStrides(o).map(n=>n.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${r[0]} + coords.y * ${r[1]} + coords.z;\n  }\n`}pt.registerFlag("HAS_WEBGL",()=>pt.getNumber("WEBGL_VERSION")>0),pt.registerFlag("WEBGL_VERSION",()=>Ut(2)?2:Ut(1)?1:0),pt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),pt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===pt.get("WEBGL_VERSION")),pt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),pt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),pt.registerFlag("WEBGL_PACK",()=>pt.getBool("HAS_WEBGL")),pt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_CLIP",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_REDUCE",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_LAZILY_UNPACK",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_CONV_IM2COL",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>pt.getBool("WEBGL_PACK")),pt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function gs(o){if(null==rs){const r=g(o);rs=r.getParameter(r.MAX_TEXTURE_SIZE)}return rs}(pt.getNumber("WEBGL_VERSION"))),pt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function us(o){if(null==Jn){const r=g(o);Jn=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jn)}(pt.getNumber("WEBGL_VERSION"))),pt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const o=pt.getNumber("WEBGL_VERSION");return 0===o?0:function ks(o){if(0===o)return 0;let r;const n=g(o);return r=Rt(n,"EXT_disjoint_timer_query_webgl2")&&2===o?2:Rt(n,"EXT_disjoint_timer_query")?1:0,r}(o)}),pt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>pt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.eMq.isMobile()),pt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function lt(o){if(0===o)return!1;const r=g(o);if(1===o){if(!Rt(r,"OES_texture_float"))return!1}else if(!Rt(r,"EXT_color_buffer_float"))return!1;return q(r)}(pt.getNumber("WEBGL_VERSION"))),pt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!pt.getBool("WEBGL_FORCE_F16_TEXTURES")&&pt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),pt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function kt(o){if(0===o)return!1;const r=g(o);if(1!==o){if(Rt(r,"EXT_color_buffer_float"))return q(r);const a="EXT_color_buffer_half_float";if(Rt(r,a)){const l=r.getExtension(a);return function xt(o,r){const n=F(o,r),a=o.createTexture();o.bindTexture(o.TEXTURE_2D,a),o.texImage2D(o.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const P=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,P),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,a,0);const L=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(a),o.deleteFramebuffer(P),L}(r,l)}return!1}return!(!Rt(r,"OES_texture_float")||!Rt(r,"WEBGL_color_buffer_float"))&&q(r)}(pt.getNumber("WEBGL_VERSION"))),pt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function It(o){return 2===o&&null!=g(o).fenceSync}(pt.getNumber("WEBGL_VERSION"))),pt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>pt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),pt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,o=>{if("number"!=typeof o)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${o}.`);if(o<0&&-1!==o)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${o}.`)}),pt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>s.eMq.isMobile()?1:-1,o=>{if("number"!=typeof o)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${o}.`);if(o<0&&-1!==o)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${o}.`)}),pt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),pt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),pt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),pt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),pt.registerFlag("WEBGL_EXP_CONV",()=>!1),pt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>pt.getBool("IS_TEST")),pt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),pt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),pt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),pt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const Te="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:en}=s.C0T;function ze(o,r,n){const a=[];if(o.forEach(ut=>{const Ct=s.ZSL.sizeFromShape(ut.shapeInfo.logicalShape);if(ut.shapeInfo.isUniform?a.push(`uniform float ${ut.name}${Ct>1?`[${Ct}]`:""};`):(a.push(`uniform sampler2D ${ut.name};`),a.push(`uniform int offset${ut.name};`)),n.enableShapeUniforms){const{uniformShape:Nt}=y(n.packedInputs,ut.shapeInfo.logicalShape,ut.shapeInfo.texShape);switch(Nt.length){case 1:a.push(`uniform int ${ut.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${ut.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${ut.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${ut.name}Shape;`)}a.push(`uniform ivec2 ${ut.name}TexShape;`)}}),n.enableShapeUniforms){switch(r.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(ut=>{a.push(`uniform ${ut.type} ${ut.name}${ut.arrayIndex?`[${ut.arrayIndex}]`:""};`)});const l=a.join("\n"),v=o.map(ut=>function Un(o,r,n=!1,a){let l="";l+=n?Sn(o,a):un(o,a);return o.shapeInfo.logicalShape.length<=r.logicalShape.length&&(l+=n?function mr(o,r){const n=o.name,a=n.charAt(0).toUpperCase()+n.slice(1),l="get"+a+"AtOutCoords",v=o.shapeInfo.logicalShape.length,P=r.logicalShape.length,L=en(o.shapeInfo.logicalShape,r.logicalShape),M=O(P),V=P-v;let z;const Y=["x","y","z","w","u","v"];z=0===v?"":P<2&&L.length>=1?"coords = 0;":L.map(jt=>`coords.${Y[jt+V]} = 0;`).join("\n");let et="";et=P<2&&v>0?"coords":o.shapeInfo.logicalShape.map((jt,Ie)=>`coords.${Y[Ie+V]}`).join(", ");let ut="return outputValue;";const Nt=1===s.ZSL.sizeFromShape(o.shapeInfo.logicalShape),$t=1===s.ZSL.sizeFromShape(r.logicalShape);if(1!==v||Nt||$t){if(Nt&&!$t)ut=1===P?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(L.length){const jt=v-2,Ie=v-1;L.indexOf(jt)>-1&&L.indexOf(Ie)>-1?ut="return vec4(outputValue.x);":L.indexOf(jt)>-1?ut="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":L.indexOf(Ie)>-1&&(ut="return vec4(outputValue.xx, outputValue.zz);")}}else ut="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${l}() {\n      ${M} coords = getOutputCoords();\n      ${z}\n      vec4 outputValue = get${a}(${et});\n      ${ut}\n    }\n  `}(o,r):function gr(o,r){const n=o.name,a=n.charAt(0).toUpperCase()+n.slice(1),l="get"+a+"AtOutCoords",L=o.shapeInfo.logicalShape.length,M=r.logicalShape.length;if(!o.shapeInfo.isUniform&&L===M&&null==o.shapeInfo.flatOffset&&s.ZSL.arraysEqual(o.shapeInfo.texShape,r.texShape))return`\n      float ${l}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const V=O(M),z=en(o.shapeInfo.logicalShape,r.logicalShape),Y=M-L;let et;const ut=["x","y","z","w","u","v"];et=0===L?"":M<2&&z.length>=1?"coords = 0;":z.map(Nt=>`coords.${ut[Nt+Y]} = 0;`).join("\n");let Ct="";return Ct=M<2&&L>0?"coords":o.shapeInfo.logicalShape.map((Nt,Wt)=>`coords.${ut[Wt+Y]}`).join(", "),`\n    float ${l}() {\n      ${V} coords = getOutputCoords();\n      ${et}\n      return get${a}(${Ct});\n    }\n  `}(o,r)),l}(ut,r,n.packedInputs,n.enableShapeUniforms)).join("\n"),P=r.texShape,L=Xt(),M=function kn(o){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${o.texture2D}(textureSampler, uv).r;\n    }\n  `}(L);let V,z,Y=function cs(o){return`${o.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${o.varyingFs} vec2 resultUV;\n    ${o.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${o.defineSpecialNaN}\n    ${o.defineSpecialInf}\n    ${o.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${fs}\n    ${Hs}\n    ${js}\n  `}(L);return r.isPacked?(V=function bn(o,r,n){switch(o.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function bs(o,r,n){const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,r,n);case 2:return function ur(o,r,n){const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(s.ZSL.arraysEqual(o,r))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const l=Math.ceil(o[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${l});\n      int c = imod(index, ${l}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(o,r,n);case 3:return function Qs(o,r,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(o[2]/2),v=l*Math.ceil(o[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${v};\n      index -= b * ${v};\n\n      int r = 2 * (index / ${l});\n      int c = imod(index, ${l}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(o,r,n);default:return function Ir(o,r,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(o[o.length-1]/2),v=l*Math.ceil(o[o.length-2]/2);let P=v,L="",M="b, r, c";for(let V=2;V<o.length-1;V++)P*=o[o.length-V-1],L=`\n      int b${V} = index / ${P};\n      index -= b${V} * ${P};\n    `+L,M=`b${V}, `+M;return`\n    ivec${o.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${L}\n\n      int b = index / ${v};\n      index -= b * ${v};\n\n      int r = 2 * (index / ${l});\n      int c = imod(index, ${l}) * 2;\n\n      return ivec${o.length}(${M});\n    }\n  `}(o,r,n)}}(r.logicalShape,P,n.enableShapeUniforms),z=function Es(o){return`\n    void setOutput(vec4 val) {\n      ${o.output} = val;\n    }\n  `}(L)):(V=function es(o,r,n){switch(o.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function Fs(o,r,n){return 1===r[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return resTexRC.x * ${r[1]} + resTexRC.y;\n    }\n  `}(0,r,n);case 2:return function Or(o,r,n){return s.ZSL.arraysEqual(o,r)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `:1===o[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${r[0]}, ${r[1]}));\n        int index = resTexRC.x * ${r[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===o[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${r[0]}, ${r[1]}));\n        int index = resTexRC.x * ${r[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = index / ${o[1]};\n      int c = index - r * ${o[1]};\n      return ivec2(r, c);\n    }\n  `}(o,r,n);case 3:return function Dr(o,r,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ve(["r","c","d"],o)}\n    return ivec3(r, c, d);\n  }\n`;const a=Yt(["r","c","d"],o);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(o,r,n);case 4:return function Pr(o,r,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ve(["r","c","d","d2"],o)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=Yt(["r","c","d","d2"],o);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(o,r,n);case 5:return function lr(o,r){const n=Yt(["r","c","d","d2","d3"],o);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${r[0]},\n                             ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(o,r);case 6:return function Ws(o,r){const n=Yt(["r","c","d","d2","d3","d4"],o);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(o,r);default:throw new Error(`${o.length}-D output sampling is not yet supported`)}}(r.logicalShape,P,n.enableShapeUniforms),z=function Zn(o){return`\n    void setOutput(float val) {\n      ${o.output} = vec4(val, 0, 0, 0);\n    }\n  `}(L)),n.packedInputs&&(Y+=Ds),[Y,M,z,l,V,v,n.userCode].join("\n")}function un(o,r=!1){const n=o.shapeInfo.logicalShape;switch(n.length){case 0:return function cr(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(o.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[l,v]=o.shapeInfo.texShape;if(1===l&&1===v)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const P=Is(n);if(r)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${P});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[L,M]=o.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${L}, ${M}, ${P});\n      return sampleTexture(${n}, uv);\n    }\n  `}(o,r);case 1:return function dr(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(o.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${Ms(o)}\n      }\n    `;const l=o.shapeInfo.texShape,v=l[0],P=l[1];if(1===P&&1===v)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const L=Is(n);return 1===P?r?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${L}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${L}) + 0.5) / ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===v?r?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${L}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${L}) + 0.5) / ${P}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:r?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${L});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${v}, ${P}, index + ${L});\n      return sampleTexture(${n}, uv);\n    }\n  `}(o,r);case 2:return function Us(o,r){const n=o.shapeInfo.logicalShape,a=o.name,l="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape;if(null!=v&&s.ZSL.arraysEqual(n,v))return r?`\n      float ${l}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${l}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${v[1]}.0, ${v[0]}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const{newShape:P,keptDims:L}=s.ZSL.squeezeShape(n);if(P.length<n.length){const ut=["row","col"];return`\n      ${un(I(o,P),r)}\n      float ${l}(int row, int col) {\n        return ${l}(${K(ut,L)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${l}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Ms(o)}\n      }\n    `;const V=v[0],z=v[1],Y=Is(a);return 1===z?r?`\n      float ${l}(int row, int col) {\n        float index = dot(vec3(row, col, ${Y}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${l}(int row, int col) {\n      float index = dot(vec3(row, col, ${Y}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${V}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===V?r?`\n      float ${l}(int row, int col) {\n        float index = dot(vec3(row, col, ${Y}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${l}(int row, int col) {\n      float index = dot(vec3(row, col, ${Y}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${z}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:r?`\n      float ${l}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${Y};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${l}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${Y};\n    vec2 uv = uvFromFlat(${V}, ${z}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(o,r);case 3:return function hr(o,r){const n=o.shapeInfo.logicalShape,a=o.name,l="get"+a.charAt(0).toUpperCase()+a.slice(1),v=n[1]*n[2],P=n[2],{newShape:L,keptDims:M}=s.ZSL.squeezeShape(n);if(L.length<n.length){const Wt=["row","col","depth"];return`\n        ${un(I(o,L),r)}\n        float ${l}(int row, int col, int depth) {\n          return ${l}(${K(Wt,M)});\n        }\n      `}if(o.shapeInfo.isUniform)return`\n      float ${l}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${v}, ${P}, 1)));\n        ${Ms(o)}\n      }\n    `;const z=o.shapeInfo.texShape,Y=z[0],et=z[1],ut=o.shapeInfo.flatOffset;if(et===v&&null==ut)return r?`\n      float ${l}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${l}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${P}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${et}.0, ${Y}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(et===P&&null==ut)return r?`\n      float ${l}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${l}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${et}.0, ${Y}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const Ct=Is(a);return r?`\n    float ${l}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${Ct};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${l}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${v} + col * ${P} + depth + ${Ct};\n        vec2 uv = uvFromFlat(${Y}, ${et}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(o,r);case 4:return function tr(o,r){const n=o.shapeInfo.logicalShape,a=o.name,l="get"+a.charAt(0).toUpperCase()+a.slice(1),v=n[3],P=n[2]*v,L=n[1]*P,{newShape:M,keptDims:V}=s.ZSL.squeezeShape(n);if(M.length<n.length){const Ie=["row","col","depth","depth2"];return`\n      ${un(I(o,M),r)}\n      float ${l}(int row, int col, int depth, int depth2) {\n        return ${l}(${K(Ie,V)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${l}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${L}, ${P}, ${v}, 1)));\n        ${Ms(o)}\n      }\n    `;const z=o.shapeInfo.flatOffset,Y=o.shapeInfo.texShape,et=Y[0],ut=Y[1],Ct=`int stride2 = ${a}Shape[3];`,Nt=`int stride1 = ${a}Shape[2] * stride2;`,Wt=`int stride0 = ${a}Shape[1] * stride1;`;if(ut===L&&null==z)return r?`\n      float ${l}(int row, int col, int depth, int depth2) {\n        ${Ct}\n        ${Nt}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${l}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${P}, ${v}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${ut}.0, ${et}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(ut===v&&null==z)return r?`\n      float ${l}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${l}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${ut}.0, ${et}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const $t=Is(a);return r?`\n    float ${l}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${Ct}\n      ${Nt}\n      ${Wt}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${$t});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${l}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${L} + col * ${P} +\n          depth * ${v} + depth2;\n      vec2 uv = uvFromFlat(${et}, ${ut}, index + ${$t});\n      return sampleTexture(${a}, uv);\n    }\n  `}(o,r);case 5:return function Sr(o){const r=o.shapeInfo.logicalShape,n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),l=r[4],v=r[3]*l,P=r[2]*v,L=r[1]*P,{newShape:M,keptDims:V}=s.ZSL.squeezeShape(r);if(M.length<r.length){const Wt=["row","col","depth","depth2","depth3"];return`\n      ${un(I(o,M))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${K(Wt,V)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${L}, ${P}, ${v}, ${l})) +\n          depth3;\n        ${Ms(o)}\n      }\n    `;const z=o.shapeInfo.flatOffset,Y=o.shapeInfo.texShape,et=Y[0],ut=Y[1];if(ut===L&&null==z)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${P}, ${v}, ${l}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${ut}.0, ${et}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(ut===l&&null==z)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${r[1]*r[2]*r[3]},\n               ${r[2]*r[3]}, ${r[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${ut}.0, ${et}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${L} + col * ${P} + depth * ${v} +\n          depth2 * ${l} + depth3 + ${Is(n)};\n      vec2 uv = uvFromFlat(${et}, ${ut}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(o);case 6:return function Zs(o){const r=o.shapeInfo.logicalShape,n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:l,keptDims:v}=s.ZSL.squeezeShape(r);if(l.length<r.length){const $t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${un(I(o,l))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${K($t,v)});\n      }\n    `}const P=r[5],L=r[4]*P,M=r[3]*L,V=r[2]*M,z=r[1]*V;if(o.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${z}, ${V}, ${M}, ${L})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${P}, 1)));\n        ${Ms(o)}\n      }\n    `;const Y=o.shapeInfo.flatOffset,et=o.shapeInfo.texShape,ut=et[0],Ct=et[1];if(Ct===z&&null==Y)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${V}, ${M}, ${L}, ${P})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${Ct}.0, ${ut}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(Ct===P&&null==Y)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${r[1]*r[2]*r[3]*r[4]},\n               ${r[2]*r[3]*r[4]},\n               ${r[3]*r[4]},\n               ${r[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${Ct}.0, ${ut}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${z} + col * ${V} + depth * ${M} +\n          depth2 * ${L} + depth3 * ${P} + depth4 + ${Is(n)};\n      vec2 uv = uvFromFlat(${ut}, ${Ct}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(o);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Sn(o,r){switch(o.shapeInfo.logicalShape.length){case 0:return function Js(o){const r=o.name;return`\n    vec4 ${"get"+r.charAt(0).toUpperCase()+r.slice(1)}() {\n      return ${Xt().texture2D}(${r}, halfCR);\n    }\n  `}(o);case 1:return function qs(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),l=o.shapeInfo.texShape,v=Xt();if(r)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${v.texture2D}(${n}, uv);\n    }\n  `;const P=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${P[0]}, ${P[1]}, index);\n      return ${v.texture2D}(${n}, uv);\n    }\n  `}(o,r);case 2:return function Ps(o,r){const n=o.shapeInfo.logicalShape,a=o.name,l="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape,P=v[0],L=v[1],M=Xt();if(null!=v&&s.ZSL.arraysEqual(n,v))return r?`\n      vec4 ${l}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${M.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${l}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${L}.0, ${P}.0);\n\n        return ${M.texture2D}(${a}, uv);\n      }\n    `;if(r)return`\n    vec4 ${l}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${M.texture2D}(${a}, uv);\n    }\n  `;const V=[Math.ceil(v[0]/2),Math.ceil(v[1]/2)];return`\n    vec4 ${l}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${V[0]}, ${V[1]}, row, col);\n      return ${M.texture2D}(${a}, uv);\n    }\n  `}(o,r);case 3:return function pr(o,r){const n=o.shapeInfo.logicalShape,a=o.name,l="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape,P=[Math.ceil(v[0]/2),Math.ceil(v[1]/2)];if(1===n[0]){const ut=[1,2],Nt=["b","row","col"];return`\n        ${Sn(I(o,n.slice(1)),r)}\n        vec4 ${l}(int b, int row, int col) {\n          return ${l}(${K(Nt,ut)});\n        }\n      `}const L=Xt();if(r)return`\n    vec4 ${l}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${L.texture2D}(${a}, uv);\n    }\n  `;const M=P[0],V=P[1],z=Math.ceil(n[2]/2);return`\n    vec4 ${l}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${M}, ${V}, ${z*Math.ceil(n[1]/2)}, ${z}, b, row, col);\n      return ${L.texture2D}(${a}, uv);\n    }\n  `}(o,r);default:return function fr(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),l=Xt();if(r)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${l.texture2D}(${n}, uv);\n    }\n  `;const v=o.shapeInfo.logicalShape,P=v.length,L=o.shapeInfo.texShape,M=[Math.ceil(L[0]/2),Math.ceil(L[1]/2)],V=M[0],z=M[1],Y=Math.ceil(v[P-1]/2);let et=Y*Math.ceil(v[P-2]/2),ut="int b, int row, int col",Ct=`b * ${et} + (row / 2) * ${Y} + (col / 2)`;for(let Nt=2;Nt<P-1;Nt++)ut=`int b${Nt}, `+ut,et*=v[P-Nt-1],Ct=`b${Nt} * ${et} + `+Ct;return`\n    vec4 ${a}(${ut}) {\n      int index = ${Ct};\n      int texR = index / ${z};\n      int texC = index - texR * ${z};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${z}, ${V});\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(o,r)}}const fs="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Hs="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",js="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ds="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Is(o){return`offset${o}`}function Ms(o){const r=o.name,n=s.ZSL.sizeFromShape(o.shapeInfo.logicalShape);return n<2?`return ${r};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${r}[i];\n      }\n    }\n  `}function O(o){if(o<=1)return"int";if(2===o)return"ivec2";if(3===o)return"ivec3";if(4===o)return"ivec4";if(5===o)return"ivec5";if(6===o)return"ivec6";throw Error(`GPU for rank ${o} is not yet supported`)}function y(o,r,n){const{newShape:a,keptDims:l}=s.ZSL.squeezeShape(r),v=r.length,P=o&&3===v&&1===r[0],L=P?r.slice(1):a,M=!o&&v>1&&!s.ZSL.arraysEqual(r,n)&&a.length<v||P;return{useSqueezeShape:M,uniformShape:M?L:r,keptDims:l}}function I(o,r){const n=JSON.parse(JSON.stringify(o));return n.shapeInfo.logicalShape=r,n}function K(o,r){return r.map(n=>o[n]).join(", ")}function st(o,r,n){const a=[],l=[];let v,P,L,M=null,V=null;V=o.getUniformLocation(n,"NAN",!1),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&(M=o.getUniformLocation(n,"INFINITY",!1));const z=!1;for(const Y of r.variableNames){const et={name:Y,uniform:o.getUniformLocation(n,Y,z),offset:o.getUniformLocation(n,`offset${Y}`,z)};r.enableShapeUniforms&&(et.shape=o.getUniformLocation(n,`${Y}Shape`,z),et.texShape=o.getUniformLocation(n,`${Y}TexShape`,z)),a.push(et)}if(r.enableShapeUniforms&&(v=o.getUniformLocation(n,"outShape",z),L=o.getUniformLocation(n,"outShapeStrides",z),P=o.getUniformLocation(n,"outTexShape",z)),r.customUniforms)for(const Y of r.customUniforms)l.push(o.getUniformLocation(n,Y.name,z));return{variablesLocations:a,customUniformLocations:l,infLoc:M,nanLoc:V,outShapeLocation:v,outShapeStridesLocation:L,outTexShapeLocation:P}}function Mt(o,r){if(o.length!==r.length)throw Error(`Binary was compiled with ${o.length} inputs, but was executed with ${r.length} inputs`);o.forEach((n,a)=>{const l=n.logicalShape,v=r[a],P=v.shape;if(!s.ZSL.arraysEqual(l,P))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${l} and ${P} must match`);if(n.isUniform&&v.isUniform)return;const L=n.texShape,M=v.isUniform?null:v.texData.texShape;if(!s.ZSL.arraysEqual(L,M))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${L} and ${M} must match`)})}function Pe(o){return(0,s._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&o<=4}class $e{constructor(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Xt();this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ve(["r","c","d"],r):Yt(["r","c","d"],r)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class He{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Xt();this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ve(["r","c","d"],r):Yt(["r","c","d"],r)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class qe{constructor(r){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const n=Xt();this.outputShape=r,this.userCode=`\n      ${Te}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${n.output} = encode_float(x);\n      }\n    `}}class Tn{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const n=Xt();this.outputShape=r,this.userCode=`\n      ${Te}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${n.output} = encode_float(x);\n      }\n    `}}const Ln={R:0,G:1,B:2,A:3};class xn{constructor(r,n=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const l=Xt();this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length);let v="result";n&&(v="floor(result * 255. + 0.5)");let P="";for(let L=0;L<a.length;L++)P+=`\n          if(offset == ${L}) {\n            result = values[${Ln[a[L]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_e(r)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${a.length});\n\n        flatIndex = idiv(flatIndex, ${a.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${l.texture2D}(A, uv);\n          ${P}\n        }\n        ${l.output} = vec4(${v}, 0., 0., 0.);\n      }\n    `}}class sn{constructor(r,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Xt();this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length);let l="",v="result";n&&(v="floor(result * 255. + 0.5)");for(let P=0;P<=1;P++)for(let L=0;L<=1;L++){const M=2*P+L;l+=`\n          localCoords = coords;\n          if(localCoords[2] + ${L} < ${this.enableShapeUniforms?"outShape[2]":`${r[2]}`}) {\n          localCoords[2] += ${L};\n          if (localCoords[1] + ${P} < ${this.enableShapeUniforms?"outShape[1]":`${r[1]}`}) {\n            localCoords[1] += ${P};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${a.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${M}] = values[0];\n            } else if (offset == 1) {\n              result[${M}] = values[1];\n            } else if (offset == 2) {\n              result[${M}] = values[2];\n            } else {\n              result[${M}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_e(r)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${l}\n\n          ${a.output} = ${v};\n        }\n    `}}function ds(o,r,n,a,l,v){!function Gt(o,r){const n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(o<=0||r<=0)throw new Error(`Requested texture size [${o}x${r}] is invalid.`);if(o>n||r>n)throw new Error(`Requested texture size [${o}x${r}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(r,n);const P=function oe(o){return on(o,()=>o.createTexture(),"Unable to create WebGLTexture.")}(o),L=o.TEXTURE_2D;return B(o,()=>o.bindTexture(L,P)),B(o,()=>o.texParameteri(L,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE)),B(o,()=>o.texParameteri(L,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)),B(o,()=>o.texParameteri(L,o.TEXTURE_MIN_FILTER,o.NEAREST)),B(o,()=>o.texParameteri(L,o.TEXTURE_MAG_FILTER,o.NEAREST)),1===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texImage2D(L,0,a,r,n,0,l,v,null)):B(o,()=>o.texStorage2D(L,1,a,r,n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null)),{texture:P,texShape:[n,r]}}function Bn(o){return o.internalFormatFloat}function Vs(o){return o.internalFormatHalfFloat}function nr(o){return o.downloadTextureFormat}function rr(o){return o.internalFormatPackedFloat}function br(o){return o.internalFormatPackedHalfFloat}class or{constructor(r){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=(0,s._K2)().getNumber("WEBGL_VERSION");if(null!=r?(this.gl=r,function x(o,r){E[o]=r}(n,r)):this.gl=g(n),r=this.gl,2===(0,s._K2)().getNumber("WEBGL_VERSION")){const v=r;this.createVertexArray=()=>B(v,()=>v.createVertexArray()),this.bindVertexArray=P=>B(v,()=>v.bindVertexArray(P)),this.deleteVertexArray=P=>B(v,()=>v.deleteVertexArray(P)),this.getVertexArray=()=>B(v,()=>v.getParameter(v.VERTEX_ARRAY_BINDING))}else if(null!=r){const v=r.getExtension("OES_vertex_array_object");if(null==v)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>B(r,()=>v.createVertexArrayOES()),this.bindVertexArray=P=>B(r,()=>v.bindVertexArrayOES(P)),this.deleteVertexArray=P=>B(r,()=>v.deleteVertexArrayOES(P)),this.getVertexArray=()=>B(r,()=>r.getParameter(v.VERTEX_ARRAY_BINDING_OES))}let a="WEBGL_color_buffer_float";const l="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s._K2)().getNumber("WEBGL_VERSION")){const P="OES_texture_half_float";if(this.textureFloatExtension=Z(this.gl,"OES_texture_float"),Rt(this.gl,P))this.textureHalfFloatExtension=Z(this.gl,P);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),Rt(this.gl,l))this.colorBufferHalfFloatExtension=Z(this.gl,l);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",Rt(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else{if(!Rt(this.gl,l))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(l)}this.vertexBuffer=function ss(o){return function Tt(o,r){const n=on(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,n)),B(o,()=>o.bufferData(o.ARRAY_BUFFER,r,o.STATIC_DRAW)),n}(o,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function xs(o){return function Et(o,r){const n=on(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return B(o,()=>o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,n)),B(o,()=>o.bufferData(o.ELEMENT_ARRAY_BUFFER,r,o.STATIC_DRAW)),n}(o,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function ce(o){return on(o,()=>o.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=F(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const r=this.gl;B(r,()=>r.finish()),B(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),B(r,()=>r.deleteFramebuffer(this.framebuffer)),B(r,()=>r.bindBuffer(r.ARRAY_BUFFER,null)),B(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null)),B(r,()=>r.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(r,n){return this.throwIfDisposed(),function Ns(o,r,n,a){const[l,v]=C(r,n);return ds(o,l,v,Bn(a),a.textureFormatFloat,o.FLOAT)}(this.gl,r,n,this.textureConfig)}createFloat16MatrixTexture(r,n){return this.throwIfDisposed(),function er(o,r,n,a){const[l,v]=C(r,n);return ds(o,l,v,Vs(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,r,n,this.textureConfig)}createUnsignedBytesMatrixTexture(r,n){return this.throwIfDisposed(),function sr(o,r,n,a){const[l,v]=C(r,n);return ds(o,l,v,nr(a),o.RGBA,o.UNSIGNED_BYTE)}(this.gl,r,n,this.textureConfig)}uploadPixelDataToTexture(r,n){this.throwIfDisposed(),function Wr(o,r,n){B(o,()=>o.bindTexture(o.TEXTURE_2D,r)),n.data instanceof Uint8Array?2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,n.width,n.height,o.RGBA,o.UNSIGNED_BYTE,n.data)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,n.width,n.height,0,o.RGBA,o.UNSIGNED_BYTE,n.data)):2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,o.RGBA,o.UNSIGNED_BYTE,n)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,o.RGBA,o.UNSIGNED_BYTE,n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null))}(this.gl,r,n)}uploadDenseMatrixToTexture(r,n,a,l){this.throwIfDisposed(),function Fr(o,r,n,a,l,v){let P,L,M;B(o,()=>o.bindTexture(o.TEXTURE_2D,r)),l instanceof Uint8Array?(P=new Uint8Array(n*a*4),L=o.UNSIGNED_BYTE,M=o.RGBA):(P=new Float32Array(n*a*4),L=o.FLOAT,M=v.internalFormatPackedFloat),P.set(l),2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,n,a,o.RGBA,L,P)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,M,n,a,0,o.RGBA,L,P)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null))}(this.gl,r,n,a,l,this.textureConfig)}createFloat16PackedMatrixTexture(r,n){return this.throwIfDisposed(),function kr(o,r,n,a){const[l,v]=G(r,n);return ds(o,l,v,br(a),o.RGBA,a.textureTypeHalfFloat)}(this.gl,r,n,this.textureConfig)}createPackedMatrixTexture(r,n){return this.throwIfDisposed(),function Ar(o,r,n,a){const[l,v]=G(r,n);return ds(o,l,v,rr(a),o.RGBA,o.FLOAT)}(this.gl,r,n,this.textureConfig)}deleteMatrixTexture(r){this.throwIfDisposed(),this.outputTexture===r&&(te(this.gl,this.framebuffer),this.outputTexture=null),B(this.gl,()=>this.gl.deleteTexture(r))}downloadByteEncodedFloatMatrixFromOutputTexture(r,n,a){return this.downloadMatrixDriver(r,()=>function Vr(o,r,n,a){const[l,v]=C(r,n),L=new Uint8Array(function T(o,r){return o*r}(r*n,4));return B(o,()=>o.readPixels(0,0,l,v,a.downloadTextureFormat,o.UNSIGNED_BYTE,L)),new Float32Array(L.buffer)}(this.gl,n,a,this.textureConfig))}downloadPackedMatrixFromBuffer(r,n,a,l,v,P){return function Mr(o,r,n,a,l,v,P,L){const M=o,V=new Float32Array(function H(o,r){const[n,a]=G(o,r);return n*a*4}(v,P));return M.bindBuffer(M.PIXEL_PACK_BUFFER,r),M.getBufferSubData(M.PIXEL_PACK_BUFFER,0,V),M.bindBuffer(M.PIXEL_PACK_BUFFER,null),V}(this.gl,r,0,0,0,v,P)}downloadFloat32MatrixFromBuffer(r,n){return function _r(o,r,n){const a=o,l=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,r),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,l),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),l}(this.gl,r,n)}createBufferFromTexture(r,n,a){this.bindTextureToFrameBuffer(r);const l=function Ur(o,r,n){const l=o.createBuffer();B(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,l));const L=16*r*n;return B(o,()=>o.bufferData(o.PIXEL_PACK_BUFFER,L,o.STREAM_READ)),B(o,()=>o.readPixels(0,0,n,r,o.RGBA,o.FLOAT,0)),B(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,null)),l}(this.gl,n,a);return this.unbindTextureToFrameBuffer(),l}createAndWaitForFence(){const r=this.createFence(this.gl);return this.pollFence(r)}createFence(r){let n,a;if((0,s._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const l=r,v=l.fenceSync(l.SYNC_GPU_COMMANDS_COMPLETE,0);r.flush(),a=()=>{const P=l.clientWaitSync(v,0,0);return P===l.ALREADY_SIGNALED||P===l.CONDITION_SATISFIED},n=v}else(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(n,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:n,isFencePassed:a}}downloadMatrixFromPackedTexture(r,n,a){return this.downloadMatrixDriver(r,()=>function Kr(o,r,n){const a=new Float32Array(r*n*4);return B(o,()=>o.readPixels(0,0,n,r,o.RGBA,o.FLOAT,a)),a}(this.gl,n,a))}createProgram(r){this.throwIfDisposed();const n=this.gl;null==this.vertexShader&&(this.vertexShader=function Pn(o){const r=Xt();return function j(o,r){const n=on(o,()=>o.createShader(o.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(B(o,()=>o.shaderSource(n,r)),B(o,()=>o.compileShader(n)),!1===o.getShaderParameter(n,o.COMPILE_STATUS))throw console.log(o.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(o,`${r.version}\n    precision highp float;\n    ${r.attribute} vec3 clipSpacePos;\n    ${r.attribute} vec2 uv;\n    ${r.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(n));const a=function ot(o){return on(o,()=>o.createProgram(),"Unable to create WebGLProgram.")}(n);B(n,()=>n.attachShader(a,this.vertexShader)),B(n,()=>n.attachShader(a,r)),function rt(o,r){if(B(o,()=>o.linkProgram(r)),!(0,s._K2)().get("ENGINE_COMPILE_ONLY")&&!1===o.getProgramParameter(r,o.LINK_STATUS))throw console.log(o.getProgramInfoLog(r)),new Error("Failed to link vertex and fragment shaders.")}(n,a);const l=Object.assign(a,{vao:this.createVertexArray()});return this.debug&&tt(n,l),l}buildVao(r){this.setProgram(r),this.bindVertexArray(r.vao);const n=this.gl;B(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function Er(o,r,n){B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,n)),Jt(o,r,"clipSpacePos",n,3,20,0)&&Jt(o,r,"uv",n,2,20,12)}(n,r,this.vertexBuffer)}deleteProgram(r){this.throwIfDisposed(),r===this.program&&(this.program=null),null!=r&&(B(this.gl,()=>this.gl.deleteProgram(r)),this.deleteVertexArray(r.vao))}setProgram(r){this.throwIfDisposed(),this.program=r,null!=this.program&&this.debug&&tt(this.gl,this.program),B(this.gl,()=>this.gl.useProgram(r))}getUniformLocation(r,n,a=!0){return this.throwIfDisposed(),a?function re(o,r,n){return on(o,()=>o.getUniformLocation(r,n),'uniform "'+n+'" not present in program.')}(this.gl,r,n):function Se(o,r,n){return o.getUniformLocation(r,n)}(this.gl,r,n)}getAttributeLocation(r,n){return this.throwIfDisposed(),B(this.gl,()=>this.gl.getAttribLocation(r,n))}getUniformLocationNoThrow(r,n){return this.throwIfDisposed(),this.gl.getUniformLocation(r,n)}setInputMatrixTexture(r,n,a){this.throwIfDisposed(),this.throwIfNoProgram(),Oe(this.gl,r,n,a)}setOutputMatrixTexture(r,n,a){this.setOutputMatrixTextureDriver(r,a,n)}setOutputPackedMatrixTexture(r,n,a){this.throwIfDisposed();const[l,v]=G(n,a);this.setOutputMatrixTextureDriver(r,l,v)}setOutputMatrixWriteRegion(r,n,a,l){this.setOutputMatrixWriteRegionDriver(a,r,l,n)}setOutputPackedMatrixWriteRegion(r,n,a,l){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&tt(this.gl,this.program),he(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const r=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}B(r,()=>r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),B(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Z(this.gl,2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const a=this.gl,l=this.getQueryTimerExtensionWebGL2(),v=a.createQuery();return a.beginQuery(l.TIME_ELAPSED_EXT,v),v}const r=this.getQueryTimerExtensionWebGL1(),n=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,n),n}endQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const n=this.gl,a=this.getQueryTimerExtensionWebGL2();return void n.endQuery(a.TIME_ELAPSED_EXT)}const r=this.getQueryTimerExtensionWebGL1();r.endQueryEXT(r.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(r){var n=this;return(0,i.A)(function*(){return yield s.ZSL.repeatedTry(()=>n.disposed||n.isQueryAvailable(r,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),n.getQueryTime(r,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(r,n){if(0===n)return null;if(2===n){const a=this.gl;return a.getQueryParameter(r,a.QUERY_RESULT)/1e6}{const a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(r,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(r,n){if(0===n)return!0;if(2===n){const a=this.gl,l=this.getQueryTimerExtensionWebGL2(),v=a.getQueryParameter(r,a.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(l.GPU_DISJOINT_EXT)),v&&!this.disjoint}{const a=this.getQueryTimerExtensionWebGL1(),l=a.getQueryObjectEXT(r,a.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),l&&!this.disjoint}}pollFence(r){return new Promise(n=>{this.addItemToPoll(()=>r.isFencePassed(),()=>n())})}pollItems(){const r=function wt(o){let r=0;for(;r<o.length&&o[r]();++r);return r-1}(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=r;++n){const{resolveFn:a}=this.itemsToPoll[n];a()}this.itemsToPoll=this.itemsToPoll.slice(r+1)}addItemToPoll(r,n){if(this.itemsToPoll.push({isDoneFn:r,resolveFn:n}),this.itemsToPoll.length>1)return;let a;"setTimeoutCustom"in(0,s._K2)().platform&&(a=(0,s._K2)().platform.setTimeoutCustom.bind((0,s._K2)().platform)),s.ZSL.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,a)}bindTextureToFrameBuffer(r){this.throwIfDisposed(),Kt(this.gl,r,this.framebuffer),this.debug&&he(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Kt(this.gl,this.outputTexture,this.framebuffer),this.debug&&he(this.gl)):te(this.gl,this.framebuffer)}downloadMatrixDriver(r,n){this.bindTextureToFrameBuffer(r);const a=n();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(r,n,a){this.throwIfDisposed();const l=this.gl;Kt(l,r,this.framebuffer),this.debug&&he(l),this.outputTexture=r,B(l,()=>l.viewport(0,0,n,a)),B(l,()=>l.scissor(0,0,n,a))}setOutputMatrixWriteRegionDriver(r,n,a,l){this.throwIfDisposed(),B(this.gl,()=>this.gl.scissor(r,n,a,l))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var ae=t(13375),ge=t(6936),De=t(40364),cn=t(74291),mn=t(75148),En=t(18946),_n=t(91332),Yn=t(71007),vs=t(18692),Vn=t(3878),os=t(2017),Rs=t(86315),zr=t(60509),eo=t(89505),no=t(1885),Qr=t(64730),Jr=t(11040),co=t(43905),bt=t(94621),Qt=t(33438),Bt=t(40553),Ht=t(32747),le=t(92287),fe=t(86705),Ce=t(13432),pe=t(88054),ye=t(6567),gn=t(8161),An=t(673),Hn=t(6251),Kn=t(36499),jn=t(94014),Ys=t(94303),yr=t(63685),Ks=t(20273),po=t(35298),ho=t(19454),fo=t(94985),ps=t(32596),Gr=t(2821),Po=t(48953),mo=t(70065),Oo=t(72856),so=t(33197),go=t(8440),Ea=t(29956),_a=t(44169),ya=t(73033);const{mx:xa,XI:$o,Nk:va,f6:Ta,ct:Ca,YG:Da,hH:Ia,z3:Pa,sG:Oa,uM:Sa,vS:Aa,qB:ba,GG:Ma,rq:Na,lg:Ra,WR:La,cu:$a,GE:wa,px:Ba,jC:ka,He:wo,hE:Fa,BF:Wa,Dk:Ua,cl:Va,_B:Ka,ub:za,_f:Ga,Ku:Ha,qy:ja,Zy:Za,bu:Ya,zv:Xa,dH:Bo,HS:Qa,yH:Ja,l3:qa,z9:ro,x6:ti,_m:ko,eW:ei,GK:Fo,SP:ni,yr:si,dl:Wo,Dw:ri,xT:oi,_X:So,wz:ai}=e;function Uo(o,r){return["x","y","z","w","u","v"].slice(0,r).map(n=>`${o}.${n}`)}function Ts(o,r){return 1===r?[o]:Uo(o,r)}class li{constructor(r){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=r,this.rank=r.length,this.enableShapeUniforms=Pe(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Ts("rc",this.rank),a=O(this.rank),l=this.getOutOfBoundsCondition(n),v=this.getSetup(n),P=this.getOutput(n);this.userCode=`\n        void main() {\n          ${a} rc = getOutputCoords();\n\n          if(${l}) {\n            setOutput(vec4(0));\n          } else {\n            ${v}\n\n            setOutput(vec4(${P}));\n          }\n        }\n      `}}getSourceCoordsArr(r){const n=[];for(let a=0;a<=1;a++)for(let l=0;l<=1;l++){let v=`${0===a?"r":"rp1"}, ${0===l?"c":"cp1"}`;for(let P=2;P<this.rank;P++)v=`${r[r.length-1-P]},`+v;n.push(v)}return n}getOutOfBoundsCondition(r){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let a=this.rank-2;a<this.rank;a++)n+=`${r[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(n+="||");return n}getSetup(r){if(1===this.rank)return"";const n=r.slice(-2);return`\n      int r = ${n[0]};\n      int c = ${n[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(r){const n=this.getSourceCoordsArr(r);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),\n            cEdge ? 0. : getA(${n[1]}),\n            rEdge ? 0. : getA(${n[2]}),\n            rEdge || cEdge ? 0. : getA(${n[3]})`}}class Vo{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length);let a="";for(let l=0;l<4;l++){let v="thisRC = rc;";l%2==1&&(v+="thisRC.z += 1;"),l>1&&(v+="thisRC.y += 1;"),a+=`\n        ${v}\n        ${l>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${l}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${l>0?"}":""}\n      `}this.userCode=`\n      ${function ui(o,r){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function tn(o,r,n="index"){const l=function be(o,r){const n=o.length,a=o.map(v=>`${r}[${v}]`),l=new Array(n-1);l[n-2]=a[n-1];for(let v=n-3;v>=0;--v)l[v]=`(${l[v+1]} * ${a[v+1]})`;return l}(o.map((v,P)=>P),r);return l.map((v,P)=>`int ${o[P]} = ${n} / ${l[P]}; ${P===l.length-1?`int ${o[P+1]} = ${n} - ${o[P]} * ${l[P]}`:`index -= ${o[P]} * ${l[P]}`};`).join("")}(["r","c","d"],"inputShape"):Yt(["r","c","d"],o)}\n      return ivec3(r, c, d);\n    }\n  `}(n,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":_e(r)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":r[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":r[2]};\n\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class ci{constructor(r){this.gpgpu=r,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(r,n,a){const l=zo(n,a),v=Go(r,l,a);v in this.freeTextures||(this.freeTextures[v]=[]),v in this.usedTextures||(this.usedTextures[v]=[]);const P=Ko(r,l,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[v].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=P,this.log();const M=this.freeTextures[v].pop();return this.usedTextures[v].push(M),M}let L;return l===d.PACKED_2X2_FLOAT32?L=this.gpgpu.createPackedMatrixTexture(r[0],r[1]):l===d.PACKED_2X2_FLOAT16?L=this.gpgpu.createFloat16PackedMatrixTexture(r[0],r[1]):l===d.UNPACKED_FLOAT32?L=this.gpgpu.createFloat32MatrixTexture(r[0],r[1]):l===d.UNPACKED_FLOAT16?L=this.gpgpu.createFloat16MatrixTexture(r[0],r[1]):l===d.PACKED_4X1_UNSIGNED_BYTE&&(L=this.gpgpu.createUnsignedBytesMatrixTexture(r[0],r[1])),this.usedTextures[v].push(L),this.numUsedTextures++,this._numBytesAllocated+=P,this.log(),L}releaseTexture(r,n,a,l){if(null==this.freeTextures)return;const v=zo(a,l),P=Go(n,v,l);P in this.freeTextures||(this.freeTextures[P]=[]);const L=Ko(n,v,this.gpgpu.gl,this.gpgpu.textureConfig,l),M=(0,s._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==M&&this._numBytesAllocated>M?(this.gpgpu.deleteMatrixTexture(r.texture),this._numBytesAllocated-=L):(this.freeTextures[P].push(r),this.numFreeTextures++,this._numBytesFree+=L),this.numUsedTextures--;const V=this.usedTextures[P],z=V&&V.indexOf(r);if(null==z||z<0)throw new Error("Cannot release a texture that was never provided by this texture manager");V[z]=V[V.length-1],V.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const r in this.freeTextures)this.freeTextures[r].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const r in this.usedTextures)this.usedTextures[r].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ko(o,r,n,a,l){const v=function pi(o,r){switch(o){case d.PACKED_2X2_FLOAT32:return rr(r);case d.PACKED_2X2_FLOAT16:return br(r);case d.UNPACKED_FLOAT32:return Bn(r);case d.UNPACKED_FLOAT16:return Vs(r);case d.PACKED_4X1_UNSIGNED_BYTE:return nr(r);default:throw new Error(`Unknown physical texture type ${o}`)}}(r,a);let P;if(l){const[M,V]=G(o[0],o[1]);P=M*V}else{const[M,V]=C(o[0],o[1]);P=M*V}const L=function di(o,r){if(r===o.R32F)return 4;if(r===o.R16F)return 2;if(r===o.RGBA32F)return 16;if(r===o.RGBA)return 16;if(r===o.RGBA16F)return 8;if(r===o.RGBA8)return 4;throw new Error(`Unknown internal format ${r}`)}(n,v);return P*L}function zo(o,r){if(o===u.UPLOAD)return d.PACKED_2X2_FLOAT32;if(o===u.RENDER||null==o)return function hi(o){return(0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?o?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:o?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(r);if(o===u.DOWNLOAD||o===u.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${o}`)}function Go(o,r,n){return`${o[0]}_${o[1]}_${r}_${n}`}class ar{constructor(r,n){this.variableNames=["A"],this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${n}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ls="if (isnan(x)) return x;",fi="return x;",Ho="return abs(x);",mi="return (x >= 0.0) ? x : (exp(x) - 1.0);",gi=Ls+"\n  return (x < 0.0) ? 0.0 : x;\n",Ei=Ls+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Nr="return x;",_i="return 1.0 / (1.0 + exp(-1.0 * x));",yi="return x;",xi="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",vi="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ti="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ci="return 1.0 / (1.0 + exp(-1.0 * x));";class $s{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${n}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Di{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length);const n=r.length,a=Ts("rc",n),l=O(n),v=function ii(o,r){if(1===o)return"rc";let n="";for(let a=0;a<o;a++)n+=r[a],a<o-1&&(n+=",");return n}(n,a),P=a.slice(-2),L=n<=1?"rc":`vec2(${P.join(",")})`;this.userCode=`\n      void main() {\n        ${l} rc = getOutputCoords();\n        vec4 packedInput = getA(${v});\n\n        setOutput(getChannel(packedInput, ${L}));\n      }\n    `}}const Ii=s.kpo.YO,Eo={},Ai=(0,s._K2)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let Ni=(()=>{class o extends s.uI_{nextDataId(){return o.nextDataId++}constructor(n){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s._K2)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let a;if(null!=n){if(n instanceof or)a=n;else{const l=g((0,s._K2)().getNumber("WEBGL_VERSION"),n);a=new or(l)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const l=g((0,s._K2)().getNumber("WEBGL_VERSION"));a=new or(l),this.binaryCache=function Si(o){return o in Eo||(Eo[o]={}),Eo[o]}((0,s._K2)().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=a,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ci(this.gpgpu),this.numMBBeforeWarning=function Mi(){return null==(0,s._K2)().global.screen?1024:(0,s._K2)().global.screen.height*(0,s._K2)().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new s.GJx(this,(0,s.Hi9)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(n,a,l,v,P,L){const M=this.makeTensorInfo(a,l),V=this.texData.get(M.dataId);V.isPacked=!1,V.texture={texture:n,texShape:[v,P]},V.texShape=[v,P];const z=$n(a),Y=new xn(z,!1,L),et=this.runWebGLProgram(Y,[M],l,[[v,P]]);return et.shape=a,V.texture=null,this.disposeIntermediateTensorInfo(M),et.dataId}write(n,a,l){if(((0,s._K2)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s._K2)().getBool("DEBUG"))&&this.checkNumericalProblems(n),"complex64"===l&&null!=n)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const v={id:this.nextDataId()};return this.texData.set(v,{shape:a,dtype:l,values:n,usage:u.UPLOAD,refCount:1}),v}refCount(n){return this.texData.has(n)?this.texData.get(n).refCount:0}incRef(n){this.texData.get(n).refCount++}decRef(n){this.texData.has(n)&&this.texData.get(n).refCount--}move(n,a,l,v,P){if((0,s._K2)().getBool("DEBUG")&&this.checkNumericalProblems(a),"complex64"===v)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(n,{shape:l,dtype:v,values:a,usage:u.UPLOAD,refCount:P})}disposeIntermediateTensorInfo(n){this.disposeData(n.dataId)}readSync(n){const a=this.texData.get(n),{values:l,dtype:v,complexTensorInfos:P,slice:L,shape:M,isPacked:V}=a;if(null!=L){let ut;ut=V?new $s(M,Nr):new ar(M,Nr);const Ct=this.runWebGLProgram(ut,[{dataId:n,shape:M,dtype:v}],v),Nt=this.readSync(Ct.dataId);return this.disposeIntermediateTensorInfo(Ct),Nt}if(null!=l)return this.convertAndCacheOnCPU(n);if("string"===v)return l;const z=null!=this.activeTimers;let Y,et;if(z&&(Y=s.ZSL.now()),"complex64"===v){const ut=this.readSync(P.real.dataId),Ct=this.readSync(P.imag.dataId);et=s.C0T.mergeRealAndImagArrays(ut,Ct)}else et=this.getValuesFromTexture(n);return z&&(this.downloadWaitMs+=s.ZSL.now()-Y),this.convertAndCacheOnCPU(n,et)}read(n){var a=this;return(0,i.A)(function*(){if(a.pendingRead.has(n)){const Wt=a.pendingRead.get(n);return new Promise($t=>Wt.push($t))}const l=a.texData.get(n),{values:v,shape:P,slice:L,dtype:M,complexTensorInfos:V,isPacked:z}=l;if(null!=L){let Wt;Wt=z?new $s(P,Nr):new ar(P,Nr);const $t=a.runWebGLProgram(Wt,[{dataId:n,shape:P,dtype:M}],M),jt=a.read($t.dataId);return a.disposeIntermediateTensorInfo($t),jt}if(null!=v)return a.convertAndCacheOnCPU(n);if((0,s._K2)().getBool("DEBUG")&&!(0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s._K2)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let et,ut,Y=null;if("complex64"!==M&&(0,s._K2)().get("WEBGL_BUFFER_SUPPORTED")){et=a.decode(n);const Wt=a.texData.get(et.dataId);Y=a.gpgpu.createBufferFromTexture(Wt.texture.texture,...S(P))}if(a.pendingRead.set(n,[]),"complex64"!==M&&(yield a.gpgpu.createAndWaitForFence()),"complex64"===M){const Wt=yield Promise.all([a.read(V.real.dataId),a.read(V.imag.dataId)]);ut=s.C0T.mergeRealAndImagArrays(Wt[0],Wt[1])}else if(null==Y)ut=a.getValuesFromTexture(n);else{const Wt=s.ZSL.sizeFromShape(P);ut=a.gpgpu.downloadFloat32MatrixFromBuffer(Y,Wt)}if(null!=et&&a.disposeIntermediateTensorInfo(et),null!=Y){const Wt=a.gpgpu.gl;B(Wt,()=>Wt.deleteBuffer(Y))}const Ct=a.convertAndCacheOnCPU(n,ut),Nt=a.pendingRead.get(n);return a.pendingRead.delete(n),Nt.forEach(Wt=>Wt(Ct)),a.pendingDisposal.has(n)&&(a.pendingDisposal.delete(n),a.disposeData(n)&&(0,s.Hi9)().removeDataId(n,a),a.pendingDeletes--),Ct})()}readToGPU(n,a={}){const l=this.texData.get(n),{values:v,shape:P,slice:L,dtype:M,isPacked:V,texture:z}=l;if("complex64"===M)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=L){let Ct;Ct=V?new $s(P,Nr):new ar(P,Nr);const Nt=this.runWebGLProgram(Ct,[{dataId:n,shape:P,dtype:M}],M),Wt=this.readToGPU(Nt,a);return this.disposeIntermediateTensorInfo(Nt),Wt}if(null==z)throw null!=v?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const Y=this.decode(n,a.customTexShape),et=(0,s.Hi9)().makeTensorFromTensorInfo(Y),ut=this.texData.get(Y.dataId);return Object.assign({tensorRef:et},ut.texture)}bufferSync(n){const a=this.readSync(n.dataId);if("string"===n.dtype)try{const l=a.map(v=>s.ZSL.decodeString(v));return(0,s.ra8)(n.shape,n.dtype,l)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.ra8)(n.shape,n.dtype,a)}checkNumericalProblems(n){if(null!=n)for(let a=0;a<n.length;a++){const l=n[a];if(!U(l))throw(0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${l} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${l} cannot be represented on this device.`)}}getValuesFromTexture(n){const{shape:a,dtype:l,isPacked:v}=this.texData.get(n),P=s.ZSL.sizeFromShape(a);if((0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const ut=this.decode(n),Ct=this.texData.get(ut.dataId),Nt=this.gpgpu.downloadMatrixFromPackedTexture(Ct.texture.texture,...S(a)).subarray(0,P);return this.disposeIntermediateTensorInfo(ut),Nt}const L=(0,s._K2)().getBool("WEBGL_PACK")&&!0===v,M=L?$n(a):a,V=L?new Tn(M):new qe(M),z=this.runWebGLProgram(V,[{shape:M,dtype:l,dataId:n}],"float32"),Y=this.texData.get(z.dataId),et=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(Y.texture.texture,Y.texShape[0],Y.texShape[1]).subarray(0,P);return this.disposeIntermediateTensorInfo(z),et}timerAvailable(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(n){var a=this;const l=this.activeTimers,v=[];let P=!1;null==this.programTimersStack?(this.programTimersStack=v,P=!0):this.activeTimers.push(v),this.activeTimers=v,n();const L=s.ZSL.flatten(this.activeTimers.map(z=>z.query)).filter(z=>null!=z),M=s.ZSL.flatten(this.activeTimers.map(z=>z.name)).filter(z=>null!=z);this.activeTimers=l,P&&(this.programTimersStack=null);const V={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,i.A)(function*(){if((0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const z=yield Promise.all(L);V.kernelMs=s.ZSL.sum(z),V.getExtraProfileInfo=()=>z.map((Y,et)=>({name:M[et],ms:Y})).map(Y=>`${Y.name}: ${Y.ms}`).join(", ")}else V.kernelMs={error:"WebGL query timers are not supported in this environment."};return a.uploadWaitMs=0,a.downloadWaitMs=0,V})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.ZSL.now(),endMs:null}}endTimer(n){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),n):(n.endMs=s.ZSL.now(),n)}getQueryTime(n){var a=this;return(0,i.A)(function*(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?a.gpgpu.waitForQueryAndGetTime(n):n.endMs-n.startMs})()}disposeData(n,a=!1){if(this.pendingDisposal.has(n))return!1;if(!this.texData.has(n))return!0;if(a?this.texData.get(n).refCount=0:this.texData.get(n).refCount--,!a&&this.texData.get(n).refCount>0)return!1;if(this.pendingRead.has(n))return this.pendingDisposal.add(n),this.pendingDeletes++,!1;this.releaseGPUData(n);const{complexTensorInfos:l}=this.texData.get(n);return null!=l&&(this.disposeData(l.real.dataId,a),this.disposeData(l.imag.dataId,a)),this.texData.delete(n),!0}releaseGPUData(n){const{texture:a,dtype:l,texShape:v,usage:P,isPacked:L,slice:M}=this.texData.get(n),V=M&&M.origDataId||n,z=this.dataRefCount.get(V);z>1?this.dataRefCount.set(V,z-1):(this.dataRefCount.delete(V),null!=a&&(this.numBytesInGPU-=this.computeBytes(v,l),this.textureManager.releaseTexture(a,v,P,L)));const Y=this.texData.get(n);Y.texture=null,Y.texShape=null,Y.isPacked=!1,Y.slice=null}getTexture(n){return this.uploadToGPU(n),this.texData.get(n).texture.texture}getDataInfo(n){return this.texData.get(n)}shouldExecuteOnCPU(n,a=Ai){return(0,s._K2)().getBool("WEBGL_CPU_FORWARD")&&n.every(l=>null==this.texData.get(l.dataId).texture&&s.ZSL.sizeFromShape(l.shape)<a)}getGPGPUContext(){return this.gpgpu}where(n){s.C0T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const a=n.dataSync();return Ii(n.shape,a)}packedUnaryOp(n,a,l){const v=new $s(n.shape,a),P=this.compileAndRun(v,[n],l);return(0,s.Hi9)().makeTensorFromTensorInfo(P)}abs(n){if(this.shouldExecuteOnCPU([n])&&"complex64"!==n.dtype){const v=Bo(this.texData.get(n.dataId).values);return this.makeOutput(n.shape,n.dtype,v)}if((0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(n,Ho,n.dtype);const a=new ar(n.shape,Ho),l=this.compileAndRun(a,[n]);return(0,s.Hi9)().makeTensorFromTensorInfo(l)}makeTensorInfo(n,a,l){let v;if("string"===a&&null!=l&&l.length>0&&s.ZSL.isString(l[0])){const P=l.map(L=>s.ZSL.encodeString(L));v=this.write(P,n,a)}else v=this.write(l,n,a);return this.texData.get(v).usage=null,{dataId:v,shape:n,dtype:a}}makeOutput(n,a,l){return(0,s.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(n,a,l),this)}unpackTensor(n){const a=new Di(n.shape);return this.runWebGLProgram(a,[n],n.dtype)}packTensor(n){const a=new li(n.shape);return this.runWebGLProgram(a,[n],n.dtype,null,!0)}packedReshape(n,a){const l=[fn(n.shape),...dn(n.shape)],v={dtype:n.dtype,shape:l,dataId:n.dataId},P=[fn(a),...dn(a)],L=new Vo(P,l),z=this.runWebGLProgram(L,[v],n.dtype,[l],!0);return{dataId:z.dataId,shape:a,dtype:z.dtype}}decode(n,a){const l=this.texData.get(n),{isPacked:v,shape:P,dtype:L}=l;if(null!=a){const ut=s.ZSL.sizeFromShape(P);s.ZSL.assert(ut<=a[0]*a[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const M=$n(P);let V;V=v?new He(M):new $e(M);const Y=[null!=a?a:S(M)];return{dtype:L,shape:P,dataId:this.runWebGLProgram(V,[{shape:M,dtype:L,dataId:n}],L,Y,!0,a).dataId}}runWebGLProgram(n,a,l,v,P=!1,L){const M=this.makeTensorInfo(n.outputShape,l),V=this.texData.get(M.dataId);if(n.packedOutput&&(V.isPacked=!0),n.outPackingScheme===p.DENSE){const jt=null!=L?L:S(n.outputShape);V.texShape=jt.map(Ie=>2*Ie)}if(null!=n.outTexUsage&&(V.usage=n.outTexUsage),0===s.ZSL.sizeFromShape(M.shape))return V.values=s.ZSL.getTypedArrayFromDType(M.dtype,0),M;const z=[],Y=a.map(jt=>{if("complex64"===jt.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let Ie=this.texData.get(jt.dataId);if(null==Ie.texture){if(!n.packedInputs&&s.ZSL.sizeFromShape(jt.shape)<=(0,s._K2)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:jt.shape,texData:null,isUniform:!0,uniformValues:Ie.values};n.packedInputs&&(Ie.isPacked=!0,Ie.shape=jt.shape)}if(this.uploadToGPU(jt.dataId),!!Ie.isPacked!=!!n.packedInputs)jt=Ie.isPacked?this.unpackTensor(jt):this.packTensor(jt),z.push(jt),Ie=this.texData.get(jt.dataId);else if(Ie.isPacked&&!Gn(Ie.shape,jt.shape)){const Ae=jt,Je=jt.shape;jt.shape=Ie.shape,jt=this.packedReshape(jt,Je),z.push(jt),Ie=this.texData.get(jt.dataId),Ae.shape=Je}return{shape:jt.shape,texData:Ie,isUniform:!1}});this.uploadToGPU(M.dataId);const et={shape:M.shape,texData:V,isUniform:!1},ut=function ee(o,r,n){let a="";r.concat(n).forEach(P=>{const L=null!=P.texData&&null!=P.texData.slice&&P.texData.slice.flatOffset>0;if(o.enableShapeUniforms&&!P.isUniform){const M=P.texData.texShape,{useSqueezeShape:V,uniformShape:z,keptDims:Y}=y(o.packedInputs,P.shape,M);let et="",ut="",Ct="";if(1===z.length&&o.packedInputs){const Je=[Math.ceil(M[0]/2),Math.ceil(M[1]/2)];et=`${Je[0]>1}_${Je[1]>1}`}else if(2!==z.length||o.packedInputs){if(z.length>2&&!o.packedInputs){const Je=s.ZSL.computeStrides(z);Ct=`${Je[0]===M[1]}_${Je[Je.length-1]===M[1]}`}}else ut=`${z[0]>1}_${z[1]>1}`;const Nt=P.shape.length,Wt=2===z.length&&s.ZSL.arraysEqual(P.shape,M),$t=1===s.ZSL.sizeFromShape(P.shape),jt=s.C0T.getBroadcastDims(P.shape,n.shape),Ie=!o.packedInputs&&Nt===n.shape.length&&s.ZSL.arraysEqual(M,n.texData.texShape);a+=`${Nt}_${Ie}_${V?Y:""}_${z.length}_${$t}_${jt}_${Wt}_${et}_${ut}_${Ct}_${o.packedInputs||z.length>2?"":`${M[0]>1}_${M[1]>1}`}_${L}`}else a+=`${P.shape}_${P.isUniform?"uniform":P.texData.texShape}_${L}`});let v=o.constructor.name;return v+="_"+a+"_"+o.userCode+`${(0,s._K2)().getNumber("WEBGL_VERSION")}`,v}(n,Y,et),Ct=this.getAndSaveBinary(ut,()=>function nt(o,r,n,a){const l=n.map((z,Y)=>{const et={logicalShape:z.shape,texShape:z.isUniform?null:z.texData.texShape,isUniform:z.isUniform,isPacked:!z.isUniform&&z.texData.isPacked,flatOffset:null};return null!=z.texData&&null!=z.texData.slice&&z.texData.slice.flatOffset>0&&(et.flatOffset=z.texData.slice.flatOffset),{name:r.variableNames[Y],shapeInfo:et}}),v=l.map(z=>z.shapeInfo),P={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},L=ze(l,P,r),M=function it(o,r){const n=on(o,()=>o.createShader(o.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(B(o,()=>o.shaderSource(n,r)),B(o,()=>o.compileShader(n)),(0,s._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===o.getShaderParameter(n,o.COMPILE_STATUS))throw J(r,o.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(o.gl,L),V=o.createProgram(M);return(0,s._K2)().get("ENGINE_COMPILE_ONLY")?{program:r,fragmentShader:M,source:L,webGLProgram:V,inShapeInfos:v,outShapeInfo:P,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(o.buildVao(V),Object.assign({program:r,fragmentShader:M,source:L,webGLProgram:V,inShapeInfos:v,outShapeInfo:P},st(o,r,V)))}(this.gpgpu,n,Y,et)),Nt=null!=this.activeTimers;let Wt;Nt&&(Wt=this.startTimer()),(0,s._K2)().get("ENGINE_COMPILE_ONLY")||function Ot(o,r,n,a,l){r.program.enableShapeUniforms||(Mt(r.inShapeInfos,n),Mt([r.outShapeInfo],[a]));const v=a.texData.texture,P=a.texData.texShape;a.texData.isPacked?o.setOutputPackedMatrixTexture(v.texture,P[0],P[1]):o.setOutputMatrixTexture(v.texture,P[0],P[1]),o.setProgram(r.webGLProgram),o.bindVertexArray(r.webGLProgram.vao),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&null!==r.infLoc&&o.gl.uniform1f(r.infLoc,1/0),null!==r.nanLoc&&o.gl.uniform1f(r.nanLoc,NaN);for(let M=0;M<n.length;++M){const V=n[M],{uniform:z,offset:Y,shape:et,texShape:ut}=r.variablesLocations[M];if(et){const{uniformShape:Ct}=y(r.program.packedInputs,V.shape,V.texData.texShape);switch(Ct.length){case 1:o.gl.uniform1iv(et,new Int32Array(Ct));break;case 2:o.gl.uniform2iv(et,new Int32Array(Ct));break;case 3:o.gl.uniform3iv(et,new Int32Array(Ct));break;case 4:o.gl.uniform4iv(et,new Int32Array(Ct))}}if(ut&&o.gl.uniform2i(ut,V.texData.texShape[0],V.texData.texShape[1]),null!=z){if(V.isUniform){if(s.ZSL.sizeFromShape(V.shape)<2)o.gl.uniform1f(z,V.uniformValues[0]);else{let Ct=V.uniformValues;Ct instanceof Float32Array||(Ct=new Float32Array(Ct)),o.gl.uniform1fv(z,Ct)}continue}null!=V.texData.slice&&null!=Y&&o.gl.uniform1i(Y,V.texData.slice.flatOffset),o.setInputMatrixTexture(V.texData.texture.texture,z,M)}}const L=r.outShapeLocation;if(L)switch(a.shape.length){case 1:o.gl.uniform1iv(L,new Int32Array(a.shape));break;case 2:o.gl.uniform2iv(L,new Int32Array(a.shape));break;case 3:o.gl.uniform3iv(L,new Int32Array(a.shape));break;case 4:o.gl.uniform4iv(L,new Int32Array(a.shape))}if(r.outShapeStridesLocation){const M=s.ZSL.computeStrides(a.shape);switch(a.shape.length){case 2:o.gl.uniform1iv(r.outShapeStridesLocation,new Int32Array(M));break;case 3:o.gl.uniform2iv(r.outShapeStridesLocation,new Int32Array(M));break;case 4:o.gl.uniform3iv(r.outShapeStridesLocation,new Int32Array(M))}}if(r.outTexShapeLocation&&o.gl.uniform2i(r.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),r.program.customUniforms&&l)for(let M=0;M<r.program.customUniforms.length;++M){const V=r.program.customUniforms[M],z=r.customUniformLocations[M],Y=l[M];if("float"===V.type)o.gl.uniform1fv(z,Y);else if("vec2"===V.type)o.gl.uniform2fv(z,Y);else if("vec3"===V.type)o.gl.uniform3fv(z,Y);else if("vec4"===V.type)o.gl.uniform4fv(z,Y);else if("int"===V.type)o.gl.uniform1iv(z,Y);else if("ivec2"===V.type)o.gl.uniform2iv(z,Y);else if("ivec3"===V.type)o.gl.uniform3iv(z,Y);else{if("ivec4"!==V.type)throw Error(`uniform type ${V.type} is not supported yet.`);o.gl.uniform4iv(z,Y)}}o.executeProgram()}(this.gpgpu,Ct,Y,et,v),z.forEach(jt=>this.disposeIntermediateTensorInfo(jt)),Nt&&(Wt=this.endTimer(Wt),this.activeTimers.push({name:n.constructor.name,query:this.getQueryTime(Wt)}));const $t=(0,s._K2)().getNumber("WEBGL_FLUSH_THRESHOLD");if($t>0){const jt=s.ZSL.now();jt-this.lastGlFlushTime>$t&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=jt)}if(!(0,s._K2)().getBool("WEBGL_LAZILY_UNPACK")&&V.isPacked&&!1===P){const jt=this.unpackTensor(M);return this.disposeIntermediateTensorInfo(M),jt}return M}compileAndRun(n,a,l,v,P=!1){return this.runWebGLProgram(n,a,l=l||a[0].dtype,v,P)}getAndSaveBinary(n,a){return n in this.binaryCache||(this.binaryCache[n]=a()),this.binaryCache[n]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,s._K2)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(a=>{this.gpgpu.deleteProgram(this.binaryCache[a].webGLProgram),delete this.binaryCache[a]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.DZQ)(()=>{if(!(0,s._K2)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const n=(0,s._K2)().getBool("DEBUG");(0,s._K2)().set("DEBUG",!1);const a=this.abs((0,s.d_2)(1e-8)).dataSync()[0];if((0,s._K2)().set("DEBUG",n),a>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(n){const a=this.texData.get(n),{shape:l,dtype:v,values:P,texture:L,usage:M,isPacked:V}=a;if(null!=L)return;const z=null!=this.activeTimers;let Y;z&&(Y=s.ZSL.now());let et=a.texShape;if(null==et&&(et=function wn(o,r=!1){let n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,s._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&(0,s._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),r&&(n*=2,a*=2,1===(o=o.map((L,M)=>M>=o.length-2?s.ZSL.nearestLargerEven(o[M]):o[M])).length&&(o=[2,o[0]])),2!==o.length&&(o=s.ZSL.squeezeShape(o).newShape);let l=s.ZSL.sizeFromShape(o),v=null;o.length<=1&&l<=n?v=[1,l]:2===o.length&&o[0]<=n&&o[1]<=n?v=o:3===o.length&&o[0]*o[1]<=n&&o[2]<=n?v=[o[0]*o[1],o[2]]:3===o.length&&o[0]<=n&&o[1]*o[2]<=n?v=[o[0],o[1]*o[2]]:4===o.length&&o[0]*o[1]*o[2]<=n&&o[3]<=n?v=[o[0]*o[1]*o[2],o[3]]:4===o.length&&o[0]<=n&&o[1]*o[2]*o[3]<=n&&(v=[o[0],o[1]*o[2]*o[3]]);const P=null!=v&&Math.max(...v)>a&&Math.min(...v)<=(r?2:1)&&Math.min(...v)>0;if(null==v||P)if(r){const L=fn(o);let M=2,V=2;o.length&&([M,V]=dn(o)),l=L*(M/2)*(V/2),v=s.ZSL.sizeToSquarishShape(l).map(z=>2*z)}else v=s.ZSL.sizeToSquarishShape(l);return v}(l,V),a.texShape=et),null!=P){const ut=$n(l);let Ct,Nt=et[1],Wt=et[0];const $t=P instanceof Uint8Array||P instanceof Uint8ClampedArray;(V||!$t)&&([Nt,Wt]=G(et[0],et[1])),Ct=V?new sn(ut,$t):new xn(ut,$t);const jt=$t?[Wt,Nt]:et,Ie=this.makeTensorInfo(jt,v),Ae=this.texData.get(Ie.dataId);Ae.usage=$t?u.PIXELS:u.UPLOAD,Ae.texShape=jt,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(Ie.dataId),Nt,Wt,P);const Dn=this.runWebGLProgram(Ct,[Ie],v,[[Wt,Nt]],!0),pn=this.texData.get(Dn.dataId);a.texShape=pn.texShape,a.isPacked=pn.isPacked,a.usage=pn.usage,(0,s._K2)().get("ENGINE_COMPILE_ONLY")?this.disposeData(Dn.dataId):(a.texture=pn.texture,a.values=null,this.texData.delete(Dn.dataId)),this.disposeIntermediateTensorInfo(Ie),z&&(this.uploadWaitMs+=s.ZSL.now()-Y)}else{const ut=this.acquireTexture(et,M,v,V);a.texture=ut}}convertAndCacheOnCPU(n,a){const l=this.texData.get(n),{dtype:v}=l;return null!=a&&(l.values=function Ri(o,r){if("float32"===r||"complex64"===r)return o;if("int32"===r||"bool"===r){const n="int32"===r?new Int32Array(o.length):new Uint8Array(o.length);for(let a=0;a<n.length;++a)n[a]=Math.round(o[a]);return n}throw new Error(`Unknown dtype ${r}`)}(a,v)),l.values}acquireTexture(n,a,l,v){if(this.numBytesInGPU+=this.computeBytes(n,l),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const P=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${P} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(n,a,v)}computeBytes(n,a){return n[0]*n[1]*s.ZSL.bytesPerElement(a)}checkCompileCompletion(){for(const[,n]of Object.entries(this.binaryCache))this.checkCompletion_(n)}checkCompileCompletionAsync(){var n=this;return(0,i.A)(function*(){const a=[];if(n.gpgpu.parallelCompilationExtension){for(const[,l]of Object.entries(n.binaryCache))a.push(n.checkCompletionAsync_(l));return Promise.all(a)}for(const[,l]of Object.entries(n.binaryCache)){const v=new Promise(P=>{try{n.checkCompletion_(l),P(!0)}catch(L){throw L}});a.push(v)}return Promise.all(a)})()}checkCompletionAsync_(n){var a=this;return(0,i.A)(function*(){return a.gpgpu.gl.getProgramParameter(n.webGLProgram,a.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?a.checkCompletion_(n):(yield(0,s.dA1)(),a.checkCompletionAsync_(n))})()}checkCompletion_(n){if(!1===this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(n.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(n.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(J(n.source,this.gpgpu.gl.getShaderInfoLog(n.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const n of Object.values(this.binaryCache)){this.gpgpu.buildVao(n.webGLProgram);const{variablesLocations:a,customUniformLocations:l,infLoc:v,nanLoc:P,outShapeLocation:L,outShapeStridesLocation:M,outTexShapeLocation:V}=st(this.gpgpu,n.program,n.webGLProgram);n.variablesLocations=a,n.customUniformLocations=l,n.infLoc=v,n.nanLoc=P,n.outShapeLocation=L,n.outShapeStridesLocation=M,n.outTexShapeLocation=V}}createTensorFromGPUData(n,a,l){n.channels=n.channels||"RGBA";const{texture:v,height:P,width:L,channels:M}=n,V=(0,s.Hi9)().backend;if(!V.gpgpu.gl.isTexture(v))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const z=V.writeTexture(v,a,l,P,L,M);return(0,s.Hi9)().makeTensorFromDataId(z,a,l,V)}}return o.nextDataId=0,o})();const Li="4.22.0";s.eMq.isBrowser()&&(0,s.gJX)("webgl",()=>new Ni,2);const Ao="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Hr{constructor(r,n,a){this.variableNames=["A","B"],this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a),this.enableShapeUniforms=Pe(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${r}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const jr="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Zr{constructor(r,n,a,l=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a);const v=this.outputShape.length;this.enableShapeUniforms=Pe(v);let P="";if(l)if(0===v||1===s.ZSL.sizeFromShape(this.outputShape))P="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(P=`\n          ${O(v)} coords = getOutputCoords();\n        `,1===v)P+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const M=Ts("coords",v);P+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${M[v-2]} + 1) >= outShape[${v} - 2];\n            bool nextColOutOfBounds =\n              (${M[v-1]} + 1) >= outShape[${v} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${M[v-2]} + 1) >= ${this.outputShape[v-2]};\n            bool nextColOutOfBounds =\n              (${M[v-1]} + 1) >= ${this.outputShape[v-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${r}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${P}\n\n        setOutput(result);\n      }\n    `}}function Os(o){const{inputs:r,backend:n}=o,{x:a}=r;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const wi={kernelName:s.lzr,backendName:"webgl",kernelFunc:Os};function Rr(o){const{inputs:r,backend:n}=o,{real:a,imag:l}=r,v=n.makeTensorInfo(a.shape,"complex64"),P=n.texData.get(v.dataId),L=Os({inputs:{x:a},backend:n}),M=Os({inputs:{x:l},backend:n});return P.complexTensorInfos={real:L,imag:M},v}const Bi={kernelName:s.pr3,backendName:"webgl",kernelFunc:Rr},jo="return (a < 0.) ? b * a : a;",Zo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Fi={kernelName:s.X0$,backendName:"webgl",kernelFunc:function ki(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{alpha:v}=a,P=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(v,"float32")),L=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zr(Zo,l.shape,P.shape):new Hr(jo,l.shape,P.shape),M=n.runWebGLProgram(L,[l,P],"float32");return n.disposeIntermediateTensorInfo(P),M}},Yo="return (a < 0.) ? b * a : a;",Xo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Wi={kernelName:s.Ncv,backendName:"webgl",kernelFunc:function Qo(o){const{inputs:r,backend:n}=o,{x:a,alpha:l}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zr(Xo,a.shape,l.shape):new Hr(Yo,a.shape,l.shape);return n.runWebGLProgram(v,[a,l],"float32")}},qr="if (isnan(x)) return x;";function Fn({opSnippet:o,packedOpSnippet:r,cpuKernelImpl:n,dtype:a}){return({inputs:l,backend:v})=>{const{x:P}=l,L=v,M=a||P.dtype;if(L.shouldExecuteOnCPU([P])&&null!=n){const Y=L.texData.get(P.dataId),et=n(Y.values,M);return L.makeTensorInfo(P.shape,M,et)}let z;return z=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=r?new $s(P.shape,r):new ar(P.shape,o),L.runWebGLProgram(z,[P],M)}}function _s({opSnippet:o,packedOpSnippet:r,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:l,dtype:v}){return({inputs:P,backend:L})=>{const{a:M,b:V}=P,z=L;if(a&&"complex64"===M.dtype){const Ct=z.texData.get(M.dataId),Nt=z.texData.get(V.dataId),[Wt,$t]=[[Ct.complexTensorInfos.real,Nt.complexTensorInfos.real],[Ct.complexTensorInfos.imag,Nt.complexTensorInfos.imag]].map(Ie=>{const[Ae,Je]=Ie,On={dataId:Ae.dataId,dtype:Ae.dtype,shape:M.shape},Dn={dataId:Je.dataId,dtype:Je.dtype,shape:V.shape},pn=new Hr(o,M.shape,V.shape);return z.runWebGLProgram(pn,[On,Dn],(0,s.TuY)(Ae.dtype,Je.dtype))}),jt=Rr({inputs:{real:Wt,imag:$t},backend:z});return z.disposeIntermediateTensorInfo(Wt),z.disposeIntermediateTensorInfo($t),jt}const Y=v||(0,s.TuY)(M.dtype,V.dtype);if(("string"===M.dtype||"string"===V.dtype||z.shouldExecuteOnCPU([M,V]))&&null!=l){const Ct=z.texData.get(M.dataId).values,Nt=z.texData.get(V.dataId).values,Wt="string"===M.dtype?s.C0T.fromUint8ToStringArray(Ct):Ct,$t="string"===M.dtype?s.C0T.fromUint8ToStringArray(Nt):Nt,[jt,Ie]=l(M.shape,V.shape,Wt,$t,Y),Ae=z.makeTensorInfo(Ie,Y);return z.texData.get(Ae.dataId).values=jt,Ae}let ut;return ut=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=r?new Zr(r,M.shape,V.shape,n):new Hr(o,M.shape,V.shape),z.runWebGLProgram(ut,[M,V],Y)}}function oo(o,r=!1){if("linear"===o)return r?yi:fi;if("relu"===o)return r?vi:gi;if("elu"===o)return r?xi:mi;if("relu6"===o)return r?Ti:Ei;if("prelu"===o)return r?Xo:Yo;if("leakyrelu"===o)return r?Zo:jo;if("sigmoid"===o)return r?Ci:_i;throw new Error(`Activation ${o} has not been implemented for the WebGL backend.`)}class Jo{constructor(r,n,a,l=!1,v=!1,P=!1,L=null,M=!1,V=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=Pe(this.outputShape.length);const Y=Math.ceil((l?r[1]:r[2])/2),et=l?"i * 2, rc.y":"rc.y, i * 2",ut=v?"rc.z, i * 2":"i * 2, rc.z",Ct=l?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],Nt=v?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let Wt="",$t="";L&&(Wt=M?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${L}\n        }`:V?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${L}\n        }`:`vec4 activation(vec4 x) {\n          ${L}\n        }`,$t="result = activation(result);");const jt=P?"result += getBiasAtOutCoords();":"";P&&this.variableNames.push("bias"),M&&this.variableNames.push("preluActivationWeights"),V&&this.variableNames.push("leakyreluAlpha");let Ie="rc.x",Ae="rc.x";r[0]<n[0]?Ie=`imod(rc.x, ${r[0]})`:n[0]<r[0]&&(Ae=`imod(rc.x, ${n[0]})`),this.userCode=`\n      ${Wt}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${Y}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${Ie};\n        int batchB = ${Ae};\n        for (int i = 0; i < ${Y}; i++) {\n          vec4 a = getMatrixA(batchA, ${et});\n          vec4 b = getMatrixB(batchB, ${ut});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${Ct[0]} * ${Nt[0]});\n          result += (${Ct[1]} * ${Nt[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${jt}\n\n        ${$t}\n\n        setOutput(result);\n      }\n    `}}const qo={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ta{constructor(r,n,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${r}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ea="return a * b;";function bo(o){const{inputs:r,backend:n}=o,{a,b:l}=r,v=s.C0T.upcastType(a.dtype,l.dtype);if("complex64"===a.dtype){const L=n.texData.get(a.dataId),M=n.texData.get(l.dataId),V=new ta(qo.REAL,a.shape,l.shape),z=new ta(qo.IMAG,a.shape,l.shape),Y=[{dataId:L.complexTensorInfos.real.dataId,dtype:L.complexTensorInfos.real.dtype,shape:a.shape},{dataId:L.complexTensorInfos.imag.dataId,dtype:L.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:M.complexTensorInfos.real.dataId,dtype:M.complexTensorInfos.real.dtype,shape:l.shape},{dataId:M.complexTensorInfos.imag.dataId,dtype:M.complexTensorInfos.imag.dtype,shape:l.shape}],et=n.runWebGLProgram(V,Y,"float32"),ut=n.runWebGLProgram(z,Y,"float32"),Ct=Rr({inputs:{real:et,imag:ut},backend:n});return n.disposeIntermediateTensorInfo(et),n.disposeIntermediateTensorInfo(ut),Ct}if(n.shouldExecuteOnCPU([a,l])){const L=n.texData.get(a.dataId),M=n.texData.get(l.dataId),[V,z]=Wa(a.shape,l.shape,L.values,M.values,v),Y=n.makeTensorInfo(z,v);return n.texData.get(Y.dataId).values=V,Y}let P;return P=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zr(ea,a.shape,l.shape):new Hr(ea,a.shape,l.shape),n.runWebGLProgram(P,[a,l],v)}const Ui={kernelName:s.xu7,backendName:"webgl",kernelFunc:bo};function nn(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{shape:v}=a,P=n,L=s.ZSL.sizeFromShape(l.shape),M=s.ZSL.inferFromImplicitShape(v,L),V=s.ZSL.sizeFromShape(M);s.ZSL.assert(L===V,()=>`The new shape (${M}) has ${V} elements and the old shape (${l.shape}) has ${L} elements. The new shape and old shape must have the same number of elements.`);const z=P.texData.get(l.dataId);return!z.isPacked||Gn(l.shape,M)||null!==z.texture&&Gn(z.shape,M)?(P.incRef(l.dataId),{dataId:l.dataId,shape:M,dtype:l.dtype}):function Vi(o,r,n){const a=[fn(o.shape),...dn(o.shape)],l={dtype:o.dtype,shape:a,dataId:o.dataId},v=[fn(r),...dn(r)],P=new Vo(v,a),V=n.runWebGLProgram(P,[l],o.dtype,[a],!0);return{dataId:V.dataId,shape:r,dtype:V.dtype}}(l,M,P)}const Ki={kernelName:s.R23,backendName:"webgl",kernelFunc:nn};class na{constructor(r,n){this.variableNames=["x"];const{windowSize:a,batchSize:l,inSize:v,outSize:P}=r;this.outputShape=[l,P];const L=4*Math.floor(a/4),M=a%4;let V="sumValue += dot(values, ones);";if(null!=n){const Y=1/n;V=`sumValue += dot(values * ${s.ZSL.isInt(Y)?Y.toPrecision(2):Y}, ones);`}let z="";v%a>0&&(z=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${z}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${L}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${V}\n        }\n\n        int inIdx = inOffset + ${L};\n        if (${1===M}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${V}\n        } else if (${2===M}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${V}\n        } else if (${3===M}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${V}\n        }\n        setOutput(sumValue);\n      }\n    `}}class zi{constructor(r,n){this.variableNames=["x"];const{windowSize:a,batchSize:l,inSize:v,outSize:P}=r;this.outputShape=[l,P];let L="0.0",M="";"prod"===n?L="1.0":"min"===n?(L="1.0 / 1e-20",M="min"):"max"===n&&(L="-1.0 / 1e-20",M="max");let V=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===n?V="sumValue":"prod"===n?V="prodValue":"all"===n?V="allValue":"any"===n&&(V="anyValue");const z=4*Math.floor(a/4),Y=a%4;let et=`\n      if (${"sum"===n}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===n}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${M}(values, minMaxValue);\n        if (${"min"===n} || ${"max"===n}) {\n          minMaxValue = ${M}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,ut="vec4";"all"===n?(L="1.0",et="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",ut="bvec4"):"any"===n&&(L="0.0",et="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",ut="bvec4");let Ct="";v%a>0&&(Ct=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${L};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${Ct}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        vec4 minMaxValue = vec4(${L});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${z}; i += 4) {\n          int inIdx = inOffset + i;\n          ${ut} values = ${ut}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${et}\n        }\n\n        int inIdx = inOffset + ${z};\n        if (${1===Y}) {\n          ${ut} values = ${ut}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${et}\n        } else if (${2===Y}) {\n          ${ut} values = ${ut}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${et}\n        } else if (${3===Y}) {\n          ${ut} values = ${ut}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${et}\n        }\n        setOutput(${V});\n      }\n    `}}function Yr(o,r,n,a){const l=function Gi(o){const r=[];for(;0===r.length||1!==r[r.length-1].outSize;){const n=r.length?r[r.length-1].outSize:o[1],a=s.C0T.computeOptimalWindowSize(n);r.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return r}(o.shape);let v=o;for(let P=0;P<l.length;P++){const{inSize:L,windowSize:M,outSize:V}=l[P];let z,Y;z="mean"===n?0===P?new na({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:V},L):new na({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:V}):new zi({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:V},n),Y=v,v=a.runWebGLProgram(z,[v],r),Y.dataId!==o.dataId&&a.disposeIntermediateTensorInfo(Y)}return v}class Hi{constructor(r,n){this.variableNames=["A"];const a=new Array(r.length);for(let P=0;P<a.length;P++)a[P]=r[n[P]];this.outputShape=a,this.rank=a.length;const l=O(this.rank),v=function ji(o){const r=o.length;if(r>6)throw Error(`Transpose for rank ${r} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(r);for(let l=0;l<o.length;l++)a[o[l]]=n[l];return a.join()}(n);this.userCode=`\n    void main() {\n      ${l} resRC = getOutputCoords();\n      setOutput(getA(${v}));\n    }\n    `}}class Zi{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const a=new Array(r.length);for(let z=0;z<a.length;z++)a[z]=r[n[z]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const l=O(this.rank),v=Uo("rc",this.rank),P=new Array(this.rank);for(let z=0;z<n.length;z++)P[n[z]]=v[z];const L=`vec2(${P.slice(-2).join()})`,M=`++${v[this.rank-1]} < ${a[this.rank-1]}`,V=`getChannel(getA(${P.join()}), ${L})`;this.userCode=`\n    void main() {\n      ${l} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${V};\n      if(${M}) {\n        result[1] = ${V};\n      }\n      --${v[this.rank-1]};\n      if(++${v[this.rank-2]} < ${a[this.rank-2]}) {\n        result[2] = ${V};\n        if(${M}) {\n          result[3] = ${V};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function _o(o,r,n){const a=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zi(o.shape,r):new Hi(o.shape,r);return n.runWebGLProgram(a,[o],o.dtype)}function yo(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,keepDims:P}=a;return function Yi(o,r,n,a){const v=o.shape.length,P=s.ZSL.parseAxisParam(r,o.shape);let L=P;const M=s.C0T.getAxesPermutation(L,v),V=null!=M;let z=o;V&&(z=_o(o,M,a),L=s.C0T.getInnerMostAxes(L.length,v)),s.C0T.assertAxesAreInnerMostDims("sum",L,v);const[Y,et]=s.C0T.computeOutAndReduceShapes(z.shape,L);let ut=Y;n&&(ut=s.C0T.expandShapeToKeepDim(Y,P));const Ct=s.ZSL.sizeFromShape(et),$t=nn({inputs:{x:z},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/Ct,Ct]},backend:a}),Ie=Yr($t,(0,s.chL)(o.dtype),"sum",a),Ae=nn({inputs:{x:Ie},attrs:{shape:ut},backend:a});return a.disposeIntermediateTensorInfo($t),a.disposeIntermediateTensorInfo(Ie),V&&a.disposeIntermediateTensorInfo(z),Ae}(l,v,P,n)}const Xi={kernelName:s.WuN,backendName:"webgl",kernelFunc:yo};function Cs(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{perm:v}=a,P=n,M=new Array(l.shape.length);for(let z=0;z<M.length;z++)M[z]=l.shape[v[z]];let V;if(P.shouldExecuteOnCPU([l])){const Y=P.texData.get(l.dataId).values,et=So(Y,l.shape,l.dtype,v,M);V=P.makeTensorInfo(M,l.dtype),P.texData.get(V.dataId).values=et}else V=_o(l,v,P);return V}const Qi={kernelName:s.wx0,backendName:"webgl",kernelFunc:Cs},sa=1e3;function xo({a:o,b:r,transposeA:n,transposeB:a,backend:l,bias:v=null,preluActivationWeights:P=null,leakyreluAlpha:L=0,activation:M=null}){const V=o.shape.length,z=r.shape.length,Y=n?o.shape[V-2]:o.shape[V-1],et=a?r.shape[z-1]:r.shape[z-2],ut=n?o.shape[V-1]:o.shape[V-2],Ct=a?r.shape[z-2]:r.shape[z-1],Nt=o.shape.slice(0,-2),Wt=r.shape.slice(0,-2),$t=s.ZSL.sizeFromShape(Nt),jt=s.ZSL.sizeFromShape(Wt),Ae=s.ZEY.assertAndGetBroadcastShape(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([ut,Ct]);s.ZSL.assert(Y===et,()=>`Error in matMul: inner shapes (${Y}) and (${et}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${n} and transposeB=${a} must match.`);const Je=n?[$t,Y,ut]:[$t,ut,Y],On=a?[jt,Ct,et]:[jt,et,Ct],Dn=nn({inputs:{x:o},backend:l,attrs:{shape:Je}}),pn=nn({inputs:{x:r},backend:l,attrs:{shape:On}}),Wn=[Dn,pn],Nn=Math.max($t,jt),hs=n?Dn.shape[1]:Dn.shape[2],ms=null!=v,Br=null!=P,zs="leakyrelu"===M,Xs=null!=M?oo(M,!0):null;let Cr;if((1===ut||1===Ct)&&hs>sa&&!1===(ms||Br||zs||null!=Xs)){let to=Dn,Do=pn;n&&(to=Cs({inputs:{x:Dn},backend:l,attrs:{perm:[0,2,1]}}),Wn.push(to)),a&&(Do=Cs({inputs:{x:pn},backend:l,attrs:{perm:[0,2,1]}}),Wn.push(Do));const ga=1===Ct;let Dl=to;1!==Ct&&(Dl=nn({inputs:{x:to},backend:l,attrs:{shape:[Nn,hs,1]}}),Wn.push(Dl));const cm=1===Ct?2:1;let Il=Do;ga&&(Il=nn({inputs:{x:Do},backend:l,attrs:{shape:[Nn,1,hs]}}),Wn.push(Il));const ou=bo({inputs:{a:Dl,b:Il},backend:l});Cr=yo({inputs:{x:ou},backend:l,attrs:{axis:cm,keepDims:!0}}),Wn.push(ou)}else{const to=(0,s.TuY)(o.dtype,r.dtype),Do=new Jo(Je,On,[Nn,ut,Ct],n,a,ms,Xs,Br,zs),Io=[Dn,pn];if(null!=v&&Io.push(v),Br&&Io.push(P),zs){const ga=l.makeTensorInfo([],"float32",s.ZSL.createScalarValue(L,"float32"));Io.push(ga),Wn.push(ga)}Cr=l.runWebGLProgram(Do,Io,to)}const Ss=nn({inputs:{x:Cr},backend:l,attrs:{shape:Ae}});Wn.push(Cr);for(const to of Wn)l.disposeIntermediateTensorInfo(to);return Ss}const qi={kernelName:s.Dr,backendName:"webgl",kernelFunc:function Ji(o){const{inputs:r,backend:n,attrs:a}=o,{a:l,b:v,bias:P,preluActivationWeights:L}=r,{transposeA:M,transposeB:V,activation:z,leakyreluAlpha:Y}=a;return xo({a:l,b:v,transposeA:M,transposeB:V,backend:n,bias:P,preluActivationWeights:L,leakyreluAlpha:Y,activation:z})}},ra="return abs(x);",el={kernelName:s.ljI,backendName:"webgl",kernelFunc:function tl(o){const{inputs:r,backend:n}=o,{x:a}=r;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const v=n.texData.get(a.dataId),P=Bo(v.values);return n.makeTensorInfo(a.shape,a.dtype,P)}let l;return l=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new $s(a.shape,ra):new ar(a.shape,ra),n.runWebGLProgram(l,[a],a.dtype)}},sl=Fn({opSnippet:Ls+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rl={kernelName:s.Vvy,backendName:"webgl",kernelFunc:sl},al=Fn({opSnippet:Ls+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),il={kernelName:s.PH8,backendName:"webgl",kernelFunc:al},oa="return a + b;",ll=_s({opSnippet:oa,packedOpSnippet:oa,supportsComplex:!0,cpuKernelImpl:xa}),aa={kernelName:s.OMN,backendName:"webgl",kernelFunc:ll};class ul{constructor(r,n){this.outputShape=[],this.outputShape=r,this.variableNames=n.map((v,P)=>`T${P}`);const a=[];this.variableNames.forEach(v=>{a.push(`float v${v} = get${v}AtOutCoords();`)});const l=this.variableNames.map(v=>`v${v}`).join(" + ");this.userCode=`\n      void main() {\n        ${a.join("\n        ")}\n\n        float result = ${l};\n        setOutput(result);\n      }\n    `}}class cl{constructor(r,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.variableNames=n.map((v,P)=>`T${P}`);const a=[];this.variableNames.forEach(v=>{a.push(`vec4 v${v} = get${v}AtOutCoords();`)});const l=this.variableNames.map(v=>`v${v}`).join(" + ");this.userCode=`\n      void main() {\n        ${a.join("\n        ")}\n\n        vec4 result = ${l};\n        setOutput(result);\n      }\n    `}}const dl={kernelName:s.EkD,backendName:"webgl",kernelFunc:function vo(o){const{inputs:r,backend:n}=o,a=r;if(1===a.length)return Os({inputs:{x:a[0]},backend:n});if(a.length>(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const M=Math.floor(a.length/2),V=vo({inputs:a.slice(0,M),backend:n}),z=vo({inputs:a.slice(M),backend:n});return vo({inputs:[V,z],backend:n})}const l=a.map(M=>M.dtype).reduce((M,V)=>(0,s.TuY)(M,V)),v=a.map(M=>M.shape),L=(0,s._K2)().getBool("WEBGL_PACK")?new cl(a[0].shape,v):new ul(a[0].shape,v);return n.runWebGLProgram(L,a,l)}},pl={kernelName:s.u8Z,backendName:"webgl",kernelFunc:function ao(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,keepDims:P}=a,L=l.shape.length,M=s.ZSL.parseAxisParam(v,l.shape);let V=M;const z=s.C0T.getAxesPermutation(V,L);let Y=l;null!=z&&(Y=Cs({inputs:{x:l},backend:n,attrs:{perm:z}}),V=s.C0T.getInnerMostAxes(V.length,L)),s.C0T.assertAxesAreInnerMostDims("all",V,L);const[et,ut]=s.C0T.computeOutAndReduceShapes(Y.shape,V),Nt=nn({inputs:{x:Y},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(ut)]}}),Wt=Yr(Nt,Nt.dtype,"all",n);let $t;return $t=nn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(et,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:et}}),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(Y),$t}},fl={kernelName:s.FSt,backendName:"webgl",kernelFunc:function hl(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,keepDims:P}=a,L=l.shape.length,M=s.ZSL.parseAxisParam(v,l.shape);let V=M;const z=s.C0T.getAxesPermutation(V,L);let Y=l;null!=z&&(Y=Cs({inputs:{x:l},backend:n,attrs:{perm:z}}),V=s.C0T.getInnerMostAxes(V.length,L)),s.C0T.assertAxesAreInnerMostDims("any",V,L);const[et,ut]=s.C0T.computeOutAndReduceShapes(Y.shape,V),Nt=nn({inputs:{x:Y},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(ut)]}}),Wt=Yr(Nt,Nt.dtype,"any",n);let $t;return $t=nn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(et,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:et}}),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(Y),$t}};class ml{constructor(r,n,a){this.variableNames=["A"];const{windowSize:l,batchSize:v,outSize:P}=r;a||this.variableNames.push("bestIndicesA"),this.outputShape=[v,P],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${l};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${l}; i++) {\n          int inIdx = ${a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===n?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class gl{constructor(r,n,a,l){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.ZSL.assert(r.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);const P=Math.ceil(r[r.length-1]/n);this.outputShape=r.slice(0,-1),P>1&&this.outputShape.push(P),l||this.variableNames.push("bestIndicesA");const L=this.outputShape,M=L.length,V=O(M),z=Ts("coords",M);let Y,et;if(1===P){et=M+1;const pn=O(et);Y=`\n        ${pn} sourceLocR = ${pn}(${z.join()}, 0);\n        ++${z[M-1]};\n        ${pn} sourceLocG = ${pn}(${z.join()}, 0);\n        ++${z[M-2]};\n        ${pn} sourceLocA = ${pn}(${z.join()}, 0);\n        --${z[M-1]};\n        ${pn} sourceLocB = ${pn}(${z.join()}, 0);\n        --${z[M-2]};`}else et=M,Y=`\n        ${V} sourceLocR = coords;\n        ++${z[M-1]};\n        ${V} sourceLocG = coords;\n        ++${z[M-2]};\n        ${V} sourceLocA = coords;\n        --${z[M-1]};\n        ${V} sourceLocB = coords;\n        --${z[M-2]};`;const ut=["x","y","z","w","u","v"].slice(0,et),Ct="."+ut[et-1],Nt=ut.map(pn=>"int "+pn),Wt=Ts("sourceLocR",et-1).concat("inIdx.r"),$t=Ts("sourceLocG",et-1).concat("inIdx.g"),jt=Ts("sourceLocB",et-1).concat("inIdx.b"),Ie=Ts("sourceLocA",et-1).concat("inIdx.a"),Ae="max"===a?"greaterThan":"lessThan",Je=l?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${Wt.join()}),\n                             getBestIndicesAChannel(${$t.join()}),\n                             getBestIndicesAChannel(${jt.join()}),\n                             getBestIndicesAChannel(${Ie.join()})));`,On=`vec4(\n            getAChannel(${Wt.join()}),\n            hasNextCol ? getAChannel(${$t.join()}) : 0.,\n            hasNextRow ? getAChannel(${jt.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${Ie.join()}) : 0.)`,Dn=l?"":`\n      float getBestIndicesAChannel(${Nt.join()}) {\n        return getChannel(getBestIndicesA(${ut.join()}),\n                                          vec2(${ut.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${Nt.join()}) {\n        return getChannel(getA(${ut.join()}),\n                               vec2(${ut.slice(-2).join()}));\n      }\n      ${Dn}\n      void main() {\n        ${V} coords = getOutputCoords();\n        bool hasNextCol = ${z[M-1]} < ${L[M-1]-1};\n        bool hasNextRow = ${z[M-2]} < ${L[M-2]-1};\n        ${Y}\n        ivec4 srcIdx = ivec4(sourceLocR${Ct}, sourceLocG${Ct},\n          sourceLocB${Ct}, sourceLocA${Ct}) * ${n};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${On};\n\n        for (int i = 0; i < ${n}; i++) {\n          inIdx = srcIdx;\n          ${Je}\n          vec4 candidate = ${On};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${Ae}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ia(o,r,n,a=null){let l=r.shape[0],v=r.shape[1];null!=a&&(l=a.shape[0],v=a.shape[1]);const P=s.C0T.computeOptimalWindowSize(v),L={windowSize:P,inSize:v,batchSize:l,outSize:Math.ceil(v/P)},M=new ml(L,n,null==a),V=[r];null!=a&&V.push(a);const z=o.runWebGLProgram(M,V,"int32");if(1===z.shape[1])return z;const Y=ia(o,r,n,z);return o.disposeIntermediateTensorInfo(z),Y}function la(o,r,n,a=null){const l=null!=a?a.shape:r.shape,P=s.C0T.computeOptimalWindowSize(l[l.length-1]),L=new gl(l,P,n,null==a),V=o.runWebGLProgram(L,null==a?[r]:[r,a],"int32");if(V.shape.length===r.shape.length){const z=la(o,r,n,V);return o.disposeIntermediateTensorInfo(V),z}return V}function ua(o,r,n,a){const l=[n];if(s.C0T.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),l,r.shape.length),!(0,s._K2)().getBool("WEBGL_PACK_REDUCE")||r.shape.length<=2){const v=[],P=o.texData.get(r.dataId);let M=r;null!==P&&P.isPacked&&(M=o.unpackTensor(r),v.push(M));const[V,z]=s.C0T.computeOutAndReduceShapes(M.shape,l),Y=s.ZSL.sizeFromShape(z),et=nn({inputs:{x:M},backend:o,attrs:{shape:[-1,Y]}});v.push(et);const ut=ia(o,et,a);v.push(ut);const Ct=nn({inputs:{x:ut},backend:o,attrs:{shape:V}});return v.forEach(Nt=>o.disposeIntermediateTensorInfo(Nt)),Ct}return la(o,r,a)}const _l={kernelName:s.Jp_,backendName:"webgl",kernelFunc:function El(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v}=a;let P=s.ZSL.parseAxisParam(v,l.shape);const L=s.C0T.getAxesPermutation(P,l.shape.length);let M=l;const V=[];null!=L&&(M=Cs({inputs:{x:l},backend:n,attrs:{perm:L}}),V.push(M),P=s.C0T.getInnerMostAxes(P.length,M.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMax",[P[0]],M.shape.length);const z=ua(n,M,P[0],"max");return V.forEach(Y=>n.disposeIntermediateTensorInfo(Y)),z}},mt={kernelName:s.p_m,backendName:"webgl",kernelFunc:function ct(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v}=a;let P=s.ZSL.parseAxisParam(v,l.shape);const L=s.C0T.getAxesPermutation(P,l.shape.length);let M=l;const V=[];null!=L&&(M=Cs({inputs:{x:l},backend:n,attrs:{perm:L}}),V.push(M),P=s.C0T.getInnerMostAxes(P.length,M.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMin",[P[0]],M.shape.length);const z=ua(n,M,P[0],"min");return V.forEach(Y=>n.disposeIntermediateTensorInfo(Y)),z}},X=Fn({opSnippet:Ls+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$={kernelName:s.QKF,backendName:"webgl",kernelFunc:X},yt=Fn({opSnippet:Ls+"return log(x + sqrt(x * x + 1.0));"}),_t={kernelName:s.epO,backendName:"webgl",kernelFunc:yt},gt=Fn({opSnippet:Ls+"\n  return atan(x);\n"}),ht={kernelName:s.TyE,backendName:"webgl",kernelFunc:gt},Lt=_s({opSnippet:Ao+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jr+"\n  return result;\n"}),Vt={kernelName:s.lxb,backendName:"webgl",kernelFunc:Lt},zt=Fn({opSnippet:Ls+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Zt={kernelName:s.zP9,backendName:"webgl",kernelFunc:zt};class ne{constructor(r,n,a,l=!1,v=!1){if(this.variableNames=["x"],"avg"===n&&a)throw new Error("Cannot compute positions for average pool.");const P=r.filterWidth,L=r.strideHeight,M=r.strideWidth,V=r.dilationHeight,z=r.dilationWidth,Y=r.effectiveFilterHeight,et=r.effectiveFilterWidth,ut=r.padInfo.top,Ct=r.padInfo.left;this.outputShape=r.outShape;const Nt="avg"===n;let jt="0.0";if(Nt||(jt="-1.0 / 1e-20"),a)return void(this.userCode=`\n        const ivec2 strides = ivec2(${L}, ${M});\n        const ivec2 pads = ivec2(${ut}, ${Ct});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${Y};\n              wR += ${V}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${et};\n                wC += ${z}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${l?v?`((batch  * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + d`:`(xR * ${r.inWidth} + xC) * ${r.inChannels} + d`:`wR * ${et} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let Ae=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===n&&(Ae="avgValue / max(count, 1.0)");const Je=4*Math.floor(P/4),On=P%4,Dn=`\n      if (${Nt}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${L}, ${M});\n      const ivec2 pads = ivec2(${ut}, ${Ct});\n      const float initializationValue = ${jt};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${r.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${jt});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${Y};\n            wR += ${V}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${r.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${Je}; wC += 4) {\n            int xC = xCCorner + wC * ${z};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              getValue(batch, xR, xC + 2 * ${z}, d),\n              getValue(batch, xR, xC + 3 * ${z}, d)\n            );\n\n            ${Dn}\n          }\n\n          int xC = xCCorner + ${Je};\n          if (${1===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${Dn}\n          } else if (${2===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${Dn}\n          } else if (${3===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              getValue(batch, xR, xC + 2 * ${z}, d),\n              initializationValue\n            );\n\n            ${Dn}\n          }\n        }\n        setOutput(${Ae});\n      }\n    `}}class se{constructor(r,n,a,l=!1,v=!1){if(this.variableNames=["x"],"avg"===n&&a)throw new Error("Cannot compute positions for average pool.");const P=r.filterWidth,L=r.strideDepth,M=r.strideHeight,V=r.strideWidth,z=r.dilationDepth,Y=r.dilationHeight,et=r.dilationWidth,ut=r.effectiveFilterDepth,Ct=r.effectiveFilterHeight,Nt=r.effectiveFilterWidth,Wt=r.padInfo.front,$t=r.padInfo.top,jt=r.padInfo.left;this.outputShape=r.outShape;const Ie="avg"===n;let Ae="0.0";if(Ie||(Ae="-1.0 / 1e-20"),a)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${L}, ${M}, ${V});\n        const ivec3 pads = ivec3(${Wt}, ${$t}, ${jt});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${ut};\n              wD += ${z}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${r.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${Ct};\n                wR += ${Y}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${r.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${Nt};\n                  wC += ${et}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${r.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${l?v?`(((batch * ${r.inDepth} + xD) * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + ch`:`((xD * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + ch`:`wD * ${Ct} * ${Nt} +\n                      wR * ${Nt} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let On=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===n&&(On="avgValue / max(count, 1.0)");const Dn=4*Math.floor(P/4),pn=P%4,Wn=`\n      if (${Ie}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${L}, ${M}, ${V});\n      const ivec3 pads = ivec3(${Wt}, ${$t}, ${jt});\n      const float initializationValue = ${Ae};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${r.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${Ae});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${ut};\n            wD += ${z}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${r.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${Ct};\n            wR += ${Y}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${Dn}; wC += 4) {\n              int xC = xCCorner + wC * ${et};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${et}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${et}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${et}, ch)\n              );\n\n              ${Wn}\n            }\n\n            int xC = xCCorner + ${Dn};\n            if (${1===pn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${Wn}\n            } else if (${2===pn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${et}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${Wn}\n            } else if (${3===pn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${et}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${et}, ch),\n                initializationValue\n              );\n\n              ${Wn}\n            }\n          }\n        }\n        setOutput(${On});\n      }\n    `}}const de={kernelName:s.ho8,backendName:"webgl",kernelFunc:function qt(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r;dt(l,"avgPool");const{filterSize:v,strides:P,pad:L,dimRoundingMode:M}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${P} and dilations '1'`);const z=s.C0T.computePool2DInfo(l.shape,v,P,1,L,M);if(1===z.filterWidth&&1===z.filterHeight&&s.ZSL.arraysEqual(z.inShape,z.outShape))return Os({inputs:{x:l},backend:n});const Y=new ne(z,"avg",!1);return n.runWebGLProgram(Y,[l],"float32")}},xe={kernelName:s.cS,backendName:"webgl",kernelFunc:function me(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{filterSize:v,strides:P,pad:L,dimRoundingMode:M,dataFormat:V}=a,Y=s.C0T.computePool3DInfo(l.shape,v,P,[1,1,1],L,M,V),et=new se(Y,"avg",!1);return n.runWebGLProgram(et,[l],"float32")}};class we{constructor(r){this.variableNames=["dy"],this.outputShape=r.inShape;const M=r.effectiveFilterHeight,V=r.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${M-1-r.padInfo.top}, ${V-1-r.padInfo.left});\n      const float avgMultiplier = float(${1/(r.filterHeight*r.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${M};\n            wR += ${r.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${V};\n            wC+= ${r.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ue{constructor(r){this.variableNames=["dy"],this.outputShape=r.inShape;const Y=r.effectiveFilterDepth,et=r.effectiveFilterHeight,ut=r.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${Y-1-r.padInfo.front}, ${et-1-r.padInfo.top}, ${ut-1-r.padInfo.left});\n      const float avgMultiplier = float(${1/(r.filterDepth*r.filterHeight*r.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${Y};\n            wD += ${r.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${r.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${r.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${et};\n              wR += ${r.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${ut};\n                wC += ${r.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ge={kernelName:s.wwC,backendName:"webgl",kernelFunc:function ke(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,input:v}=r,P=v,{filterSize:L,strides:M,pad:V,dimRoundingMode:z}=a,et=s.C0T.computePool3DInfo(P.shape,L,M,[1,1,1],V,z),ut=new Ue(et);return n.runWebGLProgram(ut,[l],P.dtype)}},Me={kernelName:s.VCH,backendName:"webgl",kernelFunc:function Ze(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,input:v}=r,P=v;dt([l,v],"avgPoolGrad");const{filterSize:L,strides:M,pad:V}=a,z=s.C0T.computePool2DInfo(P.shape,L,M,1,V),Y=new we(z);return n.runWebGLProgram(Y,[l],P.dtype)}},Ne={kernelName:s.jAQ,backendName:"webgl",kernelFunc:function Be(o){const{inputs:r,backend:n,attrs:a}=o,{a:l,b:v}=r,{transposeA:P,transposeB:L}=a;return xo({a:l,b:v,transposeA:P,transposeB:L,backend:n})}};class Re{constructor(r,n,a,l,v,P){this.outputShape=[],this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(r,n),s.C0T.assertAndGetBroadcastShape(r,a);let L="0.0";null!=l&&(s.C0T.assertAndGetBroadcastShape(r,l),this.variableNames.push("offset"),L="getOffsetAtOutCoords()");let M="1.0";null!=v&&(s.C0T.assertAndGetBroadcastShape(r,v),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${L};\n        float scale = ${M};\n        float inv = scale * inversesqrt(variance + float(${P}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ve{constructor(r,n,a,l,v,P){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(r,n),s.C0T.assertAndGetBroadcastShape(r,a);let L="vec4(0.0)";null!=l&&(s.C0T.assertAndGetBroadcastShape(r,l),this.variableNames.push("offset"),L="getOffsetAtOutCoords()");let M="vec4(1.0)";null!=v&&(s.C0T.assertAndGetBroadcastShape(r,v),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`\n      void main() {\n        vec4 offset = ${L};\n        vec4 scale = ${M};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${P}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Fe={kernelName:s.i5R,backendName:"webgl",kernelFunc:({inputs:o,backend:r,attrs:n})=>{const{x:a,mean:l,variance:v,offset:P,scale:L}=o;s.ZSL.assert(l.shape.length===v.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.ZSL.assert(null==P||l.shape.length===P.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.ZSL.assert(null==L||l.shape.length===L.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:M}=n;null==M&&(M=.001);const V=[a,l,v];let z=null;null!=P&&(z=P.shape,V.push(P));let Y=null;null!=L&&(Y=L.shape,V.push(L));const et=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Ve(a.shape,l.shape,v.shape,z,Y,M):new Re(a.shape,l.shape,v.shape,z,Y,M);return r.runWebGLProgram(et,V,V[0].dtype)}};class Ye{constructor(r){this.variableNames=["source"],this.outputShape=r,this.rank=r.length;const n=O(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const a=function rn(o){if(1===o)return"sourceLoc";if(o<=6)return je.slice(0,o).map(r=>"sourceLoc."+r).join(",");throw Error(`Slicing for rank ${o} is not yet supported`)}(this.rank);let l;l=`\n        ${n} sourceLoc;\n        ${n} coords = getOutputCoords();\n        ${r.map((P,L)=>`sourceLoc.${je[L]} = start[${L}] + coords.${je[L]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${l}\n        setOutput(getSource(${a}));\n      }\n    `}}const je=["x","y","z","w","u","v"];class Xe{constructor(r){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.rank=r.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=O(this.rank),a=Ts("coords",this.rank),l=Ts("sourceLoc",this.rank),v=1===this.rank?"sourceLoc":`vec2(${l.slice(-2).join()})`,P=`getChannel(getSource(${l.join()}), ${v})`,L=`\n      result.x = ${P};\n      if (++${a[this.rank-1]} < ${r[this.rank-1]}) {\n        ++${l[this.rank-1]};\n        result.y = ${P};\n        --${l[this.rank-1]};\n      }\n    `,M=1===this.rank?"":`\n      --${a[this.rank-1]};\n      if (++${a[this.rank-2]} < ${r[this.rank-2]}) {\n        ++${l[this.rank-2]};\n        result.z = ${P};\n        if (++${a[this.rank-1]} < ${r[this.rank-1]}) {\n          ++${l[this.rank-1]};\n          result.w = ${P};\n        }\n      }\n    `,V=this.rank<=4?`sourceLoc = coords +\n            ${n}(${r.map((z,Y)=>`start[${Y}]`).join()});`:r.map((z,Y)=>`${l[Y]} = ${a[Y]} + start[${Y}];`).join("\n");this.userCode=`\n      void main() {\n        ${n} coords = getOutputCoords();\n        ${n} sourceLoc;\n        ${V}\n        vec4 result = vec4(0.);\n        ${L}\n        ${M}\n        setOutput(result);\n      }\n    `}}function Qe(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{begin:v,size:P}=a,[L,M]=s.Kro.parseSliceParams(l,v,P);if(s.Kro.assertParamsValid(l,L,M),0===s.ZSL.sizeFromShape(M))return n.makeTensorInfo(M,l.dtype,[]);if(n.shouldExecuteOnCPU([l])||"string"===l.dtype){const Y=n.texData.get(l.dataId),et=Qa(Y.values,L,M,l.shape,l.dtype);return n.makeTensorInfo(M,l.dtype,et)}const{isPacked:V}=n.texData.get(l.dataId),z=s.Kro.isSliceContinous(l.shape,L,M);if(V||!z){const Y=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xe(M):new Ye(M);return n.runWebGLProgram(Y,[l],l.dtype,[L])}return n.uploadToGPU(l.dataId),function an(o,r,n,a){const l=a.texData.get(o.dataId),v=a.makeTensorInfo(n,o.dtype),P=a.texData.get(v.dataId);Object.assign(P,l),P.refCount=1,P.shape=n,P.dtype=o.dtype;let L=s.Kro.computeFlatOffset(r,s.ZSL.computeStrides(o.shape));l.slice&&(L+=l.slice.flatOffset),P.slice={flatOffset:L,origDataId:l.slice&&l.slice.origDataId||o.dataId};const M=a.dataRefCount.get(P.slice.origDataId)||1;return a.dataRefCount.set(P.slice.origDataId,M+1),v}(l,L,M,n)}const hn={kernelName:s.JiE,backendName:"webgl",kernelFunc:Qe},In={kernelName:s.Ik2,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{blockShape:v,crops:P}=a;s.ZSL.assert(l.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const L=v.reduce((jt,Ie)=>jt*Ie),M=s.C0T.getReshaped(l.shape,v,L),V=s.C0T.getPermuted(M.length,v.length),z=s.C0T.getReshapedPermuted(l.shape,v,L),Y=s.C0T.getSliceBeginCoords(P,v.length),et=s.C0T.getSliceSize(z,P,v.length),ut=[],Ct=nn({inputs:{x:l},backend:n,attrs:{shape:M}}),Nt=Cs({inputs:{x:Ct},backend:n,attrs:{perm:V}}),Wt=nn({inputs:{x:Nt},backend:n,attrs:{shape:z}}),$t=Qe({inputs:{x:Wt},backend:n,attrs:{begin:Y,size:et}});return ut.push(Ct),ut.push(Nt),ut.push(Wt),ut.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),$t}},Mn={kernelName:s.N4F,backendName:"webgl",kernelFunc:function Cn(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,weights:v}=r,{size:P}=a,L=n.readSync(l.dataId),M=n.readSync(v.dataId),V=$o(L,M,v.dtype,v.shape,P);return n.makeTensorInfo([P],v.dtype,V)}},as={kernelName:s.HNs,backendName:"webgl",kernelFunc:function qn(o){const{inputs:r,backend:n}=o,{a,b:l}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),P=(0,s._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,l])||1===P){const M=n.texData.get(a.dataId).values,V=n.texData.get(l.dataId).values,[z,Y]=Ta(a.shape,l.shape,M,V,a.dtype),et=n.makeTensorInfo(Y,a.dtype);return n.texData.get(et.dataId).values=z,et}let L;return L=v?new Zr("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,l.shape,!1):new Hr("\n  return float(int(a.r) & int(b.r));\n",a.shape,l.shape),n.runWebGLProgram(L,[a,l],a.dtype)}},Qn={kernelName:s.vj7,backendName:"webgl",kernelFunc:function ts(o){const{inputs:r,backend:n}=o,{s0:a,s1:l}=r,v=n.readSync(a.dataId),P=n.readSync(l.dataId),L=s.C0T.assertAndGetBroadcastShape(Array.from(v),Array.from(P));return n.makeTensorInfo([L.length],"int32",Int32Array.from(L))}},ns=_s({opSnippet:"return float(a != b);",cpuKernelImpl:Va,dtype:"bool"}),xr={kernelName:s.ylV,backendName:"webgl",kernelFunc:ns};function ls(o){const{inputs:r,backend:n}=o,{input:a}=r;return Os({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const Lr={kernelName:s.LRy,backendName:"webgl",kernelFunc:ls},vr={kernelName:s.KXH,backendName:"webgl",kernelFunc:function Bs(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{dtype:v}=a;if("complex64"===v){if("complex64"===l.dtype)return Os({inputs:{x:l},backend:n});const P=s.Ul9(l.shape),L=Bs({inputs:{x:l},backend:n,attrs:{dtype:"float32"}}),M=Rr({inputs:{real:L,imag:P},backend:n});return P.dispose(),n.disposeIntermediateTensorInfo(L),M}if("complex64"===l.dtype){const P=ls({inputs:{input:l},backend:n}),L=Bs({inputs:{x:P},backend:n,attrs:{dtype:v}});return n.disposeIntermediateTensorInfo(P),L}if(!s.ZSL.hasEncodingLoss(l.dtype,v)){const P=Os({inputs:{x:l},backend:n});return{dataId:P.dataId,shape:P.shape,dtype:v}}if(n.shouldExecuteOnCPU([l])){const P=n.texData.get(l.dataId).values,[L,M,V]=Ca(P,l.shape,l.dtype,v);return n.makeTensorInfo(L,M,V)}if("int32"===v)return function Xr(o,r){const n=new ar(o.shape,"return float(int(x));"),a=r.runWebGLProgram(n,[o],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(l,n);if("bool"===v){const P=n.makeTensorInfo([],"bool",s.ZSL.getTypedArrayFromDType("bool",1)),M=ns({inputs:{a:l,b:P},backend:n});return n.disposeIntermediateTensorInfo(P),M}throw new Error(`Error in Cast: failed to cast ${l.dtype} to ${v}`)}},Tr="return ceil(x);",$r=Fn({opSnippet:Tr,packedOpSnippet:Tr,cpuKernelImpl:Da}),wr={kernelName:s.QDP,backendName:"webgl",kernelFunc:$r};class lo{constructor(r){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=r,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Mo{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=r,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const yl={kernelName:s.vaV,backendName:"webgl",kernelFunc:function No(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{clipValueMin:v,clipValueMax:P}=a;let L;return L=(0,s._K2)().getBool("WEBGL_PACK_CLIP")?new Mo(l.shape):new lo(l.shape),n.runWebGLProgram(L,[l],l.dtype,[[v],[P]])}};class To{constructor(r){this.variableNames=["real","imag"],this.outputShape=r,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ca(o,r){return{dataId:r.dataId,dtype:r.dtype,shape:o.shape}}const iu={kernelName:s.$zE,backendName:"webgl",kernelFunc:function xl(o){const{inputs:r,backend:n}=o,{x:a}=r,l=n.texData.get(a.dataId),v=new To(a.shape),P=[ca(a,l.complexTensorInfos.real),ca(a,l.complexTensorInfos.imag)];return n.runWebGLProgram(v,P,P[0].dtype)}};class lu{constructor(r){this.outputShape=[],this.outputShape=s.C0T.computeOutShape(r,1),this.variableNames=r.map((P,L)=>`T${L}`);const n=new Array(r.length-1);n[0]=r[0][1];for(let P=1;P<n.length;P++)n[P]=n[P-1]+r[P][1];const a=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let P=1;P<n.length;P++)a.push(`else if (yC < ${n[P]}) setOutput(getT${P}(yR, yC-${n[P-1]}));`);a.push(`else setOutput(getT${n.length}(yR, yC-${n[n.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${a.join("\n        ")}\n      }\n    `}}class uu{constructor(r,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.C0T.computeOutShape(r,n);const a=this.outputShape,l=a.length,v=O(l),P=Ts("coords",l),L=["x","y","z","w","u","v"].slice(0,l);this.variableNames=r.map((Nt,Wt)=>`T${Wt}`);const M=new Array(r.length-1);M[0]=r[0][n];for(let Nt=1;Nt<M.length;Nt++)M[Nt]=M[Nt-1]+r[Nt][n];const V=L[n],z=L.slice(-2),Y=L.join();let et=`if (${V} < ${M[0]}) {\n        return getChannel(\n            getT0(${Y}), vec2(${z.join()}));\n        }`;for(let Nt=1;Nt<M.length;Nt++){const Wt=M[Nt-1];et+=`\n        if (${V} < ${M[Nt]}  && ${V} >= ${M[Nt-1]}) {\n          return getChannel(\n            getT${Nt}(${da(L,V,Wt)}),\n            vec2(${da(z,V,Wt)}));\n        }`}const Ct=M[M.length-1];et+=`\n        return getChannel(\n          getT${M.length}(${da(L,V,Ct)}),\n          vec2(${da(z,V,Ct)}));`,this.userCode=`\n      float getValue(${L.map(Nt=>"int "+Nt)}) {\n        ${et}\n      }\n\n      void main() {\n        ${v} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${P}), 0., 0., 0.);\n\n        ${P[l-1]} = ${P[l-1]} + 1;\n        if (${P[l-1]} < ${a[l-1]}) {\n          result.g = getValue(${P});\n        }\n\n        ${P[l-2]} = ${P[l-2]} + 1;\n        if (${P[l-2]} < ${a[l-2]}) {\n          result.a = getValue(${P});\n        }\n\n        ${P[l-1]} = ${P[l-1]} - 1;\n        if (${P[l-2]} < ${a[l-2]} &&\n            ${P[l-1]} < ${a[l-1]}) {\n          result.b = getValue(${P});\n        }\n        setOutput(result);\n      }\n    `}}function da(o,r,n){const a=o.indexOf(r);return o.map((v,P)=>P===a?`${v} - ${n}`:v).join()}function pa(o){const{inputs:r,backend:n}=o,{input:a}=r;return Os({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const cu={kernelName:s.dv8,backendName:"webgl",kernelFunc:pa};function Ro(o,r,n){const a=o[0].dtype;if("complex64"===a){const ut=o.map(jt=>ls({inputs:{input:jt},backend:n})),Ct=o.map(jt=>pa({inputs:{input:jt},backend:n})),Nt=Ro(ut,r,n),Wt=Ro(Ct,r,n),$t=Rr({inputs:{real:Nt,imag:Wt},backend:n});return ut.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),Ct.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Wt),$t}let l=n.shouldExecuteOnCPU(o);if("string"===a&&(l=!0),l){const ut=o.map(Ae=>{const On=[-1,s.ZSL.sizeFromShape(Ae.shape.slice(r))];return nn({inputs:{x:Ae},backend:n,attrs:{shape:On}})}),Ct=ut.map(Ae=>({vals:n.readSync(Ae.dataId),shape:Ae.shape})),Nt=s.C0T.computeOutShape(ut.map(Ae=>Ae.shape),1),$t=Ia(Ct,Nt,a,1===ut[0].shape[0]),jt=s.C0T.computeOutShape(o.map(Ae=>Ae.shape),r),Ie=n.makeTensorInfo(jt,a,$t);return ut.forEach(Ae=>n.disposeIntermediateTensorInfo(Ae)),Ie}const v=o.filter(ut=>s.ZSL.sizeFromShape(ut.shape)>0),P=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&v[0].shape.length>1;if(1===v.length){const ut=P?new ar(o[0].shape,Nr):new $s(o[0].shape,Nr);return n.runWebGLProgram(ut,o,a)}const L=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(v.length>L){const ut=[];for(let Nt=0;Nt<v.length;Nt+=L){const Wt=v.slice(Nt,Nt+L);ut.push(Ro(Wt,r,n))}const Ct=Ro(ut,r,n);for(const Nt of ut)n.disposeIntermediateTensorInfo(Nt);return Ct}if(P){const ut=new uu(v.map(Ct=>Ct.shape),r);return n.runWebGLProgram(ut,v,a)}const{tensors2D:M,outShape:V}=function du(o,r,n){const a=s.C0T.computeOutShape(o.map(v=>v.shape),r);return{tensors2D:o.map(v=>nn({inputs:{x:v},attrs:{shape:[-1,s.ZSL.sizeFromShape(v.shape.slice(r))]},backend:n})),outShape:a}}(v,r,n),z=new lu(M.map(ut=>ut.shape)),Y=n.runWebGLProgram(z,M,a);M.forEach(ut=>n.disposeIntermediateTensorInfo(ut));const et=nn({inputs:{x:Y},attrs:{shape:V},backend:n});return n.disposeIntermediateTensorInfo(Y),et}function bl(o){const{inputs:r,backend:n,attrs:a}=o,{axis:l}=a,v=s.ZSL.parseAxisParam(l,r[0].shape)[0],P=r.map(V=>V.shape);s.C0T.assertParamsConsistent(P,v);const L=s.C0T.computeOutShape(r.map(V=>V.shape),v);if(0===s.ZSL.sizeFromShape(L))return n.makeTensorInfo(L,r[0].dtype,[]);const M=r.filter(V=>s.ZSL.sizeFromShape(V.shape)>0);return 1===M.length?Os({inputs:{x:M[0]},backend:n}):Ro(M,v,n)}const pu={kernelName:s.$dB,backendName:"webgl",kernelFunc:bl};class Ml{constructor(r,n=!1,a=null,l=!1,v=!1){this.variableNames=["x","W"],this.outputShape=r.outShape;const P=r.padInfo.top,L=r.padInfo.left,M=r.strideHeight,V=r.strideWidth,z=r.dilationHeight,Y=r.dilationWidth,et=r.filterHeight,ut=r.filterWidth,Ct=4*Math.floor(r.inChannels/4),Nt=r.inChannels%4,Wt="channelsLast"===r.dataFormat,$t=Wt?1:2,jt=Wt?2:3,Ie=Wt?3:1;let Ae="",Je="";a&&(Ae=l?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`\n          float activation(float x) {\n            ${a}\n          }\n        `,Je="result = activation(result);");const On=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${Ae}\n\n      const ivec2 strides = ivec2(${M}, ${V});\n      const ivec2 pads = ivec2(${P}, ${L});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${Ie}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${$t}], coords[${jt}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${et}; wR++) {\n          int xR = xRCorner + wR * ${z};\n\n          if (xR < 0 || xR >= ${r.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${ut}; wC++) {\n            int xC = xCCorner + wC * ${Y};\n\n            if (xC < 0 || xC >= ${r.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${Ct}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${Wt}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===Nt}) {\n\n              if (${Wt}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${Ct}) *\n                    getW(wR, wC, ${Ct}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${Ct}, xR, xC) *\n                    getW(wR, wC, ${Ct}, d2);\n              }\n\n            } else if (${2===Nt}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${Ct}, d2),\n                getW(wR, wC, ${Ct} + 1, d2)\n              );\n\n              if (${Wt}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${Ct}),\n                  getX(batch, xR, xC, ${Ct} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${Ct}, xR, xC),\n                  getX(batch, ${Ct} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===Nt}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${Ct}, d2),\n                getW(wR, wC, ${Ct} + 1, d2),\n                getW(wR, wC, ${Ct} + 2, d2)\n              );\n\n              if (${Wt}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${Ct}),\n                  getX(batch, xR, xC, ${Ct} + 1),\n                  getX(batch, xR, xC, ${Ct} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${Ct}, xR, xC),\n                  getX(batch, ${Ct} + 1, xR, xC),\n                  getX(batch, ${Ct} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${On}\n        ${Je}\n        setOutput(result);\n      }\n    `}}class hu{constructor(r){this.variableNames=["x","W"],this.outputShape=r.outShape;const n=r.padInfo.front,a=r.padInfo.top,l=r.padInfo.left,v=r.strideDepth,P=r.strideHeight,L=r.strideWidth,M=r.dilationDepth,V=r.dilationHeight,z=r.dilationWidth,Y=r.filterDepth,et=r.filterHeight,ut=r.filterWidth,Ct=4*Math.floor(r.inChannels/4),Nt=r.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${v}, ${P}, ${L});\n      const ivec3 pads = ivec3(${n}, ${a}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${Y}; wF++) {\n          int xF = xFCorner + wF * ${M};\n\n          if (xF < 0 || xF >= ${r.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${et}; wR++) {\n            int xR = xRCorner + wR * ${V};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${ut}; wC++) {\n              int xC = xCCorner + wC * ${z};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${Ct}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===Nt}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${Ct}) *\n                  getW(wF, wR, wC, ${Ct}, d2);\n              } else if (${2===Nt}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${Ct}),\n                  getX(batch, xF, xR, xC, ${Ct} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${Ct}, d2),\n                  getW(wF, wR, wC, ${Ct} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===Nt}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${Ct}),\n                  getX(batch, xF, xR, xC, ${Ct} + 1),\n                  getX(batch, xF, xR, xC, ${Ct} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${Ct}, d2),\n                  getW(wF, wR, wC, ${Ct} + 1, d2),\n                  getW(wF, wR, wC, ${Ct} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nl{constructor(r,n=!1,a=null,l=!1,v=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=Pe(this.outputShape.length);const P=r.padInfo.left,L=r.strideWidth,M=r.dilationWidth,V=r.filterHeight,z=r.filterWidth,Y=z;let et="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let Wt=0;Wt<z;Wt++)et+=`\n           vec4 xTexelC${2*Wt};\n           int xTexelC${2*Wt}Ready;\n           vec4 xTexelC${2*Wt+1};\n           int xTexelC${2*Wt+1}Ready;\n           vec4 xC${Wt};`;et+=`\n     for (int r = 0; r < ${V}; r++) {\n      for (int d1 = 0; d1 < ${r.inChannels}; d1 += 2) {\n       `;for(let Wt=0;Wt<z;Wt++)et+=`\n           xTexelC${2*Wt} = vec4(0.0);\n           xTexelC${2*Wt}Ready = 0;\n           xTexelC${2*Wt+1} = vec4(0.0);\n           xTexelC${2*Wt+1}Ready = 0;\n           xC${Wt} = vec4(0.0);`;et+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let Wt=0;Wt<(Y+1)/2;Wt++){const $t=2*Wt;if(et+=`\n           xC = xCCorner + ${$t*M};\n           `,1===L){if($t<z&&(P%2==1?(et+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$t}Ready == 0) {\n                   xTexelC${$t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${$t}.zw = vec2(0.0);\n                   }\n                   xTexelC${$t}Ready = 1;\n                 }\n               `,et+=1===M&&$t>0?`\n                 xC${$t} = vec4(xTexelC${$t-2}.zw, xTexelC${$t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${$t} = vec4(previous.zw, xTexelC${$t}.xy);\n                   } else {\n                     xC${$t} = vec4(0.0, 0.0, xTexelC${$t}.xy);\n                   }\n                   `):et+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${$t}Ready == 0) {\n                   xTexelC${$t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${$t}.zw = vec2(0.0);\n                   }\n                   xTexelC${$t}Ready = 1;\n                 }\n\n                 xC${$t} = xTexelC${$t};\n                 `,$t+1<z)){const jt=P%2==0?s.ZSL.nearestLargerEven(M):M;M%2==0&&P%2==1||M%2!=0&&P%2!=1?(et+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${jt};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$t+1}Ready == 0) {\n                     xTexelC${$t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${$t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${$t+1}Ready = 1;\n                   }\n                   `,et+=M>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${$t+1} = vec4(previous.zw, xTexelC${$t+1}.xy);\n                     } else {\n                      xC${$t+1} = vec4(0.0, 0.0, xTexelC${$t+1}.xy);\n                     }\n                     `:`\n                     xC${$t+1} = vec4(xTexelC${$t}.zw, xTexelC${$t+1}.xy);\n                     `):et+=1===jt?`\n                     xC${$t+1} = xTexelC${$t};\n                     `:`\n                     xCOffset = xC + ${jt};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$t+1}Ready == 0) {\n                       xTexelC${$t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${$t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${$t+1}Ready = 1;\n                     }\n\n                     xC${$t+1} = xTexelC${$t+1};\n                     `}}else $t<z&&(P%2==1?(et+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$t}Ready == 0) {\n                   xTexelC${$t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${$t}.zw = vec2(0.0);\n                   }\n                   xTexelC${$t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$t+1}Ready == 0) {\n                   xTexelC${$t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${$t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${$t+1}Ready = 1;\n                 }\n\n                 xC${$t} = vec4(xTexelC${$t}.zw, xTexelC${$t+1}.zw);\n               `,$t+1<z&&(et+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${$t+1} = vec4(xTexelC${$t+1}.xy, final.xy);\n                 `)):(et+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${$t}Ready == 0) {\n                   xTexelC${$t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${$t}.zw = vec2(0.0);\n                   }\n                   xTexelC${$t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$t+1}Ready == 0) {\n                   xTexelC${$t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${$t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${$t+1}Ready = 1;\n                 }\n\n                 xC${$t} = vec4(\n                   xTexelC${$t}.xy, xTexelC${$t+1}.xy);\n               `,$t+1<z&&(et+=`\n                   xC${$t+1} = vec4(xTexelC${$t}.zw, xTexelC${$t+1}.zw);\n                 `)));$t<z&&(et+=`\n             wTexel = getW(r, ${$t}, d1, d2);\n             dotProd += xC${$t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${r.inChannels}) {\n               dotProd += xC${$t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,$t+1<z&&(et+=`\n               wTexel = getW(r, ${$t+1}, d1, d2);\n               dotProd += xC${$t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${r.inChannels}) {\n                 dotProd += xC${$t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}et+="\n     }\n   ",et+="\n     }\n   ",et+="\n     }\n   ";let ut="",Ct="";a&&(ut=l?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${a}\n         }`:v?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${a}\n         }`:`vec4 activation(vec4 x) {\n           ${a}\n         }`,Ct="result = activation(result);");const Nt=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${ut}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${et}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${Nt}\n         ${Ct}\n         setOutput(result);\n       }\n     `}}class fu{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=r,this.enableShapeUniforms=Pe(this.outputShape.length);const{dataFormat:a}=n,l=Xt(),v="channelsLast"===a,P=v?1:2,L=v?2:3,M=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${r[2]} && pos < ${r[1]}) {`;let V="";for(let z=0;z<=1;z++)for(let Y=0;Y<=1;Y++)V+=`\n          blockIndex = rc.z + ${Y};\n          pos = rc.y + ${z};\n\n          ${M}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${P}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${L}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${v}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*z+Y}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*z+Y}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${V}\n\n        ${l.output} = result;\n      }\n    `}}function ha(o,r){const n=o.length;return n>=3?r?[...o.slice(0,-3),o[n-3]*o[n-2],o[n-1]]:[...o.slice(0,-3),o[n-3],o[n-2]*o[n-1]]:!r&&1===n&&o[0]>1?[o[0],1]:null}function Rl({x:o,filter:r,convInfo:n,backend:a,bias:l=null,preluActivationWeights:v=null,leakyreluAlpha:P=0,activation:L=null}){const M=o.shape,V=a.texData.get(o.dataId),z=n.inChannels,Y=M[0]*M[1]*M[2],et=n.outChannels,ut="channelsLast"===n.dataFormat;let Wt;const $t=[];if(null!=v){const Ae=ha(v.shape,ut);null!=Ae&&(v=nn({inputs:{x:v},backend:a,attrs:{shape:Ae}}),$t.push(v))}if(null!=l){const Ae=ha(l.shape,ut);null!=Ae&&(l=nn({inputs:{x:l},backend:a,attrs:{shape:Ae}}),$t.push(l))}if((1!==Y&&1!==et||!(z>sa))&&V.isPacked&&ut&&null!=V.texture&&M[2]%2!=0&&s.ZSL.arraysEqual(V.shape.slice(-3),M.slice(-3))){const Je={dataId:o.dataId,shape:[1,M[0]*M[1]*(M[2]+1),n.inChannels],dtype:o.dtype},On=V.shape;V.shape=V.shape.slice(),V.shape[V.shape.length-2]++,s.ZSL.assert(Gn(V.shape,Je.shape),()=>`packed reshape ${V.shape} to ${Je.shape} isn't free`);const Dn=nn({inputs:{x:r},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});$t.push(Dn);const pn=xo({a:Je,b:Dn,backend:a,transposeA:!1,transposeB:!1,bias:l,activation:L,preluActivationWeights:v,leakyreluAlpha:P}),Wn=a.texData.get(pn.dataId);s.ZSL.assert(Wn.isPacked,()=>"batchMatMul result is expected to be packed"),V.shape=On,Wn.shape=n.outShape,Wt=Os({inputs:{x:pn},backend:a}),Wt.shape=n.outShape,$t.push(pn)}else{const Ae=n.outHeight*n.outWidth,Je=nn({inputs:{x:o},backend:a,attrs:{shape:ut?[n.batchSize,Ae,n.inChannels]:[n.batchSize,n.inChannels,Ae]}}),On=nn({inputs:{x:r},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),Dn=xo({a:ut?Je:On,b:ut?On:Je,transposeA:!ut,transposeB:!1,backend:a,bias:l,activation:L,preluActivationWeights:v,leakyreluAlpha:P});Wt=nn({inputs:{x:Dn},backend:a,attrs:{shape:n.outShape}}),$t.push(Je),$t.push(On),$t.push(Dn)}for(const Ae of $t)a.disposeIntermediateTensorInfo(Ae);return Wt}function Ll({x:o,filter:r,convInfo:n,backend:a,bias:l=null,preluActivationWeights:v=null,leakyreluAlpha:P=0,activation:L=null}){const{filterWidth:M,filterHeight:V,inChannels:z,outWidth:Y,outHeight:et,dataFormat:ut}=n,Ct="channelsLast"===ut,Nt=M*V*z,Wt=et*Y,$t=[n.batchSize,Nt,Wt],Ae=[];if(null!=v){const Ss=ha(v.shape,Ct);null!=Ss&&(v=nn({inputs:{x:v},backend:a,attrs:{shape:Ss}}),Ae.push(v))}if(null!=l){const Ss=ha(l.shape,Ct);null!=Ss&&(l=nn({inputs:{x:l},backend:a,attrs:{shape:Ss}}),Ae.push(l))}const Je=nn({inputs:{x:r},backend:a,attrs:{shape:[1,Nt,s.ZSL.sizeFromShape(r.shape)/Nt]}});Ae.push(Je);const On=new fu($t,n),pn=a.runWebGLProgram(On,[o],"float32",[o.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),Wn=nn({inputs:{x:pn},backend:a,attrs:{shape:$t}});Ae.push(pn),Ae.push(Wn);const Nn=null!=l,hs=null!=v,ms="leakyrelu"===L,Br=L?oo(L,!0):null,zs=new Jo(Ct?Wn.shape:Je.shape,Ct?Je.shape:Wn.shape,Ct?[n.batchSize,Wt,n.outChannels]:[n.batchSize,n.outChannels,Wt],!0,!1,Nn,Br,hs,ms),Xs=Ct?[Wn,Je]:[Je,Wn];if(l&&Xs.push(l),hs&&Xs.push(v),ms){const Ss=a.makeTensorInfo([],"float32",s.ZSL.createScalarValue(P,"float32"));Xs.push(Ss),Ae.push(Ss)}const ir=a.runWebGLProgram(zs,Xs,"float32"),Cr=nn({inputs:{x:ir},backend:a,attrs:{shape:n.outShape}});Ae.push(ir);for(const Ss of Ae)a.disposeIntermediateTensorInfo(Ss);return Cr}const gu={kernelName:s.p2J,backendName:"webgl",kernelFunc:function mu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v}=r,{strides:P,pad:L,dataFormat:M,dilations:V,dimRoundingMode:z}=a,Y=s.C0T.convertConv2DDataFormat(M),et=s.C0T.computeConv2DInfo(l.shape,v.shape,P,V,L,z,!1,Y);let ut;if(1!==et.filterHeight||1!==et.filterWidth||1!==et.dilationHeight||1!==et.dilationWidth||1!==et.strideHeight||1!==et.strideWidth||"SAME"!==et.padInfo.type&&"VALID"!==et.padInfo.type)if(et.strideWidth<=2&&"channelsLast"===Y&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const Nt=new Nl(et);ut=n.runWebGLProgram(Nt,[l,v],"float32",[[et.padInfo.top,et.padInfo.left],[et.strideHeight,et.strideWidth],[et.dilationHeight,et.dilationWidth],[et.inHeight,et.inWidth]])}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))ut=Ll({x:l,filter:v,convInfo:et,backend:n});else{const Nt=new Ml(et);ut=n.runWebGLProgram(Nt,[l,v],"float32")}else ut=Rl({x:l,filter:v,convInfo:et,backend:n});const Ct=nn({inputs:{x:ut},backend:n,attrs:{shape:et.outShape}});return n.disposeIntermediateTensorInfo(ut),Ct}};class Eu{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yR = 0; yR < ${r.outHeight}; yR++) {\n            int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${r.outWidth}; yC++) {\n              int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===r.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _u{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterHeight,a=r.filterWidth,P="channelsLast"===r.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${P?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${P?1:2}], coords[${P?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${a} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${r.outChannels}; d2++) {\n\n              if (${P}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yu{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yF = 0; yF < ${r.outDepth}; yF++) {\n            int xF = wF + yF * ${r.strideDepth} - ${r.padInfo.front};\n\n            if (xF < 0 || xF >= ${r.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${r.outHeight}; yR++) {\n              int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n              if (xR < 0 || xR >= ${r.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${r.outWidth}; yC++) {\n                int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n                if (xC < 0 || xC >= ${r.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xu{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterDepth,a=r.filterHeight,l=r.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${n-1-r.padInfo.front}, ${a-1-r.padInfo.top}, ${l-1-r.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${n}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${r.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${n} - 1 - wF;\n\n          for (int wR = 0; wR < ${a}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${a} - 1 - wR;\n\n            for (int wC = 0; wC < ${l}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${l} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${r.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Tu={kernelName:s.rFm,backendName:"webgl",kernelFunc:function vu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,dy:v}=r,{strides:P,pad:L,dataFormat:M,dimRoundingMode:V,filterShape:z}=a,Y=s.C0T.convertConv2DDataFormat(M),et=s.C0T.computeConv2DInfo(l.shape,z,P,1,L,V,!1,Y),ut=new Eu(et);return n.runWebGLProgram(ut,[l,v],"float32")}};class Cu{constructor(r){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=r.inShape,this.enableShapeUniforms=Pe(this.outputShape.length);const n=r.filterHeight,a=r.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int wCPerm = ${a} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${r.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${r.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Iu={kernelName:s.jfg,backendName:"webgl",kernelFunc:function Du(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,filter:v}=r,{inputShape:P,strides:L,pad:M,dataFormat:V,dimRoundingMode:z}=a,Y=s.C0T.convertConv2DDataFormat(V),et=s.C0T.computeConv2DInfo(P,v.shape,L,1,M,z,!1,Y);if((0,s._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===Y){const ut=[[et.strideHeight,et.strideWidth]],Ct=new Cu(et);return n.runWebGLProgram(Ct,[l,v],"float32",ut)}{const ut=new _u(et);return n.runWebGLProgram(ut,[l,v],"float32")}}},Ou={kernelName:s.A1h,backendName:"webgl",kernelFunc:function Pu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v}=r,{strides:P,pad:L,dilations:M}=a,V=s.C0T.computeConv3DInfo(l.shape,v.shape,P,M,L),z=new hu(V);return n.runWebGLProgram(z,[l,v],"float32")}},Au={kernelName:s.iGz,backendName:"webgl",kernelFunc:function Su(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,dy:v}=r,{strides:P,pad:L,filterShape:M}=a,V=s.C0T.computeConv3DInfo(l.shape,M,P,1,L),z=new yu(V);return n.runWebGLProgram(z,[l,v],"float32")}},Mu={kernelName:s.gC7,backendName:"webgl",kernelFunc:function bu(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,filter:v}=r,{pad:P,strides:L,inputShape:M}=a,V=s.C0T.computeConv3DInfo(M,v.shape,L,1,P),z=new xu(V);return n.runWebGLProgram(z,[l,v],"float32")}},Lu=Fn({opSnippet:qr+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${jr}\n  return result;\n`}),$u={kernelName:s.Mn0,backendName:"webgl",kernelFunc:Lu},wu=Fn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Bu={kernelName:s.MnK,backendName:"webgl",kernelFunc:wu};class ku{constructor(r,n,a,l,v){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[P,L,M,V]=r,[z]=n,[Y,et]=a;this.outputShape=[z,Y,et,V];const ut="bilinear"===l?1:0,[Ct,Nt]=[L-1+".0",M-1+".0"],[Wt,$t,jt]=Y>1?[""+(L-1)/(Y-1),"(y2-y1) * height_ratio",`y1*${Ct} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${Ct}`],[Ie,Ae,Je]=et>1?[""+(M-1)/(et-1),"(x2-x1) * width_ratio",`x1*${Nt} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${Nt}`];this.userCode=`\n      const float height_ratio = float(${Wt});\n      const float width_ratio = float(${Ie});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${P}) {\n          return;\n        }\n\n        float height_scale = ${$t};\n        float width_scale = ${Ae};\n\n        float in_y = ${jt};\n        if( in_y < 0.0 || in_y > ${Ct} ) {\n          setOutput(float(${v}));\n          return;\n        }\n        float in_x = ${Je};\n        if( in_x < 0.0 || in_x > ${Nt} ) {\n          setOutput(float(${v}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${ut} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Wu={kernelName:s.MRQ,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{image:l,boxes:v,boxInd:P}=r,{cropSize:L,method:M,extrapolationValue:V}=a,z=new ku(l.shape,v.shape,L,M,V);return n.runWebGLProgram(z,[l,v,P],"float32")}};var fa=function(o){return o.Prod="*",o.Sum="+",o}(fa||{});class $l{constructor(r,n,a,l){this.op=r,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const v=this.outputShape.length,L=a?this.op===fa.Prod?"1.0":"0.0":`getX(${wl(v,"coords",this.op)})`,M=this.outputShape[this.outputShape.length-1];let V="",z="";a?(V=l?"end != "+(M-1):"end != 0",z=l?"end + 1":"end - 1"):(V=l?`end + pow2 < ${M}`:"end >= pow2",z=l?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${O(v)} coords = getOutputCoords();\n        int end = ${Bl(v,"coords",this.op)};\n        float val = ${L};\n        int pow2 = int(pow(2.0, index));\n        if (${V}) {\n          int idx = ${z};\n          ${Bl(v,"coords",this.op)} = idx;\n          val ${this.op}= getX(${wl(v,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function wl(o,r,n){if(1===o)return`${r}`;if(2===o)return`${r}.x, ${r}.y`;if(3===o)return`${r}.x, ${r}.y, ${r}.z`;if(4===o)return`${r}.x, ${r}.y, ${r}.z, ${r}.w`;throw new Error(`Cumulative ${n} for rank ${o} is not yet supported`)}function Bl(o,r,n){if(1===o)return`${r}`;if(2===o)return`${r}.y`;if(3===o)return`${r}.z`;if(4===o)return`${r}.w`;throw new Error(`Cumulative ${n} for rank ${o} is not yet supported`)}function kl(o,r,n,a,l,v){const P=r.shape.length,L=s.C0T.getAxesPermutation([a],P);let M=r;null!=L&&(M=Cs({inputs:{x:r},backend:n,attrs:{perm:L}}));const V=s.C0T.getInnerMostAxes(1,P)[0];if(V!==P-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const z=M.shape[V];let Y=Os({inputs:{x:M},backend:n});for(let et=0;et<=Math.ceil(Math.log2(z))-1;et++){const ut=new $l(o,M.shape,!1,v),Nt=Y;Y=n.runWebGLProgram(ut,[Y],Y.dtype,[[et]]),n.disposeIntermediateTensorInfo(Nt)}if(l){const et=new $l(o,M.shape,l,v),ut=Y;Y=n.runWebGLProgram(et,[Y],Y.dtype),n.disposeIntermediateTensorInfo(ut)}if(null!=L){const ut=Cs({inputs:{x:Y},backend:n,attrs:{perm:s.C0T.getUndoAxesPermutation(L)}});return n.disposeIntermediateTensorInfo(Y),n.disposeIntermediateTensorInfo(M),ut}return Y}const Vu={kernelName:s.jj_,backendName:"webgl",kernelFunc:function Uu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,exclusive:P,reverse:L}=a;return kl(fa.Prod,l,n,v,P,L)}},zu={kernelName:s.nY8,backendName:"webgl",kernelFunc:function Ku(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,exclusive:P,reverse:L}=a;return kl(fa.Sum,l,n,v,P,L)}},Hu={kernelName:s.wNW,backendName:"webgl",kernelFunc:function Gu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,weights:v}=r,{size:P,binaryOutput:L}=a;if(1===l.shape.length){const M=n.readSync(l.dataId),V=n.readSync(v.dataId),z=$o(M,V,v.dtype,v.shape,P);return n.makeTensorInfo([P],v.dtype,z)}if(2===l.shape.length){const M=n.bufferSync(l),V=n.bufferSync(v),z=va(M,V,P,L);return n.makeTensorInfo(z.shape,v.dtype,z.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${l.shape.length}.`)}};class ju{constructor(r,n,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=r,this.blockSize=n,this.dataFormat=a,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${n};\n      int offset_h = imod(h, ${n});\n      int in_w = w / ${n};\n      int offset_w = imod(w, ${n});\n      int offset_d = (offset_h * ${n} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Yu={kernelName:s.TMz,backendName:"webgl",kernelFunc:function Zu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{blockSize:v,dataFormat:P}=a,L=l.shape[0],Y=("NHWC"===P?l.shape[1]:l.shape[2])*v,et=("NHWC"===P?l.shape[2]:l.shape[3])*v,ut=("NHWC"===P?l.shape[3]:l.shape[1])/(v*v),Nt=new ju("NHWC"===P?[L,Y,et,ut]:[L,ut,Y,et],v,P);return n.runWebGLProgram(Nt,[l],l.dtype)}};class Fl{constructor(r,n=!1,a=null,l=!1,v=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=Pe(this.outputShape.length);const P=r.filterHeight,L=r.filterWidth,M=r.outChannels/r.inChannels;let V="",z="";a&&(V=l?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`\n          float activation(float x) {\n            ${a}\n          }\n        `,z="result = activation(result);");const Y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${V}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${M};\n        int q = d2 - d1 * ${M};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${P}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${L}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${Y}\n        ${z}\n        setOutput(result);\n      }\n    `}}class Wl{constructor(r,n=!1,a=null,l=!1,v=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=Pe(this.outputShape.length);const P=r.outChannels/r.inChannels,L=r.padInfo.left,M=r.strideWidth,V=r.dilationWidth,z=r.filterHeight,Y=r.filterWidth,et=Y;let ut="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let $t=0;$t<Y;$t++)ut+=`\n          vec4 xTexelC${2*$t};\n          int xTexelC${2*$t}Ready;\n          vec4 xTexelC${2*$t+1};\n          int xTexelC${2*$t+1}Ready;\n          vec4 xC${$t};`;ut+=`\n    for (int r = 0; r < ${z}; r++) {\n      `;for(let $t=0;$t<Y;$t++)ut+=`\n          xTexelC${2*$t} = vec4(0.0);\n          xTexelC${2*$t}Ready = 0;\n          xTexelC${2*$t+1} = vec4(0.0);\n          xTexelC${2*$t+1}Ready = 0;\n          xC${$t} = vec4(0.0);`;ut+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let $t=0;$t<(et+1)/2;$t++){const jt=2*$t;if(ut+=`\n          xC = xCCorner + ${jt*V};\n          `,1===M){if(jt<Y&&(L%2==1?(ut+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n              `,ut+=1===V&&jt>0?`\n                xC${jt} = vec4(xTexelC${jt-2}.zw, xTexelC${jt}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${jt} = vec4(previous.zw, xTexelC${jt}.xy);\n                  } else {\n                    xC${jt} = vec4(0.0, 0.0, xTexelC${jt}.xy);\n                  }\n                  `):ut+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                xC${jt} = xTexelC${jt};\n                `,jt+1<Y)){const Ie=L%2==0?s.ZSL.nearestLargerEven(V):V;V%2==0&&L%2==1||V%2!=0&&L%2!=1?(ut+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${Ie};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                    xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${jt+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${jt+1}Ready = 1;\n                  }\n                  `,ut+=V>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${jt+1} = vec4(previous.zw, xTexelC${jt+1}.xy);\n                    } else {\n                     xC${jt+1} = vec4(0.0, 0.0, xTexelC${jt+1}.xy);\n                    }\n                    `:`\n                    xC${jt+1} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.xy);\n                    `):ut+=1===Ie?`\n                    xC${jt+1} = xTexelC${jt};\n                    `:`\n                    xCOffset = xC + ${Ie};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                      xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${jt+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${jt+1}Ready = 1;\n                    }\n\n                    xC${jt+1} = xTexelC${jt+1};\n                    `}}else jt<Y&&(L%2==1?(ut+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                  xTexelC${jt+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${jt+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt+1}Ready = 1;\n                }\n\n                xC${jt} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.zw);\n              `,jt+1<Y&&(ut+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${jt+1} = vec4(xTexelC${jt+1}.xy, final.xy);\n                `)):(ut+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                  xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt+1}.zw = vec2(0.);\n                  }\n                  xTexelC${jt+1}Ready = 1;\n                }\n\n                xC${jt} = vec4(\n                  xTexelC${jt}.xy, xTexelC${jt+1}.xy);\n              `,jt+1<Y&&(ut+=`\n                  xC${jt+1} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.zw);\n                `)));jt<Y&&(ut+=`\n            wTexel = getW(r, ${jt}, d1, q);\n            dotProd += xC${jt} * vec4(wTexel.xz, wTexel.xz);\n          `,jt+1<Y&&(ut+=`\n              wTexel = getW(r, ${jt+1}, d1, q);\n              dotProd += xC${jt+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}ut+="\n    }\n  ",ut+="\n      }\n    ";let Ct="",Nt="";a&&(Ct=l?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,Nt="result = activation(result);");const Wt=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${Ct}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${P};\n        int q = d2 - d1 * ${P};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${ut}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${Wt}\n        ${Nt}\n        setOutput(result);\n      }\n    `}}const Qu={kernelName:s.tGH,backendName:"webgl",kernelFunc:function Xu(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v}=r,{strides:P,pad:L,dilations:M,dimRoundingMode:V}=a;let z=M;null==z&&(z=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,z),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${P} and dilations '${z}'`);const Y=s.C0T.computeConv2DInfo(l.shape,v.shape,P,z,L,V,!0);let et;return et=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&Y.strideWidth<=2&&Y.outChannels/Y.inChannels==1?new Wl(Y):new Fl(Y),n.runWebGLProgram(et,[l,v],"float32",[[Y.padInfo.top,Y.padInfo.left],[Y.strideHeight,Y.strideWidth],[Y.dilationHeight,Y.dilationWidth],[Y.inHeight,Y.inWidth]])}};class Ju{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r.outChannels/r.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yR = 0; yR < ${r.outHeight}; yR++) {\n            int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${r.outWidth}; yC++) {\n              int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qu{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterHeight,a=r.filterWidth,M=r.outChannels/r.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${a} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${M}; dm++) {\n              int d2 = d1 * ${M} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ec={kernelName:s.X$8,backendName:"webgl",kernelFunc:function tc(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,dy:v}=r,{strides:P,dilations:L,pad:M,dimRoundingMode:V,filterShape:z}=a,Y=s.C0T.computeConv2DInfo(l.shape,z,P,L,M,V,!0),et=new Ju(Y);return n.runWebGLProgram(et,[l,v],"float32")}},sc={kernelName:s.nVu,backendName:"webgl",kernelFunc:function nc(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,filter:v}=r,{strides:P,dilations:L,pad:M,dimRoundingMode:V,inputShape:z}=a,Y=s.C0T.computeConv2DInfo(z,v.shape,P,L,M,V,!0),et=new qu(Y);return n.runWebGLProgram(et,[l,v],"float32")}};class rc{constructor(r){this.variableNames=["X"],this.outputShape=[r,r],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ac={kernelName:s.ORI,backendName:"webgl",kernelFunc:function oc(o){const{inputs:r,backend:n}=o,{x:a}=r,l=[...a.shape,...a.shape],v=s.ZSL.sizeFromShape(a.shape),P=nn({inputs:{x:a},backend:n,attrs:{shape:[v]}}),L=new rc(v),M=n.runWebGLProgram(L,[P],P.dtype),V=nn({inputs:{x:M},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(M),V}};class ic{constructor(r){this.variableNames=["x","W"],this.outputShape=r.outShape;const{inHeight:n,inWidth:a,padInfo:l,strideHeight:v,strideWidth:P,filterHeight:L,filterWidth:M,dilationHeight:V,dilationWidth:z}=r,{top:Y,left:et}=l;this.userCode=`\n      const ivec2 strides = ivec2(${v}, ${P});\n      const ivec2 pads = ivec2(${Y}, ${et});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${L}; h++) {\n          int hIn = hBeg + h * ${V};\n\n          if (hIn >= 0 && hIn < ${n}) {\n            for (int w = 0; w < ${M}; w++) {\n              int wIn = wBeg + w * ${z};\n\n              if (wIn >= 0 && wIn < ${a}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const uc={kernelName:s.jxD,backendName:"webgl",kernelFunc:function lc(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v}=r,{strides:P,pad:L,dilations:M}=a,V=s.C0T.computeDilation2DInfo(l.shape,v.shape,P,L,"NHWC",M);let z;const Y=new ic(V);z=n.runWebGLProgram(Y,[l,v],"float32");const et=nn({inputs:{x:z},backend:n,attrs:{shape:V.outShape}});return n.disposeIntermediateTensorInfo(z),et}},dc={kernelName:s.Qgm,backendName:"webgl",kernelFunc:function cc(o){const{inputs:r,backend:n,attrs:a}=o,{equation:l}=a,v=r,{allDims:P,summedDims:L,idDims:M}=s.C0T.decodeEinsumEquation(l,v.length);s.C0T.checkEinsumDimSizes(P.length,M,v);const{path:V,steps:z}=s.C0T.getEinsumComputePath(L,M),Y=z.length;let et=null,ut=P.length;const Ct=[];for(let Nt=0;Nt<Y;++Nt){for(const Wt of z[Nt]){const{permutationIndices:$t,expandDims:jt}=s.C0T.getEinsumPermutation(ut,M[Wt]);let Ie;s.C0T.isIdentityPermutation($t)?Ie=v[Wt]:(Ie=Cs({inputs:{x:v[Wt]},backend:n,attrs:{perm:$t}}),Ct.push(Ie));const Ae=Ie.shape.slice();for(let Je=0;Je<jt.length;++Je)Ae.splice(jt[Je],0,1);s.ZSL.arraysEqual(Ie.shape,Ae)||(Ie=nn({inputs:{x:Ie},backend:n,attrs:{shape:Ae}}),Ct.push(Ie)),null===et?et=Ie:(et=bo({inputs:{a:Ie,b:et},backend:n}),Ct.push(et))}Nt<Y-1&&(V[Nt]>=0&&(et=yo({inputs:{x:et},backend:n,attrs:{axis:V[Nt]-(P.length-ut),keepDims:!1}}),Ct.push(et)),ut--)}for(const Nt of Ct)Nt!==et&&n.disposeIntermediateTensorInfo(Nt);return et}},pc=Fn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),hc={kernelName:s.Pah,backendName:"webgl",kernelFunc:pc},Ec={kernelName:s.rsH,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n}=o,{dy:a,y:l}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Zr("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,l.shape):new Hr("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,l.shape);return n.runWebGLProgram(v,[a,l],a.dtype)}},_c=_s({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Pa}),yc={kernelName:s.BRl,backendName:"webgl",kernelFunc:_c},vc=Fn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.C0T.ERF_P};\n  float a1 = ${s.C0T.ERF_A1};\n  float a2 = ${s.C0T.ERF_A2};\n  float a3 = ${s.C0T.ERF_A3};\n  float a4 = ${s.C0T.ERF_A4};\n  float a5 = ${s.C0T.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Tc={kernelName:s._s9,backendName:"webgl",kernelFunc:vc},Ul=Fn({opSnippet:qr+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Oa,dtype:"float32"}),Dc={kernelName:s.ox3,backendName:"webgl",kernelFunc:Ul};function vl(o){const{inputs:r,attrs:n,backend:a}=o,{dim:l}=n,{input:v}=r,P=v.shape.length,L=v.shape.slice();let M=l;return l<0&&(s.ZSL.assert(-(P+1)<=l,()=>`Axis must be in the interval [${-(P+1)}, ${P}]`),M=P+l+1),L.splice(M,0,1),nn({inputs:{x:v},backend:a,attrs:{shape:L}})}const Ic={kernelName:s.ybN,backendName:"webgl",kernelFunc:vl},Vl="return exp(x) - 1.0;",Pc=Fn({opSnippet:Vl,packedOpSnippet:Vl,cpuKernelImpl:Sa}),Oc={kernelName:s.ybj,backendName:"webgl",kernelFunc:Pc};class Kl{constructor(r,n,a){this.variableNames=["real","imag"];const l=n[1];this.outputShape=n;const v=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,P=a?`${l}.0`:"1.0";let L;if("real"===r)L="return real * expR - imag * expI;";else{if("imag"!==r)throw new Error(`FFT component must be either "real" or "imag", got ${r}.`);L="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${v};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${L}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${l});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${l}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${P};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function zl(o,r,n){const a=n.texData.get(o.dataId),l=s.ZSL.sizeFromShape(o.shape),v=o.shape[o.shape.length-1],L=nn({inputs:{x:o},backend:n,attrs:{shape:[l/v,v]}}),M=L.shape,V=new Kl("real",M,r),z=new Kl("imag",M,r),Y=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:M},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:M}],et=n.runWebGLProgram(V,Y,"float32"),ut=n.runWebGLProgram(z,Y,"float32"),Ct=Rr({inputs:{real:et,imag:ut},backend:n});n.disposeIntermediateTensorInfo(et),n.disposeIntermediateTensorInfo(ut);const Nt=nn({inputs:{x:Ct},backend:n,attrs:{shape:o.shape}});return n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(Ct),Nt}const Ac={kernelName:s.rGP,backendName:"webgl",kernelFunc:function Sc(o){const{inputs:r,backend:n}=o,{input:a}=r;return zl(a,!1,n)}};class bc{constructor(r,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=r,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Lo(o){const{backend:r,attrs:n}=o,{shape:a,value:l}=n;let{dtype:v}=n;if(v=v||s.ZSL.inferDtype(l),"string"===v){const P=s.ZSL.getArrayFromDType(v,s.ZSL.sizeFromShape(a));return P.fill(l),r.makeTensorInfo(a,v,P)}{const P=new bc(a,l);return r.runWebGLProgram(P,[],v,[[l]])}}const Mc={kernelName:s.SQl,backendName:"webgl",kernelFunc:Lo};class Nc{constructor(r){this.variableNames=["Image"],this.outputShape=[];const n=r[2];this.outputShape=r,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${n} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${n}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Rc={kernelName:s.BxF,backendName:"webgl",kernelFunc:({inputs:o,backend:r})=>{const{image:n}=o,a=r,l=new Nc(n.shape);return a.runWebGLProgram(l,[n],n.dtype)}},Gl="return floor(x);",Lc=Fn({opSnippet:Gl,packedOpSnippet:Gl,cpuKernelImpl:Aa}),$c={kernelName:s.ZgB,backendName:"webgl",kernelFunc:Lc},wc=_s({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Bc={kernelName:s.ElG,backendName:"webgl",kernelFunc:wc};class kc{constructor(r){this.variableNames=["A"];const n=Xt(),[a,l]=r;this.outputShape=r,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}.0, ${a}.0);\n\n        vec4 values = ${n.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Fc{constructor(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Xt(),[a,l]=r;this.outputShape=r,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${l}.0, ${a}.0);\n            vec4 values = ${n.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${n.output} = result;\n      }\n    `}}const Wc={kernelName:s.awo,backendName:"webgl",kernelFunc:function Uc(o){const{inputs:r,backend:n,attrs:a}=o;let{pixels:l}=r;const{numChannels:v}=a,P=typeof HTMLVideoElement<"u"&&l instanceof HTMLVideoElement,L=typeof HTMLImageElement<"u"&&l instanceof HTMLImageElement,[M,V]=P?[l.videoWidth,l.videoHeight]:[l.width,l.height],z=[V,M],Y=[V,M,v];if(L||P){const Nt=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Co||Nt!==Tl)&&(Tl=Nt,Co=document.createElement("canvas").getContext("2d",{willReadFrequently:Tl})),Co.canvas.width=M,Co.canvas.height=V,Co.drawImage(l,0,0,M,V),l=Co.canvas}const et=n.makeTensorInfo(z,"int32");n.texData.get(et.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(et.dataId),l);const ut=(0,s._K2)().getBool("WEBGL_PACK")?new Fc(Y):new kc(Y),Ct=n.runWebGLProgram(ut,[et],"int32");return n.disposeData(et.dataId),Ct}};let Co,Tl=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Kc={kernelName:s.aAr,backendName:"webgl",kernelFunc:function Vc(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v,bias:P,preluActivationWeights:L}=r,{strides:M,pad:V,dataFormat:z,dilations:Y,dimRoundingMode:et,activation:ut,leakyreluAlpha:Ct}=a,Nt=s.C0T.convertConv2DDataFormat(z),Wt=s.C0T.computeConv2DInfo(l.shape,v.shape,M,Y,V,et,!1,Nt);let $t;const jt=[],Ie=null!=P,Ae=null!=L,Je="leakyrelu"===ut,On=()=>{const pn=[l,v],Wn=(Nn,hs)=>{if("NCHW"===hs&&1===Nn.shape.length&&1!==Nn.shape[0]){const ms=nn({inputs:{x:Nn},backend:n,attrs:{shape:[Nn.shape[0],1,1]}});return jt.push(ms),ms}return Nn};if(Ie&&pn.push(Wn(P,z)),Ae&&pn.push(Wn(L,z)),Je){const Nn=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(Ct,"float32"));pn.push(Nn),jt.push(Nn)}return pn};if(1!==Wt.filterHeight||1!==Wt.filterWidth||1!==Wt.dilationHeight||1!==Wt.dilationWidth||1!==Wt.strideHeight||1!==Wt.strideWidth||"SAME"!==Wt.padInfo.type&&"VALID"!==Wt.padInfo.type)if(Wt.strideWidth<=2&&"channelsLast"===Nt&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const pn=ut?oo(ut,!0):null,Wn=new Nl(Wt,Ie,pn,Ae,Je),Nn=[[Wt.padInfo.top,Wt.padInfo.left],[Wt.strideHeight,Wt.strideWidth],[Wt.dilationHeight,Wt.dilationWidth],[Wt.inHeight,Wt.inWidth]],hs=On();$t=n.runWebGLProgram(Wn,hs,"float32",Nn)}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))$t=Ll({x:l,filter:v,convInfo:Wt,backend:n,bias:P,activation:ut,preluActivationWeights:L,leakyreluAlpha:Ct});else{const pn=ut?oo(ut,!1):null,Wn=new Ml(Wt,Ie,pn,Ae,Je),Nn=On();$t=n.runWebGLProgram(Wn,Nn,"float32")}else $t=Rl({x:l,filter:v,convInfo:Wt,backend:n,bias:P,activation:ut,preluActivationWeights:L,leakyreluAlpha:Ct});const Dn=nn({inputs:{x:$t},backend:n,attrs:{shape:Wt.outShape}});return jt.push($t),jt.forEach(pn=>n.disposeIntermediateTensorInfo(pn)),Dn}},Gc={kernelName:s.T7M,backendName:"webgl",kernelFunc:function zc(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,filter:v,bias:P,preluActivationWeights:L}=r,{strides:M,pad:V,dilations:z,dimRoundingMode:Y,activation:et,leakyreluAlpha:ut}=a,Ct=[];let Nt=z;null==Nt&&(Nt=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(M,Nt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${M} and dilations '${Nt}'`);const Wt=s.C0T.computeConv2DInfo(l.shape,v.shape,M,Nt,V,Y,!0),$t=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&Wt.strideWidth<=2&&Wt.outChannels/Wt.inChannels==1,jt=et?oo(et,$t):null,Ie=[l,v],Ae=null!=P,Je=null!=L,On="leakyrelu"===et;if(Ae&&Ie.push(P),Je&&Ie.push(L),On){const Nn=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(ut,"float32"));Ie.push(Nn),Ct.push(Nn)}let Dn;Dn=$t?new Wl(Wt,Ae,jt,Je,On):new Fl(Wt,Ae,jt,Je,On);const Wn=n.runWebGLProgram(Dn,Ie,"float32",[[Wt.padInfo.top,Wt.padInfo.left],[Wt.strideHeight,Wt.strideWidth],[Wt.dilationHeight,Wt.dilationWidth],[Wt.inHeight,Wt.inWidth]]);return Ct.forEach(Nn=>n.disposeIntermediateTensorInfo(Nn)),Wn}};class Hc{constructor(r,n,a,l){this.sliceDim=r,this.strides=n,this.paramsShape=l,this.variableNames=["x","indices"],this.outputShape=a;const v=O(a.length);let P="\n    int index;";for(let L=0;L<this.sliceDim;L++)P+=`\n          index = round(getIndices(coords[0], ${L}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[L]};\n          flattenIndex += index * ${this.strides[L]};`;this.userCode=`\n         void main() {\n          ${v} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${P}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Zc={kernelName:s.O4G,backendName:"webgl",kernelFunc:function jc(o){const{inputs:r,backend:n}=o,{params:a,indices:l}=r,v=l.shape,P=v[v.length-1],L=s.ZSL.sizeFromShape(a.shape),[M,V,z,Y]=s.C0T.prepareAndValidate(a,l),et=nn({inputs:{x:l},backend:n,attrs:{shape:[V,P]}}),ut=nn({inputs:{x:a},backend:n,attrs:{shape:[s.ZSL.sizeFromShape(a.shape)/z,z]}});if(n.shouldExecuteOnCPU([a,l])||"string"===a.dtype){const $t=n.readSync(l.dataId),jt=n.bufferSync(a),Ie=ba($t,jt,a.dtype,V,P,z,Y,a.shape,L);return n.makeTensorInfo(M,a.dtype,Ie.values)}const Ct=new Hc(P,Y,[V,z],a.shape),Nt=n.runWebGLProgram(Ct,[ut,et],ut.dtype),Wt=nn({inputs:{x:Nt},backend:n,attrs:{shape:M}});return n.disposeIntermediateTensorInfo(et),n.disposeIntermediateTensorInfo(ut),n.disposeIntermediateTensorInfo(Nt),Wt}};class Yc{constructor(r,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const a=O(this.rank),l=function Xc(o){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let l=0;l<o.length;l++)a.push(2===l?"index":`${n[l]}`);return a.join()}(r);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${r[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${l}));\n      }\n    `}}function Hl(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,indices:v}=r,{axis:P,batchDims:L}=a,M=s.ZSL.parseAxisParam(P,l.shape)[0];if((0,s._K2)().get("DEBUG")){const jt=n.readSync(v.dataId),Ie=l.shape[M];for(let Ae=0;Ae<jt.length;++Ae){const Je=jt[Ae];s.ZSL.assert(Je<=Ie-1&&Je>=0,()=>`GatherV2: the index value ${Je} is not in [0, ${Ie-1}]`)}}const V=s.C0T.segment_util.collectGatherOpShapeInfo(l,v,M,L),z=s.ZSL.sizeFromShape(v.shape),Y=[],et=nn({inputs:{x:l},backend:n,attrs:{shape:[V.batchSize,V.outerSize,V.dimSize,V.sliceSize]}}),ut=nn({inputs:{x:v},backend:n,attrs:{shape:[V.batchSize,z/V.batchSize]}});Y.push(et),Y.push(ut);const Ct=[V.batchSize,V.outerSize,z/V.batchSize,V.sliceSize];if(n.shouldExecuteOnCPU([l,v])||"string"===l.dtype){const jt=n.bufferSync(ut),Ie=n.bufferSync(et),Ae=Ma(Ie,jt,Ct);return Y.forEach(Je=>n.disposeIntermediateTensorInfo(Je)),n.makeTensorInfo(V.outputShape,Ae.dtype,Ae.values)}const Nt=new Yc(et.shape,Ct),Wt=n.runWebGLProgram(Nt,[et,ut],et.dtype);Y.push(Wt);const $t=nn({inputs:{x:Wt},backend:n,attrs:{shape:V.outputShape}});return Y.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),$t}const Qc={kernelName:s.mxL,backendName:"webgl",kernelFunc:Hl},Jc=_s({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Na,dtype:"bool"}),qc={kernelName:s.XhZ,backendName:"webgl",kernelFunc:Jc},td=_s({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ra}),ed={kernelName:s.lLS,backendName:"webgl",kernelFunc:td},sd={kernelName:s.OAQ,backendName:"webgl",kernelFunc:function nd(o){const{inputs:r,backend:n}=o,{input:a}=r;return zl(a,!0,n)}},rd=Fn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),od={kernelName:s.gIW,backendName:"webgl",kernelFunc:rd},ad=Fn({opSnippet:"return float(isinf(x));",dtype:"bool"}),id={kernelName:s.E3$,backendName:"webgl",kernelFunc:ad},ld=Fn({opSnippet:"return float(isnan(x));",dtype:"bool"}),ud={kernelName:s.iPs,backendName:"webgl",kernelFunc:ld},cd=_s({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:La,dtype:"bool"}),dd={kernelName:s.mIA,backendName:"webgl",kernelFunc:cd},pd=_s({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$a,dtype:"bool"}),hd={kernelName:s.CwD,backendName:"webgl",kernelFunc:pd},md={kernelName:s.mnI,backendName:"webgl",kernelFunc:function fd(o){const{backend:r,attrs:n}=o,{start:a,stop:l,num:v}=n,P=wa(a,l,v);return r.makeTensorInfo([P.length],"float32",P)}},Ed=Fn({opSnippet:qr+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ba}),_d={kernelName:s.tG8,backendName:"webgl",kernelFunc:Ed},xd=Fn({opSnippet:qr+"\n  return log(1.0 + x);\n"}),vd={kernelName:s.Cg$,backendName:"webgl",kernelFunc:xd},Td=_s({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Cd={kernelName:s.RUm,backendName:"webgl",kernelFunc:Td},Dd=Fn({opSnippet:"return float(!(x >= 1.0));"}),Id={kernelName:s.nZd,backendName:"webgl",kernelFunc:Dd},Pd=_s({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Od={kernelName:s.LXA,backendName:"webgl",kernelFunc:Pd};class Sd{constructor(r,n,a,l,v){this.variableNames=["x"],this.outputShape=[];const P=n,L=r[3]-1;let M;this.outputShape=r;const V=`float(${a}) + float(${l}) * sum`;M=.5===v?`inversesqrt(${V})`:1===v?`1.0/(${V})`:`exp(log(${V}) * float(-${v}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${P}; j <= ${P}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${L}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${M};\n        setOutput(val);\n      }\n    `}}class Ad{constructor(r,n,a,l,v){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const P=n,L=r[3]-1;let M;this.outputShape=r;const V=`float(${a}) + float(${l}) * sum`;M=.5===v?`inversesqrt(${V})`:1===v?`1.0/(${V})`:`exp(log(${V}) * float(-${v}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${P};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${P}; j <= ${P}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${L}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${M};\n        setOutput(result);\n      }\n    `}}const Md={kernelName:s.jM4,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{depthRadius:v,bias:P,alpha:L,beta:M}=a,V=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Ad(l.shape,v,P,L,M):new Sd(l.shape,v,P,L,M);return n.runWebGLProgram(V,[l],l.dtype)}};class Nd{constructor(r,n,a,l,v){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=r,this.depth=r[3],this.depthRadius=n,this.bias=a,this.alpha=l,this.beta=v,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${n})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${n} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${l}) * norm + float(${a});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${l})\n                * float(${v})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${v});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ld={kernelName:s.ToN,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:l,y:v,dy:P}=r,{depthRadius:L,bias:M,alpha:V,beta:z}=a,Y=new Nd(l.shape,L,M,V,z);return n.runWebGLProgram(Y,[l,v,P],l.dtype)}};function jl(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{reductionIndices:v,keepDims:P}=a,L=l.shape.length,M=s.ZSL.parseAxisParam(v,l.shape);let V=M;const z=s.C0T.getAxesPermutation(V,L),Y=null!=z,et=n.shouldExecuteOnCPU([l]);let ut=l;if(Y){if(et){const Ie=n.texData.get(ut.dataId).values,Ae=new Array(L);for(let Dn=0;Dn<Ae.length;Dn++)Ae[Dn]=l.shape[z[Dn]];const Je=So(Ie,l.shape,l.dtype,z,Ae);ut=n.makeTensorInfo(Ae,l.dtype),n.texData.get(ut.dataId).values=Je}else ut=_o(l,z,n);V=s.C0T.getInnerMostAxes(V.length,L)}s.C0T.assertAxesAreInnerMostDims("max",V,L);const[Ct,Nt]=s.C0T.computeOutAndReduceShapes(ut.shape,V);let $t,Wt=Ct;if(P&&(Wt=s.C0T.expandShapeToKeepDim(Ct,M)),et){const Ie=n.texData.get(ut.dataId).values,Ae=ka(Ie,s.ZSL.sizeFromShape(Nt),Wt,l.dtype);$t=n.makeTensorInfo(Wt,l.dtype),n.texData.get($t.dataId).values=Ae}else $t=function $d(o,r,n,a){const l=s.ZSL.sizeFromShape(r),L=nn({inputs:{x:o},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/l,l]},backend:a}),M=Yr(L,o.dtype,"max",a),V=nn({inputs:{x:M},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(M),V}(ut,Nt,Wt,n);return Y&&n.disposeIntermediateTensorInfo(ut),$t}const wd={kernelName:s.VAI,backendName:"webgl",kernelFunc:jl},Fd=_s({opSnippet:Ao+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jr+"\n  return result;\n",cpuKernelImpl:wo}),Wd={kernelName:s.LDN,backendName:"webgl",kernelFunc:Fd},Vd={kernelName:s.t3d,backendName:"webgl",kernelFunc:function Ud(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r;dt(l,"maxPool");const{filterSize:v,strides:P,pad:L,dimRoundingMode:M}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${P} and dilations '1'`);const z=s.C0T.computePool2DInfo(l.shape,v,P,1,L,M);if(1===z.filterWidth&&1===z.filterHeight&&s.ZSL.arraysEqual(z.inShape,z.outShape))return Os({inputs:{x:l},backend:n});const Y=new ne(z,"max",!1);return n.runWebGLProgram(Y,[l],l.dtype)}},zd={kernelName:s.ySp,backendName:"webgl",kernelFunc:function Kd(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{filterSize:v,strides:P,pad:L,dataFormat:M,dimRoundingMode:V}=a,Y=s.C0T.computePool3DInfo(l.shape,v,P,[1,1,1],L,V,M),et=new se(Y,"max",!1);return n.runWebGLProgram(et,[l],l.dtype)}};class Gd{constructor(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;const v=r.effectiveFilterHeight,P=r.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${v-1-r.padInfo.top}, ${P-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${v};\n          wR += ${r.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${P}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${v*P-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${P} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hd{constructor(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;const M=r.effectiveFilterDepth,V=r.effectiveFilterHeight,z=r.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${M-1-r.padInfo.front}, ${V-1-r.padInfo.top}, ${z-1-r.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${M};\n           wD += ${r.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${r.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${r.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${V};\n              wR += ${r.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${z};\n                wC += ${r.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${M*V*z-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${V} * ${z} +\n                  wR * ${z} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Zd={kernelName:s.cHb,backendName:"webgl",kernelFunc:function jd(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,input:v}=r,P=v,{filterSize:L,strides:M,pad:V,dimRoundingMode:z}=a,et=s.C0T.computePool3DInfo(P.shape,L,M,[1,1,1],V,z),ut=new se(et,"max",!0),Ct=n.runWebGLProgram(ut,[P],P.dtype),Nt=new Hd(et),Wt=n.runWebGLProgram(Nt,[l,Ct],P.dtype);return n.disposeIntermediateTensorInfo(Ct),Wt}},Xd={kernelName:s.RXX,backendName:"webgl",kernelFunc:function Yd(o){const{inputs:r,backend:n,attrs:a}=o,{dy:l,input:v,output:P}=r,L=v;dt([v,P],"maxPoolGrad");const{filterSize:M,strides:V,pad:z,dimRoundingMode:Y}=a,et=s.C0T.computePool2DInfo(L.shape,M,V,1,z,Y),Ct=new ne(et,"max",!0),Nt=n.runWebGLProgram(Ct,[L],L.dtype),Wt=new Gd(et),$t=n.runWebGLProgram(Wt,[l,Nt],L.dtype);return n.disposeIntermediateTensorInfo(Nt),$t}},Jd={kernelName:s.TL8,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{x:a}=o,{filterSize:l,strides:v,pad:P,includeBatchInIndex:L}=r,M=n;s.ZSL.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const V=[1,1];s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(v,V),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${v} and dilations '${V}'`);const z=s.C0T.computePool2DInfo(a.shape,l,v,V,P),[Y,et]=function Qd(o,r,n,a){let l=new ne(n,"max",!1);const v=a.runWebGLProgram(l,[o],"float32");return l=new ne(n,"max",!0,!0,r),[v,a.runWebGLProgram(l,[o],"float32")]}(a,L,z,M);return[Y,et]}},tp={kernelName:s.g5A,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{x:a}=o,{keepDims:l,axis:v}=r,P=n,L=a.shape.length,M=s.ZSL.parseAxisParam(v,a.shape);let V=M;const z=s.C0T.getAxesPermutation(V,L),Y=null!=z,et=P.shouldExecuteOnCPU([a]),ut=[];let Ct=a;if(Y){if(et){const Ae=P.texData.get(Ct.dataId).values,Je=new Array(L);for(let pn=0;pn<Je.length;pn++)Je[pn]=a.shape[z[pn]];const On=So(Ae,a.shape,a.dtype,z,Je);Ct=P.makeTensorInfo(Je,a.dtype),P.texData.get(Ct.dataId).values=On}else Ct=_o(a,z,P);ut.push(Ct),V=s.C0T.getInnerMostAxes(V.length,L)}s.C0T.assertAxesAreInnerMostDims("sum",V,L);const[Nt,Wt]=s.C0T.computeOutAndReduceShapes(Ct.shape,V);let $t=Nt;l&&($t=s.C0T.expandShapeToKeepDim(Nt,M));const jt=function qd(o,r,n,a){const l=s.ZSL.sizeFromShape(r),L=nn({inputs:{x:o},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/l,l]},backend:a}),M=Yr(L,"float32","mean",a),V=nn({inputs:{x:M},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(M),V}(Ct,Wt,$t,P);for(const Ie of ut)P.disposeIntermediateTensorInfo(Ie);return jt}},np={kernelName:s.lNG,backendName:"webgl",kernelFunc:function ep(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,keepDims:P}=a,L=l.shape.length,M=s.ZSL.parseAxisParam(v,l.shape);let V=M;const z=s.C0T.getAxesPermutation(V,L);let Y=l;null!=z&&(Y=Cs({inputs:{x:l},backend:n,attrs:{perm:z}}),V=s.C0T.getInnerMostAxes(V.length,l.shape.length)),s.C0T.assertAxesAreInnerMostDims("min",V,L);const[et,ut]=s.C0T.computeOutAndReduceShapes(Y.shape,V),Nt=nn({inputs:{x:Y},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(ut)]}}),Wt=Yr(Nt,Nt.dtype,"min",n);let $t;return $t=nn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(et,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:et}}),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(Y),$t}},op=_s({opSnippet:Ao+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+jr+"\n  return result;\n",cpuKernelImpl:Fa}),ap={kernelName:s.LG0,backendName:"webgl",kernelFunc:op};class ip{constructor(r,n,a){this.variableNames=["x"],this.outputShape=n.map((z,Y)=>z[0]+r[Y]+z[1]);const l=r.length,v=O(l),P=n.map(z=>z[0]).join(","),L=n.map((z,Y)=>z[0]+r[Y]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,l),V="reflect"===a?0:1;this.userCode=1!==l?`\n      ${v} start = ${v}(${P});\n      ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outC = getOutputCoords();\n        for (int i = 0; i < ${l}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${V};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${V};\n          }\n        }\n        ${v} coords = outC - start;\n        setOutput(getX(${M}));\n      }\n    `:`\n        int start = ${P};\n        int end = ${L};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${V};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${V};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class lp{constructor(r,n,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((Ct,Nt)=>Ct[0]+r[Nt]+Ct[1]);const l=r.length,v=O(l),P=n.map(Ct=>Ct[0]).join(","),L=n.map((Ct,Nt)=>Ct[0]+r[Nt]).join(","),M=Ts("rc",l),V=Ts("source",l),z=`${M[l-1]} < ${this.outputShape[l-1]}`,Y=1===l?"source":`vec2(${V.slice(-2).join()})`,et="reflect"===a?0:1;let ut="";if(1===l){const Ct=`\n        ${v} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${et};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${et};\n        }\n        source -= start;\n      `;ut=`\n        ${v} rc = outputLoc;\n        ${Ct}\n        result[0] = getChannel(getX(${V.join()}), ${Y});\n        ${M[l-1]} += 1;\n        if(${z}) {\n          ${Ct}\n          result[1] = getChannel(getX(${V.join()}), ${Y});\n        }\n      `}else{const Ct=`\n        ${v} source = rc;\n        ${v} lt = ${v}(lessThan(source, start));\n        ${v} gte = ${v}(greaterThanEqual(source, end));\n        ${v} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${et}) +\n                gte * ((end - 1) * 2 - source + ${et});\n        source -= start;\n      `;ut=`\n        ${v} rc = outputLoc;\n        ${Ct}\n        result[0] = getChannel(getX(${V.join()}), ${Y});\n        ${M[l-1]} += 1;\n        if(${z}) {\n          ${Ct}\n          result[1] = getChannel(getX(${V.join()}), ${Y});\n        }\n        rc = outputLoc;\n        ${M[l-2]} += 1;\n        if(${M[l-2]} < ${this.outputShape[l-2]}) {\n          ${Ct}\n          result[2] = getChannel(getX(${V.join()}), ${Y});\n          ${M[l-1]} += 1;\n          if(${z}) {\n            ${Ct}\n            result[3] = getChannel(getX(${V.join()}), ${Y});\n          }\n        }\n      `}this.userCode=`\n      const ${v} start = ${v}(${P});\n      const ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${ut}\n        setOutput(result);\n      }\n    `}}const cp={kernelName:s.x7F,backendName:"webgl",kernelFunc:({inputs:o,backend:r,attrs:n})=>{const{x:a}=o,{paddings:l,mode:v}=n,P=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lp(a.shape,l,v):new ip(a.shape,l,v);return r.runWebGLProgram(P,[a],a.dtype)}},hp=_s({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+jr+"\n  return result;\n"}),fp={kernelName:s.BLA,backendName:"webgl",kernelFunc:hp};class mp{constructor(r,n,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[r,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${n-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${n-1}));\n      }\n    `}}const Zl=_s({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),gp={kernelName:s.sDr,backendName:"webgl",kernelFunc:Zl},Yl="return a - b;",Xl=_s({opSnippet:Yl,packedOpSnippet:Yl,supportsComplex:!0,cpuKernelImpl:Wo}),Ep={kernelName:s.PbM,backendName:"webgl",kernelFunc:Xl};function Ql(o){const{inputs:r,backend:n,attrs:a}=o,{logits:l}=r,{dim:v}=a,P=s.ZSL.parseAxisParam([v],l.shape),L=jl({inputs:{x:l},backend:n,attrs:{reductionIndices:P,keepDims:!1}}),M=s.C0T.expandShapeToKeepDim(L.shape,P),V=nn({inputs:{x:L},backend:n,attrs:{shape:M}}),z=Xl({inputs:{a:l,b:V},backend:n}),Y=Ul({inputs:{x:z},backend:n}),et=yo({inputs:{x:Y},backend:n,attrs:{axis:P,keepDims:!1}}),ut=nn({inputs:{x:et},backend:n,attrs:{shape:M}}),Ct=Zl({inputs:{a:Y,b:ut},backend:n});return n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(V),n.disposeIntermediateTensorInfo(z),n.disposeIntermediateTensorInfo(Y),n.disposeIntermediateTensorInfo(et),n.disposeIntermediateTensorInfo(ut),Ct}const _p={kernelName:s.rFG,backendName:"webgl",kernelFunc:Ql},xp={kernelName:s.WT3,backendName:"webgl",kernelFunc:function yp(o){const{inputs:r,backend:n,attrs:a}=o,{logits:l}=r,{numSamples:v,seed:P,normalized:L}=a,M=L?l:Ql({inputs:{logits:l},backend:n,attrs:{dim:l.shape.length-1}}),Y=new mp(M.shape[0],M.shape[1],v),ut=n.runWebGLProgram(Y,[M],"int32",[[P]]);return L||n.disposeIntermediateTensorInfo(M),ut}},vp=Ls+"\n  return -x;\n",Dp={kernelName:s.l0G,backendName:"webgl",kernelFunc:function Cp(o){const{inputs:r,backend:n}=o,{x:a}=r;if(n.shouldExecuteOnCPU([a])){const v=n.texData.get(a.dataId),[P,L]=Ua(v.values,a.shape,a.dtype);return n.makeTensorInfo(L,a.dtype,P)}let l;return l=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new $s(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ar(a.shape,vp),n.runWebGLProgram(l,[a],a.dtype)}},Ip=s.kpo.c7,Op={kernelName:s.SDM,backendName:"webgl",kernelFunc:function Pp(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:l,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M}=a,V=n.readSync(l.dataId),z=n.readSync(v.dataId),{selectedIndices:Y}=Ip(V,z,P,L,M);return n.makeTensorInfo([Y.length],"int32",new Int32Array(Y))}},Sp=s.kpo.ZS,bp={kernelName:s.Zl4,backendName:"webgl",kernelFunc:function Ap(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:l,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M,padToMaxOutputSize:V}=a,z=n.readSync(l.dataId),Y=n.readSync(v.dataId),{selectedIndices:et,validOutputs:ut}=Sp(z,Y,P,L,M,V);return[n.makeTensorInfo([et.length],"int32",new Int32Array(et)),n.makeTensorInfo([],"int32",new Int32Array([ut]))]}},Mp=s.kpo.ut,Rp={kernelName:s.e0f,backendName:"webgl",kernelFunc:function Np(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:l,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M,softNmsSigma:V}=a,z=n.readSync(l.dataId),Y=n.readSync(v.dataId),et=P,ut=L,Ct=M,Nt=V,{selectedIndices:Wt,selectedScores:$t}=Mp(z,Y,et,ut,Ct,Nt);return[n.makeTensorInfo([Wt.length],"int32",new Int32Array(Wt)),n.makeTensorInfo([$t.length],"float32",new Float32Array($t))]}};class Lp{constructor(r,n,a,l){this.variableNames=["indices"],this.outputShape=[r,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${l}), float(${a}),\n                      float(index == coords.y)));\n      }\n    `}}const wp={kernelName:s.urI,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{indices:l}=r,{dtype:v,depth:P,onValue:L,offValue:M}=a,V=s.ZSL.sizeFromShape(l.shape),z=new Lp(V,P,L,M),Y=nn({inputs:{x:l},backend:n,attrs:{shape:[V]}}),et=n.runWebGLProgram(z,[Y],v);n.disposeIntermediateTensorInfo(Y);const Ct=nn({inputs:{x:et},backend:n,attrs:{shape:[...l.shape,P]}});return n.disposeIntermediateTensorInfo(et),Ct}};function ma(o){const{inputs:r,backend:n}=o,{x:a}=r;if("complex64"===a.dtype){const l=ls({inputs:{input:a},backend:n}),v=ma({inputs:{x:l},backend:n}),P=pa({inputs:{input:a},backend:n}),L=ma({inputs:{x:P},backend:n}),M=Rr({inputs:{real:v,imag:L},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(L),M}return Lo({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Bp={kernelName:s.xJ3,backendName:"webgl",kernelFunc:ma},kp={kernelName:s.LWX,backendName:"webgl",kernelFunc:function Jl(o){const{inputs:r,backend:n}=o,{x:a}=r;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const l=ls({inputs:{input:a},backend:n}),v=Jl({inputs:{x:l},backend:n}),P=pa({inputs:{input:a},backend:n}),L=ma({inputs:{x:P},backend:n}),M=Rr({inputs:{real:v,imag:L},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(L),M}return Lo({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}},Wp={kernelName:s.mM$,backendName:"webgl",kernelFunc:function Fp(o){const{inputs:r,backend:n,attrs:a}=o,{axis:l}=a;if(1===r.length)return vl({inputs:{input:r[0]},backend:n,attrs:{dim:l}});const v=r[0].shape,P=r[0].dtype;r.forEach(z=>{s.ZSL.assertShapesMatch(v,z.shape,"All tensors passed to stack must have matching shapes"),s.ZSL.assert(P===z.dtype,()=>"All tensors passed to stack must have matching dtypes")});const L=[],V=bl({inputs:r.map(z=>{const Y=vl({inputs:{input:z},backend:n,attrs:{dim:l}});return L.push(Y),Y}),backend:n,attrs:{axis:l}});return L.forEach(z=>n.disposeIntermediateTensorInfo(z)),V}};class Up{constructor(r,n,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((V,z)=>V[0]+r[z]+V[1]);const l=r.length,v=O(l),P=n.map(V=>V[0]).join(","),L=n.map((V,z)=>V[0]+r[z]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,l);this.userCode=1!==l?`\n      ${v} start = ${v}(${P});\n      ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${v} coords = outC - start;\n          setOutput(getX(${M}));\n        }\n      }\n    `:`\n        int start = ${P};\n        int end = ${L};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Vp{constructor(r,n,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((Nt,Wt)=>Nt[0]+r[Wt]+Nt[1]);const l=r.length,v=O(l),P=n.map(Nt=>Nt[0]).join(","),L=n.map((Nt,Wt)=>Nt[0]+r[Wt]).join(","),M=Ts("rc",l),V=Ts("source",l),z=`${M[l-1]} < ${this.outputShape[l-1]}`,Y=1===l?"source":`vec2(${V.slice(-2).join()})`,et=[`${v} rc = outputLoc;`,`${M[l-1]} += 1;\n       if(${z}) {\n      `,1===l?"":`}\n       rc = outputLoc;\n       ${M[l-2]} += 1;\n       if(${M[l-2]} < ${this.outputShape[l-2]}) {`,1===l?"":`  ${M[l-1]} += 1;\n         if(${z}) {`],ut=1===l?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let Ct="";for(let Nt=0,Wt=1===l?2:4;Nt<Wt;Nt++)Ct+=`\n        ${et[Nt]}\n        if (${ut}) {\n          result[${Nt}] = float(value);\n        } else {\n          ${v} source = rc - start;\n          result[${Nt}] = getChannel(getX(${V.join()}), ${Y});\n        }\n      `;Ct+=1===l?"} ":"}}",this.userCode=`\n      const ${v} start = ${v}(${P});\n      const ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${Ct}\n        setOutput(result);\n      }\n    `}}const ql=o=>{const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{paddings:v,constantValue:P}=a;if(0===s.ZSL.sizeFromShape(l.shape))return Lo({backend:n,attrs:{shape:v.map((z,Y)=>z[0]+l.shape[Y]+z[1]),value:P,dtype:l.dtype}});const L=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vp(l.shape,v,P):new Up(l.shape,v,P);return n.runWebGLProgram(L,[l],l.dtype,[[P]])},Kp={kernelName:s.ODT,backendName:"webgl",kernelFunc:ql},Hp=_s({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+jr+"\n  return result;\n"}),jp={kernelName:s.pyJ,backendName:"webgl",kernelFunc:Hp},Yp={kernelName:s.kdj,backendName:"webgl",kernelFunc:function Zp(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{axis:v,keepDims:P}=a,L=l.shape.length,M=[],V=s.ZSL.parseAxisParam(v,l.shape);let z=V;const Y=s.C0T.getAxesPermutation(z,L);let ut,et=l;if(null!=Y&&(et=Cs({inputs:{x:l},backend:n,attrs:{perm:Y}}),z=s.C0T.getInnerMostAxes(z.length,L),M.push(et)),s.C0T.assertAxesAreInnerMostDims("prod",z,L),n.shouldExecuteOnCPU([et])){const Ct=n.texData.get(et.dataId).values,{outVals:Nt,outShape:Wt,outDtype:$t}=Ka(et.shape,et.dtype,Ct,z);ut=n.makeTensorInfo(Wt,$t,Nt)}else{const[Ct,Nt]=s.C0T.computeOutAndReduceShapes(et.shape,z),Wt=s.ZSL.sizeFromShape(Nt),$t=nn({inputs:{x:et},backend:n,attrs:{shape:[-1,Wt]}}),Ie=Yr($t,(0,s.chL)(l.dtype),"prod",n);ut=nn({inputs:{x:Ie},backend:n,attrs:{shape:Ct}}),M.push($t),M.push(Ie)}if(P){M.push(ut);const Ct=s.C0T.expandShapeToKeepDim(ut.shape,V);ut=nn({inputs:{x:ut},backend:n,attrs:{shape:Ct}})}return M.forEach(Ct=>n.disposeIntermediateTensorInfo(Ct)),ut}},Qp={kernelName:s.oJ2,backendName:"webgl",kernelFunc:function Xp(o){const{inputs:r,backend:n,attrs:a}=o,{paramsNestedSplits:l,paramsDenseValues:v,indices:P}=r,{outputRaggedRank:L}=a,M=l.map($t=>n.readSync($t.dataId)),V=l.map($t=>$t.shape),z=n.readSync(v.dataId),Y=n.readSync(P.dataId),[et,ut,Ct]=za(M,V,z,v.shape,v.dtype,Y,P.shape,L),Nt=et.map($t=>n.makeTensorInfo([$t.length],"int32",$t)),Wt=n.makeTensorInfo(Ct,v.dtype,ut);return Nt.concat([Wt])}},qp={kernelName:s.CQC,backendName:"webgl",kernelFunc:function Jp(o){const{inputs:r,backend:n}=o,{starts:a,limits:l,deltas:v}=r,P=n.readSync(a.dataId),L=n.readSync(l.dataId),M=n.readSync(v.dataId),[V,z]=Ga(P,a.shape,a.dtype,L,l.shape,M,v.shape);return[n.makeTensorInfo([V.length],"int32",V),n.makeTensorInfo([z.length],a.dtype,z)]}},eh={kernelName:s.mH5,backendName:"webgl",kernelFunc:function th(o){const{inputs:r,backend:n,attrs:a}=o,{shape:l,values:v,defaultValue:P,rowPartitionTensors:L}=r,{rowPartitionTypes:M}=a,V=n.readSync(l.dataId),z=n.readSync(v.dataId),Y=n.readSync(P.dataId),et=L.map(Wt=>n.readSync(Wt.dataId)),ut=L.map(Wt=>Wt.shape),[Ct,Nt]=Ha(V,l.shape,z,v.shape,v.dtype,Y,P.shape,et,ut,M);return n.makeTensorInfo(Ct,v.dtype,Nt)}},tu=o=>{const{backend:r,attrs:n}=o,{start:a,stop:l,step:v,dtype:P}=n,L=ja(a,l,v,P);return r.makeTensorInfo([L.length],P,L)},nh={kernelName:s.Q6t,backendName:"webgl",kernelFunc:tu},sh=Fn({opSnippet:"return 1.0 / x;"}),rh={kernelName:s.huO,backendName:"webgl",kernelFunc:sh},ah=Fn({opSnippet:Ls+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ih={kernelName:s.fUj,backendName:"webgl",kernelFunc:ah},uh=Fn({opSnippet:Ls+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ch={kernelName:s.P_L,backendName:"webgl",kernelFunc:uh};class dh{constructor(r,n,a,l,v){this.variableNames=["A"],this.outputShape=[];const[P,L,M,V]=r;this.outputShape=[P,n,a,V];const z=[l&&n>1?L-1:L,l&&a>1?M-1:M],Y=[l&&n>1?n-1:n,l&&a>1?a-1:a];let et;et=v?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${z[0]/Y[0]},\n          ${z[1]/Y[1]});\n      const vec2 inputShapeRC = vec2(${L}.0, ${M}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${et};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class ph{constructor(r,n,a,l,v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[P,L,M,V]=r;this.outputShape=[P,n,a,V];const z=[l&&n>1?L-1:L,l&&a>1?M-1:M],Y=[l&&n>1?n-1:n,l&&a>1?a-1:a];let et;et=v?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${z[0]/Y[0]},\n          ${z[1]/Y[1]},\n          ${z[1]/Y[1]});\n      const vec3 inputShapeRC = vec3(${L}.0, ${M}.0,\n                                     ${M}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${et};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${V-1};\n        bool hasNextRow = coords.z < ${a-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const fh={kernelName:s.hgw,backendName:"webgl",kernelFunc:function hh(o){const{inputs:r,backend:n,attrs:a}=o,{images:l}=r,{alignCorners:v,halfPixelCenters:P,size:L}=a,[M,V]=L,z=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ph(l.shape,M,V,v,P):new dh(l.shape,M,V,v,P);return n.runWebGLProgram(z,[l],"float32")}};class mh{constructor(r,n,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,l,v]=n,[,P,L]=r,M=[a&&P>1?l-1:l,a&&L>1?v-1:v],V=[a&&P>1?P-1:P,a&&L>1?L-1:L],z=M[0]/V[0],Y=M[1]/V[1],et=1/z,ut=1/Y,Ct=2*Math.ceil(et)+2,Nt=2*Math.ceil(ut)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${z});\n        const float widthScale = float(${Y});\n\n        const float invHeightScale = float(${et});\n        const float invWidthScale = float(${ut});\n\n        const int winHeight = int(${Ct});\n        const int winWidth = int(${Nt});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${P}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${L}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${l-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${v-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Eh={kernelName:s.FCQ,backendName:"webgl",kernelFunc:function gh(o){const{inputs:r,backend:n,attrs:a}=o,{images:l,dy:v}=r,{alignCorners:P}=a,L=new mh(v.shape,l.shape,P);return n.runWebGLProgram(L,[v],v.dtype)}};class _h{constructor(r,n,a,l,v){this.variableNames=["A"],this.outputShape=[];const[P,L,M,V]=r;this.outputShape=[P,n,a,V];const z=[l&&n>1?L-1:L,l&&a>1?M-1:M],Y=[l&&n>1?n-1:n,l&&a>1?a-1:a];let ut;ut=v?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${z[0]/Y[0]},\n          ${z[1]/Y[1]});\n      const vec2 inputShapeRC = vec2(${L}.0, ${M}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${ut};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${l?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class yh{constructor(r,n,a,l,v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[P,L,M,V]=r;this.outputShape=[P,n,a,V];const z=[l&&n>1?L-1:L,l&&a>1?M-1:M],Y=[l&&n>1?n-1:n,l&&a>1?a-1:a];let ut;ut=v?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${z[0]/Y[0]},\n          ${z[1]/Y[1]},\n          ${z[1]/Y[1]});\n      const vec3 inputShapeRC = vec3(${L}.0, ${M}.0,\n                                     ${M}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${ut};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${l?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${V-1};\n        bool hasNextRow = coords.z < ${a-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const vh={kernelName:s.jOE,backendName:"webgl",kernelFunc:function xh(o){const{inputs:r,backend:n,attrs:a}=o,{images:l}=r,{alignCorners:v,halfPixelCenters:P,size:L}=a,[M,V]=L,z=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yh(l.shape,M,V,v,P):new _h(l.shape,M,V,v,P);return n.runWebGLProgram(z,[l],l.dtype)}};class Th{constructor(r,n,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,l,v]=n,[,P,L]=r,M=[a&&P>1?l-1:l,a&&L>1?v-1:v],V=[a&&P>1?P-1:P,a&&L>1?L-1:L],z=M[0]/V[0],Y=M[1]/V[1],et=1/z,ut=1/Y,Ct=2*Math.ceil(et)+2,Nt=2*Math.ceil(ut)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${z});\n        const float widthScale = float(${Y});\n\n        const float invHeightScale = float(${et});\n        const float invWidthScale = float(${ut});\n\n        const int winHeight = int(${Ct});\n        const int winWidth = int(${Nt});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${P}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${L}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${M[0]}) *\n                (float(dyR) / float(${V[0]}));\n\n            float sourceFracCol =\n                float(${M[1]}) *\n                  (float(dyC) / float(${V[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${l}) - 1),\n                ${a} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${v}) - 1),\n                ${a} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Dh={kernelName:s.XQy,backendName:"webgl",kernelFunc:function Ch(o){const{inputs:r,backend:n,attrs:a}=o,{images:l,dy:v}=r,{alignCorners:P}=a,L=new Th(v.shape,l.shape,P);return n.runWebGLProgram(L,[v],v.dtype)}};class Ih{constructor(r,n){this.variableNames=["x"];const a=r.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=r,1===a)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${r[0]} - coord - 1));\n        }\n      `);const v=r.map((L,M)=>(L=>-1!==n.indexOf(L)&&1!==r[L]?`${r[L]} - coords[${L}] - 1`:`coords[${L}]`)(M)).join(","),P=O(a);this.userCode=`\n      void main() {\n        ${P} coords = getOutputCoords();\n        setOutput(getX(${v}));\n      }\n    `}}class Ph{constructor(r,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const a=r.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=r;const l=Ts("rc",a),v=`${l[a-1]} + 1 < ${this.outputShape[a-1]}`,P=`${l[a-2]} + 1 < ${this.outputShape[a-2]}`,L=O(a);function et(Ct){const Nt=r.map((jt,Ie)=>function ut(Ct,Nt){return-1!==n.indexOf(Ct)&&1!==r[Ct]?`${r[Ct]} - ${Nt[Ct]} - 1`:`${Nt[Ct]}`}(Ie,Ct));return`getChannel(getX(${Nt.join(",")}), vec2(${Nt.slice(-2).join(",")}))`}this.userCode=1===a?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${r[0]} - rc - 1),\n            ${r[0]} - rc - 1);\n          if(${v}){\n              result.g = getChannel(getX(${r[0]} - (rc  + 1) - 1),\n                ${r[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${L} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function M(Ct){return et(Ct)}(l.slice())};\n          if(${v}){\n            result.g = ${function V(Ct){return Ct[a-1]="("+Ct[a-1]+" + 1)",et(Ct)}(l.slice())};\n          }\n          if(${P}) {\n            result.b = ${function z(Ct){return Ct[a-2]="("+Ct[a-2]+" + 1)",et(Ct)}(l.slice())};\n            if(${v}) {\n              result.a = ${function Y(Ct){return Ct[a-1]="("+Ct[a-1]+" + 1)",Ct[a-2]="("+Ct[a-2]+" + 1)",et(Ct)}(l.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Sh={kernelName:s.D7i,backendName:"webgl",kernelFunc:function Oh(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{dims:v}=a,P=l.shape.length,L=s.ZSL.parseAxisParam(v,l.shape);if(0===P)return Os({inputs:{x:l},backend:n});const M=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ph(l.shape,L):new Ih(l.shape,L);return n.runWebGLProgram(M,[l],l.dtype)}};class Ah{constructor(r,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const a=r[1],l=r[2];this.outputShape=r;let v="";v="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${v}\n          if(coordX >= 0 && coordX < ${l} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bh={kernelName:s.BK4,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{image:a}=o,{radians:l,fillValue:v,center:P}=r,L=n,M=new Ah(a.shape,v),[V,z]=s.C0T.getImageCenter(P,a.shape[1],a.shape[2]),Y=[[V,z,Math.sin(l),Math.cos(l)]];return L.runWebGLProgram(M,[a],a.dtype,Y)}},Mh=Fn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Nh={kernelName:s.hVg,backendName:"webgl",kernelFunc:Mh},Rh=Fn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Za}),Lh={kernelName:s.TOR,backendName:"webgl",kernelFunc:Rh};class Cl{constructor(r,n,a,l,v,P,L=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=P;const V=O(v.length),z=O(P.length);let Y="";1===a?Y="i":2===a&&(Y="i, j");let ut="";1===l?ut="i":2===l&&(ut="i, coords[1]");let Nt="";M&&(Nt="coords[0], coords[1]"),this.userCode=`\n        ${V} strides = ${V}(${v});\n\n        void main() {\n          ${z} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${r}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${n}; j++) {\n              int index = round(getIndices(${Y}));\n              flattenedIndex += index * ${n>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${ut});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${Nt}), sum, float(found)));\n        }\n      `}}class $h{constructor(r,n,a,l,v,P,L=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=P;const V=O(v.length),z=O(P.length);let Y="";1===a?Y="i":2===a&&(Y="i, j");let ut="";1===l?ut="i":2===l&&(ut="i, coords[1]");let Nt="";M&&(Nt="coords[0], coords[1]"),this.userCode=`\n        ${V} strides = ${V}(${v});\n\n        void main() {\n          ${z} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${r}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${n}; j+=2) {\n              ivec4 index = round(getIndices(${Y}));\n              flattenedIndex += index.xz * ${n>1?"strides[j]":"strides"};\n              if (j + 1 < ${n}) {\n                flattenedIndex += index.yw * ${n>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${ut});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${Nt}), sum, found));\n        }\n      `}}const Bh={kernelName:s.pJc,backendName:"webgl",kernelFunc:function wh(o){const{inputs:r,backend:n,attrs:a}=o,{indices:l,updates:v}=r,{shape:P}=a,{sliceRank:L,numUpdates:M,sliceSize:V,strides:z,outputSize:Y}=s.C0T.calculateShapes(v,l,P),et=[Y/V,V];if(0===Y)return n.makeTensorInfo(P,l.dtype);const ut=nn({inputs:{x:l},backend:n,attrs:{shape:[M,L]}}),Ct=nn({inputs:{x:v},backend:n,attrs:{shape:[M,V]}}),Nt=n.makeTensorInfo([],"float32",new Float32Array([0]));let Wt;Wt=(0,s._K2)().getBool("WEBGL_PACK")?new $h(M,L,ut.shape.length,Ct.shape.length,z,et):new Cl(M,L,ut.shape.length,Ct.shape.length,z,et);const $t=n.runWebGLProgram(Wt,[Ct,ut,Nt],Ct.dtype),jt=nn({inputs:{x:$t},backend:n,attrs:{shape:P}});return n.disposeIntermediateTensorInfo(ut),n.disposeIntermediateTensorInfo(Ct),n.disposeIntermediateTensorInfo($t),n.disposeIntermediateTensorInfo(Nt),jt}};class kh{constructor(r,n,a,l){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[r,a];const P=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,L=2===(0,s._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":P;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${L}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===l?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Wh={kernelName:s.uWl,backendName:"webgl",kernelFunc:function Fh(o){const{inputs:r,backend:n,attrs:a}=o,{sortedSequence:l,values:v}=r,{side:P}=a,L=new kh(l.shape[0],l.shape[1],v.shape[1],P);return n.runWebGLProgram(L,[l,v],"int32",[[l.shape[1]]])}};class Uh{constructor(r,n,a){let l,v;if(this.variableNames=["c","a","b"],this.outputShape=n,a>4)throw Error(`Where for rank ${a} is not yet supported`);if(1===a)v="resRC",l="resRC";else{const L=["resRC.x","resRC.y","resRC.z","resRC.w"],M=[],V=[];for(let z=0;z<n.length;z++)V.push(`${L[z]}`),z<r&&M.push(`${L[z]}`);l=M.join(),v=V.join()}const P=O(a);this.userCode=`\n      void main() {\n        ${P} resRC = getOutputCoords();\n        float cVal = getC(${l});\n        if (cVal >= 1.0) {\n          setOutput(getA(${v}));\n        } else {\n          setOutput(getB(${v}));\n        }\n      }\n    `}}const Kh={kernelName:s.l6P,backendName:"webgl",kernelFunc:function Vh(o){const{inputs:r,backend:n}=o,{condition:a,t:l,e:v}=r,P=new Uh(a.shape.length,l.shape,l.shape.length);return n.runWebGLProgram(P,[a,l,v],(0,s.TuY)(l.dtype,v.dtype))}},Gh=Fn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.C0T.SELU_SCALEALPHA};\n  float scale = ${s.C0T.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Hh={kernelName:s.u$b,backendName:"webgl",kernelFunc:Gh},Zh=Fn({opSnippet:qr+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Xa}),Yh={kernelName:s.vI1,backendName:"webgl",kernelFunc:Zh},Xh=Fn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Qh={kernelName:s.YVe,backendName:"webgl",kernelFunc:Xh},tf=Fn({opSnippet:qr+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${jr}\n  return result;\n`}),ef={kernelName:s.hql,backendName:"webgl",kernelFunc:tf},nf=Fn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),sf={kernelName:s.J3C,backendName:"webgl",kernelFunc:nf},rf=Fn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),of={kernelName:s.Fin,backendName:"webgl",kernelFunc:rf},lf={kernelName:s.A8B,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{blockShape:v,paddings:P}=a;s.ZSL.assert(l.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const L=v.reduce(($t,jt)=>$t*jt),M=[[0,0]];M.push(...P);for(let $t=1+v.length;$t<l.shape.length;++$t)M.push([0,0]);const V=[],z=ql({inputs:{x:l},backend:n,attrs:{paddings:M,constantValue:0}}),Y=s.C0T.getReshaped(z.shape,v,L,!1),et=s.C0T.getPermuted(Y.length,v.length,!1),ut=s.C0T.getReshapedPermuted(z.shape,v,L,!1),Ct=nn({inputs:{x:z},backend:n,attrs:{shape:Y}}),Nt=Cs({inputs:{x:Ct},backend:n,attrs:{perm:et}}),Wt=nn({inputs:{x:Nt},backend:n,attrs:{shape:ut}});return V.push(z),V.push(Ct),V.push(Nt),V.forEach($t=>n.disposeIntermediateTensorInfo($t)),Wt}},cf={kernelName:s.C8s,backendName:"webgl",kernelFunc:function uf(o){const{inputs:r,backend:n}=o,{indices:a,values:l,denseShape:v,defaultValue:P}=r;if(1!==v.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${v.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==l.shape.length)throw new Error(`Values must be a vector, saw:\n         ${l.shape}`);if(0!==P.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${P.shape}`);const L=n.readSync(a.dataId),M=n.readSync(l.dataId),V=n.readSync(v.dataId),z=n.readSync(P.dataId)[0],[Y,et,ut,Ct,Nt]=Ja(L,a.shape,a.dtype,M,l.dtype,V,z);return[n.makeTensorInfo(et,a.dtype,Y),n.makeTensorInfo([et[0]],l.dtype,ut),n.makeTensorInfo([Ct.length],"bool",new Uint8Array(Ct.map(Wt=>Number(Wt)))),n.makeTensorInfo([Nt.length],a.dtype,new Int32Array(Nt))]}},pf={kernelName:s.BoJ,backendName:"webgl",kernelFunc:function df(o){const{inputs:r,backend:n}=o,{inputIndices:a,inputShape:l,newShape:v}=r;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==l.shape.length)throw new Error(`Input shape should be a vector but received shape ${l.shape}`);if(1!==v.shape.length)throw new Error(`Target shape should be a vector but received shape ${v.shape}`);const P=Array.from(n.readSync(l.dataId)),L=n.readSync(a.dataId),M=Array.from(n.readSync(v.dataId)),[V,z,Y]=qa(L,a.shape,a.dtype,P,M);return[n.makeTensorInfo(z,a.dtype,V),n.makeTensorInfo([Y.length],v.dtype,new Int32Array(Y))]}},ff={kernelName:s.L6G,backendName:"webgl",kernelFunc:function hf(o){const{inputs:r,backend:n}=o,{data:a,indices:l,segmentIds:v}=r;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==l.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${l.shape}`);if(1!==v.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${v.shape}`);const P=n.readSync(a.dataId),L=n.readSync(l.dataId),M=n.readSync(v.dataId),[V,z]=ro(P,a.shape,a.dtype,L,M,!0);return n.makeTensorInfo(z,a.dtype,V)}},gf={kernelName:s.DvZ,backendName:"webgl",kernelFunc:function mf(o){const{inputs:r,backend:n}=o,{data:a,indices:l,segmentIds:v}=r;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==l.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${l.shape}`);if(1!==v.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${v.shape}`);const P=n.readSync(a.dataId),L=n.readSync(l.dataId),M=n.readSync(v.dataId),[V,z]=ro(P,a.shape,a.dtype,L,M);return n.makeTensorInfo(z,a.dtype,V)}},_f={kernelName:s.jgd,backendName:"webgl",kernelFunc:function Ef(o){const{inputs:r,backend:n,attrs:a}=o,{sparseIndices:l,sparseValues:v,defaultValue:P}=r,{outputShape:L}=a,{sliceRank:M,numUpdates:V,sliceSize:z,strides:Y,outputSize:et}=s.C0T.calculateShapes(v,l,L);if("string"===v.dtype){const $t=n.bufferSync(l),jt=n.bufferSync(v),Ie=s.ZSL.decodeString(n.readSync(P.dataId)[0]),Ae=Ya($t,jt,L,et,z,V,M,Y,Ie,!1);return n.makeTensorInfo(L,Ae.dtype,Ae.values)}const Ct=new Cl(V,M,l.shape.length,v.shape.length,Y,[et,1],!1),Nt=n.runWebGLProgram(Ct,[v,l,P],v.dtype),Wt=nn({inputs:{x:Nt},backend:n,attrs:{shape:L}});return n.disposeIntermediateTensorInfo(Nt),Wt}},xf={kernelName:s.Blb,backendName:"webgl",kernelFunc:function yf(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{numOrSizeSplits:v,axis:P}=a,L=s.ZSL.parseAxisParam(P,l.shape)[0],M=s.C0T.prepareSplitSize(l,v,L),z=new Array(l.shape.length).fill(0),Y=l.shape.slice();return M.map(et=>{const ut=[...Y];ut[L]=et;const Ct=Qe({inputs:{x:l},backend:n,attrs:{begin:z,size:ut}});return z[L]+=et,Ct})}},eu="return sqrt(x);",vf=Fn({opSnippet:eu,packedOpSnippet:eu,cpuKernelImpl:ti}),Tf={kernelName:s.dFH,backendName:"webgl",kernelFunc:vf},Cf=Fn({opSnippet:"return x * x;"}),Df={kernelName:s.M6A,backendName:"webgl",kernelFunc:Cf},nu="return (a - b) * (a - b);",If=_s({opSnippet:nu,packedOpSnippet:nu}),Pf={kernelName:s.Ddj,backendName:"webgl",kernelFunc:If},Sf={kernelName:s.GZp,backendName:"webgl",kernelFunc:function Of(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r;if("string"!==l.dtype)throw new Error("Input must be of datatype string");const v=n.readSync(l.dataId),P=s.C0T.fromUint8ToStringArray(v),L=ko(P,"string",a);return n.makeTensorInfo(l.shape,"string",L)}},bf={kernelName:s.pnw,backendName:"webgl",kernelFunc:function Af({inputs:o,attrs:r,backend:n}){const{x:a}=o,v=new ar(a.shape,Ls+`\n    return x > 0.0 ? 1.0 : float(${r.alpha});\n  `);return n.runWebGLProgram(v,[a],a.dtype)}};class Mf{constructor(r,n,a){this.variableNames=["x"],this.outputShape=a;const l=a.length,v=O(a.length),P=O(a.length);let L="";if(1===l)L="coords * strides + begin";else{let M=0;L=a.map((V,z)=>(M++,1===a.length?`coords * strides[${z}] + begin[${z}]`:`coords[${M-1}] * strides[${z}] + begin[${z}]`)).join(",")}this.userCode=`\n      ${v} begin = ${v}(${r});\n      ${v} strides = ${v}(${n});\n\n      void main() {\n        ${P} coords = getOutputCoords();\n        setOutput(getX(${L}));\n      }\n    `}}const Rf={kernelName:s.UcO,backendName:"webgl",kernelFunc:function Nf(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{begin:v,end:P,strides:L,beginMask:M,endMask:V,ellipsisMask:z,newAxisMask:Y,shrinkAxisMask:et}=a,{finalShapeSparse:ut,finalShape:Ct,isIdentity:Nt,sliceDim0:Wt,isSimpleSlice:$t,begin:jt,end:Ie,strides:Ae}=s.Kro.sliceInfo(l.shape,v,P,L,M,V,z,Y,et);let Je;if(Nt)Je=nn({inputs:{x:l},backend:n,attrs:{shape:Ct}});else if(Wt||$t){s.ZSL.assert(l.shape.length>=1,()=>`Input must have rank at least 1, got: ${l.shape.length}`);const Dn=s.Kro.computeOutShape(jt,Ie,Ae),pn=Qe({inputs:{x:l},backend:n,attrs:{begin:jt,size:Dn}});Je=nn({inputs:{x:pn},backend:n,attrs:{shape:Ct}}),n.disposeIntermediateTensorInfo(pn)}else if(n.shouldExecuteOnCPU([l])){const pn=n.readSync(l.dataId),Wn=(0,s.ra8)(l.shape,l.dtype,pn),Nn=ei(ut,Wn,Ae,jt);Je=n.makeTensorInfo(Ct,l.dtype,Nn.values)}else{const pn=new Mf(jt,Ae,ut);Je=n.runWebGLProgram(pn,[l],l.dtype)}const On=nn({inputs:{x:Je},backend:n,attrs:{shape:Ct}});return n.disposeIntermediateTensorInfo(Je),On}},$f={kernelName:s.YAb,backendName:"webgl",kernelFunc:function Lf(o){const{inputs:r,backend:n,attrs:a}=o,{separator:l,nGramWidths:v,leftPad:P,rightPad:L,padWidth:M,preserveShortSequences:V}=a,{data:z,dataSplits:Y}=r,et=n.readSync(z.dataId),ut=n.readSync(Y.dataId),[Ct,Nt]=Fo(et,ut,l,v,P,L,M,V);return[n.makeTensorInfo([Ct.length],"string",Ct),n.makeTensorInfo(Y.shape,"int32",Nt)]}},Bf={kernelName:s.iW0,backendName:"webgl",kernelFunc:function wf(o){const{inputs:r,backend:n,attrs:a}=o,{skipEmpty:l}=a,{input:v,delimiter:P}=r;if("string"!==v.dtype)throw new Error("Input must be of datatype string");if(1!==v.shape.length)throw new Error(`Input must be a vector, got shape: ${v.shape}`);if(0!==P.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${P.shape}`);const L=n.readSync(v.dataId),M=n.readSync(P.dataId)[0],[V,z,Y]=ni(L,M,l),et=z.length;return[n.makeTensorInfo([et,2],"int32",V),n.makeTensorInfo([et],"string",z),n.makeTensorInfo([2],"int32",new Int32Array(Y))]}},Ff={kernelName:s.$jE,backendName:"webgl",kernelFunc:function kf(o){const{inputs:r,backend:n,attrs:a}=o,{numBuckets:l}=a,{input:v}=r;if("string"!==v.dtype)throw new Error("Input must be of datatype string");if(l<=0)throw new Error("Number of buckets must be at least 1");const P=n.readSync(v.dataId),L=si(P,l);return n.makeTensorInfo(v.shape,"int32",L)}},Wf=Fn({opSnippet:"return tan(x);"}),Uf={kernelName:s.oFs,backendName:"webgl",kernelFunc:Wf},Vf=Fn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Kf={kernelName:s.iuW,backendName:"webgl",kernelFunc:Vf},Gf={kernelName:s.X4r,backendName:"webgl",kernelFunc:function zf(o){const{inputs:r,backend:n}=o,{tensor:l,indices:v,updates:P}=r,{sliceRank:L,numUpdates:M,sliceSize:V,strides:z,outputSize:Y}=s.C0T.calculateShapes(P,v,l.shape),et=[Y/V,V];if(0===Y)return n.makeTensorInfo(l.shape,v.dtype);const ut=nn({inputs:{x:v},backend:n,attrs:{shape:[M,L]}}),Ct=nn({inputs:{x:P},backend:n,attrs:{shape:[M,V]}}),Nt=nn({inputs:{x:l},backend:n,attrs:{shape:et}}),Wt=new Cl(M,L,ut.shape.length,Ct.shape.length,z,et,!1,!0),$t=n.runWebGLProgram(Wt,[Ct,ut,Nt],Nt.dtype),jt=nn({inputs:{x:$t},backend:n,attrs:{shape:l.shape}});return n.disposeIntermediateTensorInfo(ut),n.disposeIntermediateTensorInfo(Ct),n.disposeIntermediateTensorInfo(Nt),n.disposeIntermediateTensorInfo($t),jt}};class Hf{constructor(r,n){this.variableNames=["A"];const a=new Array(r.length);for(let P=0;P<a.length;P++)a[P]=r[P]*n[P];this.outputShape=a,this.rank=a.length;const l=O(this.rank),v=function jf(o){const r=o.length;if(r>5)throw Error(`Tile for rank ${r} is not yet supported`);if(1===r)return`imod(resRC, ${o[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let l=0;l<o.length;l++)a.push(`imod(${n[l]}, ${o[l]})`);return a.join()}(r);this.userCode=`\n      void main() {\n        ${l} resRC = getOutputCoords();\n        setOutput(getA(${v}));\n      }\n    `}}function su(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{reps:v}=a;if("string"===l.dtype||l.shape.length>5){const M=n.readSync(l.dataId),V="string"===l.dtype?M.map(et=>s.ZSL.decodeString(et)):M,z=(0,s.ra8)(l.shape,l.dtype,V),Y=ri(z,v);return n.makeTensorInfo(Y.shape,Y.dtype,Y.values)}const P=new Hf(l.shape,v);return n.runWebGLProgram(P,[l],l.dtype)}const Zf={kernelName:s.FAs,backendName:"webgl",kernelFunc:su};class Yf{constructor(r){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=r,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Xf{constructor(r){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=r,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function uo(o,r){null!==r&&o.disposeIntermediateTensorInfo(r)}function ru(o){let r=1;for(;r<o;)r*=2;return r}const Jf={kernelName:s.TBb,backendName:"webgl",kernelFunc:function Qf(o){const{inputs:r,backend:n,attrs:a}=o,{x:l}=r,{k:v,sorted:P}=a,L=(0,s._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),M=(0,s._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),V=l.shape,z=V[V.length-1];if(n.shouldExecuteOnCPU([l])||z<L||v>M){const Nn=n.readSync(l.dataId),[hs,ms]=oi(Nn,V,l.dtype,v,P);return[n.makeTensorInfo(hs.shape,hs.dtype,hs.values),n.makeTensorInfo(ms.shape,ms.dtype,ms.values)]}if(0===v)return V[V.length-1]=0,[n.makeTensorInfo(V,l.dtype,[]),n.makeTensorInfo(V,"int32",[])];if(1===z)return[l,Lo({attrs:{shape:V,dtype:"int32",value:0},backend:n})];const Y=n.texData.get(l.dataId),et=null!==Y&&Y.isPacked,ut=et?n.unpackTensor(l):l,Nt=s.ZSL.sizeFromShape(V)/z,Wt=nn({inputs:{x:ut},attrs:{shape:[Nt,z]},backend:n});et&&uo(n,ut);const $t=ru(v),jt=ru(z);let Ie=null;const Ae=()=>null===Ie?[Wt,Wt]:[Wt,Ie],Je=(Nn,hs,ms)=>{const Br=Ae(),zs=new Yf(ms),Cr=Ie;Ie=n.runWebGLProgram(zs,Br,"int32",[[z],[null===Ie?1:0],[Number.NEGATIVE_INFINITY],[Nn],[hs]]),uo(n,Cr)};for(let Nn=1;Nn<$t;Nn*=2){const hs=2*Nn;for(let ms=Nn;ms>=1;ms/=2)Je(hs,ms,[Nt,jt])}for(let Nn=jt;Nn>$t;Nn/=2){const hs=Ae(),ms=new Xf([Nt,Nn/2]),Xs=Ie;Ie=n.runWebGLProgram(ms,hs,"int32",[[z],[null===Ie?1:0],[$t]]),uo(n,Xs);const ir=$t/2,Cr=2*ir;for(let Ss=ir;Ss>=1;Ss/=2)Je(Cr,Ss,Ie.shape)}let On=Ie;Ie=Qe({inputs:{x:Ie},backend:n,attrs:{begin:0,size:[Nt,v]}}),uo(n,On);let Dn=Hl({inputs:{x:Wt,indices:Ie},backend:n,attrs:{axis:1,batchDims:1}});uo(n,Wt);const pn=V.slice(0,-1);pn.push(v),On=Ie,Ie=nn({inputs:{x:Ie},attrs:{shape:pn},backend:n}),uo(n,On);const Wn=Dn;return Dn=nn({inputs:{x:Dn},attrs:{shape:pn},backend:n}),uo(n,Wn),[Dn,Ie]}};class qf{constructor(r,n,a,l,v,P){this.variableNames=["Image","Transforms"],this.outputShape=P;const L="nearest"===a?1:2;let M;switch(l){case"constant":default:M=1;break;case"reflect":M=2;break;case"wrap":M=3;break;case"nearest":M=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${M} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${M} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${M} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${r} && 0 <= coordX && coordX < ${n}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${v});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${v});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${n}));\n                float mapY = mapCoord(inY, float(${r}));\n\n                if (${L} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const em={kernelName:s.dLy,backendName:"webgl",kernelFunc:function tm(o){const{inputs:r,backend:n,attrs:a}=o,{image:l,transforms:v}=r,{interpolation:P,fillMode:L,fillValue:M,outputShape:V}=a,[z,Y,et,ut]=l.shape,[Ct,Nt]=null!=V?V:[Y,et],$t=new qf(Y,et,P,L,M,[z,Ct,Nt,ut]);return n.runWebGLProgram($t,[l,v],"float32")}},sm={kernelName:s.EwU,backendName:"webgl",kernelFunc:function nm(o){const{inputs:r,attrs:n,backend:a}=o,{axis:l}=n,{x:v}=r;dt(v,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const P=a.readSync(v.dataId),{outputValues:L,outputShape:M,indices:V}=ai(P,l,v.shape,v.dtype);return[a.makeTensorInfo(M,v.dtype,L),a.makeTensorInfo([V.length],"int32",V)]}},om={kernelName:s.dXR,backendName:"webgl",kernelFunc:function rm(o){const{inputs:r,backend:n,attrs:a}=o,{value:l}=r;let{axis:v}=a;v<0&&(v+=l.shape.length);const P=l,L=P.shape.length,M=l.shape[v],V=new Array(L-1);let z=0;for(let Nt=0;Nt<L;Nt++)Nt!==v&&(V[z++]=P.shape[Nt]);const Y=[],et=new Array(L).fill(0),ut=P.shape.slice();ut[v]=1;const Ct=new Array(M);for(let Nt=0;Nt<Ct.length;Nt++){et[v]=Nt;const Wt=Qe({inputs:{x:P},backend:n,attrs:{begin:et,size:ut}}),$t=nn({inputs:{x:Wt},backend:n,attrs:{shape:V}});Ct[Nt]=$t,Y.push(Wt)}return Y.forEach(Nt=>n.disposeIntermediateTensorInfo(Nt)),Ct}};class am{constructor(r,n){this.variableNames=["x","segmentIds"];const a=r.windowSize,l=r.batchSize,v=r.inSize,P=r.numSegments,L=P*Math.ceil(v/a);this.outputShape=[l,L];const z=4*Math.floor(a/4),Y=a%4,et="\n        sumValue += dot(values, segFilter);\n    ";let ut="";v%a>0&&(ut=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return initializationValue;\n        }\n      `);let Ct="";v%a>0&&(Ct=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${ut}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${Ct}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${P})) * float(${a}));\n        int currentSeg = int(mod(float(outIdx), float(${P})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${z}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${et}\n        }\n\n        int inIdx = inOffset + ${z};\n        if (${1===Y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${et}\n        } else if (${2===Y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${et}\n        } else if (${3===Y}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${et}\n        }\n        setOutput(sumValue);\n      }\n    `}}const um=[qi,el,rl,il,aa,dl,pl,fl,_l,mt,$,_t,ht,Vt,Zt,de,xe,Ge,Me,Ne,Fe,In,Mn,as,Qn,vr,wr,yl,Bi,iu,pu,gu,Tu,Iu,Ou,Au,Mu,$u,Bu,Wu,Vu,zu,Hu,Yu,Qu,ec,sc,ac,uc,dc,hc,Ec,yc,Tc,Dc,Ic,Oc,Ac,Mc,Rc,$c,Bc,Wc,Kc,Gc,Zc,Qc,qc,ed,wi,sd,cu,od,id,ud,Fi,dd,hd,md,_d,vd,Cd,Id,Od,Md,Ld,wd,Wd,Vd,zd,Zd,Xd,Jd,tp,np,ap,cp,fp,xp,Ui,Dp,Op,bp,Rp,xr,wp,kp,Wp,Kp,jp,Wi,Yp,Qp,qp,eh,nh,Lr,gp,rh,ih,ch,Ki,fh,Eh,vh,Dh,Sh,bh,Nh,Lh,Bh,Wh,Kh,Hh,Yh,Qh,ef,sf,hn,_p,of,lf,cf,pf,ff,gf,_f,xf,Tf,Df,Pf,Sf,bf,Rf,$f,Bf,Ff,Ep,Xi,Uf,Kf,Gf,Zf,Jf,em,Qi,sm,om,{kernelName:s.pPe,backendName:"webgl",kernelFunc:function im(o){const{inputs:r,backend:n,attrs:a}=o,{x:l,segmentIds:v}=r,{numSegments:P}=a,L=l.shape.length,M=[];let V=0;const z=s.C0T.getAxesPermutation([V],L);let Y=l;null!=z&&(Y=Cs({inputs:{x:l},backend:n,attrs:{perm:z}}),M.push(Y),V=s.C0T.getInnerMostAxes(1,L)[0]);const et=s.C0T.segment_util.computeOutShape(Y.shape,V,P),ut=s.ZSL.sizeFromShape([Y.shape[V]]),Ct=nn({inputs:{x:Y},backend:n,attrs:{shape:[-1,ut]}});M.push(Ct);const Nt=(0,s.chL)(l.dtype),Wt=(Ae,Je,On,Dn,pn)=>{const Wn=Ae.shape[0],Nn=Ae.shape[1],hs=s.C0T.segment_util.segOpComputeOptimalWindowSize(Nn,pn),Br=new am({windowSize:hs,inSize:Nn,batchSize:Wn,numSegments:pn},Je),zs=n.compileAndRun(Br,[Ae,On],Dn);if(M.push(zs),zs.shape[1]===pn)return zs;const Xs=tu({backend:n,attrs:{start:0,stop:pn,step:1,dtype:"float32"}}),ir=su({inputs:{x:Xs},backend:n,attrs:{reps:[Nn/hs]}});return M.push(Xs),M.push(ir),Wt(zs,Je,ir,Dn,pn)},jt=nn({inputs:{x:Wt(Ct,"unsortedSegmentSum",v,Nt,P)},backend:n,attrs:{shape:et}});let Ie=jt;if(null!=z){M.push(jt);const Ae=s.C0T.getUndoAxesPermutation(z);Ie=Cs({inputs:{x:Ie},backend:n,attrs:{perm:Ae}})}return M.forEach(Ae=>n.disposeIntermediateTensorInfo(Ae)),Ie}},Bp];for(const o of um)(0,s.tAK)(o)},30744:(ft,N,t)=>{"use strict";var E;t.d(N,{uW:()=>gr}),(0,t(41653)._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,O=>{O&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(O){let y;var I;(I=y=O.CheckpointFormatVersion||(O.CheckpointFormatVersion={}))[I.LEGACY=0]="LEGACY",I[I.V1=1]="V1",I[I.V2=2]="V2"}(E||(E={})),Error,t(43517);const gr="4.22.0"},86614:(ft,N,t)=>{"use strict";t.d(N,{GJ:()=>i,uI:()=>E});class i{constructor(x,g){this.backend=x,this.dataMover=g,this.data=new WeakMap,this.dataIdsCount=0}get(x){return this.data.has(x)||this.dataMover.moveData(this.backend,x),this.data.get(x)}set(x,g){this.dataIdsCount++,this.data.set(x,g)}has(x){return this.data.has(x)}delete(x){return this.dataIdsCount--,this.data.delete(x)}numDataIds(){return this.dataIdsCount}}class E{refCount(x){return m("refCount")}incRef(x){return m("incRef")}timerAvailable(){return!0}time(x){return m("time")}read(x){return m("read")}readSync(x){return m("readSync")}readToGPU(x,g){return m("readToGPU")}numDataIds(){return m("numDataIds")}disposeData(x,g){return m("disposeData")}write(x,g,h){return m("write")}move(x,g,h,f,p){return m("move")}createTensorFromGPUData(x,g,h){return m("createTensorFromGPUData")}memory(){return m("memory")}floatPrecision(){return m("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return m("dispose")}}function m(c){throw new Error(`'${c}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},47531:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{ERF_A1:()=>it,ERF_A2:()=>at,ERF_A3:()=>J,ERF_A4:()=>ot,ERF_A5:()=>rt,ERF_P:()=>j,PARALLELIZE_THRESHOLD:()=>T,RowPartitionType:()=>f,SELU_SCALE:()=>Z.X,SELU_SCALEALPHA:()=>Z.j,applyActivation:()=>h.f2,assertAndGetBroadcastShape:()=>E.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>i.WC,assertParamsConsistent:()=>c,assignToTypedArray:()=>ce,axesAreInnerMostDims:()=>i.WH,calculateShapes:()=>W,checkEinsumDimSizes:()=>te,checkPadOnDimRoundingMode:()=>g.s_,combineLocations:()=>i.aF,combineRaggedTensorToTensorShapes:()=>p,complexWithEvenIndex:()=>At,complexWithOddIndex:()=>oe,computeConv2DInfo:()=>g.uf,computeConv3DInfo:()=>g.p$,computeDefaultPad:()=>g.G8,computeDilation2DInfo:()=>g.YQ,computeOptimalWindowSize:()=>D,computeOutAndReduceShapes:()=>i.lb,computeOutShape:()=>x,computePool2DInfo:()=>g.E6,computePool3DInfo:()=>g.l5,convertConv2DDataFormat:()=>g.$Q,decodeEinsumEquation:()=>Dt,eitherStridesOrDilationsAreOne:()=>g.G0,expandShapeToKeepDim:()=>i.SM,exponent:()=>ue,exponents:()=>Jt,fromStringArrayToUint8:()=>kt,fromUint8ToStringArray:()=>lt,getAxesPermutation:()=>i.Em,getBroadcastDims:()=>E.getBroadcastDims,getComplexWithIndex:()=>Gt,getEinsumComputePath:()=>he,getEinsumPermutation:()=>Kt,getFusedBiasGradient:()=>h.Do,getFusedDyActivation:()=>h.XB,getImageCenter:()=>w,getInnerMostAxes:()=>i.fK,getPermuted:()=>H,getRaggedRank:()=>d,getReductionAxes:()=>E.getReductionAxes,getReshaped:()=>G,getReshapedPermuted:()=>F,getRowPartitionTypesHelper:()=>u,getSliceBeginCoords:()=>B,getSliceSize:()=>A,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>fn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>dn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>$n,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Gn,getSparseReshapeInputOutputMismatchErrorMessage:()=>Jn,getSparseReshapeInputOutputMultipleErrorMessage:()=>rs,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>wn,getSparseReshapeNegativeOutputDimErrorMessage:()=>zn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>us,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>gs,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>As,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Gs,getUndoAxesPermutation:()=>i.gx,isIdentityPermutation:()=>Ke,log:()=>tt.R,mergeRealAndImagArrays:()=>Tt,prepareAndValidate:()=>k,prepareSplitSize:()=>vn,segment_util:()=>e,shouldFuse:()=>h.zE,slice_util:()=>S,splitRealAndImagArrays:()=>Et,stridesOrDilationsArePositive:()=>g.qk,tupleValuesAreOne:()=>g.Dh,upcastType:()=>b.Tu,validateDefaultValueShape:()=>C,validateInput:()=>U,validateUpdateShape:()=>_,warn:()=>tt.i});var e={};t.r(e),t.d(e,{collectGatherOpShapeInfo:()=>Ut,computeOutShape:()=>Rt,segOpComputeOptimalWindowSize:()=>ks});var s=t(21710),i=t(94963),E=t(9269),m=t(26674);function c(q,xt){const It=q[0].length;q.forEach((pt,Xt)=>{m.vA(pt.length===It,()=>`Error in concat${It}D: rank of tensors[${Xt}] must be the same as the rank of the rest (${It})`)}),m.vA(xt>=0&&xt<It,()=>`Error in concat${It}D: axis must be between 0 and ${It-1}.`);const dt=q[0];q.forEach((pt,Xt)=>{for(let Yt=0;Yt<It;Yt++)m.vA(Yt===xt||pt[Yt]===dt[Yt],()=>`Error in concat${It}D: Shape of tensors[${Xt}] (${pt}) does not match the shape of the rest (${dt}) along the non-concatenated axis ${Xt}.`)})}function x(q,xt){const It=q[0].slice();for(let dt=1;dt<q.length;dt++)It[xt]+=q[dt][xt];return It}var g=t(29458),h=t(14145),f=function(q){return q[q.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",q[q.VALUE_ROWIDS=1]="VALUE_ROWIDS",q[q.ROW_LENGTHS=2]="ROW_LENGTHS",q[q.ROW_SPLITS=3]="ROW_SPLITS",q[q.ROW_LIMITS=4]="ROW_LIMITS",q[q.ROW_STARTS=5]="ROW_STARTS",q}(f||{});function p(q,xt,It){let dt=new Array;if(null==It&&null==xt)return dt;if(null==xt)for(;dt.length<q+It.length;)dt.push(-1);else dt=xt.slice();if(null==It)return dt;if(q+It.length!==dt.length)throw new Error(`rt input.shape and shape=${xt} are incompatible: rt input.rank = ${q+It.length}, but shape.rank = ${dt.length}`);for(let pt=1;pt<It.length;++pt){const Xt=It[pt],Yt=dt[dt.length-It.length+pt],ve=dt[Yt];if(Xt>=0)if(ve>=0){if(ve!==Xt)throw new Error(`rt input.shape and shape=${xt} are incompatible: rt input.shape[${pt+q}] = ${Xt} but shape[${pt+q}] = ${ve}`)}else dt[Yt]=Xt}return dt}function u(q){const xt={FIRST_DIM_SIZE:f.FIRST_DIM_SIZE,VALUE_ROWIDS:f.VALUE_ROWIDS,ROW_LENGTHS:f.ROW_LENGTHS,ROW_SPLITS:f.ROW_SPLITS,ROW_LIMITS:f.ROW_LIMITS,ROW_STARTS:f.ROW_STARTS},It=[];for(const dt of q){if(!(dt in xt))break;It.push(xt[dt])}return It}function d(q){return 0===q.length?0:q[0]===f.FIRST_DIM_SIZE?q.length-1:q.length}function C(q,xt){if(null==q||null==xt)return;const It=q.length,dt=xt.length;if(It>=dt)throw new Error(`defaultValue.shape=${q} and ragged tensor flatValues.shape=${xt}, are incompatible: defaultValue.rank = ${It} must be less than ragged tensor input flatValues.rank = ${dt})`);for(let pt=0;pt<Math.min(It,dt-1);++pt){const Xt=q[pt],Yt=xt[pt+1];if(Xt>=0&&Yt>=0&&1!==Xt&&Xt!==Yt)throw new Error(`defaultValue.shape=${q}, and ragged tensor input flatValues.shape=${xt} are incompatible: defaultValue.shape[${pt-q.length}] = ${Xt} but ragged tensor input.flatValues.shape[${pt-q.length}] = ${Yt}`)}}const T=30;function D(q){return q<=T?q:(0,m.lK)(q,Math.floor(Math.sqrt(q)))}var S=t(1986),b=t(82891);function w(q,xt,It){return[It*("number"==typeof q?q:q[0]),xt*("number"==typeof q?q:q[1])]}function G(q,xt,It,dt=!0){let pt=[];if(dt)pt=pt.concat(xt.slice(0)),pt.push(q[0]/It),pt=pt.concat(q.slice(1));else{pt=pt.concat(q[0]);const Xt=xt.length;for(let Yt=0;Yt<Xt;++Yt)pt=pt.concat([q[Yt+1]/xt[Yt],xt[Yt]]);pt=pt.concat(q.slice(Xt+1))}return pt}function H(q,xt,It=!0){const dt=[];if(It){dt.push(xt);for(let pt=xt+1;pt<q;++pt)pt<=2*xt?(dt.push(pt),dt.push(pt-(xt+1))):dt.push(pt)}else{const pt=[],Xt=[];for(let Yt=1;Yt<q;++Yt)Yt>=2*xt+1||Yt%2==1?Xt.push(Yt):pt.push(Yt);dt.push(...pt),dt.push(0),dt.push(...Xt)}return dt}function F(q,xt,It,dt=!0){const pt=[];pt.push(dt?q[0]/It:q[0]*It);for(let Xt=1;Xt<q.length;++Xt)pt.push(Xt<=xt.length?dt?xt[Xt-1]*q[Xt]:q[Xt]/xt[Xt-1]:q[Xt]);return pt}function B(q,xt){const It=[0];for(let dt=0;dt<xt;++dt)It.push(q[dt][0]);return It}function A(q,xt,It){const dt=q.slice(0,1);for(let pt=0;pt<It;++pt)dt.push(q[pt+1]-xt[pt][0]-xt[pt][1]);return dt}function k(q,xt){const It=q.shape.length,dt=xt.shape.length;if(It<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${It}.`);if(dt<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${dt}.`);if("int32"!==xt.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${xt.dtype}.`);if(xt.shape[dt-1]>It)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${xt.shape[dt-1]} vs. ${It}`);if(0===(0,m.Ze)(q.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${q.shape}.`);const pt=xt.shape,Xt=pt[pt.length-1];let Yt=1;for(let Ee=0;Ee<pt.length-1;++Ee)Yt*=pt[Ee];const ve=q.shape,be=pt.slice();be.pop();let tn=1;for(let Ee=Xt;Ee<It;++Ee)tn*=ve[Ee],be.push(ve[Ee]);const ln=[...(0,m.Ur)(q.shape).map(Ee=>Ee/tn),1].slice(0,Xt);return[be,Yt,tn,ln]}function _(q,xt,It){const dt=xt.rank>1?xt.shape[xt.rank-1]:1,pt=xt.rank>1?xt.rank-1:1,Xt=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${It.shape}, indices.shape: ${xt.shape}, shape: ${q}, sliceDim: ${dt}, and batchDim: ${pt}.`;if(It.rank<pt)throw new Error(Xt+` update.rank < ${pt}. `);if(q.length<dt+(It.rank-pt))throw new Error(Xt+` Output shape length < ${dt+(It.rank-pt)}`);if(It.rank!==pt+q.length-dt)throw new Error(Xt+" update.rank != "+(pt+q.length-dt));for(let Yt=0;Yt<pt;++Yt)if(It.shape[Yt]!==xt.shape[Yt])throw new Error(Xt+` updates.shape[${Yt}] (${It.shape[Yt]}) != indices.shape[${Yt}] (${xt.shape[Yt]}).`);for(let Yt=0;Yt<It.rank-pt;++Yt)if(It.shape[Yt+pt]!==q[Yt+dt])throw new Error(Xt+` updates.shape[${Yt+pt}] (${It.shape[Yt+pt]}) != shape[${Yt+pt}] (${q[Yt+pt]})`)}function U(q,xt,It){if(xt.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${xt.rank}.`);if(q.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${q.rank}.`);if("int32"!==xt.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${xt.dtype}`);if(It.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${It}`);if(0===It.length){if(0===xt.size)throw new Error(`Indices specified for empty output. indices shape: ${xt.shape}`);if(0===q.size)throw new Error(`Updates specified for empty output. updates shape: ${q.shape}`)}_(It,xt,q)}function W(q,xt,It){const dt=xt.shape.length,pt=dt>1?xt.shape[dt-1]:1,Xt=It.length;let Yt=1;for(let Ee=pt;Ee<Xt;++Ee)Yt*=It[Ee];const ve=pt<1?1:pt;return{sliceRank:pt,numUpdates:(0,m.Ze)(xt.shape)/ve,sliceSize:Yt,strides:[...(0,m.Ur)(It.slice(0,pt)),1],outputSize:(0,m.Ze)(It)}}var Z=t(62597);const j=.3275911,it=.254829592,at=-.284496736,J=1.421413741,ot=-1.453152027,rt=1.061405429;var tt=t(64140);function Tt(q,xt){if(q.length!==xt.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${q.length}, imag: ${xt.length}.`);const It=new Float32Array(2*q.length);for(let dt=0;dt<It.length;dt+=2)It[dt]=q[dt/2],It[dt+1]=xt[dt/2];return It}function Et(q){const xt=new Float32Array(q.length/2),It=new Float32Array(q.length/2);for(let dt=0;dt<q.length;dt+=2)xt[dt/2]=q[dt],It[dt/2]=q[dt+1];return{real:xt,imag:It}}function At(q){const xt=Math.ceil(q.length/4),It=new Float32Array(xt),dt=new Float32Array(xt);for(let pt=0;pt<q.length;pt+=4)It[Math.floor(pt/4)]=q[pt],dt[Math.floor(pt/4)]=q[pt+1];return{real:It,imag:dt}}function oe(q){const xt=Math.floor(q.length/4),It=new Float32Array(xt),dt=new Float32Array(xt);for(let pt=2;pt<q.length;pt+=4)It[Math.floor(pt/4)]=q[pt],dt[Math.floor(pt/4)]=q[pt+1];return{real:It,imag:dt}}function Gt(q,xt){return{real:q[2*xt],imag:q[2*xt+1]}}function ce(q,xt,It,dt){q[2*dt]=xt,q[2*dt+1]=It}function Jt(q,xt){const It=new Float32Array(q/2),dt=new Float32Array(q/2);for(let pt=0;pt<Math.ceil(q/2);pt++){const Xt=(xt?2:-2)*Math.PI*(pt/q);It[pt]=Math.cos(Xt),dt[pt]=Math.sin(Xt)}return{real:It,imag:dt}}function ue(q,xt,It){const dt=(It?2:-2)*Math.PI*(q/xt);return{real:Math.cos(dt),imag:Math.sin(dt)}}const ie="->",re=/->/g,Se=",",Oe="...";function Dt(q,xt){const It=((q=q.replace(/\s/g,"")).length-q.replace(re,"").length)/ie.length;if(It<1)throw new Error("Equations without an arrow are not supported.");if(It>1)throw new Error(`Equation must contain exactly one arrow ("${ie}").`);const[dt,pt]=q.split(ie);(0,m.vA)(-1===dt.indexOf(Oe),()=>`The ellipsis notation ("${Oe}") is not supported yet.`);const Xt=dt.split(Se),Yt=Xt.length;if(xt!==Yt)throw new Error(`Expected ${Yt} input tensors, received ${xt}`);if(Yt>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const ve=[];for(let _e=0;_e<pt.length;++_e){const We=pt[_e];if(!Xt.some(Te=>-1!==Te.indexOf(We)))throw new Error(`Output subscripts contain the label ${We} not present in the input subscripts.`);-1===ve.indexOf(We)&&ve.push(We)}for(let _e=0;_e<dt.length;++_e){const We=dt[_e];-1===ve.indexOf(We)&&We!==Se&&ve.push(We)}const be=new Array(Xt.length);for(let _e=0;_e<Yt;++_e){if(new Set(Xt[_e].split("")).size!==Xt[_e].length)throw new Error(`Found duplicate axes in input component ${Xt[_e]}. Support for duplicate axes in input is not implemented yet.`);be[_e]=[];for(let We=0;We<Xt[_e].length;++We)be[_e].push(ve.indexOf(Xt[_e][We]))}const tn=ve.length,Ee=[];for(let _e=pt.length;_e<tn;++_e)Ee.push(_e);return{allDims:ve,summedDims:Ee,idDims:be}}function Kt(q,xt){let It=new Array(q);It.fill(-1);for(let pt=0;pt<xt.length;++pt)It[xt[pt]]=pt;const dt=[];for(let pt=0;pt<q;++pt)-1===It[pt]&&dt.push(pt);return It=It.filter(pt=>-1!==pt),{permutationIndices:It,expandDims:dt}}function te(q,xt,It){const dt=new Array(q);for(let pt=0;pt<It.length;++pt){const Xt=It[pt].shape;for(let Yt=0;Yt<xt[pt].length;++Yt)void 0===dt[xt[pt][Yt]]?dt[xt[pt][Yt]]=Xt[Yt]:(0,m.vA)(dt[xt[pt][Yt]]===Xt[Yt],()=>`Expected dimension ${dt[xt[pt][Yt]]} at axis ${Yt} of input shaped ${JSON.stringify(Xt)}, but got dimension ${Xt[Yt]}`)}}function he(q,xt){const It=q,dt=[];let pt=0;0===q.length&&It.push(-1),pt=q.length+1;for(let Yt=0;Yt<pt;++Yt)dt.push([]);const Xt=[];for(let Yt=0;Yt<It.length;++Yt){const be=on(xt,It[Yt]);for(const tn of be)-1===Xt.indexOf(tn)&&(dt[Yt].push(tn),Xt.push(tn))}return{path:It,steps:dt}}function Ke(q){return q.every((xt,It)=>xt===It)}function on(q,xt){const It=[];for(let dt=0;dt<q.length;++dt)(0===q[dt].length||-1!==q[dt].indexOf(xt)||-1===xt)&&It.push(dt);return It}function vn(q,xt,It=0){let dt=[];if("number"==typeof xt)(0,m.vA)(q.shape[It]%xt==0,()=>"Number of splits must evenly divide the axis."),dt=new Array(xt).fill(q.shape[It]/xt);else{const pt=xt.reduce((Yt,ve)=>(-1===ve&&(Yt+=1),Yt),0);(0,m.vA)(pt<=1,()=>"There should be only one negative value in split array.");const Xt=xt.indexOf(-1);if(-1!==Xt){const Yt=xt.reduce((ve,be)=>be>0?ve+be:ve);xt[Xt]=q.shape[It]-Yt}(0,m.vA)(q.shape[It]===xt.reduce((Yt,ve)=>Yt+ve),()=>"The sum of sizes must match the size of the axis dimension."),dt=xt}return dt}function fn(q){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${q}`}function dn(q,xt){return`indices(${q}, 0) is invalid: ${xt} < 0`}function $n(q,xt,It){return`indices(${q}, 0) is invalid: ${xt} >= ${It}`}function wn(q,xt){return`only one output dimension may be -1, not both ${q} and ${xt}`}function zn(q,xt){return`size ${q} must be non-negative, not ${xt}`}function Gn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function rs(q,xt){return`Input to reshape is a SparseTensor with ${(0,m.Ze)(q)}\n  dense values, but the requested shape requires a multiple of ${(0,m.Ze)(xt)}. inputShape=${q} outputShape= ${xt}`}function Jn(q,xt){return`Input to reshape is a tensor with ${(0,m.Ze)(q)} dense values, but the requested shape has ${(0,m.Ze)(xt)}. inputShape=${q} outputShape=${xt}`}function gs(){return"segment ids must be >= 0"}function As(){return"segment ids are not increasing"}function Gs(q,xt){return`Segment id ${q} out of range [0, ${xt}), possibly because segmentIds input is not sorted.`}function us(q,xt,It){return`Bad: indices[${q}] == ${xt} out of range [0, ${It})`}function ks(q,xt){let dt,It=!1;for(q<=T?(dt=q,It=!0):dt=(0,m.lK)(q,Math.floor(Math.sqrt(q)));!It;)dt>xt||dt===q?It=!0:dt=(0,m.lK)(q,dt+1);return dt}function Rt(q,xt,It){const dt=[],pt=q.length;for(let Xt=0;Xt<pt;Xt++)dt.push(Xt!==xt?q[Xt]:It);return dt}function Ut(q,xt,It,dt){const pt=xt.shape.length,Xt=q.shape.length;if(0!==dt&&(dt<-pt||dt>pt))throw new Error(`Expect batchDims in the range of [-${pt}, ${pt}], but got ${dt}`);if(dt<0&&(dt+=pt),dt>Xt)throw new Error(`batchDims (${dt}) must be less than rank(x) (\n    ${Xt}).`);if(It<dt)throw new Error(`batchDims (${dt}) must be less than or equal to axis (${It}).`);for(let Ee=0;Ee<dt;++Ee)if(q.shape[Ee]!==xt.shape[Ee])throw new Error(`x.shape[${Ee}]: ${q.shape[Ee]} should be equal to indices.shape[${Ee}]: ${xt.shape[Ee]}.`);const Yt=q.shape[It],ve=[];let be=1,tn=1,ln=1;for(let Ee=0;Ee<dt;++Ee)ve.push(q.shape[Ee]),be*=q.shape[Ee];for(let Ee=dt;Ee<It;Ee++)ve.push(q.shape[Ee]),tn*=q.shape[Ee];for(let Ee=dt;Ee<pt;Ee++)ve.push(xt.shape[Ee]);for(let Ee=It+1;Ee<Xt;Ee++)ve.push(q.shape[Ee]),ln*=q.shape[Ee];return{batchSize:be,sliceSize:ln,outerSize:tn,dimSize:Yt,outputShape:ve}}function lt(q){try{return q.map(xt=>(0,s.decodeString)(xt))}catch(xt){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${xt}`)}}function kt(q){return q.map(xt=>(0,s.encodeString)(xt))}},89191:(ft,N,t)=>{"use strict";t.d(N,{c7:()=>e.c7,ZS:()=>e.ZS,ut:()=>e.ut,YO:()=>i});var e=t(64857),s=t(75987);function i(E,m){const c=[];for(let h=0;h<m.length;h++)m[h]&&c.push(h);const x=(0,s.r)(E,"int32"),g=(0,s.r)([c.length,E.length],"int32");for(let h=0;h<c.length;h++){const f=x.indexToLoc(c[h]);g.values.set(f,h*E.length)}return g.toTensor()}},64857:(ft,N,t)=>{"use strict";function e(u,d,C){const T=function s(u,d,C){return function E(u,d,C){let T=0,D=u.length,S=0,b=!1;for(;T<D;){S=T+(D-T>>>1);const w=C(d,u[S]);w>0?T=S+1:(D=S,b=!w)}return b?T:-T-1}(u,d,C||i)}(u,d,C);u.splice(T<0?-(T+1):T,0,d)}function i(u,d){return u>d?1:u<d?-1:0}function m(u,d,C,T,D){return g(u,d,C,T,D,0)}function c(u,d,C,T,D,S){return g(u,d,C,T,D,0,!1,S,!0)}function x(u,d,C,T,D,S){return g(u,d,C,T,D,S,!0)}function g(u,d,C,T,D,S,b=!1,w=!1,G=!1){const H=[];for(let W=0;W<d.length;W++)d[W]>D&&H.push({score:d[W],boxIndex:W,suppressBeginIndex:0});H.sort(p);const F=S>0?-.5/S:0,B=[],A=[];for(;B.length<C&&H.length>0;){const W=H.pop(),{score:Z,boxIndex:j,suppressBeginIndex:it}=W;if(Z<D)break;let at=!1;for(let J=B.length-1;J>=it;--J){const ot=h(u,j,B[J]);if(ot>=T){at=!0;break}if(W.score=W.score*f(T,F,ot),W.score<=D)break}W.suppressBeginIndex=B.length,at||(W.score===Z?(B.push(j),A.push(W.score)):W.score>D&&e(H,W,p))}const k=B.length,_=C-k;w&&_>0&&(B.push(...new Array(_).fill(0)),A.push(...new Array(_).fill(0)));const U={selectedIndices:B};return b&&(U.selectedScores=A),G&&(U.validOutputs=k),U}function h(u,d,C){const T=u.subarray(4*d,4*d+4),D=u.subarray(4*C,4*C+4),S=Math.min(T[0],T[2]),b=Math.min(T[1],T[3]),w=Math.max(T[0],T[2]),G=Math.max(T[1],T[3]),H=Math.min(D[0],D[2]),F=Math.min(D[1],D[3]),B=Math.max(D[0],D[2]),A=Math.max(D[1],D[3]),k=(w-S)*(G-b),_=(B-H)*(A-F);if(k<=0||_<=0)return 0;const U=Math.max(S,H),W=Math.max(b,F),Z=Math.min(w,B),j=Math.min(G,A),it=Math.max(Z-U,0)*Math.max(j-W,0);return it/(k+_-it)}function f(u,d,C){const T=Math.exp(d*C*C);return C<=u?T:0}function p(u,d){return u.score-d.score||u.score===d.score&&d.boxIndex-u.boxIndex}t.d(N,{c7:()=>m,ZS:()=>c,ut:()=>x})},80225:(ft,N,t)=>{"use strict";var e=t(611),i=(t(70177),t(25271)),E=t(93819),m=t(60366),c=t(22782),x=t(33319);class g{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(F,B){return fetch(F,B)}now(){return performance.now()}encode(F,B){if("utf-8"!==B&&"utf8"!==B)throw new Error(`Browser's encoder only supports utf-8, but got ${B}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(F)}decode(F,B){return new TextDecoder(B).decode(F)}setTimeoutCustom(F,B){typeof window>"u"||!(0,i._K)().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(F,B):(this.functionRefs.push(F),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},B),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",A=>{A.source===window&&A.data.name===this.messageName&&(A.stopPropagation(),(0,this.functionRefs[A.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0)))}isTypedArray(F){return(0,x.Y)(F)}}if((0,i._K)().get("IS_BROWSER")){(0,i._K)().setPlatform("browser",new g);try{c.dy.registerManager(m.ZT.URL_SCHEME,new m.Cd)}catch{}try{c.dy.registerManager(E.mn.URL_SCHEME,new E.lQ)}catch{}}let f;(0,i._K)().get("IS_NODE")&&!(0,i._K)().get("IS_BROWSER")&&(0,i._K)().setPlatform("node",new class C{constructor(){this.util=t(18590),this.textEncoder=new this.util.TextEncoder}fetch(F,B){return null!=(0,i._K)().global.fetch?(0,i._K)().global.fetch(F,B):(null==f&&(f=t(85817)),f(F,B))}now(){const F=process.hrtime();return 1e3*F[0]+F[1]/1e6}encode(F,B){if("utf-8"!==B&&"utf8"!==B)throw new Error(`Node built-in encoder only supports utf-8, but got ${B}`);return this.textEncoder.encode(F)}decode(F,B){return 0===F.length?"":new this.util.TextDecoder(B).decode(F)}isTypedArray(F){return this.util.types.isFloat32Array(F)||this.util.types.isInt32Array(F)||this.util.types.isUint8Array(F)||this.util.types.isUint8ClampedArray(F)}});var T=t(75987),D=t(92290),S=t(61548),w=t(73444);(0,e.Ye)(),(0,w.Q5)({buffer:T.r,cast:D.w,clone:S.o,print:function b(H,F=!1){console.log(H.toString(F))}})},9173:(ft,N,t)=>{"use strict";t.d(N,{d:()=>s});const e=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:i=>i();function s(){return new Promise(i=>e(()=>i()))}},6757:(ft,N,t)=>{"use strict";let s;function i(c){s=c}function E(c){if(void 0!==s)return s;if(c||function e(){return typeof navigator<"u"&&null!=navigator}()){if(c||(c=navigator),"ReactNative"===c.product)return!0;const x=c.userAgent||c.vendor||(typeof window<"u"?window.opera:"");return x?/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(x)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(x.substr(0,4)):c.userAgentData&&c.userAgentData.mobile}return!1}function m(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}t.r(N),t.d(N,{isBrowser:()=>m,isMobile:()=>E,mockIsMobile:()=>i})},611:(ft,N,t)=>{"use strict";t.d(N,{T2:()=>F,Ye:()=>H});var e=t(10467),s=t(86614),i=t(25271),E=t(73366),m=t(30162),c=t(56203),x=t(64140),g=t(21710),h=t(26674);class f{constructor(k,_){this.backendTimer=k,this.logger=_,null==_&&(this.logger=new u)}profileKernel(k,_,U){let W;const Z=()=>{W=U()};let j;const it=g.now();if(this.backendTimer.timerAvailable())j=this.backendTimer.time(Z);else{Z();for(const J of W)J.dataSync();j=Promise.resolve({kernelMs:g.now()-it})}if((0,i._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let J=0;J<W.length;J++){const ot=W[J];ot.data().then(rt=>{p(rt,ot.dtype,k)})}return{kernelName:k,outputs:W,inputs:_,timeMs:j.then(J=>J.kernelMs),extraInfo:j.then(J=>null!=J.getExtraProfileInfo?J.getExtraProfileInfo():"")}}logKernelProfile(k){const{kernelName:_,outputs:U,timeMs:W,inputs:Z,extraInfo:j}=k;U.forEach(it=>{Promise.all([it.data(),W,j]).then(at=>{this.logger.logKernelProfile(_,it,at[0],at[1],Z,at[2])})})}}function p(A,k,_){if("float32"!==k)return!1;for(let U=0;U<A.length;U++){const W=A[U];if(isNaN(W)||!isFinite(W))return console.warn(`Found ${W} in the result of '${_}'`),!0}return!1}class u{logKernelProfile(k,_,U,W,Z,j){const it="number"==typeof W?h.av(`${W}ms`,9):W.error,at=h.av(k,25),J=_.rank,ot=_.size,rt=h.av(_.shape.toString(),14);let tt="";for(const Tt in Z){const Et=Z[Tt];if(null!=Et){const At=Et.shape||_.shape,oe=At.length;tt+=`${Tt}: ${oe}D ${oe>0?At:""} `}}console.log(`%c${at}\t%c${it}\t%c${J}D ${rt}\t%c${ot}\t%c${tt}\t%c${j}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var T=t(73444),D=t(14548);function S(A){return null!=A.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(k=>k.name)))}}}dispose(){for(const k in this.registeredVariables)this.registeredVariables[k].dispose()}}let w=(()=>{class A{constructor(_){this.ENV=_,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}ready(){var _=this;return(0,e.A)(function*(){if(null!=_.pendingBackendInit)return _.pendingBackendInit.then(()=>{});if(null!=_.backendInstance)return;const U=_.getSortedBackends();for(let W=0;W<U.length;W++){const Z=U[W];if(yield _.initializeBackend(Z).success)return void(yield _.setBackend(Z))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:_,asyncInit:U}=this.initializeBackendsAndReturnBest();if(U)throw new Error(`The highest priority backend '${_}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(_)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(_){if(!(_ in this.registry)){if(!(_ in this.registryFactory))return null;{const{asyncInit:U}=this.initializeBackend(_);if(U)return null}}return this.registry[_]}findBackendFactory(_){return _ in this.registryFactory?this.registryFactory[_].factory:null}registerBackend(_,U,W=1){return _ in this.registryFactory?(x.i(`${_} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[_]={factory:U,priority:W},!0)}setBackend(_){var U=this;return(0,e.A)(function*(){if(null==U.registryFactory[_])throw new Error(`Backend name '${_}' not found in registry`);if(U.backendName=_,null==U.registry[_]){U.backendInstance=null;const{success:W,asyncInit:Z}=U.initializeBackend(_);if(!(Z?yield W:W))return!1}return U.backendInstance=U.registry[_],U.setupRegisteredKernels(),U.profiler=new f(U.backendInstance),!0})()}setupRegisteredKernels(){(0,c.Op)(this.backendName).forEach(U=>{null!=U.setupFunc&&U.setupFunc(this.backendInstance)})}disposeRegisteredKernels(_){(0,c.Op)(_).forEach(W=>{null!=W.disposeFunc&&W.disposeFunc(this.registry[_])})}initializeBackend(_){const U=this.registryFactory[_];if(null==U)throw new Error(`Cannot initialize backend ${_}, no registration found.`);try{const W=U.factory();if(!W||W instanceof s.uI||"function"!=typeof W.then)return this.registry[_]=W,{success:!0,asyncInit:!1};{const Z=++this.pendingBackendInitId,j=W.then(it=>!(Z<this.pendingBackendInitId||(this.registry[_]=it,this.pendingBackendInit=null,0))).catch(it=>(Z<this.pendingBackendInitId||(this.pendingBackendInit=null,x.i(`Initialization of backend ${_} failed`),x.i(it.stack||it.message)),!1));return this.pendingBackendInit=j,{success:j,asyncInit:!0}}}catch(W){return x.i(`Initialization of backend ${_} failed`),x.i(W.stack||W.message),{success:!1,asyncInit:!1}}}removeBackend(_){if(!(_ in this.registryFactory))throw new Error(`${_} backend not found in registry`);this.backendName===_&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,_ in this.registry&&(this.disposeRegisteredKernels(_),this.registry[_].dispose(),delete this.registry[_]),delete this.registryFactory[_],this.backendName===_&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((_,U)=>this.registryFactory[U].priority-this.registryFactory[_].priority)}initializeBackendsAndReturnBest(){const _=this.getSortedBackends();for(let U=0;U<_.length;U++){const W=_[U],{success:Z,asyncInit:j}=this.initializeBackend(W);if(j||Z)return{name:W,asyncInit:j}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(_,U){const W=this.state.tensorInfo.get(U),Z=W.backend,j=this.readSync(U),it=Z.refCount(U);Z.disposeData(U,!0),W.backend=_,_.move(U,j,W.shape,W.dtype,it),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(_,U){let Z,W=null;if(null==U){if("function"!=typeof _)throw new Error("Please provide a function to tidy()");U=_}else{if("string"!=typeof _&&!(_ instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof U)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");W=_}return this.scopedRun(()=>this.startScope(W),()=>this.endScope(Z),()=>(Z=U(),Z instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Z))}scopedRun(_,U,W){_();try{const Z=W();return U(),Z}catch(Z){throw U(),Z}}nextTensorId(){return A.nextTensorId++}nextVariableId(){return A.nextVariableId++}clone(_){const U=F.runKernel(m.lzr,{x:_});return this.addTapeNode(this.state.activeScope.name,{x:_},[U],it=>({x:()=>F.runKernel(m.KXH,{x:it},{dtype:"float32"})}),[],{}),U}runKernel(_,U,W){if(null==(0,c._5)(_,this.backendName))throw new Error(`Kernel '${_}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:_,inputs:U,attrs:W})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(_,U,W){const Z=this.backend.numDataIds();let j=0;W.forEach(J=>{j+="complex64"===J.dtype?3:1});const at=Z-U-j-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(at>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${at} data ids) after running '${_}'`)}runKernelFunc(_){let U,W=[];const Z=this.isTapeOn(),j=this.state.numBytes,it=this.state.numTensors;let at,J;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const ot=S(_)?_.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(S(_)){const{kernelName:At,inputs:oe,attrs:Gt}=_,ce=(0,c._5)(At,this.backendName);h.vA(null!=ce,()=>`Cannot find registered kernel '${At}' for backend '${this.backendName}'`),at=()=>{const Jt=this.backend.numDataIds();J=ce.kernelFunc({inputs:oe,attrs:Gt,backend:this.backend});const ue=Array.isArray(J)?J:[J];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(At,Jt,ue);const ie=ue.map(re=>null!=re.rank?re:this.makeTensorFromTensorInfo(re));if(Z){const re=this.getTensorsForGradient(At,oe,ie);W=this.saveTensorsForBackwardMode(re)}return ie}}else{const{forwardFunc:At}=_,oe=Gt=>{Z&&(W=Gt.map(ce=>this.keep(this.clone(ce))))};at=()=>{const Gt=this.backend.numDataIds();J=this.tidy(()=>At(this.backend,oe));const ce=Array.isArray(J)?J:[J];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(ot,Gt,ce),ce}}const{inputs:rt,attrs:tt}=_,Tt=S(_)?null:_.backwardsFunc;let Et;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(Et=this.profiler.profileKernel(ot,rt,()=>at()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(Et),U=Et.outputs):U=at()}),Z&&this.addTapeNode(ot,rt,U,Tt,W,tt),this.state.profiling&&this.state.activeProfile.kernels.push({name:ot,bytesAdded:this.state.numBytes-j,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-it,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(rt).map(At=>null!=rt[At]?rt[At].shape:null),outputShapes:U.map(At=>At.shape),kernelTimeMs:Et.timeMs,extraInfo:Et.extraInfo}),Array.isArray(J)?U:U[0]}saveTensorsForBackwardMode(_){return _.map(W=>this.keep(this.clone(W)))}getTensorsForGradient(_,U,W){const Z=(0,c.vQ)(_);if(null!=Z){const j=Z.inputsToSave||[],it=Z.outputsToSave||[];let at;Z.saveAllInputs?(h.vA(Array.isArray(U),()=>"saveAllInputs is true, expected inputs to be an array."),at=Object.keys(U).map(ot=>U[ot])):at=j.map(ot=>U[ot]);const J=W.filter((ot,rt)=>it[rt]);return at.concat(J)}return[]}makeTensor(_,U,W,Z){if(null==_)throw new Error("Values passed to engine.makeTensor() are null");Z=Z||this.backend;let j=_;"string"===(W=W||"float32")&&h.Kg(_[0])&&(j=_.map(J=>g.encodeString(J)));const it=Z.write(j,U,W),at=new T.qY(U,W,it,this.nextTensorId());if(this.trackTensor(at,Z),"string"===W){const J=this.state.tensorInfo.get(it),ot=(0,h.SL)(j);this.state.numBytes+=ot-J.bytes,J.bytes=ot}return at}makeTensorFromDataId(_,U,W,Z){return this.makeTensorFromTensorInfo({dataId:_,shape:U,dtype:W=W||"float32"},Z)}makeTensorFromTensorInfo(_,U){const{dataId:W,shape:Z,dtype:j}=_,it=new T.qY(Z,j,W,this.nextTensorId());return this.trackTensor(it,U),it}makeVariable(_,U=!0,W,Z){W=W||this.nextVariableId().toString(),null!=Z&&Z!==_.dtype&&(_=_.cast(Z));const j=new T.rT(_,U,W,this.nextTensorId());if(null!=this.state.registeredVariables[j.name])throw new Error(`Variable with name ${j.name} was already registered`);return this.state.registeredVariables[j.name]=j,this.incRef(j,this.backend),j}trackTensor(_,U){this.state.numTensors++,"string"===_.dtype&&this.state.numStringTensors++;let W=0;"complex64"!==_.dtype&&"string"!==_.dtype&&(W=_.size*h.jv(_.dtype)),this.state.numBytes+=W,this.state.tensorInfo.has(_.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(_.dataId,{backend:U||this.backend,dtype:_.dtype,shape:_.shape,bytes:W})),_ instanceof T.rT||this.track(_)}incRef(_,U){this.trackTensor(_,U),this.backend.incRef(_.dataId)}removeDataId(_,U){this.state.tensorInfo.has(_)&&this.state.tensorInfo.get(_).backend===U&&(this.state.tensorInfo.delete(_),this.state.numDataBuffers--)}disposeTensor(_){if(!this.state.tensorInfo.has(_.dataId))return;const U=this.state.tensorInfo.get(_.dataId);if(this.state.numTensors--,"string"===_.dtype&&(this.state.numStringTensors--,this.state.numBytes-=U.bytes),"complex64"!==_.dtype&&"string"!==_.dtype){const W=_.size*h.jv(_.dtype);this.state.numBytes-=W}U.backend.disposeData(_.dataId)&&this.removeDataId(_.dataId,U.backend)}disposeVariables(){for(const _ in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[_])}disposeVariable(_){this.disposeTensor(_),null!=this.state.registeredVariables[_.name]&&delete this.state.registeredVariables[_.name]}memory(){const _=this.backend.memory();return _.numTensors=this.state.numTensors,_.numDataBuffers=this.state.numDataBuffers,_.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(_.unreliable=!0,null==_.reasons&&(_.reasons=[]),_.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),_}profile(_){var U=this;return(0,e.A)(function*(){U.state.profiling=!0;const W=U.state.numBytes,Z=U.state.numTensors;U.state.activeProfile.kernels=[],U.state.activeProfile.result=yield _(),U.state.profiling=!1,U.state.activeProfile.peakBytes=Math.max(...U.state.activeProfile.kernels.map(j=>j.totalBytesSnapshot)),U.state.activeProfile.newBytes=U.state.numBytes-W,U.state.activeProfile.newTensors=U.state.numTensors-Z;for(const j of U.state.activeProfile.kernels)j.kernelTimeMs=yield j.kernelTimeMs,j.extraInfo=yield j.extraInfo;return U.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(_,U,W,Z,j,it){const at={id:this.state.nextTapeNodeId++,kernelName:_,inputs:U,outputs:W,saved:j},J=(0,c.vQ)(_);null!=J&&(Z=J.gradFunc),null!=Z&&(at.gradient=ot=>(ot=ot.map((rt,tt)=>{if(null==rt){const Tt=W[tt],Et=h.Ty(Tt.size,Tt.dtype);return this.makeTensor(Et,Tt.shape,Tt.dtype)}return rt}),Z(ot.length>1?ot:ot[0],j,it))),this.state.activeTape.push(at)}keep(_){return _.kept=!0,_}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(_){const U={track:[],name:"unnamed scope",id:this.state.nextScopeId++};_&&(U.name=_),this.state.scopeStack.push(U),this.state.activeScope=U}endScope(_){const U=(0,D.getTensorsInContainer)(_),W=new Set(U.map(j=>j.id));for(let j=0;j<this.state.activeScope.track.length;j++){const it=this.state.activeScope.track[j];!it.kept&&!W.has(it.id)&&it.dispose()}const Z=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],U.forEach(j=>{!j.kept&&j.scopeId===Z.id&&this.track(j)})}gradients(_,U,W,Z=!1){if(h.vA(U.length>0,()=>"gradients() received an empty list of xs."),null!=W&&"float32"!==W.dtype)throw new Error(`dy must have 'float32' dtype, but has '${W.dtype}'`);const j=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",_));h.vA(j instanceof T.qY,()=>"The result y returned by f() must be a tensor.");const it=function d(A,k,_){const U={},W={};for(let at=0;at<k.length;at++)U[k[at].id]=!0;for(let at=0;at<A.length;at++){const J=A[at],ot=J.inputs;for(const rt in ot){const tt=ot[rt];let Tt=!1;for(let Et=0;Et<k.length;Et++)if(U[tt.id]){J.outputs.forEach(At=>U[At.id]=!0),Tt=!0,W[J.id]=!0;break}if(Tt)break}}const Z={};Z[_.id]=!0;const j={};for(let at=A.length-1;at>=0;at--){const J=A[at],ot=J.inputs;for(let rt=0;rt<J.outputs.length;rt++)if(Z[J.outputs[rt].id]){for(const tt in ot)Z[ot[tt].id]=!0,j[J.id]=!0;break}}const it=[];for(let at=0;at<A.length;at++){const J=A[at];if(W[J.id]&&j[J.id]){const ot={};for(const tt in J.inputs){const Tt=J.inputs[tt];U[Tt.id]&&(ot[tt]=Tt)}const rt=Object.assign({},J);rt.inputs=ot,rt.outputs=J.outputs,it.push(rt)}}return it}(this.state.activeTape,U,j);if(!Z&&0===it.length&&U.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const at={};at[j.id]=null==W?function G(A){const k=(0,h.FZ)((0,h.Ze)(A),"float32");return F.makeTensor(k,A,"float32")}(j.shape):W,function C(A,k,_,U){for(let W=k.length-1;W>=0;W--){const Z=k[W],j=[];if(Z.outputs.forEach(at=>{const J=A[at.id];j.push(null!=J?J:null)}),null==Z.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${Z.kernelName}.`);const it=Z.gradient(j);for(const at in Z.inputs){if(!(at in it))throw new Error(`Cannot backprop through input ${at}. Available gradients found: ${Object.keys(it)}.`);const J=_(()=>it[at]());if("float32"!==J.dtype)throw new Error(`Error in gradient for op ${Z.kernelName}. The gradient of input ${at} must have 'float32' dtype, but has '${J.dtype}'`);const ot=Z.inputs[at];if(!h.r1(J.shape,ot.shape))throw new Error(`Error in gradient for op ${Z.kernelName}. The gradient of input '${at}' has shape '${J.shape}', which does not match the shape of the input '${ot.shape}'`);if(null==A[ot.id])A[ot.id]=J;else{const rt=A[ot.id];A[ot.id]=U(rt,J),rt.dispose()}}}}(at,it,ot=>this.tidy(ot),B);const J=U.map(ot=>at[ot.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(ot=>{for(const rt of ot.saved)rt.dispose()}),this.state.activeTape=null),{value:j,grads:J}})}customGrad(_){return h.vA(h.Tn(_),()=>"The f passed in customGrad(f) must be a function."),(...U)=>{let W;h.vA(U.every(at=>at instanceof T.qY),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const Z={};return U.forEach((at,J)=>{Z[J]=at}),this.runKernelFunc({forwardFunc:(at,J)=>(W=_(...U,J),h.vA(W.value instanceof T.qY,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),h.vA(h.Tn(W.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),W.value),backwardsFunc:(at,J)=>{const ot=W.gradFunc(at,J),rt=Array.isArray(ot)?ot:[ot];h.vA(rt.length===U.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),h.vA(rt.every(Tt=>Tt instanceof T.qY),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const tt={};return rt.forEach((Tt,Et)=>{tt[Et]=()=>Tt}),tt},inputs:Z})}}readSync(_){return this.state.tensorInfo.get(_).backend.readSync(_)}read(_){return this.state.tensorInfo.get(_).backend.read(_)}readToGPU(_,U){return this.state.tensorInfo.get(_).backend.readToGPU(_,U)}time(_){var U=this;return(0,e.A)(function*(){const W=(0,g.now)(),Z=yield U.backend.time(_);return Z.wallMs=(0,g.now)()-W,Z})()}track(_){return null!=this.state.activeScope&&(_.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(_)),_}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const _ in this.registry)this.disposeRegisteredKernels(_),this.registry[_].dispose(),delete this.registry[_];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return A.nextTensorId=0,A.nextVariableId=0,A})();function H(){const A=(0,E.L)();if(null==A._tfengine){const k=new i.OH(A);A._tfengine=new w(k)}return(0,i.tj)(A._tfengine.ENV),(0,T.qP)(()=>A._tfengine),A._tfengine}const F=H();function B(A,k){return F.runKernel(m.OMN,{a:A,b:k})}},25271:(ft,N,t)=>{"use strict";t.d(N,{OH:()=>E,_K:()=>g,tj:()=>f});var e=t(10467),s=t(26674);const i="tfjsflags";class E{constructor(u){this.global=u,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=m,this.populateURLFlags()}setPlatform(u,d){null!=this.platform&&(g().getBool("IS_TEST")||g().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${u}.`)),this.platformName=u,this.platform=d}registerFlag(u,d,C){if(this.flagRegistry[u]={evaluationFn:d,setHook:C},null!=this.urlFlags[u]){const T=this.urlFlags[u];g().getBool("IS_TEST")||g().getBool("PROD")||console.warn(`Setting feature override from URL ${u}: ${T}.`),this.set(u,T)}}getAsync(u){var d=this;return(0,e.A)(function*(){return u in d.flags||(d.flags[u]=yield d.evaluateFlag(u)),d.flags[u]})()}get(u){if(u in this.flags)return this.flags[u];const d=this.evaluateFlag(u);if((0,s.yL)(d))throw new Error(`Flag ${u} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[u]=d,this.flags[u]}getNumber(u){return this.get(u)}getBool(u){return this.get(u)}getString(u){return this.get(u)}getFlags(){return this.flags}get features(){return this.flags}set(u,d){if(null==this.flagRegistry[u])throw new Error(`Cannot set flag ${u} as it has not been registered.`);this.flags[u]=d,null!=this.flagRegistry[u].setHook&&this.flagRegistry[u].setHook(d)}evaluateFlag(u){if(null==this.flagRegistry[u])throw new Error(`Cannot evaluate flag '${u}': no evaluation function found.`);return this.flagRegistry[u].evaluationFn()}setFlags(u){this.flags=Object.assign({},u)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const u=this.getQueryParams(this.global.location.search);i in u&&u[i].split(",").forEach(C=>{const[T,D]=C.split(":");this.urlFlags[T]=function x(p,u){const d=u.toLowerCase();return"true"===d||"false"===d?"true"===d:""+ +d===d?+d:u}(0,D)})}}function m(p){const u={};return p.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(d,...C)=>(function c(p,u,d){p[decodeURIComponent(u)]=decodeURIComponent(d||"")}(u,C[0],C[1]),C.join("="))),u}function g(){return h}let h=null;function f(p){h=p}},70177:(ft,N,t)=>{"use strict";t(611);var s=t(6757);const E=(0,t(25271)._K)();E.registerFlag("DEBUG",()=>!1,m=>{m&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),E.registerFlag("IS_BROWSER",()=>s.isBrowser()),E.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),E.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),E.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),E.registerFlag("PROD",()=>!1),E.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>E.getBool("DEBUG")),E.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),E.registerFlag("IS_TEST",()=>!1),E.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>E.getBool("DEBUG")),E.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),E.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),E.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)},73366:(ft,N,t)=>{"use strict";let e;function s(){if(null==e){let m;if(typeof window<"u")m=window;else if(typeof global<"u")m=global;else if(typeof process<"u")m=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");m=self}e=m}return e}function E(m,c){const x=function i(){const m=s();return null==m._tfGlobals&&(m._tfGlobals=new Map),m._tfGlobals}();if(x.has(m))return x.get(m);{const g=c();return x.set(m,g),x.get(m)}}t.d(N,{L:()=>s,m:()=>E})},47054:(ft,N,t)=>{"use strict";t.d(N,{AS:()=>C,DZ:()=>d,Hi:()=>f,Hs:()=>A,aC:()=>T,gJ:()=>B,jh:()=>S,jz:()=>w,m1:()=>p});var e=t(611),s=t(25271),i=t(73444),E=t(14548);function f(){return e.T2}function p(){return e.T2.memory()}function d(_,U){return e.T2.tidy(_,U)}function C(_){(0,E.getTensorsInContainer)(_).forEach(W=>W.dispose())}function T(_){return e.T2.keep(_)}function S(_){return e.T2.setBackend(_)}function w(){return e.T2.backendName}function B(_,U,W=1){return e.T2.registerBackend(_,U,W)}function A(){return e.T2.backend}(0,i.B4)(function g(_){(0,s._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(_+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")})},22047:(ft,N,t)=>{"use strict";t.d(N,{_X:()=>h,y7:()=>g});var e=t(611),s=t(73444),i=t(26674);function g(p,u){i.vA(i.Tn(p),()=>"The f passed in variableGrads(f) must be a function"),i.vA(null==u||Array.isArray(u)&&u.every(G=>G instanceof s.rT),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const d=null!=u;if(!d){u=[];for(const G in e.T2.registeredVariables)u.push(e.T2.registeredVariables[G])}const C=d?u.filter(G=>!G.trainable):null,T=u.length;u=u.filter(G=>G.trainable),i.vA(u.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${T} variables is trainable.`);const{value:S,grads:b}=e.T2.gradients(p,u,null,!0);i.vA(b.some(G=>null!=G),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),i.vA(0===S.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${S.rank} tensor`);const w={};return u.forEach((G,H)=>{null!=b[H]&&(w[G.name]=b[H])}),null!=C&&C.forEach(G=>w[G.name]=null),{value:S,grads:w}}function h(p){return e.T2.customGrad(p)}},59611:(ft,N,t)=>{"use strict";t.d(N,{D:()=>s});var e=t(21710);class s{static join(m){return new s(m).slice()}constructor(m){if(this.shards=[],this.previousShardIndex=0,null==m||(m instanceof Array||(m=[m]),0===(m=m.map(x=>e.isTypedArray(x)?x.buffer:x)).length))return;this.bufferUniformSize=m[0].byteLength;let c=0;for(let x=0;x<m.length;x++){const g=m[x];x!==m.length-1&&g.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const h=c+g.byteLength;this.shards.push({buffer:g,start:c,end:h}),c=h}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(m=0,c=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(m=isNaN(Number(m))?0:m,c=isNaN(Number(c))?0:c,m=Math.max(0,m),(c=Math.min(this.byteLength,c))<=m)return new ArrayBuffer(0);const x=this.findShardForByte(m);if(-1===x)throw new Error(`Could not find start shard for byte ${m}`);const h=new ArrayBuffer(c-m),f=new Uint8Array(h);let p=0;for(let u=x;u<this.shards.length;u++){const d=this.shards[u],T=m+p-d.start,D=p,b=Math.min(c,d.end)-d.start,w=new Uint8Array(d.buffer,T,b-T);if(f.set(w,D),p+=w.length,c<d.end)break}return h}findShardForByte(m){if(0===this.shards.length||m<0||m>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(m/this.bufferUniformSize),this.previousShardIndex;function c(g){return m<g.start?-1:m>=g.end?1:0}if(0===c(this.shards[this.previousShardIndex]))return this.previousShardIndex;const x=function i(E,m){let c=0,x=E.length;for(;c<=x;){const g=Math.floor((x-c)/2)+c,h=m(E[g]);if(0===h)return g;h<0?x=g:c=g+1}return-1}(this.shards,c);return-1===x?-1:(this.previousShardIndex=x,this.previousShardIndex)}}},93819:(ft,N,t)=>{"use strict";t.d(N,{lQ:()=>w,mn:()=>T});var e=t(10467),i=(t(70177),t(25271)),E=t(43517),m=t(80190),c=t(59611);const x="tensorflowjs",h="models_store",f="model_info_store";function d(){if(!(0,i._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const G=typeof window>"u"?self:window,H=G.indexedDB||G.mozIndexedDB||G.webkitIndexedDB||G.msIndexedDB||G.shimIndexedDB;if(null==H)throw new Error("The current browser does not appear to support IndexedDB.");return H}function C(G){const H=G.result;H.createObjectStore(h,{keyPath:"modelPath"}),H.createObjectStore(f,{keyPath:"modelPath"})}let T=(()=>{class G{constructor(F){if(this.indexedDB=d(),null==F||!F)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=F}save(F){var B=this;return(0,e.A)(function*(){if(F.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return B.databaseAction(B.modelPath,F)})()}load(){var F=this;return(0,e.A)(function*(){return F.databaseAction(F.modelPath)})()}databaseAction(F,B){return new Promise((A,k)=>{const _=this.indexedDB.open(x,1);_.onupgradeneeded=()=>C(_),_.onsuccess=()=>{const U=_.result;if(null==B){const W=U.transaction(h,"readonly"),j=W.objectStore(h).get(this.modelPath);j.onsuccess=()=>{if(null==j.result)return U.close(),k(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));A(j.result.modelArtifacts)},j.onerror=it=>(U.close(),k(j.error)),W.oncomplete=()=>U.close()}else{B.weightData=c.D.join(B.weightData);const W=(0,E.oR)(B),Z=U.transaction(f,"readwrite");let it,at,j=Z.objectStore(f);try{it=j.put({modelPath:this.modelPath,modelArtifactsInfo:W})}catch(J){return k(J)}it.onsuccess=()=>{at=U.transaction(h,"readwrite");const J=at.objectStore(h);let ot;try{ot=J.put({modelPath:this.modelPath,modelArtifacts:B,modelArtifactsInfo:W})}catch(rt){return k(rt)}ot.onsuccess=()=>A({modelArtifactsInfo:W}),ot.onerror=rt=>{j=Z.objectStore(f);const tt=j.delete(this.modelPath);tt.onsuccess=()=>(U.close(),k(ot.error)),tt.onerror=Tt=>(U.close(),k(ot.error))}},it.onerror=J=>(U.close(),k(it.error)),Z.oncomplete=()=>{null==at?U.close():at.oncomplete=()=>U.close()}}},_.onerror=U=>k(_.error)})}}return G.URL_SCHEME="indexeddb://",G})();const D=G=>(0,i._K)().getBool("IS_BROWSER")&&!Array.isArray(G)&&G.startsWith(T.URL_SCHEME)?function S(G){return new T(G)}(G.slice(T.URL_SCHEME.length)):null;m.bM.registerSaveRouter(D),m.bM.registerLoadRouter(D);class w{constructor(){this.indexedDB=d()}listModels(){var H=this;return(0,e.A)(function*(){return new Promise((F,B)=>{const A=H.indexedDB.open(x,1);A.onupgradeneeded=()=>C(A),A.onsuccess=()=>{const k=A.result,_=k.transaction(f,"readonly"),W=_.objectStore(f).getAll();W.onsuccess=()=>{const Z={};for(const j of W.result)Z[j.modelPath]=j.modelArtifactsInfo;F(Z)},W.onerror=Z=>(k.close(),B(W.error)),_.oncomplete=()=>k.close()},A.onerror=k=>B(A.error)})})()}removeModel(H){var F=this;return(0,e.A)(function*(){return H=function b(G){return G.startsWith(T.URL_SCHEME)?G.slice(T.URL_SCHEME.length):G}(H),new Promise((B,A)=>{const k=F.indexedDB.open(x,1);k.onupgradeneeded=()=>C(k),k.onsuccess=()=>{const _=k.result,U=_.transaction(f,"readwrite"),W=U.objectStore(f),Z=W.get(H);let j;Z.onsuccess=()=>{if(null==Z.result)return _.close(),A(new Error(`Cannot find model with path '${H}' in IndexedDB.`));{const it=W.delete(H),at=()=>{j=_.transaction(h,"readwrite");const ot=j.objectStore(h).delete(H);ot.onsuccess=()=>B(Z.result.modelArtifactsInfo),ot.onerror=rt=>A(Z.error)};it.onsuccess=at,it.onerror=J=>(at(),_.close(),A(Z.error))}},Z.onerror=it=>(_.close(),A(Z.error)),U.oncomplete=()=>{null==j?_.close():j.oncomplete=()=>_.close()}},k.onerror=_=>A(k.error)})})()}}},3821:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{CompositeArrayBuffer:()=>g.D,browserFiles:()=>S,browserHTTPRequest:()=>ot,concatenateArrayBuffers:()=>c.AQ,copyModel:()=>ce.xk,decodeWeights:()=>c.CY,decodeWeightsStream:()=>c.s5,encodeWeights:()=>c.aG,fromMemory:()=>Et,fromMemorySync:()=>At,getLoadHandlers:()=>x.C9,getModelArtifactsForJSON:()=>c.Ej,getModelArtifactsForJSONSync:()=>c.Rl,getModelArtifactsInfoForJSON:()=>c.oR,getSaveHandlers:()=>x.x3,getWeightSpecs:()=>c.Xf,http:()=>J,isHTTPScheme:()=>it,listModels:()=>ce.D,loadWeights:()=>A,moveModel:()=>ce.Vo,registerLoadRouter:()=>x.R4,registerSaveRouter:()=>x.Yd,removeModel:()=>ce.az,weightsLoaderFactory:()=>_,withSaveHandler:()=>oe,withSaveHandlerSync:()=>Gt}),t(93819),t(60366);var i=t(10467),m=(t(70177),t(25271)),c=t(43517),x=t(80190),g=t(59611);function u(Jt){return new Promise(ue=>setTimeout(ue)).then(Jt)}let d=(()=>{class Jt{constructor(ie){if(!(0,m._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");ie.startsWith(Jt.URL_SCHEME)&&(ie=ie.slice(Jt.URL_SCHEME.length)),(null==ie||0===ie.length)&&(ie="model"),this.modelJsonFileName=ie+".json",this.weightDataFileName=ie+".weights.bin"}save(ie){var re=this;return(0,i.A)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const Se=g.D.join(ie.weightData),Oe=window.URL.createObjectURL(new Blob([Se],{type:"application/octet-stream"}));if(ie.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const Kt=(0,c.zV)(ie,[{paths:["./"+re.weightDataFileName],weights:ie.weightSpecs}]),te=window.URL.createObjectURL(new Blob([JSON.stringify(Kt)],{type:"application/json"})),he=null==re.modelJsonAnchor?document.createElement("a"):re.modelJsonAnchor;if(he.download=re.modelJsonFileName,he.href=te,yield u(()=>he.dispatchEvent(new MouseEvent("click"))),null!=ie.weightData){const Ke=null==re.weightDataAnchor?document.createElement("a"):re.weightDataAnchor;Ke.download=re.weightDataFileName,Ke.href=Oe,yield u(()=>Ke.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,c.oR)(ie)}}})()}}return Jt.URL_SCHEME="downloads://",Jt})();class C{constructor(ue){if(null==ue||ue.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${ue}`);this.jsonFile=ue[0],this.weightsFiles=ue.slice(1)}load(){var ue=this;return(0,i.A)(function*(){return new Promise((ie,re)=>{const Se=new FileReader;Se.onload=Oe=>{const Dt=JSON.parse(Oe.target.result),Kt=Dt.modelTopology;if(null==Kt)return void re(new Error(`modelTopology field is missing from file ${ue.jsonFile.name}`));if(null==Dt.weightsManifest)return void re(new Error(`weightManifest field is missing from file ${ue.jsonFile.name}`));if(0===ue.weightsFiles.length)return void ie({modelTopology:Kt});const he=(0,c.Ej)(Dt,Ke=>ue.loadWeights(Ke));ie(he)},Se.onerror=Oe=>re(`Failed to read model topology and weights manifest JSON from file '${ue.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),Se.readAsText(ue.jsonFile)})})()}loadWeights(ue){const ie=[],re=[];for(const Dt of ue)ie.push(...Dt.weights),re.push(...Dt.paths);const Se=this.checkManifestAndWeightFiles(ue),Oe=re.map(Dt=>this.loadWeightsFile(Dt,Se[Dt]));return Promise.all(Oe).then(Dt=>[ie,Dt])}loadWeightsFile(ue,ie){return new Promise((re,Se)=>{const Oe=new FileReader;Oe.onload=Dt=>{re(Dt.target.result)},Oe.onerror=Dt=>Se(`Failed to weights data from file of path '${ue}'.`),Oe.readAsArrayBuffer(ie)})}checkManifestAndWeightFiles(ue){const ie=[],re=this.weightsFiles.map(Oe=>(0,c.P8)(Oe.name)),Se={};for(const Oe of ue)Oe.paths.forEach(Dt=>{const Kt=(0,c.P8)(Dt);if(-1!==ie.indexOf(Kt))throw new Error(`Duplicate file basename found in weights manifest: '${Kt}'`);if(ie.push(Kt),-1===re.indexOf(Kt))throw new Error(`Weight file with basename '${Kt}' is not provided.`);Se[Dt]=this.weightsFiles[re.indexOf(Kt)]});if(ie.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${ie.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return Se}}function S(Jt){return new C(Jt)}x.bM.registerSaveRouter(Jt=>(0,m._K)().getBool("IS_BROWSER")&&!Array.isArray(Jt)&&Jt.startsWith(d.URL_SCHEME)?function D(Jt="model"){return new d(Jt)}(Jt.slice(d.URL_SCHEME.length)):null);var b=t(26674);function w(Jt,ue,ie,re){(function Dt(te){(0,b.vA)(null!=te&&Array.isArray(te)&&te.length>0,()=>"promises must be a none empty array")})(Jt),function Kt(te,he){(0,b.vA)(te>=0&&te<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${te}`),(0,b.vA)(he>=0&&he<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${he}`),(0,b.vA)(he>=te,()=>`startFraction must be no more than endFraction, but got startFraction ${te} and endFraction ${he}`)}(ie=null==ie?0:ie,re=null==re?1:re);let Se=0;return Promise.all(Jt.map(te=>(te.then(he=>{const Ke=ie+ ++Se/Jt.length*(re-ie);return ue(Ke),he}),te)))}var G=t(57362);function H(Jt,ue){return F.apply(this,arguments)}function F(){return(F=(0,i.A)(function*(Jt,ue){null==ue&&(ue={});const ie=null==ue.fetchFunc?(0,m._K)().platform.fetch:ue.fetchFunc,re=Jt.map(on=>ie(on,ue.requestInit,{isBinary:!0})),Kt=(null==ue.onProgress?yield Promise.all(re):yield w(re,ue.onProgress,0,.5)).map(on=>on.arrayBuffer());return null==ue.onProgress?yield Promise.all(Kt):yield w(Kt,ue.onProgress,.5,1)})).apply(this,arguments)}function A(Jt){return k.apply(this,arguments)}function k(){return(k=(0,i.A)(function*(Jt,ue="",ie,re){return _(Dt=>H(Dt,{requestInit:re}))(Jt,ue,ie)})).apply(this,arguments)}function _(Jt){return function(){var ue=(0,i.A)(function*(ie,re="",Se){const Oe=ie.map(()=>!1),Dt={},Kt=null!=Se?Se.map(()=>!1):[],te=[];if(ie.forEach((dn,$n)=>{let wn=0;dn.weights.forEach(zn=>{const rs=G.i["quantization"in zn?zn.quantization.dtype:zn.dtype]*b.Ze(zn.shape),Jn=()=>{Oe[$n]=!0,null==Dt[$n]&&(Dt[$n]=[]),Dt[$n].push({manifestEntry:zn,groupOffset:wn,sizeBytes:rs})};null!=Se?Se.forEach((gs,As)=>{gs===zn.name&&(Jn(),Kt[As]=!0)}):Jn(),te.push(zn.name),wn+=rs})}),!Kt.every(dn=>dn)){const dn=Se.filter(($n,wn)=>!Kt[wn]);throw new Error(`Could not find weights in manifest with names: ${dn.join(", ")}. \nManifest JSON has weights with names: ${te.join(", ")}.`)}const he=Oe.reduce((dn,$n,wn)=>($n&&dn.push(wn),dn),[]),Ke=[];he.forEach(dn=>{ie[dn].paths.forEach($n=>{const wn=re+(re.endsWith("/")?"":"/")+$n;Ke.push(wn)})});const on=yield Jt(Ke),vn={};let fn=0;return he.forEach(dn=>{const $n=ie[dn].paths.length,wn=new g.D(on.slice(fn,fn+$n));Dt[dn].forEach(Gn=>{const rs=wn.slice(Gn.groupOffset,Gn.groupOffset+Gn.sizeBytes),Jn=(0,c.CY)(rs,[Gn.manifestEntry]);for(const gs in Jn)vn[gs]=Jn[gs]}),fn+=$n}),vn});return function(ie){return ue.apply(this,arguments)}}()}let Z=(()=>{class Jt{constructor(ie,re){if(this.DEFAULT_METHOD="POST",null==re&&(re={}),this.weightPathPrefix=re.weightPathPrefix,this.weightUrlConverter=re.weightUrlConverter,null!=re.fetchFunc?((0,b.vA)("function"==typeof re.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=re.fetchFunc):this.fetch=(0,m._K)().platform.fetch,(0,b.vA)(null!=ie&&ie.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(ie)&&(0,b.vA)(2===ie.length,()=>`URL paths for http must have a length of 2, (actual length is ${ie.length}).`),this.path=ie,null!=re.requestInit&&null!=re.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=re.requestInit||{},this.loadOptions=re}save(ie){var re=this;return(0,i.A)(function*(){if(ie.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const Se=Object.assign({method:re.DEFAULT_METHOD},re.requestInit);Se.body=new FormData;const Dt=(0,c.zV)(ie,[{paths:["./model.weights.bin"],weights:ie.weightSpecs}]);if(Se.body.append("model.json",new Blob([JSON.stringify(Dt)],{type:"application/json"}),"model.json"),null!=ie.weightData){const te=g.D.join(ie.weightData);Se.body.append("model.weights.bin",new Blob([te],{type:"application/octet-stream"}),"model.weights.bin")}const Kt=yield re.fetch(re.path,Se);if(Kt.ok)return{modelArtifactsInfo:(0,c.oR)(ie),responses:[Kt]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${Kt.status}.`)})()}loadModelJSON(){var ie=this;return(0,i.A)(function*(){const re=yield ie.fetch(ie.path,ie.requestInit);if(!re.ok)throw new Error(`Request to ${ie.path} failed with status code ${re.status}. Please verify this URL points to the model JSON of the model to load.`);let Se;try{Se=yield re.json()}catch{let te=`Failed to parse model JSON of response from ${ie.path}.`;throw ie.path.endsWith(".pb")?te+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":te+=" Please make sure the server is serving valid JSON for this request.",new Error(te)}if(null==Se.modelTopology&&null==Se.weightsManifest)throw new Error(`The JSON from HTTP path ${ie.path} contains neither model topology or manifest for weights.`);return Se})()}load(){var ie=this;return(0,i.A)(function*(){if(ie.loadOptions.streamWeights)return ie.loadStream();const re=yield ie.loadModelJSON();return(0,c.Ej)(re,Se=>ie.loadWeights(Se))})()}loadStream(){var ie=this;return(0,i.A)(function*(){const re=yield ie.loadModelJSON(),Se=yield ie.getWeightUrls(re.weightsManifest),Oe=(0,c.Xf)(re.weightsManifest);return Object.assign(Object.assign({},re),{weightSpecs:Oe,getWeightStream:()=>function B(Jt,ue){var ie;const re=null==ue.fetchFunc?(0,m._K)().platform.fetch:ue.fetchFunc;let Oe,Se=0;return null===(ie=ue.onProgress)||void 0===ie||ie.call(ue,0),new ReadableStream({pull:(Dt=(0,i.A)(function*(Kt){for(var te;Se<Jt.length;){Oe||(Oe=(yield re(Jt[Se],ue.requestInit,{isBinary:!0})).body.getReader());const{done:he,value:Ke}=yield Oe.read();if(!he)return void Kt.enqueue(Ke);Se++,Oe=void 0,null===(te=ue.onProgress)||void 0===te||te.call(ue,Se/Jt.length)}Kt.close()}),function(te){return Dt.apply(this,arguments)})});var Dt}(Se,ie.loadOptions)})})()}getWeightUrls(ie){var re=this;return(0,i.A)(function*(){const Se=Array.isArray(re.path)?re.path[1]:re.path,[Oe,Dt]=function j(Jt){const ue=Jt.lastIndexOf("/"),ie=Jt.lastIndexOf("?");return[Jt.substring(0,ue)+"/",ie>ue?Jt.substring(ie):""]}(Se),Kt=re.weightPathPrefix||Oe,te=[],he=[];for(const Ke of ie)for(const on of Ke.paths)null!=re.weightUrlConverter?he.push(re.weightUrlConverter(on)):te.push(Kt+on+Dt);return re.weightUrlConverter&&te.push(...yield Promise.all(he)),te})()}loadWeights(ie){var re=this;return(0,i.A)(function*(){const Se=yield re.getWeightUrls(ie);return[(0,c.Xf)(ie),yield H(Se,re.loadOptions)]})()}}return Jt.URL_SCHEME_REGEX=/^https?:\/\//,Jt})();function it(Jt){return null!=Jt.match(Z.URL_SCHEME_REGEX)}const at=(Jt,ue)=>{if(typeof fetch>"u"&&(null==ue||null==ue.fetchFunc))return null;{let ie=!0;if(ie=Array.isArray(Jt)?Jt.every(re=>it(re)):it(Jt),ie)return J(Jt,ue)}return null};function J(Jt,ue){return new Z(Jt,ue)}function ot(Jt,ue){return J(Jt,ue)}x.bM.registerSaveRouter(at),x.bM.registerLoadRouter(at);class rt{constructor(ue){this.modelArtifacts=ue}load(){return this.modelArtifacts}}class tt{constructor(ue){this.saveHandler=ue}save(ue){return this.saveHandler(ue)}}class Tt{constructor(ue){ue.load&&(this.load=()=>Promise.resolve(ue.load())),ue.save&&(this.save=ie=>Promise.resolve(ue.save(ie)))}}function Et(Jt,ue,ie,re){return new Tt(At(...arguments))}function At(Jt,ue,ie,re){return 1===arguments.length?null!=Jt.modelTopology||null!=Jt.weightSpecs?new rt(Jt):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:Jt})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:Jt,weightSpecs:ue,weightData:ie,trainingConfig:re}))}function oe(Jt){return new tt(Jt)}function Gt(Jt){return new tt(Jt)}var ce=t(22782)},43517:(ft,N,t)=>{"use strict";t.d(N,{AQ:()=>_,CY:()=>u,Ej:()=>j,P8:()=>U,Rl:()=>Z,Xf:()=>J,aG:()=>f,jf:()=>k,l3:()=>A,oR:()=>at,s5:()=>w,zV:()=>W});var e=t(10467),s=t(55349),i=t(74544),E=t(26674),m=t(57362),c=t(59611),x=t(47054),g=t(25271);const h=4;function f(Et,At){return p.apply(this,arguments)}function p(){return p=(0,e.A)(function*(Et,At){const oe=[],Gt=[],ce=Array.isArray(Et)?Et.map(ue=>ue.name):Object.keys(Et);for(let ue=0;ue<ce.length;++ue){const ie=ce[ue],re=Array.isArray(Et)?Et[ue].tensor:Et[ie];if("float32"!==re.dtype&&"int32"!==re.dtype&&"bool"!==re.dtype&&"string"!==re.dtype&&"complex64"!==re.dtype)throw new Error(`Unsupported dtype in weight '${ie}': ${re.dtype}`);const Se={name:ie,shape:re.shape,dtype:re.dtype};if("string"===re.dtype){const Oe=new Promise(function(){var Dt=(0,e.A)(function*(Kt){const te=yield re.bytes(),he=te.reduce((vn,fn)=>vn+fn.length,0)+h*te.length,Ke=new Uint8Array(he);let on=0;for(let vn=0;vn<te.length;vn++){const fn=te[vn],dn=new Uint8Array(new Uint32Array([fn.length]).buffer);Ke.set(dn,on),on+=h,Ke.set(fn,on),on+=fn.length}Kt(Ke)});return function(Kt){return Dt.apply(this,arguments)}}());Gt.push(Oe)}else Gt.push(re.data());null!=At&&(Se.group=At),oe.push(Se)}return{data:H(yield Promise.all(Gt)),specs:oe}}),p.apply(this,arguments)}function u(Et,At){const oe=new c.D(Et),Gt={};let ce=0;for(const Jt of At){const ue=d(Jt,(ie,re)=>oe.slice(ce+ie,ce+re));Gt[Jt.name]=D(Jt,oe.slice(ce,ce+ue)),ce+=ue}return Gt}function d(Et,At){const oe=(0,E.Ze)(Et.shape);let Gt;if("quantization"in Et)Gt=m.i[Et.quantization.dtype];else{if("string"===Et.dtype){let ce=0;for(let Jt=0;Jt<oe;Jt++)ce+=h+new Uint32Array(At(ce,ce+h))[0];return ce}Gt=m.i[Et.dtype]}return oe*Gt}function C(Et,At){return T.apply(this,arguments)}function T(){return(T=(0,e.A)(function*(Et,At){const oe=(0,E.Ze)(Et.shape);let Gt;if("quantization"in Et)Gt=m.i[Et.quantization.dtype];else{if("string"===Et.dtype){let ce=0;for(let Jt=0;Jt<oe;Jt++)ce+=h+new Uint32Array(yield At(ce,ce+h))[0];return ce}Gt=m.i[Et.dtype]}return oe*Gt})).apply(this,arguments)}function D(Et,At){const oe=Et.name,Gt=Et.dtype,ce=Et.shape,Jt=(0,E.Ze)(ce);let ue,ie=0;if("quantization"in Et){const re=Et.quantization;if("uint8"===re.dtype||"uint16"===re.dtype){if(!("min"in re)||!("scale"in re))throw new Error(`Weight ${Et.name} with quantization ${re.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==re.dtype)throw new Error(`Weight ${Et.name} has unknown quantization dtype ${re.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==Gt)throw new Error(`Weight ${Et.name} is quantized with ${re.dtype} which only supports weights of type float32 not ${Gt}.`)}const Se=m.i[re.dtype],Oe="uint8"===re.dtype?new Uint8Array(At):new Uint16Array(At);if("float32"===Gt)if("uint8"===re.dtype||"uint16"===re.dtype){ue=new Float32Array(Oe.length);for(let Dt=0;Dt<Oe.length;Dt++)ue[Dt]=Oe[Dt]*re.scale+re.min}else{if("float16"!==re.dtype)throw new Error(`Unsupported quantization type ${re.dtype} for weight type float32.`);ue=function Tt(){const Et=function ot(){const Et=oe=>{let Gt=oe<<13,ce=0;for(;!(8388608&Gt);)ce-=8388608,Gt<<=1;return Gt&=-8388609,ce+=947912704,Gt|ce},At=new Uint32Array(2048);At[0]=0;for(let oe=1;oe<1024;oe++)At[oe]=Et(oe);for(let oe=1024;oe<2048;oe++)At[oe]=939524096+(oe-1024<<13);return At}(),At=function rt(){const Et=new Uint32Array(64);Et[0]=0,Et[31]=1199570944,Et[32]=2147483648,Et[63]=3347054592;for(let At=1;At<31;At++)Et[At]=At<<23;for(let At=33;At<63;At++)Et[At]=2147483648+(At-32<<23);return Et}(),oe=function tt(){const Et=new Uint32Array(64);for(let At=0;At<64;At++)Et[At]=1024;return Et[0]=Et[32]=0,Et}();return Gt=>{const ce=new ArrayBuffer(4*Gt.length),Jt=new Uint32Array(ce);for(let ue=0;ue<Gt.length;ue++){const ie=Gt[ue];Jt[ue]=Et[oe[ie>>10]+(1023&ie)]+At[ie>>10]}return new Float32Array(ce)}}()(Oe)}else{if("int32"!==Gt)throw new Error(`Unsupported dtype in weight '${oe}': ${Gt}`);if("uint8"!==re.dtype&&"uint16"!==re.dtype)throw new Error(`Unsupported quantization type ${re.dtype} for weight type int32.`);ue=new Int32Array(Oe.length);for(let Dt=0;Dt<Oe.length;Dt++)ue[Dt]=Math.round(Oe[Dt]*re.scale+re.min)}ie+=Jt*Se}else if("string"===Gt){const re=(0,E.Ze)(Et.shape);ue=[];for(let Se=0;Se<re;Se++){const Oe=new Uint32Array(At.slice(ie,ie+h))[0];ie+=h;const Dt=new Uint8Array(At.slice(ie,ie+Oe));ue.push(Dt),ie+=Oe}}else{const re=m.i[Gt];if("float32"===Gt)ue=new Float32Array(At);else if("int32"===Gt)ue=new Int32Array(At);else{if("bool"!==Gt){if("complex64"===Gt){ue=new Float32Array(At);const Se=new Float32Array(ue.length/2),Oe=new Float32Array(ue.length/2);for(let he=0;he<Se.length;he++)Se[he]=ue[2*he],Oe[he]=ue[2*he+1];const Dt=(0,i.O)(Se,ce,"float32"),Kt=(0,i.O)(Oe,ce,"float32"),te=(0,s.f)(Dt,Kt);return Dt.dispose(),Kt.dispose(),te}throw new Error(`Unsupported dtype in weight '${oe}': ${Gt}`)}ue=new Uint8Array(At)}ie+=Jt*re}return(0,i.O)(ue,ce,Gt)}function S(Et,At,oe){return b.apply(this,arguments)}function b(){return(b=(0,e.A)(function*(Et,At,oe){let Gt=new Uint8Array(At);for(;Gt.byteLength<oe;){const{done:ce,value:Jt}=yield Et.read();if(ce&&null==Jt)throw new Error(`Reader is done but ${oe-Gt.byteLength} bytes are still expected`);const ue=new Uint8Array(Gt.length+Jt.byteLength);ue.set(Gt,0),ue.set(new Uint8Array(Jt),Gt.length),Gt=ue}return Gt.buffer})).apply(this,arguments)}function w(Et,At){return G.apply(this,arguments)}function G(){return G=(0,e.A)(function*(Et,At){const oe={},Gt=Et.getReader();let ce=new ArrayBuffer(0);for(const Jt of At){const ue=yield C(Jt,function(){var Se=(0,e.A)(function*(Oe,Dt){return ce=yield S(Gt,ce,Dt),ce.slice(Oe,Dt)});return function(Oe,Dt){return Se.apply(this,arguments)}}());ce=yield S(Gt,ce,ue);const ie=ce.slice(0,ue);ce=ce.slice(ue);const re=D(Jt,ie);if(oe[Jt.name]=re,"webgpu"===(0,x.jz)()){const Se=(0,x.Hs)();"uploadToGPU"in Se&&(0,E.Ze)(re.shape)>=(0,g._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&Se.uploadToGPU(re.dataId)}}return oe}),G.apply(this,arguments)}function H(Et){if(null===Et)throw new Error(`Invalid input value: ${JSON.stringify(Et)}`);let At=0;const oe=[];Et.forEach(Jt=>{if(At+=Jt.byteLength,oe.push(Jt.byteLength===Jt.buffer.byteLength?Jt:new Jt.constructor(Jt)),!(Jt instanceof Float32Array||Jt instanceof Int32Array||Jt instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${Jt.constructor.name}`)});const Gt=new Uint8Array(At);let ce=0;return oe.forEach(Jt=>{Gt.set(new Uint8Array(Jt.buffer),ce),ce+=Jt.byteLength}),Gt.buffer}const F=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function B(Et){return F?Buffer.byteLength(Et,"utf8"):new Blob([Et]).size}function A(Et){if(F)return Buffer.from(Et).toString("base64");const At=new Uint8Array(Et);let oe="";for(let Gt=0,ce=At.length;Gt<ce;Gt++)oe+=String.fromCharCode(At[Gt]);return btoa(oe)}function k(Et){if(F){const Gt=Buffer.from(Et,"base64");return Gt.buffer.slice(Gt.byteOffset,Gt.byteOffset+Gt.byteLength)}const At=atob(Et),oe=new Uint8Array(At.length);for(let Gt=0;Gt<At.length;++Gt)oe.set([At.charCodeAt(Gt)],Gt);return oe.buffer}function _(Et){return c.D.join(Et)}function U(Et){for(Et=Et.trim();Et.endsWith("/");)Et=Et.slice(0,Et.length-1);const oe=Et.split("/");return oe[oe.length-1]}function W(Et,At){const oe={modelTopology:Et.modelTopology,format:Et.format,generatedBy:Et.generatedBy,convertedBy:Et.convertedBy,weightsManifest:At};return null!=Et.signature&&(oe.signature=Et.signature),null!=Et.userDefinedMetadata&&(oe.userDefinedMetadata=Et.userDefinedMetadata),null!=Et.modelInitializer&&(oe.modelInitializer=Et.modelInitializer),null!=Et.initializerSignature&&(oe.initializerSignature=Et.initializerSignature),null!=Et.trainingConfig&&(oe.trainingConfig=Et.trainingConfig),oe}function Z(Et,At,oe){const Gt={modelTopology:Et.modelTopology,format:Et.format,generatedBy:Et.generatedBy,convertedBy:Et.convertedBy};if(null!=Et.trainingConfig&&(Gt.trainingConfig=Et.trainingConfig),null!=Et.weightsManifest){if(!At)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!oe)throw new Error("modelJSON has weightsManifest but weightData is null");Gt.weightSpecs=At,Gt.weightData=oe}return null!=Et.signature&&(Gt.signature=Et.signature),null!=Et.userDefinedMetadata&&(Gt.userDefinedMetadata=Et.userDefinedMetadata),null!=Et.modelInitializer&&(Gt.modelInitializer=Et.modelInitializer),null!=Et.initializerSignature&&(Gt.initializerSignature=Et.initializerSignature),Gt}function j(Et,At){return it.apply(this,arguments)}function it(){return(it=(0,e.A)(function*(Et,At){let oe,Gt;return null!=Et.weightsManifest&&([oe,Gt]=yield At(Et.weightsManifest)),Z(Et,oe,Gt)})).apply(this,arguments)}function at(Et){if(Et.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==Et.modelTopology?0:B(JSON.stringify(Et.modelTopology)),weightSpecsBytes:null==Et.weightSpecs?0:B(JSON.stringify(Et.weightSpecs)),weightDataBytes:null==Et.weightData?0:new c.D(Et.weightData).byteLength}}function J(Et){const At=[];for(const oe of Et)At.push(...oe.weights);return At}},60366:(ft,N,t)=>{"use strict";t.d(N,{Cd:()=>B,ZT:()=>G});var e=t(10467),i=(t(70177),t(25271)),E=t(26674),m=t(43517),c=t(59611),x=t(80190);const g="/",h="tensorflowjs_models",f="info",p="model_topology",u="weight_specs",d="weight_data",C="model_metadata";function D(A){return{info:[h,A,f].join(g),topology:[h,A,p].join(g),weightSpecs:[h,A,u].join(g),weightData:[h,A,d].join(g),modelMetadata:[h,A,C].join(g)}}function S(A){for(const k of Object.values(A))window.localStorage.removeItem(k)}function b(A){const k=A.split(g);if(k.length<3)throw new Error(`Invalid key format: ${A}`);return k.slice(1,k.length-1).join(g)}let G=(()=>{class A{constructor(_){if(!(0,i._K)().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==_||!_)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=_,this.keys=D(this.modelPath)}save(_){var U=this;return(0,e.A)(function*(){if(_.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const W=JSON.stringify(_.modelTopology),Z=JSON.stringify(_.weightSpecs),j=(0,m.oR)(_),it=c.D.join(_.weightData);try{return U.LS.setItem(U.keys.info,JSON.stringify(j)),U.LS.setItem(U.keys.topology,W),U.LS.setItem(U.keys.weightSpecs,Z),U.LS.setItem(U.keys.weightData,(0,m.l3)(it)),U.LS.setItem(U.keys.modelMetadata,JSON.stringify({format:_.format,generatedBy:_.generatedBy,convertedBy:_.convertedBy,signature:null!=_.signature?_.signature:void 0,userDefinedMetadata:null!=_.userDefinedMetadata?_.userDefinedMetadata:void 0,modelInitializer:null!=_.modelInitializer?_.modelInitializer:void 0,initializerSignature:null!=_.initializerSignature?_.initializerSignature:void 0,trainingConfig:null!=_.trainingConfig?_.trainingConfig:void 0})),{modelArtifactsInfo:j}}catch{throw S(U.keys),new Error(`Failed to save model '${U.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${j.modelTopologyBytes}, weightSpecsBytes=${j.weightSpecsBytes}, weightDataBytes=${j.weightDataBytes}.`)}}})()}load(){var _=this;return(0,e.A)(function*(){const U=JSON.parse(_.LS.getItem(_.keys.info));if(null==U)throw new Error(`In local storage, there is no model with name '${_.modelPath}'`);if("JSON"!==U.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const W={},Z=JSON.parse(_.LS.getItem(_.keys.topology));if(null==Z)throw new Error(`In local storage, the topology of model '${_.modelPath}' is missing.`);W.modelTopology=Z;const j=JSON.parse(_.LS.getItem(_.keys.weightSpecs));if(null==j)throw new Error(`In local storage, the weight specs of model '${_.modelPath}' are missing.`);W.weightSpecs=j;const it=_.LS.getItem(_.keys.modelMetadata);if(null!=it){const J=JSON.parse(it);W.format=J.format,W.generatedBy=J.generatedBy,W.convertedBy=J.convertedBy,null!=J.signature&&(W.signature=J.signature),null!=J.userDefinedMetadata&&(W.userDefinedMetadata=J.userDefinedMetadata),null!=J.modelInitializer&&(W.modelInitializer=J.modelInitializer),null!=J.initializerSignature&&(W.initializerSignature=J.initializerSignature),null!=J.trainingConfig&&(W.trainingConfig=J.trainingConfig)}const at=_.LS.getItem(_.keys.weightData);if(null==at)throw new Error(`In local storage, the binary weight values of model '${_.modelPath}' are missing.`);return W.weightData=(0,m.jf)(at),W})()}}return A.URL_SCHEME="localstorage://",A})();const H=A=>(0,i._K)().getBool("IS_BROWSER")&&!Array.isArray(A)&&A.startsWith(G.URL_SCHEME)?function F(A){return new G(A)}(A.slice(G.URL_SCHEME.length)):null;x.bM.registerSaveRouter(H),x.bM.registerLoadRouter(H);class B{constructor(){(0,E.vA)((0,i._K)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,E.vA)(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var k=this;return(0,e.A)(function*(){const _={},U=h+g,W=g+f;for(let Z=0;Z<k.LS.length;++Z){const j=k.LS.key(Z);j.startsWith(U)&&j.endsWith(W)&&(_[b(j)]=JSON.parse(k.LS.getItem(j)))}return _})()}removeModel(k){var _=this;return(0,e.A)(function*(){const U=D(k=function w(A){return A.startsWith(G.URL_SCHEME)?A.slice(G.URL_SCHEME.length):A}(k));if(null==_.LS.getItem(U.info))throw new Error(`Cannot find model at path '${k}'`);const W=JSON.parse(_.LS.getItem(U.info));return S(U),W})()}}},22782:(ft,N,t)=>{"use strict";t.d(N,{D:()=>h,Vo:()=>T,az:()=>p,dy:()=>m,xk:()=>d});var e=t(10467),s=t(26674),i=t(80190);const E="://";class m{constructor(){this.managers={}}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerManager(b,w){(0,s.vA)(null!=b,()=>"scheme must not be undefined or null."),b.endsWith(E)&&(b=b.slice(0,b.indexOf(E))),(0,s.vA)(b.length>0,()=>"scheme must not be an empty string.");const G=m.getInstance();(0,s.vA)(null==G.managers[b],()=>`A model store manager is already registered for scheme '${b}'.`),G.managers[b]=w}static getManager(b){const w=m.getInstance().managers[b];if(null==w)throw new Error(`Cannot find model manager for scheme '${b}'`);return w}static getSchemes(){return Object.keys(m.getInstance().managers)}}function c(S){if(-1===S.indexOf(E))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${m.getSchemes().join(",")}`);return{scheme:S.split(E)[0],path:S.split(E)[1]}}function x(S,b){return g.apply(this,arguments)}function g(){return(g=(0,e.A)(function*(S,b,w=!1){(0,s.vA)(S!==b,()=>`Old path and new path are the same: '${S}'`);const G=i.bM.getLoadHandlers(S);(0,s.vA)(G.length>0,()=>`Copying failed because no load handler is found for source URL ${S}.`),(0,s.vA)(G.length<2,()=>`Copying failed because more than one (${G.length}) load handlers for source URL ${S}.`);const H=G[0],F=i.bM.getSaveHandlers(b);(0,s.vA)(F.length>0,()=>`Copying failed because no save handler is found for destination URL ${b}.`),(0,s.vA)(F.length<2,()=>`Copying failed because more than one (${G.length}) save handlers for destination URL ${b}.`);const B=F[0],A=c(S).scheme,k=c(S).path,_=A===c(S).scheme,U=yield H.load();w&&_&&(yield m.getManager(A).removeModel(k));const W=yield B.save(U);return w&&!_&&(yield m.getManager(A).removeModel(k)),W.modelArtifactsInfo})).apply(this,arguments)}function h(){return f.apply(this,arguments)}function f(){return(f=(0,e.A)(function*(){const S=m.getSchemes(),b={};for(const w of S){const G=yield m.getManager(w).listModels();for(const H in G)b[w+E+H]=G[H]}return b})).apply(this,arguments)}function p(S){return u.apply(this,arguments)}function u(){return(u=(0,e.A)(function*(S){const b=c(S);return m.getManager(b.scheme).removeModel(b.path)})).apply(this,arguments)}function d(S,b){return C.apply(this,arguments)}function C(){return(C=(0,e.A)(function*(S,b){return x(S,b,!1)})).apply(this,arguments)}function T(S,b){return D.apply(this,arguments)}function D(){return(D=(0,e.A)(function*(S,b){return x(S,b,!0)})).apply(this,arguments)}},80190:(ft,N,t)=>{"use strict";t.d(N,{C9:()=>m,R4:()=>i,Yd:()=>s,bM:()=>e,x3:()=>E});class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(x){e.getInstance().saveRouters.push(x)}static registerLoadRouter(x){e.getInstance().loadRouters.push(x)}static getSaveHandlers(x){return e.getHandlers(x,"save")}static getLoadHandlers(x,g){return e.getHandlers(x,"load",g)}static getHandlers(x,g,h){const f=[];return("load"===g?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(u=>{const d=u(x,h);null!==d&&f.push(d)}),f}}const s=c=>e.registerSaveRouter(c),i=c=>e.registerLoadRouter(c),E=c=>e.getSaveHandlers(c),m=(c,x)=>e.getLoadHandlers(c,x)},57362:(ft,N,t)=>{"use strict";t.d(N,{i:()=>e});const e={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},30162:(ft,N,t)=>{"use strict";t.d(N,{$dB:()=>j,$jE:()=>Fr,$zE:()=>Z,A1h:()=>ot,A8B:()=>ss,BK4:()=>_n,BLA:()=>ys,BRl:()=>dn,Blb:()=>xs,BoJ:()=>Ns,BxF:()=>Jn,C8s:()=>Bn,CQC:()=>Us,Cg$:()=>tn,CwD:()=>Yt,D7i:()=>I,Ddj:()=>sr,Dr:()=>Yn,DvZ:()=>er,E3$:()=>It,EkD:()=>m,ElG:()=>As,EwU:()=>wt,FAs:()=>Vr,FCQ:()=>O,FSt:()=>x,Fin:()=>xn,GZp:()=>Ar,HNs:()=>F,Ik2:()=>G,J3C:()=>qe,JiE:()=>$e,Jp_:()=>g,KXH:()=>k,L6G:()=>Vs,LB5:()=>B,LDN:()=>bn,LG0:()=>js,LRy:()=>fr,LWX:()=>Ws,LXA:()=>_e,M6A:()=>rr,MRQ:()=>Gt,Mn0:()=>Tt,MnK:()=>Et,N4F:()=>H,Ncv:()=>qs,O4G:()=>ks,OAQ:()=>kt,ODT:()=>Is,OMN:()=>E,ORI:()=>Se,PH8:()=>i,P_L:()=>y,Pah:()=>on,PbM:()=>Wr,Q6t:()=>hr,QDP:()=>_,QKF:()=>f,Qgm:()=>Ke,R23:()=>Zs,RUm:()=>ln,RXX:()=>kn,SDM:()=>Ir,SQl:()=>rs,T7M:()=>Vn,TBb:()=>Mr,TL8:()=>cs,TMz:()=>Jt,TOR:()=>nt,ToN:()=>un,TyE:()=>u,UcO:()=>br,VAI:()=>Un,VCH:()=>D,Vvy:()=>s,WT3:()=>bs,WuN:()=>Pn,X$8:()=>ie,X0$:()=>pt,X4r:()=>Mt,XQy:()=>mr,XhZ:()=>Rt,XmO:()=>te,YAb:()=>kr,YVe:()=>Tn,ZgB:()=>gs,Zl4:()=>Pr,_s9:()=>fn,aAr:()=>vs,awo:()=>En,bP9:()=>Dt,cHb:()=>Es,cS:()=>S,dFH:()=>sn,dLy:()=>Kr,dXR:()=>ae,dv8:()=>q,e0f:()=>lr,epO:()=>p,fUj:()=>Sr,g5A:()=>fs,gC7:()=>tt,gIW:()=>xt,hVg:()=>K,hgw:()=>gr,ho8:()=>T,hql:()=>He,huO:()=>tr,i5R:()=>Gs,iGz:()=>rt,iPs:()=>dt,iW0:()=>Er,iuW:()=>_r,jAQ:()=>w,jM4:()=>ze,jOE:()=>Ms,jfg:()=>J,jgd:()=>nr,jj_:()=>At,jxD:()=>Oe,kdj:()=>dr,l0G:()=>Qs,l6P:()=>ee,lLS:()=>Ut,lNG:()=>Hs,ljI:()=>e,lxb:()=>C,lzr:()=>lt,mH5:()=>pr,mIA:()=>Xt,mM$:()=>Or,mnI:()=>ve,mxL:()=>us,nVu:()=>re,nY8:()=>oe,nZd:()=>Ee,oFs:()=>Ur,oJ2:()=>Ps,ox3:()=>$n,p2J:()=>it,pJc:()=>st,pPe:()=>ge,p_m:()=>h,pk0:()=>Kt,pnw:()=>mn,pr3:()=>W,pyJ:()=>cr,rFG:()=>ds,rFm:()=>at,rGP:()=>Gn,rsH:()=>vn,sDr:()=>he,t3d:()=>es,tG8:()=>be,tGH:()=>ue,u$b:()=>Pe,u8Z:()=>c,uWl:()=>Ot,urI:()=>ur,vI1:()=>Ln,vaV:()=>U,vj7:()=>A,wNW:()=>ce,wwC:()=>b,wx0:()=>or,x7F:()=>Ds,xJ3:()=>cn,xu7:()=>Fs,ySp:()=>Zn,ybN:()=>wn,ybj:()=>zn,ylV:()=>Dr,zP9:()=>d,zfU:()=>Te});const e="Abs",s="Acos",i="Acosh",E="Add",m="AddN",c="All",x="Any",g="ArgMax",h="ArgMin",f="Asin",p="Asinh",u="Atan",d="Atanh",C="Atan2",T="AvgPool",D="AvgPoolGrad",S="AvgPool3D",b="AvgPool3DGrad",w="BatchMatMul",G="BatchToSpaceND",H="Bincount",F="BitwiseAnd",B="BroadcastTo",A="BroadcastArgs",k="Cast",_="Ceil",U="ClipByValue",W="Complex",Z="ComplexAbs",j="Concat",it="Conv2D",at="Conv2DBackpropFilter",J="Conv2DBackpropInput",ot="Conv3D",rt="Conv3DBackpropFilterV2",tt="Conv3DBackpropInputV2",Tt="Cos",Et="Cosh",At="Cumprod",oe="Cumsum",Gt="CropAndResize",ce="DenseBincount",Jt="DepthToSpace",ue="DepthwiseConv2dNative",ie="DepthwiseConv2dNativeBackpropFilter",re="DepthwiseConv2dNativeBackpropInput",Se="Diag",Oe="Dilation2D",Dt="Dilation2DBackpropInput",Kt="Dilation2DBackpropFilter",te="Draw",he="RealDiv",Ke="Einsum",on="Elu",vn="EluGrad",fn="Erf",dn="Equal",$n="Exp",wn="ExpandDims",zn="Expm1",Gn="FFT",rs="Fill",Jn="FlipLeftRight",gs="Floor",As="FloorDiv",Gs="FusedBatchNorm",us="GatherV2",ks="GatherNd",Rt="Greater",Ut="GreaterEqual",lt="Identity",kt="IFFT",q="Imag",xt="IsFinite",It="IsInf",dt="IsNan",pt="LeakyRelu",Xt="Less",Yt="LessEqual",ve="LinSpace",be="Log",tn="Log1p",ln="LogicalAnd",Ee="LogicalNot",_e="LogicalOr",Te="LogSoftmax",ze="LRN",un="LRNGrad",Un="Max",bn="Maximum",es="MaxPool",kn="MaxPoolGrad",Zn="MaxPool3D",Es="MaxPool3DGrad",cs="MaxPoolWithArgmax",fs="Mean",Hs="Min",js="Minimum",Ds="MirrorPad",ys="Mod",bs="Multinomial",Fs="Multiply",Qs="Neg",Dr="NotEqual",Ir="NonMaxSuppressionV3",Pr="NonMaxSuppressionV4",lr="NonMaxSuppressionV5",Ws="OnesLike",ur="OneHot",Or="Pack",Is="PadV2",cr="Pow",qs="Prelu",dr="Prod",Ps="RaggedGather",Us="RaggedRange",pr="RaggedTensorToTensor",hr="Range",fr="Real",tr="Reciprocal",Sr="Relu",Zs="Reshape",Ms="ResizeNearestNeighbor",mr="ResizeNearestNeighborGrad",gr="ResizeBilinear",O="ResizeBilinearGrad",y="Relu6",I="Reverse",K="Round",nt="Rsqrt",st="ScatterNd",Mt="TensorScatterUpdate",Ot="SearchSorted",ee="Select",Pe="Selu",$e="Slice",He="Sin",qe="Sinh",Tn="Sign",Ln="Sigmoid",xn="Softplus",sn="Sqrt",Pn="Sum",ss="SpaceToBatchND",xs="SplitV",ds="Softmax",Bn="SparseFillEmptyRows",Ns="SparseReshape",Vs="SparseSegmentMean",er="SparseSegmentSum",nr="SparseToDense",sr="SquaredDifference",rr="Square",Ar="StaticRegexReplace",br="StridedSlice",kr="StringNGrams",Er="StringSplit",Fr="StringToHashBucketFast",Wr="Sub",Ur="Tan",_r="Tanh",Vr="Tile",Mr="TopK",Kr="Transform",or="Transpose",wt="Unique",ae="Unpack",ge="UnsortedSegmentSum",cn="ZerosLike",mn="Step",En="FromPixels",_n="RotateWithOffset",Yn="_FusedMatMul",vs="FusedConv2D",Vn="FusedDepthwiseConv2D"},56203:(ft,N,t)=>{"use strict";t.d(N,{Op:()=>g,_5:()=>c,kr:()=>f,tA:()=>h,vQ:()=>x});var e=t(25271),s=t(73366),i=t(64140);const E=(0,s.m)("kernelRegistry",()=>new Map),m=(0,s.m)("gradRegistry",()=>new Map);function c(T,D){const S=C(T,D);return E.get(S)}function x(T){return m.get(T)}function g(T){const D=E.entries(),S=[];for(;;){const{done:b,value:w}=D.next();if(b)break;const[G,H]=w,[F]=G.split("_");F===T&&S.push(H)}return S}function h(T){const{kernelName:D,backendName:S}=T,b=C(D,S);E.has(b)&&i.i(`The kernel '${D}' for backend '${S}' is already registered`),E.set(b,T)}function f(T){const{kernelName:D}=T;m.has(D)&&(0,e._K)().getBool("DEBUG")&&i.i(`Overriding the gradient for '${D}'`),m.set(D,T)}function C(T,D){return`${D}_${T}`}},64140:(ft,N,t)=>{"use strict";t.d(N,{R:()=>i,i:()=>s});var e=t(25271);function s(...E){(0,e._K)().getBool("IS_TEST")||(0,e._K)().getBool("PROD")||console.warn(...E)}function i(...E){(0,e._K)().getBool("IS_TEST")||(0,e._K)().getBool("PROD")||console.log(...E)}},72009:(ft,N,t)=>{"use strict";t.d(N,{t:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({abs_:function m(x){const g=(0,i.YT)(x,"x","abs");return e.T2.runKernel("complex64"===g.dtype?s.$zE:s.ljI,{x:g})}})},83034:(ft,N,t)=>{"use strict";t.d(N,{W:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({add_:function c(g,h){let f=(0,E.YT)(g,"a","add"),p=(0,E.YT)(h,"b","add");return[f,p]=(0,i.makeTypesMatch)(f,p),e.T2.runKernel(s.OMN,{a:f,b:p})}})},56682:(ft,N,t)=>{"use strict";t.d(N,{Q:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({all_:function m(x,g=null,h=!1){const p={x:(0,i.YT)(x,"x","all","bool")};return e.T2.runKernel(s.u8Z,p,{axis:g,keepDims:h})}})},37547:(ft,N,t)=>{"use strict";t.d(N,{b:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({any_:function m(x,g=null,h=!1){const p={x:(0,i.YT)(x,"x","any","bool")};return e.T2.runKernel(s.FSt,p,{axis:g,keepDims:h})}})},71084:(ft,N,t)=>{"use strict";t.d(N,{F:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({argMax_:function m(x,g=0){const f={x:(0,i.YT)(x,"x","argMax")};return e.T2.runKernel(s.Jp_,f,{axis:g})}})},37434:(ft,N,t)=>{"use strict";t.d(N,{$:()=>f});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(92290),c=t(29458),x=t(87844),g=t(94399);const f=(0,x.op)({avgPool_:function h(p,u,d,C,T){const D=(0,i.YT)(p,"x","avgPool","float32");E.vA(c.G0(d,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`);let b=D,w=!1;3===D.rank&&(w=!0,b=(0,g.t)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),E.vA(4===b.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${b.rank}.`),c.s_("avgPool",C,T);let F=e.T2.runKernel(s.ho8,{x:b},{filterSize:u,strides:d,pad:C,dimRoundingMode:T});return F=(0,m.w)(F,D.dtype),w?(0,g.t)(F,[F.shape[1],F.shape[2],F.shape[3]]):F}})},36806:(ft,N,t)=>{"use strict";t.d(N,{s:()=>f});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(92290),c=t(29458),x=t(87844),g=t(94399);const f=(0,x.op)({avgPool3d_:function h(p,u,d,C,T,D="NDHWC"){const S=(0,i.YT)(p,"x","avgPool3d","float32");let b=S,w=!1;4===S.rank&&(w=!0,b=(0,g.t)(S,[1,S.shape[0],S.shape[1],S.shape[2],S.shape[3]])),E.vA(5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),E.vA("NDHWC"===D,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${D}`),E.vA("number"==typeof d&&d>0||Array.isArray(d)&&d[0]>0&&d[1]>0&&d[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${d}'`),(0,c.s_)("avgPool3d",C,T);let F=e.T2.runKernel(s.cS,{x:b},{filterSize:u,strides:d,pad:C,dimRoundingMode:T,dataFormat:D});return F=(0,m.w)(F,b.dtype),w?(0,g.t)(F,[F.shape[1],F.shape[2],F.shape[3],F.shape[4]]):F}})},94963:(ft,N,t)=>{"use strict";t.d(N,{Em:()=>x,SM:()=>m,WC:()=>c,WH:()=>s,aF:()=>i,fK:()=>h,gx:()=>g,lb:()=>E});var e=t(26674);function s(f,p){for(let u=0;u<f.length;++u)if(f[f.length-u-1]!==p-1-u)return!1;return!0}function i(f,p,u){const d=f.length+p.length,C=[];let T=0,D=0;for(let S=0;S<d;S++)-1===u.indexOf(S)?C.push(f[T++]):C.push(p[D++]);return C}function E(f,p){const u=[],d=f.length;for(let T=0;T<d;T++)-1===p.indexOf(T)&&u.push(f[T]);return[u,p.map(T=>f[T])]}function m(f,p){return i(f,p.map(d=>1),p)}function c(f,p,u){e.vA(s(p,u),()=>`${f} supports only inner-most axes for now. Got axes ${p} and rank-${u} input.`)}function x(f,p){if(s(f,p))return null;const u=[];for(let d=0;d<p;++d)-1===f.indexOf(d)&&u.push(d);return f.forEach(d=>u.push(d)),u}function g(f){return f.map((p,u)=>[u,p]).sort((p,u)=>p[1]-u[1]).map(p=>p[0])}function h(f,p){const u=[];for(let d=p-f;d<p;++d)u.push(d);return u}},69229:(ft,N,t)=>{"use strict";t.d(N,{G:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({batchToSpaceND_:function c(g,h,f){const p=(0,i.YT)(g,"x","batchToSpaceND"),u=h.reduce((T,D)=>T*D);return E.vA(p.rank>=1+h.length,()=>`input rank is ${p.rank} but should be > than blockShape.length ${h.length}`),E.vA(f.length===h.length,()=>`crops.length is ${f.length} but should be equal to blockShape.length  ${h.length}`),E.vA(p.shape[0]%u==0,()=>`input tensor batch is ${p.shape[0]} but is not divisible by the product of the elements of blockShape ${h.join(" * ")} === ${u}`),e.T2.runKernel(s.Ik2,{x:p},{blockShape:h,crops:f})}})},60571:(ft,N,t)=>{"use strict";t.d(N,{$:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(94399);function c(f){let p;return p=0===f.rank||1===f.rank?(0,m.t)(f,[1,1,1,f.size]):2===f.rank?(0,m.t)(f,[1,1,f.shape[0],f.shape[1]]):3===f.rank?(0,m.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]]):f,p}const h=(0,t(87844).op)({batchNorm_:function g(f,p,u,d,C,T){null==T&&(T=.001);const D=(0,i.YT)(f,"x","batchNorm"),S=(0,i.YT)(p,"mean","batchNorm"),b=(0,i.YT)(u,"variance","batchNorm");let w,G;null!=C&&(w=(0,i.YT)(C,"scale","batchNorm")),null!=d&&(G=(0,i.YT)(d,"offset","batchNorm")),E.vA(S.rank===b.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E.vA(null==G||S.rank===G.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E.vA(null==w||S.rank===w.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const F={x:c(D),scale:w,offset:G,mean:S,variance:b},A=e.T2.runKernel(s.i5R,F,{varianceEpsilon:T});return(0,m.t)(A,D.shape)}})},44353:(ft,N,t)=>{"use strict";t.d(N,{B:()=>c});var e=t(17636),s=t(26674),i=t(60571);const c=(0,t(87844).op)({batchNorm2d_:function m(x,g,h,f,p,u){const d=(0,e.YT)(x,"x","batchNorm"),C=(0,e.YT)(g,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(2===d.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${d.rank}.`),s.vA(2===C.rank||1===C.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${C.rank}.`),s.vA(2===T.rank||1===T.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(2===D.rank||1===D.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(2===S.rank||1===S.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${S.rank}.`),(0,i.$)(d,C,T,S,D,u)}})},46884:(ft,N,t)=>{"use strict";t.d(N,{k:()=>c});var e=t(17636),s=t(26674),i=t(60571);const c=(0,t(87844).op)({batchNorm3d_:function m(x,g,h,f,p,u){const d=(0,e.YT)(x,"x","batchNorm"),C=(0,e.YT)(g,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(3===d.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${d.rank}.`),s.vA(3===C.rank||1===C.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${C.rank}.`),s.vA(3===T.rank||1===T.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(3===D.rank||1===D.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(3===S.rank||1===S.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${S.rank}.`),(0,i.$)(d,C,T,S,D,u)}})},77807:(ft,N,t)=>{"use strict";t.d(N,{T:()=>c});var e=t(17636),s=t(26674),i=t(60571);const c=(0,t(87844).op)({batchNorm4d_:function m(x,g,h,f,p,u){const d=(0,e.YT)(x,"x","batchNorm"),C=(0,e.YT)(g,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(4===d.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${d.rank}.`),s.vA(4===C.rank||1===C.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${C.rank}.`),s.vA(4===T.rank||1===T.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(4===D.rank||1===D.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(4===S.rank||1===S.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${S.rank}.`),(0,i.$)(d,C,T,S,D,u)}})},3752:(ft,N,t)=>{"use strict";t.d(N,{h:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(61548),c=t(87844),x=t(94399);const h=(0,c.op)({broadcastTo_:function g(f,p){let u=(0,i.YT)(f,"broadcastTo","x");const d=u.shape;if((0,E.SA)(p),p.length<u.rank)throw new Error(`broadcastTo(): shape.length=${p.length} < input.rank=${u.rank}.`);if(p.length>u.rank){const w=u.shape.slice();for(;w.length<p.length;)w.unshift(1);u=(0,x.t)(u,w)}const C=u.shape,T=Array.from(p);for(let w=p.length-1;w>=0;w--)if(C[w]===p[w])T[w]=1;else if(1!==u.shape[w])throw new Error(`broadcastTo(): [${d}] cannot be broadcast to [${p}].`);return 0===T.map((w,G)=>w>1?G:-1).filter(w=>w>=0).length?(0,m.o)(u):e.T2.runKernel(s.FAs,{x:u},{reps:T})}})},9269:(ft,N,t)=>{"use strict";function e(E,m){const c=E.length,x=[];for(let g=0;g<c;g++){const h=c-1-g;(m[m.length-1-g]||1)>1&&1===(E[h]||1)&&x.unshift(h)}return x}function s(E,m){const c=[];for(let x=0;x<m.length;x++){const g=E[E.length-x-1],h=m.length-x-1;(null==g||1===g&&m[h]>1)&&c.unshift(h)}return c}function i(E,m){const c=Math.max(E.length,m.length),x=new Array(c);for(let g=0;g<c;g++){let h=E[E.length-g-1];null==h&&(h=1);let f=m[m.length-g-1];if(null==f&&(f=1),1===h)x[c-g-1]=f;else if(1===f)x[c-g-1]=h;else{if(h!==f)throw Error(`Operands could not be broadcast together with shapes ${E} and ${m}.`);x[c-g-1]=h}}return x}t.r(N),t.d(N,{assertAndGetBroadcastShape:()=>i,getBroadcastDims:()=>e,getReductionAxes:()=>s})},25905:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{draw:()=>A,fromPixels:()=>k,fromPixelsAsync:()=>b,toPixels:()=>F});var e=t(10467),s=t(611),i=t(25271),E=t(30162),m=t(56203),c=t(73444),x=t(17636),g=t(92290),h=t(87844),f=t(86691);let p,u=!1;function d(_,U=3){if(U>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==_)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let W=!1,Z=!1,j=!1,it=!1,at=!1,J=!1;if(_.data instanceof Uint8Array)W=!0;else if(typeof ImageData<"u"&&_ instanceof ImageData)Z=!0;else if(typeof HTMLVideoElement<"u"&&_ instanceof HTMLVideoElement)j=!0;else if(typeof HTMLImageElement<"u"&&_ instanceof HTMLImageElement)it=!0;else if(null!=_.getContext)at=!0;else{if(!(typeof ImageBitmap<"u"&&_ instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${_.constructor.name}`);J=!0}if(null!=(0,m._5)(E.awo,s.T2.backendName))return s.T2.runKernel(E.awo,{pixels:_},{numChannels:U});const[rt,tt]=j?[_.videoWidth,_.videoHeight]:[_.width,_.height];let Tt,Et;if(at)Tt=_.getContext("2d").getImageData(0,0,rt,tt).data;else if(Z||W)Tt=_.data;else if(it||j||J){if(null==p)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");p=new OffscreenCanvas(1,1).getContext("2d")}else p=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});p.canvas.width=rt,p.canvas.height=tt,p.drawImage(_,0,0,rt,tt),Tt=p.getImageData(0,0,rt,tt).data}if(4===U)Et=new Int32Array(Tt);else{const oe=rt*tt;Et=new Int32Array(oe*U);for(let Gt=0;Gt<oe;Gt++)for(let ce=0;ce<U;++ce)Et[Gt*U+ce]=Tt[4*Gt+ce]}return(0,f.$)(Et,[tt,rt,U],"int32")}function b(_){return w.apply(this,arguments)}function w(){return(w=(0,e.A)(function*(_,U=3){let W=null;if((0,i._K)().getBool("WRAP_TO_IMAGEBITMAP")&&function S(_){return function T(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}()&&!(_ instanceof ImageBitmap)&&function D(_){return null!=_&&0!==_.width&&0!==_.height}(_)&&!function C(_){return null!=_&&_.data instanceof Uint8Array}(_)}(_)){let Z;try{Z=yield createImageBitmap(_,{premultiplyAlpha:"none"})}catch{Z=null}W=null!=Z&&Z.width===_.width&&Z.height===_.height?Z:_}else W=_;return d(W,U)})).apply(this,arguments)}function G(_){if(2!==_.rank&&3!==_.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${_.rank}.`);const U=2===_.rank?1:_.shape[2];if(U>4||2===U)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${U}`);if("float32"!==_.dtype&&"int32"!==_.dtype)throw new Error(`Unsupported type for toPixels: ${_.dtype}. Please use float32 or int32 tensors.`)}function F(_,U){return B.apply(this,arguments)}function B(){return(B=(0,e.A)(function*(_,U){let W=(0,x.YT)(_,"img","toPixels");if(!(_ instanceof c.qY)){const rt=W;W=(0,g.w)(rt,"int32"),rt.dispose()}G(W);const[Z,j]=W.shape.slice(0,2),it=2===W.rank?1:W.shape[2],at=yield W.data(),J="float32"===W.dtype?255:1,ot=new Uint8ClampedArray(j*Z*4);for(let rt=0;rt<Z*j;++rt){const tt=[0,0,0,255];for(let Et=0;Et<it;Et++){const At=at[rt*it+Et];if("float32"===W.dtype){if(At<0||At>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${At}.`)}else if("int32"===W.dtype&&(At<0||At>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${At}.`);1===it?(tt[0]=At*J,tt[1]=At*J,tt[2]=At*J):tt[Et]=At*J}const Tt=4*rt;ot[Tt+0]=Math.round(tt[0]),ot[Tt+1]=Math.round(tt[1]),ot[Tt+2]=Math.round(tt[2]),ot[Tt+3]=Math.round(tt[3])}if(null!=U){u||null!=(0,m._5)(E.XmO,s.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),u=!0),U.width=j,U.height=Z;const rt=U.getContext("2d"),tt=new ImageData(ot,j,Z);rt.putImageData(tt,0,0)}return W!==_&&W.dispose(),ot})).apply(this,arguments)}function A(_,U,W){let Z=(0,x.YT)(_,"img","draw");if(!(_ instanceof c.qY)){const at=Z;Z=(0,g.w)(at,"int32"),at.dispose()}G(Z),function H(_){const U=(null==_?void 0:_.alpha)||1;if(U>1||U<0)throw new Error(`Alpha value ${U} is suppoed to be in range [0 - 1].`)}(null==W?void 0:W.imageOptions),s.T2.runKernel(E.XmO,{image:Z},{canvas:U,options:W})}const k=(0,h.op)({fromPixels_:d})},75987:(ft,N,t)=>{"use strict";t.d(N,{r:()=>i});var e=t(73444),s=t(26674);function i(E,m="float32",c){return m=m||"float32",s.SA(E),new e.yl(E,m,c)}},92290:(ft,N,t)=>{"use strict";t.d(N,{w:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({cast_:function c(g,h){const f=(0,i.YT)(g,"x","cast");if(!E.xn(h))throw new Error(`Failed to cast to unknown dtype ${h}`);if("string"===h&&"string"!==f.dtype||"string"!==h&&"string"===f.dtype)throw new Error("Only strings can be casted to strings");return e.T2.runKernel(s.KXH,{x:f},{dtype:h})}})},70581:(ft,N,t)=>{"use strict";t.d(N,{z:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(7684);const g=(0,t(87844).op)({clipByValue_:function x(h,f,p){const u=(0,i.YT)(h,"x","clipByValue");return E.vA(f<=p,()=>`Error in clip: min (${f}) must be less than or equal to max (${p}).`),f===p?(0,m.G)(u.shape,f,u.dtype):e.T2.runKernel(s.vaV,{x:u},{clipValueMin:f,clipValueMax:p})}})},61548:(ft,N,t)=>{"use strict";t.d(N,{o:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({clone_:function m(x){const h={x:(0,i.YT)(x,"x","clone","string_or_numeric")};return e.T2.runKernel(s.lzr,h)}})},55349:(ft,N,t)=>{"use strict";t.d(N,{f:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({complex_:function c(g,h){const f=(0,i.YT)(g,"real","complex"),p=(0,i.YT)(h,"imag","complex");return E.O3(f.shape,p.shape,`real and imag shapes, ${f.shape} and ${p.shape}, must match in call to tf.complex().`),e.T2.runKernel(s.pr3,{real:f,imag:p})}})},35213:(ft,N,t)=>{"use strict";t.d(N,{x:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(61548);const g=(0,t(87844).op)({concat_:function x(h,f=0){(0,E.vA)(h.length>=1,()=>"Pass at least one tensor to concat");const p=(0,i.j1)(h,"tensors","concat","string_or_numeric");return"complex64"===p[0].dtype&&p.forEach(C=>{if("complex64"!==C.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${C.dtype}. `)}),1===p.length?(0,m.o)(p[0]):e.T2.runKernel(s.$dB,p,{axis:f})}})},35317:(ft,N,t)=>{"use strict";t.d(N,{I:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat1d_:function i(m){return(0,e.x)(m,0)}})},74810:(ft,N,t)=>{"use strict";t.d(N,{R:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat2d_:function i(m,c){return(0,e.x)(m,c)}})},36183:(ft,N,t)=>{"use strict";t.d(N,{O:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat3d_:function i(m,c){return(0,e.x)(m,c)}})},18380:(ft,N,t)=>{"use strict";t.d(N,{P:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat4d_:function i(m,c){return(0,e.x)(m,c)}})},53054:(ft,N,t)=>{"use strict";t.d(N,{k:()=>g});var e=t(17636),s=t(26674),i=t(12809),E=t(29458),m=t(87844),c=t(94399);const g=(0,m.op)({conv1d_:function x(h,f,p,u,d="NWC",C=1,T){const D=(0,e.YT)(h,"x","conv1d"),S=(0,e.YT)(f,"filter","conv1d");let b=D,w=!1;2===D.rank&&(w=!0,b=(0,c.t)(D,[1,D.shape[0],D.shape[1]])),s.vA(3===b.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${b.rank}.`),s.vA(3===S.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${S.rank}.`),E.s_("conv1d",u,T),s.vA(b.shape[2]===S.shape[1],()=>`Error in conv1d: depth of input (${b.shape[2]}) must match input depth for filter ${S.shape[1]}.`),s.vA(E.G0(p,C),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${p} and dilation '${C}'`),s.vA(E.qk(C),()=>"Error in conv1D: Dilated rates should be larger than 0."),s.vA(E.qk(p),()=>"Error in conv1D: Stride should be larger than 0."),s.vA("NWC"===d,()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`);const G=(0,c.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]]),H=(0,c.t)(b,[b.shape[0],1,b.shape[1],b.shape[2]]),k=(0,i.X)(H,G,[1,p],u,"NHWC",[1,C],T);return(0,c.t)(k,w?[k.shape[2],k.shape[3]]:[k.shape[0],k.shape[2],k.shape[3]])}})},12809:(ft,N,t)=>{"use strict";t.d(N,{X:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(29458),c=t(87844),x=t(94399);const h=(0,c.op)({conv2d_:function g(f,p,u,d,C="NHWC",T=[1,1],D){const S=(0,i.YT)(f,"x","conv2d","float32"),b=(0,i.YT)(p,"filter","conv2d","float32");let w=S,G=!1;3===S.rank&&(G=!0,w=(0,x.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),E.vA(4===w.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${w.rank}.`),E.vA(4===b.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${b.rank}.`),m.s_("conv2d",d,D);const H="NHWC"===C?w.shape[3]:w.shape[1];E.vA(H===b.shape[2],()=>`Error in conv2d: depth of input (${H}) must match input depth for filter ${b.shape[2]}.`),E.vA(m.G0(u,T),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E.vA(m.qk(T),()=>"Error in conv2D: Dilated rates should be larger than 0."),E.vA(m.qk(u),()=>"Error in conv2D: Strides should be larger than 0.");const A=e.T2.runKernel(s.p2J,{x:w,filter:b},{strides:u,pad:d,dataFormat:C,dilations:T,dimRoundingMode:D});return G?(0,x.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},70511:(ft,N,t)=>{"use strict";t.d(N,{H:()=>g});var e=t(611),s=t(30162),i=t(26674),E=t(29458),m=t(87844),c=t(94399);const g=(0,m.op)({conv2DBackpropFilter_:function x(h,f,p,u,d,C="NHWC",T){let D=h;3===h.rank&&(D=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));let S=f;3===S.rank&&(S=(0,c.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),i.vA(4===D.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${D.shape}.`),i.vA(4===S.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${S.shape}.`),i.vA(4===p.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${p}.`);const b="NHWC"===C?D.shape[3]:D.shape[1],w="NHWC"===C?S.shape[3]:S.shape[1];return i.vA(b===p[2],()=>`Error in conv2dDerFilter: depth of input ${b}) must match input depth in filter (${p[2]}.`),i.vA(w===p[3],()=>`Error in conv2dDerFilter: depth of dy (${w}) must match output depth for filter (${p[3]}).`),E.s_("conv2dDerFilter",d,T),e.T2.runKernel(s.rFm,{x:D,dy:S},{strides:u,pad:d,dataFormat:C,dimRoundingMode:T,filterShape:p})}})},73725:(ft,N,t)=>{"use strict";t.d(N,{v:()=>g});var e=t(611),s=t(30162),i=t(26674),E=t(29458),m=t(87844),c=t(94399);const g=(0,m.op)({conv2DBackpropInput_:function x(h,f,p,u,d,C="NHWC",T){i.vA(h.length===f.rank,()=>`Length of inShape (${h.length}) and rank of dy (${f.rank}) must match`);let D=h,S=f,b=!1;3===f.rank&&(b=!0,S=(0,c.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]]),D=[1,h[0],h[1],h[2]]),i.vA(4===D.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${D.length}.`),i.vA(4===S.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${S.rank}`),i.vA(4===p.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${p.rank}`);const w="NHWC"===C?D[3]:D[1],G="NHWC"===C?S.shape[3]:S.shape[1];i.vA(w===p.shape[2],()=>`Error in conv2dDerInput: depth of input (${w}) must match input depth for filter ${p.shape[2]}.`),i.vA(G===p.shape[3],()=>`Error in conv2dDerInput: depth of output (${G}) must match output depth for filter ${p.shape[3]}.`),E.s_("conv2dDerInput",d,T);const B=e.T2.runKernel(s.jfg,{dy:S,filter:p},{strides:u,pad:d,dataFormat:C,dimRoundingMode:T,inputShape:D});return b?(0,c.t)(B,[B.shape[1],B.shape[2],B.shape[3]]):B}})},83521:(ft,N,t)=>{"use strict";t.d(N,{w:()=>m});var e=t(17636),s=t(73725);const m=(0,t(87844).op)({conv2dTranspose_:function E(c,x,g,h,f,p){const u=(0,e.YT)(c,"x","conv2dTranspose"),d=(0,e.YT)(x,"filter","conv2dTranspose");return(0,s.v)(g,u,d,h,f,"NHWC",p)}})},37740:(ft,N,t)=>{"use strict";t.d(N,{I:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(29458),c=t(87844),x=t(94399);const h=(0,c.op)({conv3d_:function g(f,p,u,d,C="NDHWC",T=[1,1,1]){const D=(0,i.YT)(f,"x","conv3d"),S=(0,i.YT)(p,"filter","conv3d");let b=D,w=!1;4===D.rank&&(w=!0,b=(0,x.t)(D,[1,D.shape[0],D.shape[1],D.shape[2],D.shape[3]])),E.vA(5===b.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${b.rank}.`),E.vA(5===S.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${S.rank}.`),E.vA(b.shape[4]===S.shape[3],()=>`Error in conv3d: depth of input (${b.shape[4]}) must match input depth for filter ${S.shape[3]}.`),E.vA((0,m.G0)(u,T),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E.vA("NDHWC"===C,()=>`Error in conv3d: got dataFormat of ${C} but only NDHWC is currently supported.`),E.vA((0,m.qk)(T),()=>"Error in conv3D: Dilated rates should be larger than 0."),E.vA((0,m.qk)(u),()=>"Error in conv3D: Strides should be larger than 0.");const F=e.T2.runKernel(s.A1h,{x:b,filter:S},{strides:u,pad:d,dataFormat:C,dilations:T});return w?(0,x.t)(F,[F.shape[1],F.shape[2],F.shape[3],F.shape[4]]):F}})},87482:(ft,N,t)=>{"use strict";t.d(N,{c:()=>x});var e=t(611),s=t(30162),i=t(26674),E=t(87844),m=t(94399);const x=(0,E.op)({conv3DBackpropInput_:function c(g,h,f,p,u){i.vA(g.length===h.rank,()=>`Length of inShape (${g.length}) and rank of dy (${h.rank}) must match`);let d=g,C=h,T=!1;4===h.rank&&(T=!0,C=(0,m.t)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]]),d=[1,g[0],g[1],g[2],g[3]]);const D=d[4],S=C.shape[4];i.vA(5===d.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${d.length}.`),i.vA(5===C.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${C.rank}`),i.vA(5===f.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${f.rank}`),i.vA(D===f.shape[3],()=>`Error in conv3dDerInput: depth of input (${D}) must match input depth for filter ${f.shape[3]}.`),i.vA(S===f.shape[4],()=>`Error in conv3dDerInput: depth of output (${S}) must match output depth for filter ${f.shape[4]}.`);const G=e.T2.runKernel(s.gC7,{dy:C,filter:f},{pad:u,strides:p,inputShape:d});return T?(0,m.t)(G,[G.shape[1],G.shape[2],G.shape[3],G.shape[4]]):G}})},2772:(ft,N,t)=>{"use strict";t.d(N,{j:()=>m});var e=t(17636),s=t(87482);const m=(0,t(87844).op)({conv3dTranspose_:function E(c,x,g,h,f){const p=(0,e.YT)(c,"x","conv3dTranspose"),u=(0,e.YT)(x,"filter","conv3dTranspose");return(0,s.c)(g,p,u,h,f)}})},29458:(ft,N,t)=>{"use strict";t.d(N,{$Q:()=>w,Dh:()=>D,E6:()=>i,G0:()=>S,G8:()=>h,YQ:()=>s,l5:()=>E,p$:()=>c,qk:()=>b,s_:()=>G,uf:()=>m});var e=t(26674);function s(H,F,B,A,k="NHWC",_){return m(H,[...F,H[3]],B,_,A,null,null,w(k))}function i(H,F,B,A,k,_,U="channelsLast"){const[W,Z]=f(F);let j;if("channelsLast"===U)j=[W,Z,H[3],H[3]];else{if("channelsFirst"!==U)throw new Error(`Unknown dataFormat ${U}`);j=[W,Z,H[1],H[1]]}return m(H,j,B,A,k,_,!1,U)}function E(H,F,B,A,k,_,U="NDHWC"){const[W,Z,j]=p(F);let it,at;if("NDHWC"===U)at="channelsLast",it=[W,Z,j,H[4],H[4]];else{if("NCDHW"!==U)throw new Error(`Unknown dataFormat ${U}`);at="channelsFirst",it=[W,Z,j,H[1],H[1]]}return c(H,it,B,A,k,!1,at,_)}function m(H,F,B,A,k,_,U=!1,W="channelsLast"){let[Z,j,it,at]=[-1,-1,-1,-1];if("channelsLast"===W)[Z,j,it,at]=H;else{if("channelsFirst"!==W)throw new Error(`Unknown dataFormat ${W}`);[Z,at,j,it]=H}const[J,ot,,rt]=F,[tt,Tt]=f(B),[Et,At]=f(A),oe=u(J,Et),Gt=u(ot,At),{padInfo:ce,outHeight:Jt,outWidth:ue}=function d(H,F,B,A,k,_,U,W,Z){let j,it,at;if("number"==typeof H){j={top:H,bottom:H,left:H,right:H,type:0===H?"VALID":"NUMBER"};const ot=function x(H,F,B,A,k){null==A&&(A=h(H,F,B));const U=H[1];return[T((H[0]-F+2*A)/B+1,k),T((U-F+2*A)/B+1,k)]}([F,B],_,A,H,W);it=ot[0],at=ot[1]}else if("same"===H){it=Math.ceil(F/A),at=Math.ceil(B/k);const J=Math.max(0,(it-1)*A+_-F),ot=Math.max(0,(at-1)*k+U-B),rt=Math.floor(J/2),tt=J-rt,Tt=Math.floor(ot/2);j={top:rt,bottom:tt,left:Tt,right:ot-Tt,type:"SAME"}}else if("valid"===H)j={top:0,bottom:0,left:0,right:0,type:"VALID"},it=Math.ceil((F-_+1)/A),at=Math.ceil((B-U+1)/k);else{if("object"!=typeof H)throw Error(`Unknown padding parameter: ${H}`);{const J="channelsLast"===Z?H[1][0]:H[2][0],ot="channelsLast"===Z?H[1][1]:H[2][1],rt="channelsLast"===Z?H[2][0]:H[3][0],tt="channelsLast"===Z?H[2][1]:H[3][1];j={top:J,bottom:ot,left:rt,right:tt,type:0===J&&0===ot&&0===rt&&0===tt?"VALID":"EXPLICIT"},it=T((F-_+J+ot)/A+1,W),at=T((B-U+rt+tt)/k+1,W)}}return{padInfo:j,outHeight:it,outWidth:at}}(k,j,it,tt,Tt,oe,Gt,_,W),ie=U?rt*at:rt;let re;return"channelsFirst"===W?re=[Z,ie,Jt,ue]:"channelsLast"===W&&(re=[Z,Jt,ue,ie]),{batchSize:Z,dataFormat:W,inHeight:j,inWidth:it,inChannels:at,outHeight:Jt,outWidth:ue,outChannels:ie,padInfo:ce,strideHeight:tt,strideWidth:Tt,filterHeight:J,filterWidth:ot,effectiveFilterHeight:oe,effectiveFilterWidth:Gt,dilationHeight:Et,dilationWidth:At,inShape:H,outShape:re,filterShape:F}}function c(H,F,B,A,k,_=!1,U="channelsLast",W){let[Z,j,it,at,J]=[-1,-1,-1,-1,-1];if("channelsLast"===U)[Z,j,it,at,J]=H;else{if("channelsFirst"!==U)throw new Error(`Unknown dataFormat ${U}`);[Z,J,j,it,at]=H}const[ot,rt,tt,,Tt]=F,[Et,At,oe]=p(B),[Gt,ce,Jt]=p(A),ue=u(ot,Gt),ie=u(rt,ce),re=u(tt,Jt),{padInfo:Se,outDepth:Oe,outHeight:Dt,outWidth:Kt}=function C(H,F,B,A,k,_,U,W,Z,j,it){let at,J,ot,rt;if("valid"===H&&(H=0),"number"==typeof H){at={top:H,bottom:H,left:H,right:H,front:H,back:H,type:0===H?"VALID":"NUMBER"};const Tt=function g(H,F,B,A,k,_){null==k&&(k=h(H,F[0],A[0]));const U=[0,0,0,B];for(let W=0;W<3;W++)H[W]+2*k>=F[W]&&(U[W]=T((H[W]-F[W]+2*k)/A[W]+1,_));return U}([F,B,A,1],[W,Z,j],1,[k,_,U],H,it);J=Tt[0],ot=Tt[1],rt=Tt[2]}else{if("same"!==H)throw Error(`Unknown padding parameter: ${H}`);{J=Math.ceil(F/k),ot=Math.ceil(B/_),rt=Math.ceil(A/U);const tt=(J-1)*k+W-F,Tt=(ot-1)*_+Z-B,Et=(rt-1)*U+j-A,At=Math.floor(tt/2),oe=tt-At,Gt=Math.floor(Tt/2),ce=Tt-Gt,Jt=Math.floor(Et/2);at={top:Gt,bottom:ce,left:Jt,right:Et-Jt,front:At,back:oe,type:"SAME"}}}return{padInfo:at,outDepth:J,outHeight:ot,outWidth:rt}}(k,j,it,at,Et,At,oe,ue,ie,re,W),te=_?Tt*J:Tt;let he;return"channelsFirst"===U?he=[Z,te,Oe,Dt,Kt]:"channelsLast"===U&&(he=[Z,Oe,Dt,Kt,te]),{batchSize:Z,dataFormat:U,inDepth:j,inHeight:it,inWidth:at,inChannels:J,outDepth:Oe,outHeight:Dt,outWidth:Kt,outChannels:te,padInfo:Se,strideDepth:Et,strideHeight:At,strideWidth:oe,filterDepth:ot,filterHeight:rt,filterWidth:tt,effectiveFilterDepth:ue,effectiveFilterHeight:ie,effectiveFilterWidth:re,dilationDepth:Gt,dilationHeight:ce,dilationWidth:Jt,inShape:H,outShape:he,filterShape:F}}function h(H,F,B,A=1){const k=u(F,A);return Math.floor((H[0]*(B-1)-B+k)/2)}function f(H){return"number"==typeof H?[H,H,H]:2===H.length?[H[0],H[1],1]:H}function p(H){return"number"==typeof H?[H,H,H]:H}function u(H,F){return F<=1?H:H+(H-1)*(F-1)}function T(H,F){if(!F)return Math.trunc(H);switch(F){case"round":return Math.round(H);case"ceil":return Math.ceil(H);case"floor":return Math.floor(H);default:throw new Error(`Unknown roundingMode ${F}`)}}function D(H){const[F,B,A]=f(H);return 1===F&&1===B&&1===A}function S(H,F){return D(H)||D(F)}function b(H){return f(H).every(F=>F>0)}function w(H){if("NHWC"===H)return"channelsLast";if("NCHW"===H)return"channelsFirst";throw new Error(`Unknown dataFormat ${H}`)}function G(H,F,B){if(null!=B){if("string"==typeof F)throw Error(`Error in ${H}: pad must be an integer when using dimRoundingMode ${B} but got pad ${F}.`);if("number"==typeof F)e.vA(e.E6(F),()=>`Error in ${H}: pad must be an integer when using dimRoundingMode ${B} but got pad ${F}.`);else{if("object"!=typeof F)throw Error(`Error in ${H}: Unknown padding parameter: ${F}`);F.forEach(A=>{A.forEach(k=>{e.vA(e.E6(k),()=>`Error in ${H}: pad must be an integer when using dimRoundingMode ${B} but got pad ${k}.`)})})}}}},54758:(ft,N,t)=>{"use strict";t.d(N,{g:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({cos_:function m(x){const h={x:(0,i.YT)(x,"x","cos","float32")};return e.T2.runKernel(s.Mn0,h)}})},12076:(ft,N,t)=>{"use strict";t.d(N,{y:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({cosh_:function m(x){const h={x:(0,i.YT)(x,"x","cosh","float32")};return e.T2.runKernel(s.MnK,h)}})},63371:(ft,N,t)=>{"use strict";t.d(N,{L:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({cumprod_:function m(x,g=0,h=!1,f=!1){const u={x:(0,i.YT)(x,"x","cumprod")};return e.T2.runKernel(s.jj_,u,{axis:g,exclusive:h,reverse:f})}})},28799:(ft,N,t)=>{"use strict";t.d(N,{r:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({cumsum_:function m(x,g=0,h=!1,f=!1){const u={x:(0,i.YT)(x,"x","cumsum")};return e.T2.runKernel(s.nY8,u,{axis:g,exclusive:h,reverse:f})}})},26193:(ft,N,t)=>{"use strict";t.d(N,{a:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({denseBincount_:function c(g,h,f,p=!1){const u=(0,i.YT)(g,"x","denseBincount"),d=(0,i.YT)(h,"weights","denseBincount");return E.vA("int32"===u.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`),E.vA(u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),E.vA(f>=0,()=>`size must be non-negative, but got ${f}.`),E.vA(d.size===u.size||0===d.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${d.shape}.`),e.T2.runKernel(s.wNW,{x:u,weights:d},{size:f,binaryOutput:p})}})},73595:(ft,N,t)=>{"use strict";t.d(N,{G:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(29458),c=t(87844),x=t(94399);const h=(0,c.op)({depthwiseConv2d_:function g(f,p,u,d,C="NHWC",T=[1,1],D){const S=(0,i.YT)(f,"x","depthwiseConv2d","float32"),b=(0,i.YT)(p,"filter","depthwiseConv2d","float32");let w=S,G=!1;3===S.rank&&(G=!0,w=(0,x.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),E.vA(4===w.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${w.rank}.`),E.vA(4===b.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`);const H="NHWC"===C?w.shape[3]:w.shape[1];E.vA(H===b.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${H}) must match the inChannels dimension in filter ${b.shape[2]}.`),m.s_("depthwiseConv2d",d,D);const A=e.T2.runKernel(s.tGH,{x:w,filter:b},{strides:u,pad:d,dataFormat:C,dilations:T,dimRoundingMode:D});return G?(0,x.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},60455:(ft,N,t)=>{"use strict";t.d(N,{x:()=>c});var e=t(611),s=t(30162),i=t(87844),E=t(94399);const c=(0,i.op)({depthwiseConv2dNativeBackpropFilter_:function m(x,g,h,f,p,u=[1,1],d){let C=x;3===x.rank&&(C=(0,E.t)(x,[1,x.shape[0],x.shape[1],x.shape[2]]));let T=g;return 3===T.rank&&(T=(0,E.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),e.T2.runKernel(s.X$8,{x:C,dy:T},{strides:f,pad:p,dimRoundingMode:d,dilations:u,filterShape:h})}})},43749:(ft,N,t)=>{"use strict";t.d(N,{l:()=>c});var e=t(611),s=t(30162),i=t(87844),E=t(94399);const c=(0,i.op)({depthwiseConv2dNativeBackpropInput_:function m(x,g,h,f,p,u=[1,1],d){let C=g,T=!1;3===g.rank&&(T=!0,C=(0,E.t)(g,[1,g.shape[0],g.shape[1],g.shape[2]]));const b=e.T2.runKernel(s.nVu,{dy:C,filter:h},{strides:f,pad:p,dimRoundingMode:d,dilations:u,inputShape:x});return T?(0,E.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},4350:(ft,N,t)=>{"use strict";t.d(N,{y:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(34316);const g=(0,t(87844).op)({div_:function x(h,f){let p=(0,E.YT)(h,"a","div"),u=(0,E.YT)(f,"b","div");return[p,u]=(0,i.makeTypesMatch)(p,u),"int32"===p.dtype&&"int32"===u.dtype?(0,m.w)(p,u):e.T2.runKernel(s.sDr,{a:p,b:u},{})}})},45733:(ft,N,t)=>{"use strict";t.d(N,{E:()=>u});var e=t(73444),s=t(17636),i=t(26674),E=t(83034),m=t(4350),x=t(41467),g=t(59731),h=t(87844),f=t(65413);const u=(0,h.op)({dropout_:function p(d,C,T,D){const S=(0,s.YT)(d,"x","dropout");if(i.vA("float32"===S.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${S.dtype} tensor instead.`),i.vA(C>=0&&C<1,()=>`rate must be a float in the range [0, 1), but got ${C}.`),0===C)return d instanceof e.qY?S.clone():S;const b=function c(d,C){if(null==C)return d.shape.slice();if(i.r1(d.shape,C))return C;if(d.shape.length===C.length){const T=[];for(let D=0;D<d.shape.length;D++)T.push(null==C[D]&&null!=d.shape[D]?d.shape[D]:C[D]);return T}return C}(S,T),w=1-C,G=(0,m.y)((0,x.R)((0,E.W)((0,f.Y)(b,0,1,"float32",D),w)),w);return(0,g.l)(S,G)}})},41325:(ft,N,t)=>{"use strict";t.d(N,{P:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({elu_:function m(x){const h={x:(0,i.YT)(x,"x","elu","float32")};return e.T2.runKernel(s.Pah,h)}})},68833:(ft,N,t)=>{"use strict";t.d(N,{L:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({equal_:function x(h,f){let p=(0,E.YT)(h,"a","equal","string_or_numeric"),u=(0,E.YT)(f,"b","equal","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.BRl,{a:p,b:u})}})},78650:(ft,N,t)=>{"use strict";t.d(N,{Y:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(92290);const g=(0,t(87844).op)({erf_:function x(h){let f=(0,i.YT)(h,"x","erf");return E.vA("int32"===f.dtype||"float32"===f.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===f.dtype&&(f=(0,m.w)(f,"float32")),e.T2.runKernel(s._s9,{x:f})}})},68326:(ft,N,t)=>{"use strict";t.d(N,{o:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({exp_:function m(x){const h={x:(0,i.YT)(x,"x","exp")};return e.T2.runKernel(s.ox3,h)}})},42103:(ft,N,t)=>{"use strict";t.d(N,{U:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({expandDims_:function c(g,h=0){const f=(0,i.YT)(g,"x","expandDims","string_or_numeric");return E.vA(h<=f.rank,()=>"Axis must be <= rank of the tensor"),e.T2.runKernel(s.ybN,{input:f},{dim:h})}})},45104:(ft,N,t)=>{"use strict";t.d(N,{y:()=>x});var e=t(75987),s=t(42103),i=t(87844),E=t(94399),m=t(36409);const x=(0,i.op)({eye_:function c(g,h,f,p="float32"){null==h&&(h=g);const u=(0,e.r)([g,h],p),d=g<=h?g:h;for(let T=0;T<d;++T)u.set(1,T,T);const C=(0,E.t)(u.toTensor(),[g,h]);if(null==f)return C;if(1===f.length)return(0,m.V)((0,s.U)(C,0),[f[0],1,1]);if(2===f.length)return(0,m.V)((0,s.U)((0,s.U)(C,0),0),[f[0],f[1],1,1]);if(3===f.length)return(0,m.V)((0,s.U)((0,s.U)((0,s.U)(C,0),0),0),[f[0],f[1],f[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${f.length}D.`)}})},7684:(ft,N,t)=>{"use strict";t.d(N,{G:()=>E});var e=t(611),s=t(30162),i=t(26674);function E(m,c,x){return(0,i.SA)(m),x=x||(0,i.X$)(c),e.T2.runKernel(s.SQl,{},{shape:m,value:c,dtype:x})}},41467:(ft,N,t)=>{"use strict";t.d(N,{R:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({floor_:function m(x){const h={x:(0,i.YT)(x,"x","floor","float32")};return e.T2.runKernel(s.ZgB,h)}})},34316:(ft,N,t)=>{"use strict";t.d(N,{w:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({floorDiv_:function c(g,h){let f=(0,E.YT)(g,"a","floorDiv"),p=(0,E.YT)(h,"b","floorDiv");return[f,p]=(0,i.makeTypesMatch)(f,p),e.T2.runKernel(s.ElG,{a:f,b:p})}})},63552:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{conv2d:()=>S,depthwiseConv2d:()=>F,matMul:()=>k});var e=t(611),s=t(22047),i=t(30162),E=t(14548),m=t(17636),c=t(26674),x=t(83034),g=t(9269),h=t(12809),f=t(70511),p=t(73725),u=t(29458),d=t(14145),C=t(87844),T=t(94399);const S=(0,C.op)({fusedConv2d_:function D({x:_,filter:U,strides:W,pad:Z,dataFormat:j="NHWC",dilations:it=[1,1],dimRoundingMode:at,bias:J,activation:ot="linear",preluActivationWeights:rt,leakyreluAlpha:tt}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,ot=ot||"linear")){c.vA("NHWC"===j,()=>`Error in fused conv2d: got dataFormat of ${j} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let Oe=(0,h.X)(_,U,W,Z,j,it,at);return null!=J&&(Oe=(0,x.W)(Oe,J)),(0,d.f2)(Oe,ot,rt,tt)}const Tt=(0,m.YT)(_,"x","conv2d","float32"),Et=(0,m.YT)(U,"filter","conv2d","float32");let At=Tt,oe=!1;3===Tt.rank&&(oe=!0,At=(0,T.t)(Tt,[1,Tt.shape[0],Tt.shape[1],Tt.shape[2]])),c.vA(4===At.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${At.rank}.`),c.vA(4===Et.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${Et.rank}.`),u.s_("fused conv2d",Z,at);const Gt="NHWC"===j?At.shape[3]:At.shape[1];c.vA(Et.shape[2]===Gt,()=>`Error in conv2d: depth of input (${Gt}) must match input depth for filter ${Et.shape[2]}.`),c.vA(u.G0(W,it),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${W} and dilations '${it}'`);const ce=u.uf(At.shape,Et.shape,W,it,Z,at);let Jt,ue;if(null!=J&&(Jt=(0,m.YT)(J,"bias","fused conv2d"),[Jt]=(0,E.makeTypesMatch)(Jt,Tt),"NHWC"===j?g.assertAndGetBroadcastShape(ce.outShape,Jt.shape):(c.vA(Jt.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${Jt.shape.length}.`),c.vA(0===Jt.shape.length||Jt.shape[0]===ce.outChannels||1===Jt.shape[0],()=>`Error in fused conv2d: bias shape (${Jt.shape}) is not compatible with the number of output channels (${ce.outChannels})`))),null!=rt){const Oe=rt.shape;if(c.vA(Oe.length<=1||3===Oe.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${Oe.length}.`),1===Oe.length)c.vA(1===Oe[0]||Oe[0]===ce.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${Oe}) is not compatible with the number of output channels (${ce.outChannels}).`);else if(3===Oe.length)try{g.assertAndGetBroadcastShape(Oe,ce.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${Oe}) is not compatible with the output shape of the conv2d (${ce.outShape}).`)}ue=(0,m.YT)(rt,"prelu weights","fused conv2d")}const ie=(Oe,Dt)=>{c.vA("NHWC"===j,()=>`Error in gradient of fused conv2D: got dataFormat of ${j} but only NHWC is currently supported.`);const[Kt,te,he,Ke]=Dt,on=(0,d.XB)(Oe,he,ot);c.vA(u.Dh(it),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${it}'`);const dn=[(0,p.v)(te.shape,on,Kt,W,Z),(0,f.H)(te,on,Kt.shape,W,Z)];if(null!=Ke){const $n=(0,d.Do)(Ke,on);dn.push($n)}return dn},re={x:At,filter:Et,bias:Jt,preluActivationWeights:ue},Se={strides:W,pad:Z,dataFormat:j,dilations:it,dimRoundingMode:at,activation:ot,leakyreluAlpha:tt};return null==J?(0,s._X)((Dt,Kt,te)=>{let he=e.T2.runKernel(i.aAr,re,Se);return te([Kt,Dt,he]),oe&&(he=(0,T.t)(he,[he.shape[1],he.shape[2],he.shape[3]])),{value:he,gradFunc:ie}})(At,Et):(0,s._X)((Dt,Kt,te,he)=>{let Ke=e.T2.runKernel(i.aAr,re,Se);return he([Kt,Dt,Ke,te]),oe&&(Ke=(0,T.t)(Ke,[Ke.shape[1],Ke.shape[2],Ke.shape[3]])),{value:Ke,gradFunc:ie}})(At,Et,Jt)}});var b=t(73595),w=t(60455),G=t(43749);const F=(0,C.op)({fusedDepthwiseConv2d_:function H({x:_,filter:U,strides:W,pad:Z,dataFormat:j="NHWC",dilations:it=[1,1],dimRoundingMode:at,bias:J,activation:ot="linear",preluActivationWeights:rt,leakyreluAlpha:tt}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,ot)){let Se=(0,b.G)(_,U,W,Z,j,it,at);return null!=J&&(Se=(0,x.W)(Se,J)),(0,d.f2)(Se,ot,rt,tt)}const Tt=(0,m.YT)(_,"x","depthwiseConv2d","float32"),Et=(0,m.YT)(U,"filter","depthwiseConv2d","float32");let At=Tt,oe=!1;3===Tt.rank&&(oe=!0,At=(0,T.t)(Tt,[1,Tt.shape[0],Tt.shape[1],Tt.shape[2]])),c.vA(4===At.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${At.rank}.`),c.vA(4===Et.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${Et.rank}.`),c.vA(At.shape[3]===Et.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${At.shape[3]}) must match the inChannels dimension in filter ${Et.shape[2]}.`),null==it&&(it=[1,1]),c.vA(u.G0(W,it),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${W} and dilations '${it}'`),u.s_("fused depthwiseConv2d",Z,at);const Gt=u.uf(At.shape,Et.shape,W,it,Z,at,!0);let ce,Jt;null!=J&&(ce=(0,m.YT)(J,"bias","fused conv2d"),[ce]=(0,E.makeTypesMatch)(ce,Tt),g.assertAndGetBroadcastShape(Gt.outShape,ce.shape)),null!=rt&&(Jt=(0,m.YT)(rt,"prelu weights","fused depthwiseConv2d"));const ue=(Se,Oe)=>{c.vA(u.Dh(it),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${it}'`);const[Dt,Kt,te,he]=Oe,Ke=(0,d.XB)(Se,te,ot),on=(0,G.l)(Kt.shape,Ke,Dt,W,Z,it,at),vn=(0,w.x)(Kt,Ke,Dt.shape,W,Z,it,at);return null!=he?[on,vn,(0,d.Do)(ce,Ke)]:[on,vn]},ie={x:At,filter:Et,bias:ce,preluActivationWeights:Jt},re={strides:W,pad:Z,dataFormat:j,dilations:it,dimRoundingMode:at,activation:ot,leakyreluAlpha:tt};return null==J?(0,s._X)((Oe,Dt,Kt)=>{let te=e.T2.runKernel(i.T7M,ie,re);return Kt([Dt,Oe,te]),oe&&(te=(0,T.t)(te,[te.shape[1],te.shape[2],te.shape[3]])),{value:te,gradFunc:ue}})(At,Et):(0,s._X)((Oe,Dt,Kt,te)=>{let he=e.T2.runKernel(i.T7M,ie,re);return te([Dt,Oe,he,Kt]),oe&&(he=(0,T.t)(he,[he.shape[1],he.shape[2],he.shape[3]])),{value:he,gradFunc:ue}})(At,Et,ce)}});var B=t(60314);const k=(0,C.op)({fusedMatMul_:function A({a:_,b:U,transposeA:W=!1,transposeB:Z=!1,bias:j,activation:it="linear",preluActivationWeights:at,leakyreluAlpha:J=.2}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,it)){let Ke=(0,B.N)(_,U,W,Z);return null!=j&&(Ke=(0,x.W)(Ke,j)),(0,d.f2)(Ke,it,at,J)}let ot=(0,m.YT)(_,"a","fused matMul"),rt=(0,m.YT)(U,"b","fused matMul");[ot,rt]=(0,E.makeTypesMatch)(ot,rt);const tt=W?ot.shape[ot.rank-2]:ot.shape[ot.rank-1],Tt=Z?rt.shape[rt.rank-1]:rt.shape[rt.rank-2],Et=W?ot.shape[ot.rank-1]:ot.shape[ot.rank-2],At=Z?rt.shape[rt.rank-2]:rt.shape[rt.rank-1],oe=ot.shape.slice(0,-2),Gt=rt.shape.slice(0,-2),ce=c.Ze(oe),Jt=c.Ze(Gt);c.vA(tt===Tt,()=>`Error in fused matMul: inner shapes (${tt}) and (${Tt}) of Tensors with shapes ${ot.shape} and ${rt.shape} and transposeA=${W} and transposeB=${Z} must match.`);const ie=g.assertAndGetBroadcastShape(ot.shape.slice(0,-2),rt.shape.slice(0,-2)).concat([Et,At]),re=(0,T.t)(ot,W?[ce,tt,Et]:[ce,Et,tt]),Se=(0,T.t)(rt,Z?[Jt,At,Tt]:[Jt,Tt,At]);let Oe,Dt;null!=j&&(Oe=(0,m.YT)(j,"bias","fused matMul"),[Oe]=(0,E.makeTypesMatch)(Oe,ot),g.assertAndGetBroadcastShape(ie,Oe.shape)),null!=at&&(Dt=(0,m.YT)(at,"prelu weights","fused matMul"));const Kt=(Ke,on)=>{const[vn,fn,dn,$n]=on,wn=(0,d.XB)((0,T.t)(Ke,dn.shape),dn,it);let zn,Gn;return W||Z?!W&&Z?(zn=(0,B.N)(wn,fn,!1,!1),Gn=(0,B.N)(wn,vn,!0,!1)):W&&!Z?(zn=(0,B.N)(fn,wn,!1,!0),Gn=(0,B.N)(vn,wn,!1,!1)):(zn=(0,B.N)(fn,wn,!0,!0),Gn=(0,B.N)(wn,vn,!0,!0)):(zn=(0,B.N)(wn,fn,!1,!0),Gn=(0,B.N)(vn,wn,!0,!1)),null!=j?[zn,Gn,(0,d.Do)($n,wn)]:[zn,Gn]},te={a:re,b:Se,bias:Oe,preluActivationWeights:Dt},he={transposeA:W,transposeB:Z,activation:it,leakyreluAlpha:J};return null==j?(0,s._X)((on,vn,fn)=>{const dn=e.T2.runKernel(i.Dr,te,he);return fn([on,vn,dn]),{value:(0,T.t)(dn,ie),gradFunc:Kt}})(re,Se):(0,s._X)((on,vn,fn,dn)=>{const $n=e.T2.runKernel(i.Dr,te,he);return dn([on,vn,$n,fn]),{value:(0,T.t)($n,ie),gradFunc:Kt}})(re,Se,Oe)}})},14145:(ft,N,t)=>{"use strict";t.d(N,{Do:()=>d,XB:()=>u,f2:()=>C,zE:()=>T});var e=t(9269),s=t(41325),i=t(93580),E=t(59731),m=t(62655),c=t(98611),x=t(55065),g=t(94399),h=t(53205),f=t(72079),p=t(66342);function u(D,S,b){if(null==b||"linear"===b)return D;if("relu"===b)return(0,E.l)(D,(0,f.P)(S));throw new Error(`Cannot compute gradient for fused activation ${b}.`)}function d(D,S){let b=S;const w=e.getReductionAxes(D.shape,S.shape);return w.length>0&&(b=(0,p.c)(b,w)),(0,g.t)(b,D.shape)}function C(D,S,b,w){if("linear"===S)return D;if("relu"===S)return(0,c.V)(D);if("elu"===S)return(0,s.P)(D);if("relu6"===S)return(0,x.j)(D);if("prelu"===S)return(0,m.N)(D,b);if("leakyrelu"===S)return(0,i.H)(D,w);if("sigmoid"===S)return(0,h.r)(D);throw new Error(`Unknown fused activation ${S}.`)}const T=(D,S)=>!(D>0)||"linear"===S},38837:(ft,N,t)=>{"use strict";t.d(N,{k:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({gather_:function m(x,g,h=0,f=0){const p=(0,i.YT)(x,"x","gather"),u=(0,i.YT)(g,"indices","gather","int32");return e.T2.runKernel(s.mxL,{x:p,indices:u},{axis:h,batchDims:f})}})},54807:(ft,N,t)=>{"use strict";t.d(N,{r:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({greater_:function x(h,f){let p=(0,E.YT)(h,"a","greater","string_or_numeric"),u=(0,E.YT)(f,"b","greater","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.XhZ,{a:p,b:u})}})},94300:(ft,N,t)=>{"use strict";t.d(N,{D:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({greaterEqual_:function x(h,f){let p=(0,E.YT)(h,"a","greaterEqual","string_or_numeric"),u=(0,E.YT)(f,"b","greaterEqual","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.lLS,{a:p,b:u})}})},62823:(ft,N,t)=>{"use strict";t.d(N,{n:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({imag_:function m(x){const h={input:(0,i.YT)(x,"input","imag")};return e.T2.runKernel(s.dv8,h)}})},27958:(ft,N,t)=>{"use strict";t.d(N,{C:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({cropAndResize_:function c(g,h,f,p,u="bilinear",d=0){const C=(0,i.YT)(g,"image","cropAndResize"),T=(0,i.YT)(h,"boxes","cropAndResize","float32"),D=(0,i.YT)(f,"boxInd","cropAndResize","int32"),S=T.shape[0];return E.vA(4===C.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${C.rank}.`),E.vA(2===T.rank&&4===T.shape[1],()=>`Error in cropAndResize: boxes must be have size [${S},4] but had shape ${T.shape}.`),E.vA(1===D.rank&&D.shape[0]===S,()=>`Error in cropAndResize: boxInd must be have size [${S}] but had shape ${T.shape}.`),E.vA(2===p.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${p.length}.`),E.vA(p[0]>=1&&p[1]>=1,()=>`cropSize must be atleast [1,1], but was ${p}`),E.vA("bilinear"===u||"nearest"===u,()=>`method must be bilinear or nearest, but was ${u}`),e.T2.runKernel(s.MRQ,{image:C,boxes:T,boxInd:D},{method:u,extrapolationValue:d,cropSize:p})}})},99587:(ft,N,t)=>{"use strict";t.d(N,{n:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({flipLeftRight_:function c(g){const h=(0,i.YT)(g,"image","flipLeftRight","float32");return E.vA(4===h.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${h.rank}.`),e.T2.runKernel(s.BxF,{image:h},{})}})},60926:(ft,N,t)=>{"use strict";t.d(N,{C:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(36409);const c=(0,i.op)({grayscaleToRGB_:function m(x){const g=(0,e.YT)(x,"image","grayscaleToRGB"),h=g.rank-1,f=g.shape[h];s.vA(g.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${g.rank}.`),s.vA(1===f,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${f}.`);const p=new Array(g.rank);return p.fill(1,0,h),p[h]=3,(0,E.V)(g,p)}})},30561:(ft,N,t)=>{"use strict";t.d(N,{L:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(30081);const x=(0,t(87844).op)({nonMaxSuppression_:function c(g,h,f,p=.5,u=Number.NEGATIVE_INFINITY){const d=(0,i.YT)(g,"boxes","nonMaxSuppression","float32"),C=(0,i.YT)(h,"scores","nonMaxSuppression","float32"),T=(0,E.W)(d,C,f,p,u);return e.T2.runKernel(s.SDM,{boxes:d,scores:C},{maxOutputSize:f=T.maxOutputSize,iouThreshold:p=T.iouThreshold,scoreThreshold:u=T.scoreThreshold})}})},50110:(ft,N,t)=>{"use strict";t.d(N,{z:()=>g});var e=t(10467),s=t(64857),i=t(17636),E=t(30081),m=t(48449);function x(){return(x=(0,e.A)(function*(h,f,p,u=.5,d=Number.NEGATIVE_INFINITY){const C=(0,i.YT)(h,"boxes","nonMaxSuppressionAsync"),T=(0,i.YT)(f,"scores","nonMaxSuppressionAsync"),D=(0,E.W)(C,T,p,u,d);p=D.maxOutputSize,u=D.iouThreshold,d=D.scoreThreshold;const S=yield Promise.all([C.data(),T.data()]),b=S[0],w=S[1],{selectedIndices:G}=(0,s.c7)(b,w,p,u,d);return C!==h&&C.dispose(),T!==f&&T.dispose(),(0,m.t)(G,"int32")})).apply(this,arguments)}const g=function c(h,f,p){return x.apply(this,arguments)}},4594:(ft,N,t)=>{"use strict";t.d(N,{H:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(30081);const x=(0,t(87844).op)({nonMaxSuppressionPadded_:function c(g,h,f,p=.5,u=Number.NEGATIVE_INFINITY,d=!1){const C=(0,i.YT)(g,"boxes","nonMaxSuppression"),T=(0,i.YT)(h,"scores","nonMaxSuppression"),D=(0,E.W)(C,T,f,p,u,null),F=e.T2.runKernel(s.Zl4,{boxes:C,scores:T},{maxOutputSize:D.maxOutputSize,iouThreshold:D.iouThreshold,scoreThreshold:D.scoreThreshold,padToMaxOutputSize:d});return{selectedIndices:F[0],validOutputs:F[1]}}})},33601:(ft,N,t)=>{"use strict";t.d(N,{R:()=>h});var e=t(10467),s=t(64857),i=t(17636),E=t(30081),m=t(10829),c=t(48449);function g(){return(g=(0,e.A)(function*(f,p,u,d=.5,C=Number.NEGATIVE_INFINITY,T=!1){const D=(0,i.YT)(f,"boxes","nonMaxSuppressionAsync"),S=(0,i.YT)(p,"scores","nonMaxSuppressionAsync"),b=(0,E.W)(D,S,u,d,C,null),w=b.maxOutputSize,G=b.iouThreshold,H=b.scoreThreshold,[F,B]=yield Promise.all([D.data(),S.data()]),{selectedIndices:A,validOutputs:k}=(0,s.ZS)(F,B,w,G,H,T);return D!==f&&D.dispose(),S!==p&&S.dispose(),{selectedIndices:(0,c.t)(A,"int32"),validOutputs:(0,m.d)(k,"int32")}})).apply(this,arguments)}const h=function x(f,p,u){return g.apply(this,arguments)}},31393:(ft,N,t)=>{"use strict";t.d(N,{f:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(30081);const x=(0,t(87844).op)({nonMaxSuppressionWithScore_:function c(g,h,f,p=.5,u=Number.NEGATIVE_INFINITY,d=0){const C=(0,i.YT)(g,"boxes","nonMaxSuppression"),T=(0,i.YT)(h,"scores","nonMaxSuppression"),D=(0,E.W)(C,T,f,p,u,d),w=e.T2.runKernel(s.e0f,{boxes:C,scores:T},{maxOutputSize:f=D.maxOutputSize,iouThreshold:p=D.iouThreshold,scoreThreshold:u=D.scoreThreshold,softNmsSigma:d=D.softNmsSigma});return{selectedIndices:w[0],selectedScores:w[1]}}})},47774:(ft,N,t)=>{"use strict";t.d(N,{l:()=>g});var e=t(10467),s=t(64857),i=t(17636),E=t(30081),m=t(48449);function x(){return(x=(0,e.A)(function*(h,f,p,u=.5,d=Number.NEGATIVE_INFINITY,C=0){const T=(0,i.YT)(h,"boxes","nonMaxSuppressionAsync"),D=(0,i.YT)(f,"scores","nonMaxSuppressionAsync"),S=(0,E.W)(T,D,p,u,d,C);p=S.maxOutputSize,u=S.iouThreshold,d=S.scoreThreshold,C=S.softNmsSigma;const b=yield Promise.all([T.data(),D.data()]),w=b[0],G=b[1],{selectedIndices:H,selectedScores:F}=(0,s.ut)(w,G,p,u,d,C);return T!==h&&T.dispose(),D!==f&&D.dispose(),{selectedIndices:(0,m.t)(H,"int32"),selectedScores:(0,m.t)(F)}})).apply(this,arguments)}const g=function c(h,f,p){return x.apply(this,arguments)}},26486:(ft,N,t)=>{"use strict";t.d(N,{v:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(87844),c=t(94399);const g=(0,m.op)({resizeBilinear_:function x(h,f,p=!1,u=!1){const d=(0,i.YT)(h,"images","resizeBilinear");E.vA(3===d.rank||4===d.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${d.rank}.`),E.vA(2===f.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${f}.`),E.vA(!1===u||!1===p,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let C=d,T=!1;3===d.rank&&(T=!0,C=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const[]=f,b=e.T2.runKernel(s.hgw,{images:C},{alignCorners:p,halfPixelCenters:u,size:f});return T?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},91719:(ft,N,t)=>{"use strict";t.d(N,{b:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(87844),c=t(94399);const g=(0,m.op)({resizeNearestNeighbor_:function x(h,f,p=!1,u=!1){const d=(0,i.YT)(h,"images","resizeNearestNeighbor");E.vA(3===d.rank||4===d.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${d.rank}.`),E.vA(2===f.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${f}.`),E.vA("float32"===d.dtype||"int32"===d.dtype,()=>"`images` must have `int32` or `float32` as dtype"),E.vA(!1===u||!1===p,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let C=d,T=!1;3===d.rank&&(T=!0,C=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const[]=f,b=e.T2.runKernel(s.jOE,{images:C},{alignCorners:p,halfPixelCenters:u,size:f});return T?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},70644:(ft,N,t)=>{"use strict";t.d(N,{S:()=>u});var e=t(17636),s=t(26674),i=t(92290),E=t(611),m=t(30162),c=t(87844);const g=(0,c.op)({einsum_:function x(d,...C){const T=C.map((S,b)=>(0,e.YT)(S,`tensors${b}`,"einsum"));return E.T2.runKernel(m.Qgm,T,{equation:d})}});var h=t(42103),f=t(48449);const u=(0,c.op)({rgbToGrayscale_:function p(d){const C=(0,e.YT)(d,"image","RGBToGrayscale"),D=C.shape[C.rank-1];s.vA(C.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${C.rank}.`),s.vA(3===D,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${D}.`);const S=C.dtype,b=(0,i.w)(C,"float32"),w=(0,f.t)([.2989,.587,.114]);let G;switch(C.rank){case 2:G=g("ij,j->i",b,w);break;case 3:G=g("ijk,k->ij",b,w);break;case 4:G=g("ijkl,l->ijk",b,w);break;case 5:G=g("ijklm,m->ijkl",b,w);break;case 6:G=g("ijklmn,n->ijklm",b,w);break;default:throw new Error("Not a valid tensor rank.")}return G=(0,h.U)(G,-1),(0,i.w)(G,S)}})},76333:(ft,N,t)=>{"use strict";t.d(N,{x:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({rotateWithOffset_:function c(g,h,f=0,p=.5){const u=(0,i.YT)(g,"image","rotateWithOffset","float32");return E.vA(4===u.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${u.rank}.`),e.T2.runKernel(s.BK4,{image:u},{radians:h,fillValue:f,center:p})}})},65425:(ft,N,t)=>{"use strict";t.d(N,{E:()=>_});var e=t(48449),s=t(87844),i=t(92290),E=t(91517),m=t(611),c=t(30162),x=t(17636),g=t(26674);const f=(0,s.op)({bincount_:function h(U,W,Z){const j=(0,x.YT)(U,"x","bincount"),it=(0,x.YT)(W,"weights","bincount");return g.vA("int32"===j.dtype,()=>`Error in bincount: input dtype must be int32, but got ${j.dtype}`),g.vA(Z>=0,()=>`size must be non-negative, but got ${Z}.`),g.vA(it.size===j.size||0===it.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${j.shape}, weights shape: ${it.shape}.`),m.T2.runKernel(c.N4F,{x:j,weights:it},{size:Z})}});var p=t(94411),u=t(54807),d=t(66342),C=t(83034),T=t(59731),D=t(4350),S=t(59279),b=t(23821),w=t(56914),G=t(7684),H=t(94063),F=t(16412),B=t(74544);const _=(0,s.op)({threshold_:function A(U,W="binary",Z=!1,j=.5){const it=(0,x.YT)(U,"image","threshold"),rt=it.shape[0]*it.shape[1];let Tt,Et,At,oe,tt=(0,T.l)((0,e.t)([j]),255);if(g.vA(3===it.rank,()=>`Error in threshold: image must be rank 3,but got rank ${it.rank}.`),g.vA(3===it.shape[2]||1===it.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${it.shape[2]}.`),g.vA("int32"===it.dtype||"float32"===it.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${it.dtype}.`),g.vA("otsu"===W||"binary"===W,()=>`Method must be binary or otsu, but was ${W}`),3===it.shape[2]){[Tt,Et,At]=(0,E.l)(it,[1,1,1],-1);const Jt=(0,T.l)(Tt,.2989),ue=(0,T.l)(Et,.587),ie=(0,T.l)(At,.114);oe=(0,C.W)((0,C.W)(Jt,ue),ie)}else oe=U;"otsu"===W&&(tt=function k(U,W){let at,J,ot,rt,tt,Tt,Z=(0,e.t)([-1]),j=(0,e.t)([0]),it=(0,e.t)([0]);for(let Et=0;Et<U.size-1;Et++){at=(0,H.d)(U,0,Et+1),J=(0,H.d)(U,Et+1),tt=(0,D.y)((0,d.c)(at),W),Tt=(0,D.y)((0,d.c)(J),W);const At=(0,d.c)((0,T.l)(at,(0,F.y)(0,at.size)));ot=(0,D.y)(At,(0,d.c)(at));const oe=(0,G.G)(J.shape,at.size),Gt=(0,C.W)((0,F.y)(0,J.size),oe),ce=(0,T.l)(J,Gt);rt=(0,D.y)((0,d.c)(ce),(0,d.c)(J));const Jt=(0,S.j)(ot,rt),ue=(0,S.j)(ot,rt),ie=(0,T.l)(tt,Tt);it=(0,T.l)((0,T.l)(ie,Jt),ue);const re=(0,u.r)(it,j);j=(0,w._)(re,it,j),Z=(0,w._)(re,(0,e.t)([Et]),Z)}return Z}(f((0,i.w)((0,b.L)(oe),"int32"),(0,B.O)([]),256),rt));const Gt=Z?(0,p.I)(oe,tt):(0,u.r)(oe,tt);return(0,i.w)((0,T.l)(Gt,255),"int32")}})},59339:(ft,N,t)=>{"use strict";t.d(N,{p:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({transform_:function c(g,h,f="nearest",p="constant",u=0,d){const C=(0,i.YT)(g,"image","transform","float32"),T=(0,i.YT)(h,"transforms","transform","float32");return E.vA(4===C.rank,()=>`Error in transform: image must be rank 4,but got rank ${C.rank}.`),E.vA(2===T.rank&&(T.shape[0]===C.shape[0]||1===T.shape[0])&&8===T.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E.vA(null==d||2===d.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${d}.`),e.T2.runKernel(s.dLy,{image:C,transforms:T},{interpolation:f,fillMode:p,fillValue:u,outputShape:d})}})},93580:(ft,N,t)=>{"use strict";t.d(N,{H:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({leakyRelu_:function m(x,g=.2){const f={x:(0,i.YT)(x,"x","leakyRelu")};return e.T2.runKernel(s.X0$,f,{alpha:g})}})},56576:(ft,N,t)=>{"use strict";t.d(N,{M:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({less_:function x(h,f){let p=(0,E.YT)(h,"a","less","string_or_numeric"),u=(0,E.YT)(f,"b","less","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.mIA,{a:p,b:u})}})},94411:(ft,N,t)=>{"use strict";t.d(N,{I:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({lessEqual_:function x(h,f){let p=(0,E.YT)(h,"a","lessEqual","string_or_numeric"),u=(0,E.YT)(f,"b","lessEqual","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.CwD,{a:p,b:u})}})},55244:(ft,N,t)=>{"use strict";t.d(N,{x:()=>b});var e=t(17636),s=t(26674),i=t(94300),E=t(56576),m=t(94411),c=t(21292),x=t(85233),g=t(43267),h=t(87844),f=t(16412),p=t(94399),u=t(92885),d=t(59279),C=t(48256),T=t(56914),D=t(20218);const b=(0,h.op)({bandPart_:function S(w,G,H){const F=(0,e.YT)(w,"a","bandPart");(0,s.vA)(F.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${F.rank}.`);const B=F.shape,[A,k]=F.shape.slice(-2);let _,U;"number"==typeof G?((0,s.vA)(G%1==0,()=>`bandPart(): numLower must be an integer, got ${G}.`),(0,s.vA)(G<=A,()=>`bandPart(): numLower (${G}) must not be greater than the number of rows (${A}).`),_=(0,e.YT)(G<0?A:G,"numLower","bandPart")):((0,s.vA)("int32"===G.dtype,()=>"bandPart(): numLower's dtype must be an int32."),_=(0,T._)((0,E.M)(G,0),A,(0,x.B)(G,A))),"number"==typeof H?((0,s.vA)(H%1==0,()=>`bandPart(): numUpper must be an integer, got ${H}.`),(0,s.vA)(H<=k,()=>`bandPart(): numUpper (${H}) must not be greater than the number of columns (${k}).`),U=(0,e.YT)(H<0?k:H,"numUpper","bandPart")):((0,s.vA)("int32"===H.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),U=(0,T._)((0,E.M)(H,0),k,(0,x.B)(H,k)));const W=(0,p.t)((0,f.y)(0,A,1,"int32"),[-1,1]),Z=(0,f.y)(0,k,1,"int32"),j=(0,d.j)(W,Z),it=(0,c.n)((0,m.I)(j,_),(0,i.D)(j,(0,g.H)(U))),at=(0,D.U)([A,k],F.dtype);return(0,p.t)((0,u.t)((0,C.K)((0,p.t)(F,[-1,A,k])).map(J=>(0,T._)(it,J,at))),B)}})},52325:(ft,N,t)=>{"use strict";t.d(N,{i:()=>d});var e=t(611),s=t(26674),i=t(4350),E=t(59731),m=t(96075),c=t(87844),x=t(91517),g=t(41621),h=t(92885),f=t(59279),p=t(66342);const d=(0,c.op)({gramSchmidt_:function u(C){let T;if(Array.isArray(C)){T=!1,(0,s.vA)(null!=C&&C.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const b=C[0].shape[0];for(let w=1;w<C.length;++w)(0,s.vA)(C[w].shape[0]===b,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${C[w].shape[0]} vs. ${b})`)}else T=!0,C=(0,x.l)(C,C.shape[0],0).map(b=>(0,g.r)(b,[0]));(0,s.vA)(C.length<=C[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${C.length}) exceeds number of dimensions (${C[0].shape[0]}).`);const D=[],S=C;for(let b=0;b<C.length;++b)D.push(e.T2.tidy(()=>{let w=S[b];if(b>0)for(let G=0;G<b;++G){const H=(0,E.l)((0,p.c)((0,E.l)(D[G],w)),D[G]);w=(0,f.j)(w,H)}return(0,i.y)(w,(0,m.x)(w,"euclidean"))}));return T?(0,h.t)(D,0):D}})},92974:(ft,N,t)=>{"use strict";t.d(N,{qr:()=>A});var e=t(611),s=t(47054),i=t(26674),E=t(61548),m=t(35213),c=t(4350),x=t(45104),g=t(54807),h=t(60314),f=t(59731),p=t(43267),u=t(96075),d=t(87844),C=t(94399),T=t(94063),D=t(92885),S=t(59279),b=t(41494),w=t(77914),G=t(48256),H=t(56914);function B(k,_=!1){return e.T2.tidy(()=>{(0,i.vA)(2===k.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${k.shape.length}D Tensor.`);const U=k.shape[0],W=k.shape[1];let Z=(0,x.y)(U),j=(0,E.o)(k);const it=(0,b.K)([[1]],[1,1]);let at=(0,E.o)(it);const J=U>=W?W:U;for(let ot=0;ot<J;++ot){const rt=j,tt=at,Tt=Z;[at,j,Z]=e.T2.tidy(()=>{const Et=(0,T.d)(j,[ot,ot],[U-ot,1]),At=(0,u.x)(Et),oe=(0,T.d)(j,[ot,ot],[1,1]),Gt=(0,H._)((0,g.r)(oe,0),(0,b.K)([[-1]]),(0,b.K)([[1]])),ce=(0,S.j)(oe,(0,f.l)(Gt,At)),Jt=(0,c.y)(Et,ce);at=1===Jt.shape[0]?(0,E.o)(it):(0,m.x)([it,(0,T.d)(Jt,[1,0],[Jt.shape[0]-1,Jt.shape[1]])],0);const ue=(0,p.H)((0,c.y)((0,h.N)(Gt,ce),At)),ie=(0,T.d)(j,[ot,0],[U-ot,W]),re=(0,f.l)(ue,at),Se=(0,w.m)(at);if(0===ot)j=(0,S.j)(ie,(0,h.N)(re,(0,h.N)(Se,ie)));else{const Kt=(0,S.j)(ie,(0,h.N)(re,(0,h.N)(Se,ie)));j=(0,m.x)([(0,T.d)(j,[0,0],[ot,W]),Kt],0)}const Oe=(0,w.m)(re),Dt=(0,T.d)(Z,[0,ot],[U,Z.shape[1]-ot]);if(0===ot)Z=(0,S.j)(Dt,(0,h.N)((0,h.N)(Dt,at),Oe));else{const Kt=(0,S.j)(Dt,(0,h.N)((0,h.N)(Dt,at),Oe));Z=(0,m.x)([(0,T.d)(Z,[0,0],[U,ot]),Kt],1)}return[at,j,Z]}),(0,s.AS)([rt,tt,Tt])}return!_&&U>W&&(Z=(0,T.d)(Z,[0,0],[U,W]),j=(0,T.d)(j,[0,0],[W,W])),[Z,j]})}const A=(0,d.op)({qr_:function F(k,_=!1){if((0,i.vA)(k.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${k.rank}`),2===k.rank)return B(k,_);{const U=k.shape.slice(0,k.shape.length-2).reduce((J,ot)=>J*ot),W=(0,G.K)((0,C.t)(k,[U,k.shape[k.shape.length-2],k.shape[k.shape.length-1]]),0),Z=[],j=[];return W.forEach(J=>{const[ot,rt]=B(J,_);Z.push(ot),j.push(rt)}),[(0,C.t)((0,D.t)(Z,0),k.shape),(0,C.t)((0,D.t)(j,0),k.shape)]}}})},8535:(ft,N,t)=>{"use strict";t.d(N,{R:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({log_:function m(x){const h={x:(0,i.YT)(x,"x","log","float32")};return e.T2.runKernel(s.tG8,h)}})},72954:(ft,N,t)=>{"use strict";t.d(N,{K:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({log1p_:function m(x){const h={x:(0,i.YT)(x,"x","log1p")};return e.T2.runKernel(s.Cg$,h)}})},89578:(ft,N,t)=>{"use strict";t.d(N,{H:()=>u});var e=t(22047),s=t(17636),i=t(92290),E=t(68326),m=t(8535),c=t(56619),x=t(59731),g=t(87844),h=t(59279),f=t(66342);const u=(0,g.op)({logSoftmax_:function p(d,C=-1){const T=(0,s.YT)(d,"logits","logSoftmax");if(-1===C&&(C=T.rank-1),C!==T.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${T.rank} and axis was ${C}`);return(0,e._X)((S,b)=>{const G=(0,c.T)(S,C,!0),H=(0,h.j)(S,G),F=(0,h.j)((0,i.w)(H,"float32"),(0,m.R)((0,f.c)((0,E.o)(H),C,!0)));return b([F]),{value:F,gradFunc:(A,k)=>{const[_]=k,W=(0,E.o)(_);return(0,h.j)(A,(0,x.l)((0,f.c)(A,C,!0),W))}}})(T)}})},17391:(ft,N,t)=>{"use strict";t.d(N,{V:()=>d});var e=t(17636),s=t(26674),i=t(83034),E=t(94963),m=t(68326),c=t(8535),x=t(56619),g=t(87844),h=t(94399),f=t(59279),p=t(66342);const d=(0,g.op)({logSumExp_:function u(C,T=null,D=!1){const S=(0,e.YT)(C,"x","logSumExp"),b=(0,s.Y6)(T,S.shape),w=(0,x.T)(S,b,!0),G=(0,f.j)(S,w),H=(0,m.o)(G),F=(0,p.c)(H,b),B=(0,c.R)(F),A=(0,i.W)((0,h.t)(w,B.shape),B);if(D){const k=(0,E.SM)(A.shape,b);return(0,h.t)(A,k)}return A}})},21292:(ft,N,t)=>{"use strict";t.d(N,{n:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(9269);const x=(0,t(87844).op)({logicalAnd_:function c(g,h){const f=(0,i.YT)(g,"a","logicalAnd","bool"),p=(0,i.YT)(h,"b","logicalAnd","bool");return(0,E.assertAndGetBroadcastShape)(f.shape,p.shape),e.T2.runKernel(s.RUm,{a:f,b:p})}})},88288:(ft,N,t)=>{"use strict";t.d(N,{N:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({logicalNot_:function m(x){const h={x:(0,i.YT)(x,"x","logicalNot","bool")};return e.T2.runKernel(s.nZd,h)}})},27347:(ft,N,t)=>{"use strict";t.d(N,{i:()=>e});var e=function(s){return s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",s}(e||{})},88476:(ft,N,t)=>{"use strict";t.d(N,{n:()=>h});var e=t(17636),s=t(26674),i=t(72009),E=t(27347),m=t(87844),c=t(59279),x=t(24782);const h=(0,m.op)({absoluteDifference_:function g(f,p,u,d=E.i.SUM_BY_NONZERO_WEIGHTS){const C=(0,e.YT)(f,"labels","absoluteDifference"),T=(0,e.YT)(p,"predictions","absoluteDifference");let D=null;null!=u&&(D=(0,e.YT)(u,"weights","absoluteDifference")),(0,s.O3)(C.shape,T.shape,"Error in absoluteDifference: ");const S=(0,i.t)((0,c.j)(C,T));return(0,x.M)(S,D,d)}})},24782:(ft,N,t)=>{"use strict";t.d(N,{M:()=>d});var e=t(17636),s=t(92290),i=t(4350),E=t(27347),m=t(23444),c=t(59731),x=t(66279),g=t(95032),h=t(87844),f=t(10829),p=t(66342);const d=(0,h.op)({computeWeightedLoss_:function u(C,T,D=E.i.SUM_BY_NONZERO_WEIGHTS){const S=(0,e.YT)(C,"losses","computeWeightedLoss");let b=null;null!=T&&(b=(0,e.YT)(T,"weights","computeWeightedLoss"));const w=null==b?S:(0,c.l)(S,b);if(D===E.i.NONE)return w;if(D===E.i.SUM)return(0,p.c)(w);if(D===E.i.MEAN){if(null==b)return(0,m.i)(w);{const G=S.size/b.size,H=(0,i.y)((0,p.c)(w),(0,p.c)(b));return G>1?(0,i.y)(H,(0,f.d)(G)):H}}if(D===E.i.SUM_BY_NONZERO_WEIGHTS){if(null==b)return(0,i.y)((0,p.c)(w),(0,f.d)(S.size));{const G=(0,c.l)(b,(0,g.S)(S.shape)),H=(0,s.w)((0,p.c)((0,x.E)(G,(0,f.d)(0))),"float32");return(0,i.y)((0,p.c)(w),H)}}throw Error(`Unknown reduction: ${D}`)}})},36170:(ft,N,t)=>{"use strict";t.d(N,{l:()=>p});var e=t(17636),s=t(26674),i=t(27347),E=t(59731),m=t(87844),c=t(10829),x=t(59279),g=t(66342),h=t(24782);const p=(0,m.op)({cosineDistance_:function f(u,d,C,T,D=i.i.SUM_BY_NONZERO_WEIGHTS){const S=(0,e.YT)(u,"labels","cosineDistance"),b=(0,e.YT)(d,"predictions","cosineDistance");let w=null;null!=T&&(w=(0,e.YT)(T,"weights","cosineDistance")),(0,s.O3)(S.shape,b.shape,"Error in cosineDistance: ");const G=(0,c.d)(1),H=(0,x.j)(G,(0,g.c)((0,E.l)(S,b),C,!0));return(0,h.M)(H,w,D)}})},45026:(ft,N,t)=>{"use strict";t.d(N,{Z:()=>p});var e=t(17636),s=t(26674),i=t(27347),E=t(59731),m=t(87844),c=t(98611),x=t(10829),g=t(59279),h=t(24782);const p=(0,m.op)({hingeLoss_:function f(u,d,C,T=i.i.SUM_BY_NONZERO_WEIGHTS){let D=(0,e.YT)(u,"labels","hingeLoss");const S=(0,e.YT)(d,"predictions","hingeLoss");let b=null;null!=C&&(b=(0,e.YT)(C,"weights","hingeLoss")),(0,s.O3)(D.shape,S.shape,"Error in hingeLoss: ");const w=(0,x.d)(1);D=(0,g.j)((0,E.l)((0,x.d)(2),D),w);const G=(0,c.V)((0,g.j)(w,(0,E.l)(D,S)));return(0,h.M)(G,b,T)}})},29655:(ft,N,t)=>{"use strict";t.d(N,{c:()=>C});var e=t(17636),s=t(26674),i=t(72009),E=t(83034),m=t(27347),c=t(85233),x=t(59731),g=t(87844),h=t(10829),f=t(32362),p=t(59279),u=t(24782);const C=(0,g.op)({huberLoss_:function d(T,D,S,b=1,w=m.i.SUM_BY_NONZERO_WEIGHTS){const G=(0,e.YT)(T,"labels","huberLoss"),H=(0,e.YT)(D,"predictions","huberLoss");let F=null;null!=S&&(F=(0,e.YT)(S,"weights","huberLoss")),(0,s.O3)(G.shape,H.shape,"Error in huberLoss: ");const B=(0,h.d)(b),A=(0,i.t)((0,p.j)(H,G)),k=(0,c.B)(A,B),_=(0,p.j)(A,k),U=(0,E.W)((0,x.l)((0,h.d)(.5),(0,f.E)(k)),(0,x.l)(B,_));return(0,u.M)(U,F,w)}})},3733:(ft,N,t)=>{"use strict";t.d(N,{_:()=>d});var e=t(17636),s=t(26674),i=t(83034),E=t(8535),m=t(27347),c=t(59731),x=t(43267),g=t(87844),h=t(10829),f=t(59279),p=t(24782);const d=(0,g.op)({logLoss_:function u(C,T,D,S=1e-7,b=m.i.SUM_BY_NONZERO_WEIGHTS){const w=(0,e.YT)(C,"labels","logLoss"),G=(0,e.YT)(T,"predictions","logLoss");let H=null;null!=D&&(H=(0,e.YT)(D,"weights","logLoss")),(0,s.O3)(w.shape,G.shape,"Error in logLoss: ");const F=(0,h.d)(1),B=(0,h.d)(S),A=(0,x.H)((0,c.l)(w,(0,E.R)((0,i.W)(G,B)))),k=(0,c.l)((0,f.j)(F,w),(0,E.R)((0,i.W)((0,f.j)(F,G),B))),_=(0,f.j)(A,k);return(0,p.M)(_,H,b)}})},33115:(ft,N,t)=>{"use strict";t.d(N,{b:()=>g});var e=t(17636),s=t(26674),i=t(27347),E=t(87844),m=t(24976),c=t(24782);const g=(0,E.op)({meanSquaredError_:function x(h,f,p,u=i.i.SUM_BY_NONZERO_WEIGHTS){const d=(0,e.YT)(h,"labels","meanSquaredError"),C=(0,e.YT)(f,"predictions","meanSquaredError");let T=null;null!=p&&(T=(0,e.YT)(p,"weights","meanSquaredError")),(0,s.O3)(d.shape,C.shape,"Error in meanSquaredError: ");const D=(0,m.P)(d,C);return(0,c.M)(D,T,u)}})},79780:(ft,N,t)=>{"use strict";t.d(N,{k:()=>S});var e=t(17636),s=t(26674),i=t(72009),E=t(83034),m=t(68326),c=t(72954),x=t(27347),g=t(59731),h=t(43267),f=t(87844),p=t(98611),u=t(10829),d=t(59279),C=t(24782);const S=(0,f.op)({sigmoidCrossEntropy_:function D(b,w,G,H=0,F=x.i.SUM_BY_NONZERO_WEIGHTS){let B=(0,e.YT)(b,"multiClassLabels","sigmoidCrossEntropy");const A=(0,e.YT)(w,"logits","sigmoidCrossEntropy");let k=null;if(null!=G&&(k=(0,e.YT)(G,"weights","sigmoidCrossEntropy")),(0,s.O3)(B.shape,A.shape,"Error in sigmoidCrossEntropy: "),H>0){const U=(0,u.d)(H),W=(0,u.d)(1),Z=(0,u.d)(.5);B=(0,E.W)((0,g.l)(B,(0,d.j)(W,U)),(0,g.l)(Z,U))}const _=function T(b,w){const G=(0,e.YT)(b,"labels","sigmoidCrossEntropyWithLogits"),H=(0,e.YT)(w,"logits","sigmoidCrossEntropyWithLogits");(0,s.O3)(G.shape,H.shape,"Error in sigmoidCrossEntropyWithLogits: ");const F=(0,p.V)(H),B=(0,g.l)(H,G),A=(0,c.K)((0,m.o)((0,h.H)((0,i.t)(H))));return(0,E.W)((0,d.j)(F,B),A)}(B,A);return(0,C.M)(_,k,F)}})},33030:(ft,N,t)=>{"use strict";t.d(N,{C:()=>H});var e=t(22047),s=t(17636),i=t(26674),E=t(83034),m=t(94963),c=t(92290),x=t(4350),g=t(68326),h=t(17391),f=t(27347),p=t(59731),u=t(43267),d=t(87844),C=t(94399),T=t(10829),D=t(59279),S=t(66342),b=t(24782);const H=(0,d.op)({softmaxCrossEntropy_:function G(F,B,A,k=0,_=f.i.SUM_BY_NONZERO_WEIGHTS){let U=(0,s.YT)(F,"onehotLabels","softmaxCrossEntropy");const W=(0,s.YT)(B,"logits","softmaxCrossEntropy");let Z=null;if(null!=A&&(Z=(0,s.YT)(A,"weights","softmaxCrossEntropy")),(0,i.O3)(U.shape,W.shape,"Error in softmaxCrossEntropy: "),k>0){const it=(0,T.d)(k),at=(0,T.d)(1),J=(0,T.d)(U.shape[1]);U=(0,E.W)((0,p.l)(U,(0,D.j)(at,it)),(0,x.y)(it,J))}const j=function w(F,B,A=-1){if(-1===A&&(A=B.rank-1),A!==B.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${B.rank} and dim was ${A}`);return(0,e._X)((_,U,W)=>{const j=(0,h.V)(U,[A],!0),it=(0,D.j)((0,c.w)(U,"float32"),j);W([_,it]);const at=(0,u.H)((0,p.l)(it,_));return{value:(0,S.c)(at,[A]),gradFunc:(rt,tt)=>{const[Tt,Et]=tt,At=(0,m.SM)(rt.shape,[A]);return[(0,p.l)((0,C.t)(rt,At),(0,D.j)((0,c.w)(Tt,"float32"),(0,g.o)(Et))),(0,p.l)((0,C.t)(rt,At),(0,D.j)((0,g.o)(Et),(0,c.w)(Tt,"float32")))]}}})(F,B)}(U,W);return(0,b.M)(j,Z,_)}})},60314:(ft,N,t)=>{"use strict";t.d(N,{N:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({matMul_:function c(g,h,f=!1,p=!1){let u=(0,E.YT)(g,"a","matMul"),d=(0,E.YT)(h,"b","matMul");return[u,d]=(0,i.makeTypesMatch)(u,d),e.T2.runKernel(s.jAQ,{a:u,b:d},{transposeA:f,transposeB:p})}})},56619:(ft,N,t)=>{"use strict";t.d(N,{T:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({max_:function m(x,g=null,h=!1){const p={x:(0,i.YT)(x,"x","max")};return e.T2.runKernel(s.VAI,p,{reductionIndices:g,keepDims:h})}})},40044:(ft,N,t)=>{"use strict";t.d(N,{j:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(29458),c=t(87844),x=t(94399);const h=(0,c.op)({maxPool_:function g(f,p,u,d,C){const T=(0,i.YT)(f,"x","maxPool");let S=T,b=!1;3===T.rank&&(b=!0,S=(0,x.t)(T,[1,T.shape[0],T.shape[1],T.shape[2]])),E.vA(4===S.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${S.rank}.`),E.vA(m.G0(u,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`),m.s_("maxPool",d,C);const H=e.T2.runKernel(s.t3d,{x:S},{filterSize:p,strides:u,pad:d,dimRoundingMode:C});return b?(0,x.t)(H,[H.shape[1],H.shape[2],H.shape[3]]):H}})},42524:(ft,N,t)=>{"use strict";t.d(N,{e:()=>h});var e=t(611),s=t(30162),i=t(17636),E=t(26674),m=t(29458),c=t(87844),x=t(94399);const h=(0,c.op)({maxPool3d_:function g(f,p=[1,1,1],u,d,C,T="NDHWC"){const D=(0,i.YT)(f,"x","maxPool3d");let S=D,b=!1;4===D.rank&&(b=!0,S=(0,x.t)(D,[1,D.shape[0],D.shape[1],D.shape[2],D.shape[3]])),E.vA(5===S.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${S.rank}.`),E.vA("NDHWC"===T,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${T}`),(0,m.s_)("maxPool3d",d,C);const H=e.T2.runKernel(s.ySp,{x:S},{filterSize:p,strides:u,pad:d,dimRoundingMode:C,dataFormat:T});return b?(0,x.t)(H,[H.shape[1],H.shape[2],H.shape[3],H.shape[4]]):H}})},74659:(ft,N,t)=>{"use strict";t.d(N,{P:()=>h});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269),c=t(92290);const h=(0,t(87844).op)({maximum_:function g(f,p){let u=(0,E.YT)(f,"a","maximum"),d=(0,E.YT)(p,"b","maximum");return[u,d]=(0,i.makeTypesMatch)(u,d),"bool"===u.dtype&&(u=(0,c.w)(u,"int32"),d=(0,c.w)(d,"int32")),(0,m.assertAndGetBroadcastShape)(u.shape,d.shape),e.T2.runKernel(s.LDN,{a:u,b:d})}})},23444:(ft,N,t)=>{"use strict";t.d(N,{i:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({mean_:function m(x,g=null,h=!1){const p={x:(0,i.YT)(x,"x","mean")};return e.T2.runKernel(s.g5A,p,{axis:g,keepDims:h})}})},82825:(ft,N,t)=>{"use strict";t.d(N,{j:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({min_:function m(x,g=null,h=!1){const p={x:(0,i.YT)(x,"x","min")};return e.T2.runKernel(s.lNG,p,{axis:g,keepDims:h})}})},85233:(ft,N,t)=>{"use strict";t.d(N,{B:()=>h});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269),c=t(92290);const h=(0,t(87844).op)({minimum_:function g(f,p){let u=(0,E.YT)(f,"a","minimum"),d=(0,E.YT)(p,"b","minimum");return[u,d]=(0,i.makeTypesMatch)(u,d),"bool"===u.dtype&&(u=(0,c.w)(u,"int32"),d=(0,c.w)(d,"int32")),(0,m.assertAndGetBroadcastShape)(u.shape,d.shape),e.T2.runKernel(s.LG0,{a:u,b:d})}})},11732:(ft,N,t)=>{"use strict";t.d(N,{C:()=>p});var e=t(17636),s=t(26674),i=t(94963),E=t(92290),m=t(23444),c=t(87844),x=t(94399),g=t(32362),h=t(59279);const p=(0,c.op)({moments_:function f(u,d=null,C=!1){u=(0,e.YT)(u,"x","moments");const T=(0,s.Y6)(d,u.shape),D=(0,m.i)(u,T,C);let S=D.shape;C||(S=(0,i.SM)(D.shape,T));const b=(0,g.E)((0,h.j)((0,E.w)(u,"float32"),(0,x.t)(D,S)));return{mean:D,variance:(0,m.i)(b,T,C)}}})},59731:(ft,N,t)=>{"use strict";t.d(N,{l:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({mul_:function c(g,h){let f=(0,E.YT)(g,"a","mul"),p=(0,E.YT)(h,"b","mul");return[f,p]=(0,i.makeTypesMatch)(f,p),e.T2.runKernel(s.xu7,{a:f,b:p})}})},43267:(ft,N,t)=>{"use strict";t.d(N,{H:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({neg_:function m(x){const h={x:(0,i.YT)(x,"x","neg")};return e.T2.runKernel(s.l0G,h)}})},30081:(ft,N,t)=>{"use strict";t.d(N,{W:()=>s});var e=t(26674);function s(i,E,m,c,x,g){null==c&&(c=.5),null==x&&(x=Number.NEGATIVE_INFINITY),null==g&&(g=0);const h=i.shape[0];return m=Math.min(m,h),e.vA(0<=c&&c<=1,()=>`iouThreshold must be in [0, 1], but was '${c}'`),e.vA(2===i.rank,()=>`boxes must be a 2D tensor, but was of rank '${i.rank}'`),e.vA(4===i.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${i.shape[1]}`),e.vA(1===E.rank,()=>"scores must be a 1D tensor"),e.vA(E.shape[0]===h,()=>`scores has incompatible shape with boxes. Expected ${h}, but was ${E.shape[0]}`),e.vA(0<=g&&g<=1,()=>`softNmsSigma must be in [0, 1], but was '${g}'`),{maxOutputSize:m,iouThreshold:c,scoreThreshold:x,softNmsSigma:g}}},96075:(ft,N,t)=>{"use strict";t.d(N,{x:()=>D});var e=t(17636),s=t(26674),i=t(72009),E=t(94963),m=t(56619),c=t(82825),x=t(87844),g=t(53827),h=t(94399),f=t(10829),p=t(51583),u=t(32362),d=t(66342);function T(S,b,w=null){if(0===S.rank)return(0,i.t)(S);if(1!==S.rank&&null===w)return T((0,h.t)(S,[-1]),b,w);if(1===S.rank||"number"==typeof w||Array.isArray(w)&&1===w.length){if(1===b)return(0,d.c)((0,i.t)(S),w);if(b===1/0)return(0,m.T)((0,i.t)(S),w);if(b===-1/0)return(0,c.j)((0,i.t)(S),w);if("euclidean"===b||2===b)return(0,p.R)((0,d.c)((0,g.n)((0,i.t)(S),(0,f.d)(2,"int32")),w));throw new Error(`Error in norm: invalid ord value: ${b}`)}if(Array.isArray(w)&&2===w.length){if(1===b)return(0,m.T)((0,d.c)((0,i.t)(S),w[0]),w[1]-1);if(b===1/0)return(0,m.T)((0,d.c)((0,i.t)(S),w[1]),w[0]);if(b===-1/0)return(0,c.j)((0,d.c)((0,i.t)(S),w[1]),w[0]);if("fro"===b||"euclidean"===b)return(0,p.R)((0,d.c)((0,u.E)(S),w));throw new Error(`Error in norm: invalid ord value: ${b}`)}throw new Error(`Error in norm: invalid axis: ${w}`)}const D=(0,x.op)({norm_:function C(S,b="euclidean",w=null,G=!1){const H=T(S=(0,e.YT)(S,"x","norm"),b,w);let F=H.shape;if(G){const B=(0,s.Y6)(w,S.shape);F=E.SM(H.shape,B)}return(0,h.t)(H,F)}})},66279:(ft,N,t)=>{"use strict";t.d(N,{E:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({notEqual_:function x(h,f){let p=(0,E.YT)(h,"a","notEqual","string_or_numeric"),u=(0,E.YT)(f,"b","notEqual","string_or_numeric");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.ylV,{a:p,b:u})}})},87073:(ft,N,t)=>{"use strict";t.d(N,{M:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({oneHot_:function m(x,g,h=1,f=0,p="int32"){if(g<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${g}`);const d={indices:(0,i.YT)(x,"indices","oneHot","int32")};return e.T2.runKernel(s.urI,d,{dtype:p,depth:g,onValue:h,offValue:f})}})},95032:(ft,N,t)=>{"use strict";t.d(N,{S:()=>m});var e=t(611),s=t(26674),i=t(55349),E=t(20218);function m(c,x="float32"){if((0,s.SA)(c),"complex64"===x){const h=m(c,"float32"),f=(0,E.U)(c,"float32");return(0,i.f)(h,f)}const g=(0,s.FZ)((0,s.Ze)(c),x);return e.T2.makeTensor(g,c,x)}},28692:(ft,N,t)=>{"use strict";t.d(N,{P:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({onesLike_:function m(x){const h={x:(0,i.YT)(x,"x","onesLike")};return e.T2.runKernel(s.LWX,h)}})},87844:(ft,N,t)=>{"use strict";t.d(N,{op:()=>E});var e=t(611),s=t(26674);const i="__op";function E(m){const c=Object.keys(m);if(1!==c.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${c.length} keys.`);let x=c[0];const g=m[x];x.endsWith("_")&&(x=x.substring(0,x.length-1)),x+=i;const h=(...f)=>{e.T2.startScope(x);try{const p=g(...f);return(0,s.yL)(p)&&console.error("Cannot return a Promise inside of tidy."),e.T2.endScope(p),p}catch(p){throw e.T2.endScope(null),p}};return Object.defineProperty(h,"name",{value:x,configurable:!0}),h}},54472:(ft,N,t)=>{"use strict";t.d(N,{e:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({pad_:function m(x,g,h=0){const f=(0,i.YT)(x,"x","pad");if(0===f.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return e.T2.runKernel(s.ODT,{x:f},{paddings:g,constantValue:h})}})},53827:(ft,N,t)=>{"use strict";t.d(N,{n:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({pow_:function c(g,h){let f=(0,E.YT)(g,"base","pow"),p=(0,E.YT)(h,"exp","pow");return[f,p]=(0,i.makeTypesMatch)(f,p),e.T2.runKernel(s.pyJ,{a:f,b:p})}})},62655:(ft,N,t)=>{"use strict";t.d(N,{N:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({prelu_:function m(x,g){const h=(0,i.YT)(x,"x","prelu"),f=(0,i.YT)(g,"alpha","prelu");return e.T2.runKernel(s.Ncv,{x:h,alpha:f})}})},54969:(ft,N,t)=>{"use strict";t.d(N,{ai:()=>i,yU:()=>m});var e=t(48814);class i{constructor(d,C,T,D,S){this.mean=d,this.stdDev=C,this.dtype=T,this.nextVal=NaN,this.truncated=D,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const b=S||Math.random();this.random=e.alea(b.toString())}nextValue(){if(!isNaN(this.nextVal)){const D=this.nextVal;return this.nextVal=NaN,D}let d,C,T=!1;for(;!T;){let D,S,b;do{D=2*this.random()-1,S=2*this.random()-1,b=D*D+S*S}while(b>=1||0===b);const w=Math.sqrt(-2*Math.log(b)/b);d=this.mean+this.stdDev*D*w,C=this.mean+this.stdDev*S*w,(!this.truncated||this.isValidTruncated(d))&&(T=!0)}return(!this.truncated||this.isValidTruncated(C))&&(this.nextVal=this.convertValue(C)),this.convertValue(d)}convertValue(d){return null==this.dtype||"float32"===this.dtype?d:Math.round(d)}isValidTruncated(d){return d<=this.upper&&d>=this.lower}}class m{constructor(d=0,C=1,T,D){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=d,this.range=C-d,this.dtype=T,null==D&&(D=Math.random()),"number"==typeof D&&(D=D.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${d} - ${C} <= 1 and dtype is not float`);this.random=e.alea(D)}convertValue(d){return this.canReturnFloat()?d:Math.round(d)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},41222:(ft,N,t)=>{"use strict";t.d(N,{F:()=>c});var e=t(26674),s=t(75987),i=t(87844),E=t(54969);const c=(0,i.op)({randomNormal_:function m(x,g=0,h=1,f,p){if((0,e.SA)(x),null!=f&&"bool"===f)throw new Error(`Unsupported data type ${f}`);const u=new E.ai(g,h,f,!1,p),d=(0,s.r)(x,f);for(let C=0;C<d.values.length;C++)d.values[C]=u.nextValue();return d.toTensor()}})},65413:(ft,N,t)=>{"use strict";t.d(N,{Y:()=>c});var e=t(26674),s=t(75987),i=t(87844),E=t(54969);const c=(0,i.op)({randomUniform_:function m(x,g=0,h=1,f="float32",p){(0,e.SA)(x);const u=(0,s.r)(x,f),d=new E.yU(g,h,null,p);for(let C=0;C<u.values.length;C++)u.values[C]=d.nextValue();return u.toTensor()}})},16412:(ft,N,t)=>{"use strict";t.d(N,{y:()=>i});var e=t(611),s=t(30162);function i(E,m,c=1,x="float32"){if(0===c)throw new Error("Cannot have a step of zero");return e.T2.runKernel(s.Q6t,{},{start:E,stop:m,step:c,dtype:x})}},69909:(ft,N,t)=>{"use strict";t.d(N,{x:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({real_:function m(x){const h={input:(0,i.YT)(x,"input","real")};return e.T2.runKernel(s.LRy,h)}})},98611:(ft,N,t)=>{"use strict";t.d(N,{V:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({relu_:function m(x){const h={x:(0,i.YT)(x,"x","relu")};return e.T2.runKernel(s.fUj,h)}})},55065:(ft,N,t)=>{"use strict";t.d(N,{j:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({relu6_:function m(x){const h={x:(0,i.YT)(x,"x","relu6")};return e.T2.runKernel(s.P_L,h)}})},94399:(ft,N,t)=>{"use strict";t.d(N,{t:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({reshape_:function m(x,g){const f={x:(0,i.YT)(x,"x","reshape","string_or_numeric")};return e.T2.runKernel(s.R23,f,{shape:g})}})},21067:(ft,N,t)=>{"use strict";t.d(N,{B:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({reverse_:function m(x,g){const f={x:(0,i.YT)(x,"x","reverse")};return e.T2.runKernel(s.D7i,f,{dims:g})}})},23821:(ft,N,t)=>{"use strict";t.d(N,{L:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({round_:function m(x){const h={x:(0,i.YT)(x,"x","round")};return e.T2.runKernel(s.hVg,h)}})},90313:(ft,N,t)=>{"use strict";t.d(N,{Z:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({rsqrt_:function m(x){const h={x:(0,i.YT)(x,"x","rsqrt","float32")};return e.T2.runKernel(s.TOR,h)}})},10829:(ft,N,t)=>{"use strict";t.d(N,{d:()=>i});var e=t(21710),s=t(98682);function i(E,m){if(((0,e.isTypedArray)(E)&&"string"!==m||Array.isArray(E))&&"complex64"!==m)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===m&&(0,e.isTypedArray)(E)&&!(E instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(E,[],[],m)}},26966:(ft,N,t)=>{"use strict";t.d(N,{W:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({selu_:function m(x){const h={x:(0,i.YT)(x,"x","selu")};return e.T2.runKernel(s.u$b,h)}})},62597:(ft,N,t)=>{"use strict";t.d(N,{X:()=>s,j:()=>e});const e=1.7580993408473768,s=1.0507009873554805},48285:(ft,N,t)=>{"use strict";t.d(N,{w:()=>g});var e=t(17636),s=t(26674),i=t(12809),E=t(73595),m=t(87844),c=t(94399);const g=(0,m.op)({separableConv2d_:function x(h,f,p,u,d,C=[1,1],T="NHWC"){const D=(0,e.YT)(h,"x","separableConv2d"),S=(0,e.YT)(f,"depthwiseFilter","separableConv2d"),b=(0,e.YT)(p,"pointwiseFilter","separableConv2d");let w=D,G=!1;if(3===D.rank&&(G=!0,w=(0,c.t)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),"NCHW"===T)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.vA(4===w.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${w.rank}.`),s.vA(4===S.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${S.rank}.`),s.vA(4===b.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${S.rank}.`),s.vA(1===b.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${b.shape[0]}.`),s.vA(1===b.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${b.shape[1]}.`);const H=S.shape[2],F=S.shape[3];s.vA(b.shape[2]===H*F,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${H*F}, but got ${b.shape[2]}.`);const B=(0,E.G)(w,S,u,d,T,C),k=(0,i.X)(B,b,1,"valid",T);return G?(0,c.t)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},53205:(ft,N,t)=>{"use strict";t.d(N,{r:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sigmoid_:function m(x){const h={x:(0,i.YT)(x,"x","sigmoid","float32")};return e.T2.runKernel(s.vI1,h)}})},32395:(ft,N,t)=>{"use strict";t.d(N,{G:()=>g});var e=t(35213),s=t(7684),i=t(87844),E=t(94399),m=t(94063),c=t(41494);const g=(0,i.op)({frame_:function x(h,f,p,u=!1,d=0){let C=0;const T=[];for(;C+f<=h.size;)T.push((0,m.d)(h,C,f)),C+=p;if(u)for(;C<h.size;){const D=C+f-h.size,S=(0,e.x)([(0,m.d)(h,C,f-D),(0,s.G)([D],d)]);T.push(S),C+=p}return 0===T.length?(0,c.K)([],[0,f]):(0,E.t)((0,e.x)(T),[T.length,f])}})},79208:(ft,N,t)=>{"use strict";t.d(N,{W:()=>E});var e=t(87844),s=t(37369);const E=(0,e.op)({hammingWindow_:function i(m){return(0,s._)(m,.54,.46)}})},92822:(ft,N,t)=>{"use strict";t.d(N,{_:()=>E});var e=t(87844),s=t(37369);const E=(0,e.op)({hannWindow_:function i(m){return(0,s._)(m,.5,.5)}})},76221:(ft,N,t)=>{"use strict";t.d(N,{u:()=>g});var e=t(59731),s=t(87844),i=t(37369),E=t(40638),m=t(32395),c=t(92822);const g=(0,s.op)({stft_:function x(h,f,p,u,d=c._){null==u&&(u=(0,i.F)(f));const C=(0,m.G)(h,f,p),T=(0,e.l)(C,d(f));return(0,E.z)(T,u)}})},37369:(ft,N,t)=>{"use strict";t.d(N,{F:()=>s,_:()=>i});var e=t(48449);function s(E){return Math.floor(Math.pow(2,Math.ceil(Math.log(E)/Math.log(2))))}function i(E,m,c){const x=1-E%2,g=new Float32Array(E);for(let h=0;h<E;++h){const f=2*Math.PI*h/(E+x-1);g[h]=m-c*Math.cos(f)}return(0,e.t)(g,"float32")}},20415:(ft,N,t)=>{"use strict";t.d(N,{F:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sin_:function m(x){const h={x:(0,i.YT)(x,"x","sin","float32")};return e.T2.runKernel(s.hql,h)}})},91071:(ft,N,t)=>{"use strict";t.d(N,{L:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sinh_:function m(x){const h={x:(0,i.YT)(x,"x","sinh")};return e.T2.runKernel(s.J3C,h)}})},94063:(ft,N,t)=>{"use strict";t.d(N,{d:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({slice_:function m(x,g,h){const f=(0,i.YT)(x,"x","slice","string_or_numeric");if(0===f.rank)throw new Error("Slicing scalar is not possible");return e.T2.runKernel(s.JiE,{x:f},{begin:g,size:h})}})},14638:(ft,N,t)=>{"use strict";t.d(N,{Q:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(94063);const c=(0,i.op)({slice1d_:function m(x,g,h){const f=(0,e.YT)(x,"x","slice1d");return s.vA(1===f.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,[g],[h])}})},81209:(ft,N,t)=>{"use strict";t.d(N,{z:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(94063);const c=(0,i.op)({slice2d_:function m(x,g,h){const f=(0,e.YT)(x,"x","slice2d");return s.vA(2===f.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,g,h)}})},29660:(ft,N,t)=>{"use strict";t.d(N,{w:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(94063);const c=(0,i.op)({slice3d_:function m(x,g,h){const f=(0,e.YT)(x,"x","slice3d");return s.vA(3===f.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,g,h)}})},24167:(ft,N,t)=>{"use strict";t.d(N,{R:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(94063);const c=(0,i.op)({slice4d_:function m(x,g,h){const f=(0,e.YT)(x,"x","slice4d");return s.vA(4===f.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,g,h)}})},1986:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{assertParamsValid:()=>E,computeFlatOffset:()=>S,computeOutShape:()=>c,getNormalizedAxes:()=>f,isSliceContinous:()=>D,maskToAxes:()=>m,parseSliceParams:()=>b,sliceInfo:()=>w,startForAxis:()=>C,startIndicesWithElidedDims:()=>p,stopForAxis:()=>T,stopIndicesWithElidedDims:()=>u,stridesForAxis:()=>d,stridesWithElidedDims:()=>x});var e=t(26674);const s=-2,i=-1;function E(F,B,A){const k=F.shape.length;e.vA(k===B.length,()=>`Error in slice${k}D: Length of begin ${B} must match the rank of the array (${k}).`),e.vA(k===A.length,()=>`Error in slice${k}D: Length of size ${A} must match the rank of the array (${k}).`);for(let _=0;_<k;++_)e.vA(B[_]+A[_]<=F.shape[_],()=>`Error in slice${k}D: begin[${_}] + size[${_}] (${B[_]+A[_]}) would overflow input.shape[${_}] (${F.shape[_]})`)}function m(F){const B=[];let A=0;for(;F>0;)1&F&&B.push(A),F/=2,A++;return B}function c(F,B,A){const k=[];for(let _=0;_<F.length;_++)k[_]=Math.ceil((B[_]-F[_])/A[_]);return k}function x(F,B,A,k){const _=[...F];for(let U=_.length;U<k.length;U++)_.push(1);for(let U=0;U<A;U++)0===U?_[B]=1:(_.splice(B,0,1),_.pop());return _}function g(F,B,A){return A<=F?A:A-(B-1)}function h(F,B){const A=[];for(let k=0;k<F;k++)A.push(B+k);return A}function f(F,B,A,k,_,U,W,Z,j){const it=F.length;let at=new Array(it),J=new Array(it),ot=new Array(it);if(B.length&&A>0){const rt=B[0],tt=A+1;at=p(W,rt,tt,k,F),J=u(Z,rt,tt,_,F),ot=x(U,rt,tt,F)}else for(let rt=0;rt<it;rt++)at[rt]=C(W,k,U,F,rt,j),J[rt]=T(Z,_,U,F,rt,j),ot[rt]=d(U,rt,j);return{begin:at,end:J,strides:ot}}function p(F,B,A,k,_){const U=[..._],W=h(A,B);for(let Z=0;Z<U.length;Z++)if(W.indexOf(Z)>-1)U[Z]=0;else{const j=g(B,A,Z);let it=k[j];F&1<<j&&(it=0),U[Z]=it}return U}function u(F,B,A,k,_){const U=[..._],W=h(A,B);for(let Z=0;Z<U.length;Z++)if(W.indexOf(Z)>-1)U[Z]=Number.MAX_SAFE_INTEGER;else{const j=g(B,A,Z);let it=k[j];F&1<<j&&(it=Number.MAX_SAFE_INTEGER),U[Z]=it}for(let Z=0;Z<U.length;Z++)U[Z]<0&&(U[Z]+=_[Z]),U[Z]=e.qE(0,U[Z],_[Z]);return U}function d(F,B,A){let k=F[B];return(A&1<<B||null==k)&&(k=1),k}function C(F,B,A,k,_,U){let W=B[_];(F&1<<_||U&1<<_||null==W)&&(W=(A[_]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const j=k[_];return W<0&&(W+=j),W=e.qE(0,W,j-1),W}function T(F,B,A,k,_,U){let W=B[_];const Z=A[_]||1;(F&1<<_||U&1<<_||null==W)&&(W=Z>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const j=k[_];return W<0&&(W+=j),W=Z>0?e.qE(0,W,j):e.qE(-1,W,j-1),W}function D(F,B,A){let k=A.length;for(let _=0;_<A.length;_++)if(A[_]>1){k=_;break}for(let _=k+1;_<A.length;_++)if(B[_]>0||A[_]!==F[_])return!1;return!0}function S(F,B){let A=F.length>0?F[F.length-1]:1;for(let k=0;k<F.length-1;k++)A+=F[k]*B[k];return A}function b(F,B,A){let k;const _=F.shape.length;let U;return k="number"==typeof B?[B,...new Array(_-1).fill(0)]:B.length<_?B.concat(new Array(_-B.length).fill(0)):B.slice(),k.forEach(W=>{e.vA(-1!==W,()=>"slice() does not support negative begin indexing.")}),U=null==A?new Array(_).fill(-1):"number"==typeof A?[A,...new Array(_-1).fill(-1)]:A.length<_?A.concat(new Array(_-A.length).fill(-1)):A,U=U.map((W,Z)=>W>=0?W:(e.vA(-1===W,()=>`Negative size values should be exactly -1 but got ${W} for the slice() size at index ${Z}.`),F.shape[Z]-k[Z])),[k,U]}function w(F,B,A,k,_,U,W,Z,j){let it;if(null==k?(it=new Array(B.length),it.fill(1)):it=k,null!=W&&W&W-1)throw new Error("Multiple ellipses in slice is not allowed.");let at=!1;const J={dims:it.length,numAddAxisAfterEllipsis:0,begin:B.slice(),end:A.slice(),strides:it.slice(),beginMask:_,endMask:U,ellipsisMask:W,newAxisMask:Z,shrinkAxisMask:j};for(let Gt=0;Gt<J.dims;Gt++)at&&1<<Gt&Z&&J.numAddAxisAfterEllipsis++,1<<Gt&W&&(at=!0);at||(J.ellipsisMask|=1<<J.dims,J.dims++);const ot={dims:F.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function G(F,B){B.beginMask=0,B.endMask=0,B.shrinkAxisMask=0;let A=0;B.beginValid=null!=F.begin,B.endValid=null!=F.end,B.begin=new Array(B.dims),B.end=new Array(B.dims),B.strides=new Array(B.dims),B.finalShapeGatherIndices=[],B.finalShapeGatherIndicesSparse=[],B.inputShapeGatherIndicesSparse=new Array(B.dims);for(let k=0;k<F.dims;k++)if(1<<k&F.ellipsisMask){const _=Math.min(B.dims-(F.dims-k)+1+F.numAddAxisAfterEllipsis,B.dims);for(;A<_;A++)B.begin[A]=0,B.end[A]=0,B.strides[A]=1,B.beginMask|=1<<A,B.endMask|=1<<A,B.finalShapeGatherIndices.push(A),B.finalShapeGatherIndicesSparse.push(-1),B.inputShapeGatherIndicesSparse[A]=k}else if(1<<k&F.newAxisMask)B.finalShapeGatherIndices.push(s),B.finalShapeGatherIndicesSparse.push(-1);else{if(A===B.begin.length)throw Error(`Index out of range using input dim ${A}; input has only ${B.dims} dims, ${B.begin.length}.`);null!=F.begin&&(B.begin[A]=F.begin[k]),null!=F.end&&(B.end[A]=F.end[k]),B.strides[A]=F.strides[k],F.beginMask&1<<k&&(B.beginMask|=1<<A),F.endMask&1<<k&&(B.endMask|=1<<A),F.shrinkAxisMask&1<<k?(B.finalShapeGatherIndices.push(i),B.finalShapeGatherIndicesSparse.push(-1),B.shrinkAxisMask|=1<<A):(B.finalShapeGatherIndices.push(A),B.finalShapeGatherIndicesSparse.push(k)),B.inputShapeGatherIndicesSparse[A]=k,A++}}(J,ot);let rt=!0,tt=!0,Tt=!0;const Et=[],At=[];for(let Gt=0;Gt<F.length;++Gt){if(0===ot.strides[Gt])throw Error(`strides[${Gt}] must be non-zero`);const ce=!!(ot.shrinkAxisMask&1<<Gt),Jt=F[Gt];if(-1===Jt){Et.push(ce?1:-1);continue}const ue=[ot.beginMask&1<<Gt,ot.endMask&1<<Gt],ie=[ot.strides[Gt]>0?0:-1,ot.strides[Gt]>0?Jt:Jt-1];if(ce&&ot.strides[Gt]<=0)throw Error("only stride 1 allowed on non-range indexing.");Tt=Tt&&1===ot.strides[Gt];const re=!!(ot.beginMask&1<<Gt&&ot.endMask&1<<Gt);if(ot.beginValid&&ot.endValid){if(ce){const Kt=ot.begin[Gt]<0?Jt+ot.begin[Gt]:ot.begin[Gt];if(ot.begin[Gt]=Kt,ot.end[Gt]=ot.begin[Gt]+1,Kt<0||Kt>=Jt)throw Error(`slice index ${ot.begin[Gt]} of dimension ${Gt} out of bounds.`)}else ot.begin[Gt]=H(ot.begin[Gt],0,ot.strides[Gt],Jt,ue,ie),ot.end[Gt]=H(ot.end[Gt],1,ot.strides[Gt],Jt,ue,ie);const Dt=1===ot.strides[Gt]&&0===ot.begin[Gt]&&ot.end[Gt]===Jt;rt=rt&&Dt,tt=tt&&(0===Gt&&1===ot.strides[Gt]||Dt)}else rt=rt&&1===ot.strides[Gt]&&re,tt=tt&&(0===Gt&&1===ot.strides[Gt]||re);let Se,Oe=!1;if(ot.beginValid&&ot.endValid?(Se=ot.end[Gt]-ot.begin[Gt],Oe=!0):ce?(Se=1,Oe=!0):re&&Jt>=0&&(Se=ot.strides[Gt]<0?-Jt:Jt,Oe=!0),Oe){let Dt;Dt=0===Se||Se<0!=ot.strides[Gt]<0?0:Math.trunc(Se/ot.strides[Gt])+(Se%ot.strides[Gt]!=0?1:0),Et.push(Dt)}else Et.push(-1)}for(let Gt=0;Gt<ot.finalShapeGatherIndices.length;++Gt){const ce=ot.finalShapeGatherIndices[Gt];ce>=0?At.push(Et[ce]):ce===s&&At.push(1)}return{finalShapeSparse:At.filter((Gt,ce)=>ot.finalShapeGatherIndices[ce]!==s),finalShape:At,isIdentity:rt,sliceDim0:tt,isSimpleSlice:Tt,begin:ot.begin,end:ot.end,strides:ot.strides}}function H(F,B,A,k,_,U){if(_[B])return A>0?U[B]:U[B+1&1];{const W=F<0?k+F:F;return W<U[0]?U[0]:W>U[1]?U[1]:W}}},52431:(ft,N,t)=>{"use strict";t.d(N,{V:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({softmax_:function m(x,g=-1){const h=(0,i.YT)(x,"logits","softmax","float32");if(-1===g&&(g=h.rank-1),g!==h.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${h.rank} and dim was ${g}`);return e.T2.runKernel(s.rFG,{logits:h},{dim:g})}})},14181:(ft,N,t)=>{"use strict";t.d(N,{l:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({softplus_:function m(x){const h={x:(0,i.YT)(x,"x","softplus")};return e.T2.runKernel(s.Fin,h)}})},93713:(ft,N,t)=>{"use strict";t.d(N,{e:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({spaceToBatchND_:function c(g,h,f){const p=(0,i.YT)(g,"x","spaceToBatchND");return E.vA(p.rank>=1+h.length,()=>`input rank ${p.rank} should be > than [blockShape] ${h.length}`),E.vA(f.length===h.length,()=>`paddings.shape[0] ${f.length} must be equal to [blockShape] ${h.length}`),E.vA(p.shape.reduce((C,T,D)=>D>0&&D<=h.length?C&&(T+f[D-1][0]+f[D-1][1])%h[D-1]==0:C,!0),()=>`input spatial dimensions ${p.shape.slice(1)} with paddings ${f.toString()} must be divisible by blockShapes ${h.toString()}`),e.T2.runKernel(s.A8B,{x:p},{blockShape:h,paddings:f})}})},19702:(ft,N,t)=>{"use strict";t.d(N,{o:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sparseFillEmptyRows_:function m(x,g,h,f){const p=(0,i.YT)(x,"indices","sparseFillEmptyRows","int32"),u=(0,i.YT)(g,"values","sparseFillEmptyRows"),d=(0,i.YT)(h,"denseShape","sparseFillEmptyRows","int32"),C=(0,i.YT)(f,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==p.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${p.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==d.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${d.shape}`);if(0!==C.rank)throw new Error(`Default value should be a scalar but received shape ${C.shape}`);const D=e.T2.runKernel(s.C8s,{indices:p,values:u,denseShape:d,defaultValue:C});return{outputIndices:D[0],outputValues:D[1],emptyRowIndicator:D[2],reverseIndexMap:D[3]}}})},56637:(ft,N,t)=>{"use strict";t.d(N,{Z:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sparseReshape_:function m(x,g,h){const f=(0,i.YT)(x,"inputIndices","sparseReshape","int32"),p=(0,i.YT)(g,"inputShape","sparseReshape","int32"),u=(0,i.YT)(h,"newShape","sparseReshape","int32");if(2!==f.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${f.shape}`);if(1!==p.rank)throw new Error(`Input shape should be Tensor1D but received shape ${p.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const C=e.T2.runKernel(s.BoJ,{inputIndices:f,inputShape:p,newShape:u});return{outputIndices:C[0],outputShape:C[1]}}})},46764:(ft,N,t)=>{"use strict";t.d(N,{t:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sparseSegmentMean_:function m(x,g,h){const f=(0,i.YT)(x,"data","sparseSegmentMean"),p=(0,i.YT)(g,"indices","sparseSegmentMean","int32"),u=(0,i.YT)(h,"segmentIds","sparseSegmentMean","int32");if(f.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==p.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${p.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);return e.T2.runKernel(s.L6G,{data:f,indices:p,segmentIds:u})}})},46782:(ft,N,t)=>{"use strict";t.d(N,{F:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sparseSegmentSum_:function m(x,g,h){const f=(0,i.YT)(x,"data","sparseSegmentSum"),p=(0,i.YT)(g,"indices","sparseSegmentSum","int32"),u=(0,i.YT)(h,"segmentIds","sparseSegmentSum","int32");if(f.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==p.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${p.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);return e.T2.runKernel(s.DvZ,{data:f,indices:p,segmentIds:u})}})},90694:(ft,N,t)=>{"use strict";t.d(N,{h:()=>c});var e=t(611),s=t(30162),i=t(26674);const c=(0,t(87844).op)({fft_:function m(x){return(0,i.vA)("complex64"===x.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${x.dtype}.`),e.T2.runKernel(s.rGP,{input:x})}})},15245:(ft,N,t)=>{"use strict";t.d(N,{K:()=>c});var e=t(611),s=t(30162),i=t(26674);const c=(0,t(87844).op)({ifft_:function m(x){return(0,i.vA)("complex64"===x.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${x.dtype}.`),e.T2.runKernel(s.OAQ,{input:x})}})},43:(ft,N,t)=>{"use strict";t.d(N,{g:()=>d});var e=t(55349),s=t(35213),i=t(62823),E=t(59731),m=t(87844),c=t(69909),x=t(94399),g=t(21067),h=t(10829),f=t(94063),p=t(15245);const d=(0,m.op)({irfft_:function u(C){const T=C.shape[C.shape.length-1],D=C.size/T;let S;if(T<=2){const b=(0,x.t)(C,[D,T]);S=(0,p.K)(b)}else{const b=[D,2*(T-1)],w=(0,x.t)((0,c.x)(C),[D,T]),G=(0,x.t)((0,i.n)(C),[D,T]),H=(0,g.B)((0,f.d)(w,[0,1],[D,T-2]),1),F=(0,E.l)((0,g.B)((0,f.d)(G,[0,1],[D,T-2]),1),(0,h.d)(-1)),B=(0,s.x)([w,H],1),A=(0,s.x)([G,F],1),k=(0,x.t)((0,e.f)(B,A),[b[0],b[1]]);S=(0,p.K)(k)}if(S=(0,c.x)(S),3===C.rank&&0!==C.shape[0]){const b=S,w=C.shape[0];S=(0,x.t)(S,[w,S.shape[0]/w,S.shape[1]]),b.dispose()}return S}})},40638:(ft,N,t)=>{"use strict";t.d(N,{z:()=>C});var e=t(26674),s=t(55349),i=t(35213),E=t(62823),m=t(87844),c=t(69909),x=t(94399),g=t(94063),h=t(91517),f=t(20218),p=t(44714),u=t(90694);const C=(0,m.op)({rfft_:function d(T,D){(0,e.vA)("float32"===T.dtype,()=>`The dtype for rfft() must be real value but got ${T.dtype}`);let S=T.shape[T.shape.length-1];const b=T.size/S;let w;if(null!=D&&D<S){const Z=T.shape.map(it=>0),j=T.shape.map(it=>it);j[T.shape.length-1]=D,w=(0,g.d)(T,Z,j),S=D}else if(null!=D&&D>S){const Z=T.shape.map(j=>j);Z[T.shape.length-1]=D-S,w=(0,i.x)([T,(0,f.U)(Z)],T.shape.length-1),S=D}else w=T;const G=(0,p.P)(w),H=(0,x.t)((0,s.f)(w,G),[b,S]),F=(0,u.h)(H),B=Math.floor(S/2)+1,A=(0,c.x)(F),k=(0,E.n)(F),_=(0,h.l)(A,[B,S-B],A.shape.length-1),U=(0,h.l)(k,[B,S-B],k.shape.length-1),W=w.shape.slice();return W[w.shape.length-1]=B,(0,x.t)((0,s.f)(_[0],U[0]),W)}})},91517:(ft,N,t)=>{"use strict";t.d(N,{l:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({split_:function m(x,g,h=0){const p={x:(0,i.YT)(x,"x","split")};return e.T2.runKernel(s.Blb,p,{numOrSizeSplits:g,axis:h})}})},51583:(ft,N,t)=>{"use strict";t.d(N,{R:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({sqrt_:function m(x){const h={x:(0,i.YT)(x,"x","sqrt","float32")};return e.T2.runKernel(s.dFH,h)}})},32362:(ft,N,t)=>{"use strict";t.d(N,{E:()=>m});var e=t(611),s=t(17636);const m=(0,t(87844).op)({square_:function E(c){const x=(0,s.YT)(c,"x","square");return e.T2.runKernel("Square",{x},{})}})},24976:(ft,N,t)=>{"use strict";t.d(N,{P:()=>g});var e=t(611),s=t(30162),i=t(14548),E=t(17636),m=t(9269);const g=(0,t(87844).op)({squaredDifference_:function x(h,f){let p=(0,E.YT)(h,"a","squaredDifference"),u=(0,E.YT)(f,"b","squaredDifference");return[p,u]=(0,i.makeTypesMatch)(p,u),(0,m.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.Ddj,{a:p,b:u},{})}})},41621:(ft,N,t)=>{"use strict";t.d(N,{r:()=>c});var e=t(17636),s=t(26674),i=t(87844),E=t(94399);const c=(0,i.op)({squeeze_:function m(x,g){const h=(0,e.YT)(x,"x","squeeze","string_or_numeric");return(0,E.t)(h,(0,s.gx)(h.shape,g).newShape)}})},92885:(ft,N,t)=>{"use strict";t.d(N,{t:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({stack_:function c(g,h=0){const f=(0,i.j1)(g,"tensors","stack","string_or_numeric");return E.vA(f.length>=1,()=>"Pass at least one tensor to tf.stack"),f.length>0&&E.vA(h<=f[0].rank,()=>"Axis must be <= rank of the tensor"),e.T2.runKernel(s.mM$,f,{axis:h})}})},72079:(ft,N,t)=>{"use strict";t.d(N,{P:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({step_:function m(x,g=0){const f={x:(0,i.YT)(x,"x","step")};return e.T2.runKernel(s.pnw,f,{alpha:g})}})},41342:(ft,N,t)=>{"use strict";t.d(N,{E:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({staticRegexReplace_:function m(x,g,h,f=!0){const p=(0,i.YT)(x,"input","staticRegexReplace","string");return e.T2.runKernel(s.GZp,{x:p},{pattern:g,rewrite:h,replaceGlobal:f})}})},37500:(ft,N,t)=>{"use strict";t.d(N,{A:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({stringNGrams_:function m(x,g,h,f,p,u,d,C){const T=(0,i.YT)(x,"data","stringNGrams","string");if("string"!==T.dtype)throw new Error("Data must be of datatype string");if(1!==T.shape.length)throw new Error(`Data must be a vector, saw: ${T.shape}`);const D=(0,i.YT)(g,"dataSplits","stringNGrams");if("int32"!==D.dtype)throw new Error("Data splits must be of datatype int32");const w=e.T2.runKernel(s.YAb,{data:T,dataSplits:D},{separator:h,nGramWidths:f,leftPad:p,rightPad:u,padWidth:d,preserveShortSequences:C});return{nGrams:w[0],nGramsSplits:w[1]}}})},74305:(ft,N,t)=>{"use strict";t.d(N,{c:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({stringSplit_:function m(x,g,h=!0){const f=(0,i.YT)(x,"input","stringSplit","string"),p=(0,i.YT)(g,"delimiter","stringSplit","string");if(1!==f.rank)throw new Error(`Input should be Tensor1D but received shape ${f.shape}`);if(0!==p.rank)throw new Error(`Delimiter should be a scalar but received shape ${p.shape}`);const C=e.T2.runKernel(s.iW0,{input:f,delimiter:p},{skipEmpty:h});return{indices:C[0],values:C[1],shape:C[2]}}})},45629:(ft,N,t)=>{"use strict";t.d(N,{N:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({stringToHashBucketFast_:function m(x,g){const h=(0,i.YT)(x,"input","stringToHashBucketFast","string"),f={numBuckets:g};if(g<=0)throw new Error("Number of buckets must be at least 1");return e.T2.runKernel(s.$jE,{input:h},f)}})},59279:(ft,N,t)=>{"use strict";t.d(N,{j:()=>x});var e=t(611),s=t(30162),i=t(14548),E=t(17636);const x=(0,t(87844).op)({sub_:function c(g,h){let f=(0,E.YT)(g,"a","sub"),p=(0,E.YT)(h,"b","sub");return[f,p]=(0,i.makeTypesMatch)(f,p),e.T2.runKernel(s.PbM,{a:f,b:p})}})},66342:(ft,N,t)=>{"use strict";t.d(N,{c:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(92290);const x=(0,t(87844).op)({sum_:function c(g,h=null,f=!1){let p=(0,i.YT)(g,"x","sum");return"bool"===p.dtype&&(p=(0,E.w)(p,"int32")),e.T2.runKernel(s.WuN,{x:p},{axis:h,keepDims:f})}})},86580:(ft,N,t)=>{"use strict";t.d(N,{y:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({tanh_:function m(x){const h={x:(0,i.YT)(x,"x","tanh","float32")};return e.T2.runKernel(s.iuW,h)}})},74544:(ft,N,t)=>{"use strict";t.d(N,{O:()=>i});var e=t(17636),s=t(98682);function i(E,m,c){const x=(0,e.MZ)(E,c);return(0,s.Q)(E,m,x,c)}},48449:(ft,N,t)=>{"use strict";t.d(N,{t:()=>E});var e=t(17636),s=t(26674),i=t(98682);function E(m,c){(0,s.HO)(m);const x=(0,e.MZ)(m,c);if(1!==x.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,i.Q)(m,null,x,c)}},41494:(ft,N,t)=>{"use strict";t.d(N,{K:()=>E});var e=t(17636),s=t(26674),i=t(98682);function E(m,c,x){if((0,s.HO)(m),null!=c&&2!==c.length)throw new Error("tensor2d() requires shape to have two numbers");const g=(0,e.MZ)(m,x);if(2!==g.length&&1!==g.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===g.length&&null==c)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,i.Q)(m,c,g,x)}},86691:(ft,N,t)=>{"use strict";t.d(N,{$:()=>E});var e=t(17636),s=t(26674),i=t(98682);function E(m,c,x){if((0,s.HO)(m),null!=c&&3!==c.length)throw new Error("tensor3d() requires shape to have three numbers");const g=(0,e.MZ)(m,x);if(3!==g.length&&1!==g.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===g.length&&null==c)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,i.Q)(m,c,g,x)}},98682:(ft,N,t)=>{"use strict";t.d(N,{Q:()=>m});var e=t(611),s=t(82891),i=t(26674),E=t(21710);function m(c,x,g,h){if(null==h)h=(0,i.X$)(c);else if("complex64"===h)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(c)||(0,s.Oj)(c)){if("float32"!==h&&"int32"!==h)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${h}.`);return e.T2.backend.createTensorFromGPUData(c,x||g,h)}if(!(0,E.isTypedArray)(c)&&!Array.isArray(c)&&"number"!=typeof c&&"boolean"!=typeof c&&"string"!=typeof c)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=x){(0,i.SA)(x);const f=(0,i.Ze)(x),p=(0,i.Ze)(g);(0,i.vA)(f===p,()=>`Based on the provided shape, [${x}], the tensor should have ${f} values but has ${p}`);for(let u=0;u<g.length;++u){const C=u!==g.length-1||g[u]!==(0,i.Ze)(x.slice(u));(0,i.vA)(g[u]===x[u]||!C,()=>`Error creating a new Tensor. Inferred shape (${g}) does not match the provided shape (${x}). `)}}return!(0,E.isTypedArray)(c)&&!Array.isArray(c)&&(c=[c]),x=x||g,c="string"!==h?(0,E.toTypedArray)(c,h):(0,E.flatten)(c,[],!0),e.T2.makeTensor(c,x,h)}},36409:(ft,N,t)=>{"use strict";t.d(N,{V:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({tile_:function c(g,h){const f=(0,i.YT)(g,"x","tile","string_or_numeric");return E.vA(f.rank===h.length,()=>`Error in transpose: rank of input ${f.rank} must match length of reps ${h}.`),e.T2.runKernel(s.FAs,{x:f},{reps:h})}})},77914:(ft,N,t)=>{"use strict";t.d(N,{m:()=>u});var e=t(611),s=t(47054),i=t(30162),E=t(17636),m=t(26674),c=t(55349),x=t(62823),g=t(43267),h=t(87844),f=t(69909);const u=(0,h.op)({transpose_:function p(d,C,T){const D=(0,E.YT)(d,"x","transpose");if(null==C&&(C=D.shape.map((w,G)=>G).reverse()),m.vA(D.rank===C.length,()=>`Error in transpose: rank of input ${D.rank} must match length of perm ${C}.`),C.forEach(w=>{m.vA(w>=0&&w<D.rank,()=>`All entries in 'perm' must be between 0 and ${D.rank-1} but got ${C}`)}),D.rank<=1)return D.clone();const S={x:D},b={perm:C};return"complex64"===D.dtype?(0,s.DZ)(()=>{let w=(0,f.x)(D),G=(0,x.n)(D);return w=e.T2.runKernel(i.wx0,{x:w},b),G=e.T2.runKernel(i.wx0,{x:G},b),T&&(G=(0,g.H)(G)),(0,c.f)(w,G)}):e.T2.runKernel(i.wx0,S,b)}})},3609:(ft,N,t)=>{"use strict";t.d(N,{e:()=>c});var e=t(26674),s=t(75987),i=t(87844),E=t(54969);const c=(0,i.op)({truncatedNormal_:function m(x,g=0,h=1,f,p){if((0,e.SA)(x),null!=f&&"bool"===f)throw new Error("Unsupported data type $ { dtype }");const u=new E.ai(g,h,f,!0,p),d=(0,s.r)(x,f);for(let C=0;C<d.values.length;C++)d.values[C]=u.nextValue();return d.toTensor()}})},90893:(ft,N,t)=>{"use strict";t.d(N,{z:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({unsortedSegmentSum_:function c(g,h,f){const p=(0,i.YT)(g,"x","unsortedSegmentSum"),u=(0,i.YT)(h,"segmentIds","unsortedSegmentSum","int32");return(0,E.vA)((0,E.E6)(f),()=>"numSegments must be of dtype int"),e.T2.runKernel(s.pPe,{x:p,segmentIds:u},{numSegments:f})}})},48256:(ft,N,t)=>{"use strict";t.d(N,{K:()=>x});var e=t(611),s=t(30162),i=t(17636),E=t(26674);const x=(0,t(87844).op)({unstack_:function c(g,h=0){const f=(0,i.YT)(g,"x","unstack","string_or_numeric");return E.vA(h>=-f.shape.length&&h<f.shape.length,()=>`Axis = ${h} is not in [-${f.shape.length}, ${f.shape.length})`),e.T2.runKernel(s.dXR,{value:f},{axis:h})}})},38121:(ft,N,t)=>{"use strict";t.d(N,{b:()=>s});var e=t(611);function s(i,E=!0,m,c){return e.T2.makeVariable(i,E,m,c)}},56914:(ft,N,t)=>{"use strict";t.d(N,{_:()=>g});var e=t(611),s=t(30162),i=t(17636),E=t(3752),m=t(9269);const g=(0,t(87844).op)({where_:function x(h,f,p){const u=(0,i.YT)(f,"a","where"),d=(0,i.YT)(p,"b","where"),C=(0,i.YT)(h,"condition","where","bool"),T=(0,m.assertAndGetBroadcastShape)((0,m.assertAndGetBroadcastShape)(C.shape,u.shape),d.shape),D=(0,E.h)(C,T),S=(0,E.h)(u,T),b=(0,E.h)(d,T);return e.T2.runKernel(s.l6P,{condition:D,t:S,e:b})}})},20218:(ft,N,t)=>{"use strict";t.d(N,{U:()=>E});var e=t(611),s=t(26674),i=t(55349);function E(m,c="float32"){if((0,s.SA)(m),"complex64"===c){const g=E(m,"float32"),h=E(m,"float32");return(0,i.f)(g,h)}const x=(0,s.Ty)((0,s.Ze)(m),c);return e.T2.makeTensor(x,m,c)}},44714:(ft,N,t)=>{"use strict";t.d(N,{P:()=>c});var e=t(611),s=t(30162),i=t(17636);const c=(0,t(87844).op)({zerosLike_:function m(x){const h={x:(0,i.YT)(x,"x","zerosLike")};return e.T2.runKernel(s.xJ3,h)}})},1633:(ft,N,t)=>{"use strict";t.d(N,{K:()=>p});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(4350),c=t(59731),x=t(51583),g=t(32362),h=t(44714),f=t(56188);class p extends f.E{static get className(){return"Adadelta"}constructor(d,C,T=null){super(),this.learningRate=d,this.rho=C,this.epsilon=T,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==T&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(d){(Array.isArray(d)?d.map(T=>T.name):Object.keys(d)).forEach((T,D)=>{const S=s.T2.registeredVariables[T],b=!1;null==this.accumulatedGrads[D]&&(this.accumulatedGrads[D]={originalName:`${T}/accum_grad`,variable:(0,i.DZ)(()=>(0,h.P)(S).variable(b))}),null==this.accumulatedUpdates[D]&&(this.accumulatedUpdates[D]={originalName:`${T}/accum_var`,variable:(0,i.DZ)(()=>(0,h.P)(S).variable(b))});const w=Array.isArray(d)?d[D].tensor:d[T];if(null==w)return;const G=this.accumulatedGrads[D].variable,H=this.accumulatedUpdates[D].variable;(0,i.DZ)(()=>{const F=(0,E.W)((0,c.l)(G,this.rho),(0,c.l)((0,g.E)(w),1-this.rho)),B=(0,c.l)((0,m.y)((0,x.R)((0,E.W)(H,this.epsilon)),(0,x.R)((0,E.W)(G,this.epsilon))),w),A=(0,E.W)((0,c.l)(H,this.rho),(0,c.l)((0,g.E)(B),1-this.rho));G.assign(F),H.assign(A);const k=(0,E.W)((0,c.l)(B,-this.learningRate),S);S.assign(k)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,i.AS)(this.accumulatedGrads.map(d=>d.variable)),(0,i.AS)(this.accumulatedUpdates.map(d=>d.variable)))}getWeights(){var d=this;return(0,e.A)(function*(){const C=[...d.accumulatedGrads,...d.accumulatedUpdates];return[yield d.saveIterations()].concat(C.map(T=>({name:T.originalName,tensor:T.variable})))})()}setWeights(d){var C=this;return(0,e.A)(function*(){const T=(d=yield C.extractIterations(d)).length/2,D=!1;C.accumulatedGrads=d.slice(0,T).map(S=>({originalName:S.name,variable:S.tensor.variable(D)})),C.accumulatedUpdates=d.slice(T,2*T).map(S=>({originalName:S.name,variable:S.tensor.variable(D)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(d,C){return new d(C.learningRate,C.rho,C.epsilon)}}},60415:(ft,N,t)=>{"use strict";t.d(N,{a:()=>p});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(4350),c=t(7684),x=t(59731),g=t(51583),h=t(32362),f=t(56188);class p extends f.E{static get className(){return"Adagrad"}constructor(d,C=.1){super(),this.learningRate=d,this.initialAccumulatorValue=C,this.accumulatedGrads=[]}applyGradients(d){(Array.isArray(d)?d.map(T=>T.name):Object.keys(d)).forEach((T,D)=>{const S=s.T2.registeredVariables[T];null==this.accumulatedGrads[D]&&(this.accumulatedGrads[D]={originalName:`${T}/accumulator`,variable:(0,i.DZ)(()=>(0,c.G)(S.shape,this.initialAccumulatorValue).variable(!1))});const b=Array.isArray(d)?d[D].tensor:d[T];if(null==b)return;const w=this.accumulatedGrads[D].variable;(0,i.DZ)(()=>{const G=(0,E.W)(w,(0,h.E)(b));w.assign(G);const H=(0,E.W)((0,x.l)((0,m.y)(b,(0,g.R)((0,E.W)(G,s.T2.backend.epsilon()))),-this.learningRate),S);S.assign(H)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,i.AS)(this.accumulatedGrads.map(d=>d.variable))}getWeights(){var d=this;return(0,e.A)(function*(){return[yield d.saveIterations()].concat(d.accumulatedGrads.map(C=>({name:C.originalName,tensor:C.variable})))})()}setWeights(d){var C=this;return(0,e.A)(function*(){d=yield C.extractIterations(d),C.accumulatedGrads=d.map(D=>({originalName:D.name,variable:D.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(d,C){return new d(C.learningRate,C.initialAccumulatorValue)}}},34128:(ft,N,t)=>{"use strict";t.d(N,{F:()=>C});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(4350),c=t(59731),x=t(53827),g=t(10829),h=t(51583),f=t(32362),p=t(59279),u=t(44714),d=t(56188);class C extends d.E{static get className(){return"Adam"}constructor(D,S,b,w=null){super(),this.learningRate=D,this.beta1=S,this.beta2=b,this.epsilon=w,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,i.DZ)(()=>{this.accBeta1=(0,g.d)(S).variable(),this.accBeta2=(0,g.d)(b).variable()}),null==w&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(D){const S=Array.isArray(D)?D.map(b=>b.name):Object.keys(D);(0,i.DZ)(()=>{const b=(0,p.j)(1,this.accBeta1),w=(0,p.j)(1,this.accBeta2);S.forEach((G,H)=>{const F=s.T2.registeredVariables[G],B=!1;null==this.accumulatedFirstMoment[H]&&(this.accumulatedFirstMoment[H]={originalName:`${G}/m`,variable:(0,i.DZ)(()=>(0,u.P)(F).variable(B))}),null==this.accumulatedSecondMoment[H]&&(this.accumulatedSecondMoment[H]={originalName:`${G}/v`,variable:(0,i.DZ)(()=>(0,u.P)(F).variable(B))});const A=Array.isArray(D)?D[H].tensor:D[G];if(null==A)return;const k=this.accumulatedFirstMoment[H].variable,_=this.accumulatedSecondMoment[H].variable,U=(0,E.W)((0,c.l)(k,this.beta1),(0,c.l)(A,1-this.beta1)),W=(0,E.W)((0,c.l)(_,this.beta2),(0,c.l)((0,f.E)(A),1-this.beta2)),Z=(0,m.y)(U,b),j=(0,m.y)(W,w);k.assign(U),_.assign(W);const it=(0,E.W)((0,c.l)((0,m.y)(Z,(0,E.W)((0,h.R)(j),this.epsilon)),-this.learningRate),F);F.assign(it)}),this.accBeta1.assign((0,c.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,c.l)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,i.AS)(this.accumulatedFirstMoment.map(D=>D.variable)),null!=this.accumulatedSecondMoment&&(0,i.AS)(this.accumulatedSecondMoment.map(D=>D.variable))}getWeights(){var D=this;return(0,e.A)(function*(){const S=[...D.accumulatedFirstMoment,...D.accumulatedSecondMoment];return[yield D.saveIterations()].concat(S.map(b=>({name:b.originalName,tensor:b.variable})))})()}setWeights(D){var S=this;return(0,e.A)(function*(){D=yield S.extractIterations(D),(0,i.DZ)(()=>{S.accBeta1.assign((0,x.n)(S.beta1,S.iterations_+1)),S.accBeta2.assign((0,x.n)(S.beta2,S.iterations_+1))});const b=D.length/2,w=!1;S.accumulatedFirstMoment=D.slice(0,b).map(G=>({originalName:G.name,variable:G.tensor.variable(w)})),S.accumulatedSecondMoment=D.slice(b,2*b).map(G=>({originalName:G.name,variable:G.tensor.variable(w)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(D,S){return new D(S.learningRate,S.beta1,S.beta2,S.epsilon)}}},26041:(ft,N,t)=>{"use strict";t.d(N,{o:()=>d});var e=t(10467),s=t(611),i=t(47054),E=t(72009),m=t(83034),c=t(4350),x=t(74659),g=t(59731),h=t(10829),f=t(59279),p=t(44714),u=t(56188);class d extends u.E{static get className(){return"Adamax"}constructor(T,D,S,b=null,w=0){super(),this.learningRate=T,this.beta1=D,this.beta2=S,this.epsilon=b,this.decay=w,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,i.DZ)(()=>{this.iteration=(0,h.d)(0).variable(),this.accBeta1=(0,h.d)(D).variable()}),null==b&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(T){const D=Array.isArray(T)?T.map(S=>S.name):Object.keys(T);(0,i.DZ)(()=>{const S=(0,f.j)(1,this.accBeta1),b=(0,c.y)(-this.learningRate,(0,m.W)((0,g.l)(this.iteration,this.decay),1));D.forEach((w,G)=>{const H=s.T2.registeredVariables[w],F=!1;null==this.accumulatedFirstMoment[G]&&(this.accumulatedFirstMoment[G]={originalName:`${w}/m`,variable:(0,p.P)(H).variable(F)}),null==this.accumulatedWeightedInfNorm[G]&&(this.accumulatedWeightedInfNorm[G]={originalName:`${w}/v`,variable:(0,p.P)(H).variable(F)});const B=Array.isArray(T)?T[G].tensor:T[w];if(null==B)return;const A=this.accumulatedFirstMoment[G].variable,k=this.accumulatedWeightedInfNorm[G].variable,_=(0,m.W)((0,g.l)(A,this.beta1),(0,g.l)(B,1-this.beta1)),U=(0,g.l)(k,this.beta2),W=(0,E.t)(B),Z=(0,x.P)(U,W);A.assign(_),k.assign(Z);const j=(0,m.W)((0,g.l)((0,c.y)(b,S),(0,c.y)(_,(0,m.W)(Z,this.epsilon))),H);H.assign(j)}),this.iteration.assign((0,m.W)(this.iteration,1)),this.accBeta1.assign((0,g.l)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,i.AS)(this.accumulatedFirstMoment.map(T=>T.variable)),null!=this.accumulatedWeightedInfNorm&&(0,i.AS)(this.accumulatedWeightedInfNorm.map(T=>T.variable))}getWeights(){return(0,e.A)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(T){return(0,e.A)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(T,D){return new T(D.learningRate,D.beta1,D.beta2,D.epsilon,D.decay)}}},82961:(ft,N,t)=>{"use strict";t.d(N,{Q:()=>h});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(59731),c=t(10829),x=t(44714),g=t(11089);class h extends g.S{static get className(){return"Momentum"}constructor(p,u,d=!1){super(p),this.learningRate=p,this.momentum=u,this.useNesterov=d,this.accumulations=[],this.m=(0,c.d)(this.momentum)}applyGradients(p){(Array.isArray(p)?p.map(d=>d.name):Object.keys(p)).forEach((d,C)=>{const T=s.T2.registeredVariables[d];null==this.accumulations[C]&&(this.accumulations[C]={originalName:`${d}/momentum`,variable:(0,i.DZ)(()=>(0,x.P)(T).variable(!1))});const D=this.accumulations[C].variable,S=Array.isArray(p)?p[C].tensor:p[d];null!=S&&(0,i.DZ)(()=>{let b;const w=(0,E.W)((0,m.l)(this.m,D),S);b=(0,E.W)((0,m.l)(this.c,this.useNesterov?(0,E.W)(S,(0,m.l)(w,this.m)):w),T),D.assign(w),T.assign(b)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,i.AS)(this.accumulations.map(p=>p.variable))}setMomentum(p){this.momentum=p}getWeights(){var p=this;return(0,e.A)(function*(){return[yield p.saveIterations()].concat(p.accumulations.map(u=>({name:u.originalName,tensor:u.variable})))})()}setWeights(p){var u=this;return(0,e.A)(function*(){p=yield u.extractIterations(p),u.accumulations=p.map(C=>({originalName:C.name,variable:C.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(p,u){return new p(u.learningRate,u.momentum,u.useNesterov)}}},56188:(ft,N,t)=>{"use strict";t.d(N,{E:()=>c});var e=t(10467),s=t(47054),i=t(22047),E=t(10829),m=t(1506);class c extends m.Serializable{minimize(g,h=!1,f){const{value:p,grads:u}=this.computeGradients(g,f);if(null!=f){const d=f.map(C=>({name:C.name,tensor:u[C.name]}));this.applyGradients(d)}else this.applyGradients(u);return(0,s.AS)(u),h?p:(p.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(g,h){return(0,i.y7)(g,h)}dispose(){null!=this.iterations_&&(0,s.AS)(this.iterations_)}saveIterations(){var g=this;return(0,e.A)(function*(){return null==g.iterations_&&(g.iterations_=0),{name:"iter",tensor:(0,E.d)(g.iterations_,"int32")}})()}getWeights(){return(0,e.A)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(g){var h=this;return(0,e.A)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${h.getClassName()}`)})()}extractIterations(g){var h=this;return(0,e.A)(function*(){return h.iterations_=(yield g[0].tensor.data())[0],g.slice(1)})()}}Object.defineProperty(c,Symbol.hasInstance,{value:x=>null!=x.minimize&&null!=x.computeGradients&&null!=x.applyGradients})},29609:(ft,N,t)=>{"use strict";t.d(N,{i:()=>f});var e=t(1633),s=t(60415),i=t(34128),E=t(26041),m=t(82961),c=t(53532),x=t(11089),g=t(1506);const h=[e.K,s.a,i.F,E.o,m.Q,c.P,x.S];function f(){for(const p of h)(0,g.registerClass)(p)}},53532:(ft,N,t)=>{"use strict";t.d(N,{P:()=>u});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(4350),c=t(59731),x=t(51583),g=t(32362),h=t(59279),f=t(44714),p=t(56188);class u extends p.E{static get className(){return"RMSProp"}constructor(C,T=.9,D=0,S=null,b=!1){if(super(),this.learningRate=C,this.decay=T,this.momentum=D,this.epsilon=S,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=b,null==S&&(this.epsilon=s.T2.backend.epsilon()),null==C)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(C){(Array.isArray(C)?C.map(D=>D.name):Object.keys(C)).forEach((D,S)=>{const b=s.T2.registeredVariables[D],w=!1;null==this.accumulatedMeanSquares[S]&&(this.accumulatedMeanSquares[S]={originalName:`${D}/rms`,variable:(0,i.DZ)(()=>(0,f.P)(b).variable(w))}),null==this.accumulatedMoments[S]&&(this.accumulatedMoments[S]={originalName:`${D}/momentum`,variable:(0,i.DZ)(()=>(0,f.P)(b).variable(w))}),null==this.accumulatedMeanGrads[S]&&this.centered&&(this.accumulatedMeanGrads[S]={originalName:`${D}/mg`,variable:(0,i.DZ)(()=>(0,f.P)(b).variable(w))});const G=Array.isArray(C)?C[S].tensor:C[D];if(null==G)return;const H=this.accumulatedMeanSquares[S].variable,F=this.accumulatedMoments[S].variable;(0,i.DZ)(()=>{const B=(0,E.W)((0,c.l)(H,this.decay),(0,c.l)((0,g.E)(G),1-this.decay));if(this.centered){const A=this.accumulatedMeanGrads[S].variable,k=(0,E.W)((0,c.l)(A,this.decay),(0,c.l)(G,1-this.decay)),_=(0,m.y)((0,c.l)(G,this.learningRate),(0,x.R)((0,h.j)(B,(0,E.W)((0,g.E)(k),this.epsilon)))),U=(0,E.W)((0,c.l)(F,this.momentum),_);H.assign(B),A.assign(k),F.assign(U);const W=(0,h.j)(b,U);b.assign(W)}else{const A=(0,E.W)((0,c.l)(H,this.decay),(0,c.l)((0,g.E)(G),1-this.decay)),k=(0,E.W)((0,c.l)(F,this.momentum),(0,m.y)((0,c.l)(G,this.learningRate),(0,x.R)((0,E.W)(A,this.epsilon))));H.assign(A),F.assign(k);const _=(0,h.j)(b,k);b.assign(_)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,i.AS)(this.accumulatedMeanSquares.map(C=>C.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,i.AS)(this.accumulatedMeanGrads.map(C=>C.variable)),null!=this.accumulatedMoments&&(0,i.AS)(this.accumulatedMoments.map(C=>C.variable))}getWeights(){var C=this;return(0,e.A)(function*(){const T=[...C.accumulatedMeanSquares,...C.accumulatedMoments];return C.centered&&T.push(...C.accumulatedMeanGrads),[yield C.saveIterations()].concat(T.map(D=>({name:D.originalName,tensor:D.variable})))})()}setWeights(C){var T=this;return(0,e.A)(function*(){C=yield T.extractIterations(C);const D=T.centered?C.length/3:C.length/2,S=!1;T.accumulatedMeanSquares=C.slice(0,D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})),T.accumulatedMoments=C.slice(D,2*D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})),T.centered&&(T.accumulatedMeanGrads=C.slice(2*D,3*D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(C,T){return new C(T.learningRate,T.decay,T.momentum,T.epsilon,T.centered)}}},11089:(ft,N,t)=>{"use strict";t.d(N,{S:()=>g});var e=t(10467),s=t(611),i=t(47054),E=t(83034),m=t(59731),c=t(10829),x=t(56188);class g extends x.E{static get className(){return"SGD"}constructor(f){super(),this.learningRate=f,this.setLearningRate(f)}applyGradients(f){(Array.isArray(f)?f.map(u=>u.name):Object.keys(f)).forEach((u,d)=>{const C=Array.isArray(f)?f[d].tensor:f[u];if(null==C)return;const T=s.T2.registeredVariables[u];(0,i.DZ)(()=>{const D=(0,E.W)((0,m.l)(this.c,C),T);T.assign(D)})}),this.incrementIterations()}setLearningRate(f){this.learningRate=f,null!=this.c&&this.c.dispose(),this.c=(0,i.aC)((0,c.d)(-f))}dispose(){this.c.dispose()}getWeights(){var f=this;return(0,e.A)(function*(){return[yield f.saveIterations()]})()}setWeights(f){var p=this;return(0,e.A)(function*(){if(0!==(f=yield p.extractIterations(f)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(f,p){return new f(p.learningRate)}}},33319:(ft,N,t)=>{"use strict";function e(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}t.d(N,{Y:()=>e})},10222:(ft,N,t)=>{"use strict";var e=t(72009),s=t(73444);(0,s.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,e.t)(this)};var i=t(611),E=t(30162),m=t(17636),c=t(87844);const g=(0,c.op)({acos_:function x(wt){const ge={x:(0,m.YT)(wt,"x","acos")};return i.T2.runKernel(E.Vvy,ge)}});(0,s.tp)().prototype.acos=function(){return this.throwIfDisposed(),g(this)};const f=(0,c.op)({acosh_:function h(wt){const ge={x:(0,m.YT)(wt,"x","acosh")};return i.T2.runKernel(E.PH8,ge)}});(0,s.tp)().prototype.acosh=function(){return this.throwIfDisposed(),f(this)};var p=t(83034);(0,s.tp)().prototype.add=function(wt){return this.throwIfDisposed(),(0,p.W)(this,wt)};var u=t(56682);(0,s.tp)().prototype.all=function(wt,ae){return this.throwIfDisposed(),(0,u.Q)(this,wt,ae)};var d=t(37547);(0,s.tp)().prototype.any=function(wt,ae){return this.throwIfDisposed(),(0,d.b)(this,wt,ae)};var C=t(71084);(0,s.tp)().prototype.argMax=function(wt){return this.throwIfDisposed(),(0,C.F)(this,wt)};const D=(0,c.op)({argMin_:function T(wt,ae=0){const De={x:(0,m.YT)(wt,"x","argMin")};return i.T2.runKernel(E.p_m,De,{axis:ae})}});(0,s.tp)().prototype.argMin=function(wt){return this.throwIfDisposed(),D(this,wt)};var S=t(94399),b=t(26674);(0,s.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,b.vA)(1===this.size,()=>"The array must have only 1 element."),(0,S.t)(this,[])};var w=t(92290);(0,s.tp)().prototype.asType=function(wt){return this.throwIfDisposed(),(0,w.w)(this,wt)},(0,s.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,S.t)(this,[this.size])},(0,s.tp)().prototype.as2D=function(wt,ae){return this.throwIfDisposed(),(0,S.t)(this,[wt,ae])},(0,s.tp)().prototype.as3D=function(wt,ae,ge){return this.throwIfDisposed(),(0,S.t)(this,[wt,ae,ge])},(0,s.tp)().prototype.as4D=function(wt,ae,ge,De){return this.throwIfDisposed(),(0,S.t)(this,[wt,ae,ge,De])},(0,s.tp)().prototype.as5D=function(wt,ae,ge,De,cn){return this.throwIfDisposed(),(0,S.t)(this,[wt,ae,ge,De,cn])};const H=(0,c.op)({asin_:function G(wt){const ge={x:(0,m.YT)(wt,"x","asin")};return i.T2.runKernel(E.QKF,ge)}});(0,s.tp)().prototype.asin=function(){return this.throwIfDisposed(),H(this)};const B=(0,c.op)({asinh_:function F(wt){const ge={x:(0,m.YT)(wt,"x","asinh")};return i.T2.runKernel(E.epO,ge)}});(0,s.tp)().prototype.asinh=function(){return this.throwIfDisposed(),B(this)};const k=(0,c.op)({atan_:function A(wt){const ge={x:(0,m.YT)(wt,"x","atan")};return i.T2.runKernel(E.TyE,ge)}});(0,s.tp)().prototype.atan=function(){return this.throwIfDisposed(),k(this)};var _=t(14548);const W=(0,c.op)({atan2_:function U(wt,ae){let ge=(0,m.YT)(wt,"a","atan2"),De=(0,m.YT)(ae,"b","atan2");return[ge,De]=(0,_.makeTypesMatch)(ge,De),i.T2.runKernel(E.lxb,{a:ge,b:De})}});(0,s.tp)().prototype.atan2=function(wt){return this.throwIfDisposed(),W(this,wt)};const j=(0,c.op)({atanh_:function Z(wt){const ge={x:(0,m.YT)(wt,"x","atanh")};return i.T2.runKernel(E.zP9,ge)}});(0,s.tp)().prototype.atanh=function(){return this.throwIfDisposed(),j(this)};var it=t(37434);(0,s.tp)().prototype.avgPool=function(wt,ae,ge,De){return this.throwIfDisposed(),(0,it.$)(this,wt,ae,ge,De)};var at=t(69229);(0,s.tp)().prototype.batchToSpaceND=function(wt,ae){return this.throwIfDisposed(),(0,at.G)(this,wt,ae)};var J=t(60571);(0,s.tp)().prototype.batchNorm=function(wt,ae,ge,De,cn){return this.throwIfDisposed(),(0,J.$)(this,wt,ae,ge,De,cn)};var ot=t(3752);(0,s.tp)().prototype.broadcastTo=function(wt){return this.throwIfDisposed(),(0,ot.h)(this,wt)},(0,s.tp)().prototype.cast=function(wt){return this.throwIfDisposed(),(0,w.w)(this,wt)};const tt=(0,c.op)({ceil_:function rt(wt){const ge={x:(0,m.YT)(wt,"x","ceil","float32")};return i.T2.runKernel(E.QDP,ge)}});(0,s.tp)().prototype.ceil=function(){return this.throwIfDisposed(),tt(this)};var Tt=t(70581);(0,s.tp)().prototype.clipByValue=function(wt,ae){return this.throwIfDisposed(),(0,Tt.z)(this,wt,ae)};var Et=t(35213);(0,s.tp)().prototype.concat=function(wt,ae){return this.throwIfDisposed(),wt instanceof s.qY&&(wt=[wt]),(0,Et.x)([this,...wt],ae)};var At=t(53054);(0,s.tp)().prototype.conv1d=function(wt,ae,ge,De,cn,mn){return this.throwIfDisposed(),(0,At.k)(this,wt,ae,ge,De,cn,mn)};var oe=t(83521);(0,s.tp)().prototype.conv2dTranspose=function(wt,ae,ge,De,cn){return this.throwIfDisposed(),(0,oe.w)(this,wt,ae,ge,De,cn)};var Gt=t(12809);(0,s.tp)().prototype.conv2d=function(wt,ae,ge,De,cn,mn){return this.throwIfDisposed(),(0,Gt.X)(this,wt,ae,ge,De,cn,mn)};var ce=t(54758);(0,s.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,ce.g)(this)};var Jt=t(12076);(0,s.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Jt.y)(this)};var ue=t(63371);(0,s.tp)().prototype.cumprod=function(wt,ae,ge){return this.throwIfDisposed(),(0,ue.L)(this,wt,ae,ge)};var ie=t(28799);(0,s.tp)().prototype.cumsum=function(wt,ae,ge){return this.throwIfDisposed(),(0,ie.r)(this,wt,ae,ge)};const Se=(0,c.op)({depthToSpace_:function re(wt,ae,ge="NHWC"){const De=(0,m.YT)(wt,"x","depthToSpace","float32"),cn="NHWC"===ge?De.shape[1]:De.shape[2],mn="NHWC"===ge?De.shape[2]:De.shape[3],En="NHWC"===ge?De.shape[3]:De.shape[1];return b.vA(ae>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${ae}`),b.vA(cn*ae>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${cn} and ${ae}  for depthToSpace with input shape\n    ${De.shape}`),b.vA(mn*ae>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${mn} and ${ae} for depthToSpace with input shape\n        ${De.shape}`),b.vA(En%(ae*ae)==0,()=>`Dimension size must be evenly divisible by ${ae*ae} but is ${En} for depthToSpace with input shape ${De.shape}`),i.T2.runKernel(E.TMz,{x:De},{blockSize:ae,dataFormat:ge})}});(0,s.tp)().prototype.depthToSpace=function(wt,ae){return this.throwIfDisposed(),Se(this,wt,ae)};var Oe=t(73595);(0,s.tp)().prototype.depthwiseConv2d=function(wt,ae,ge,De,cn,mn){return this.throwIfDisposed(),(0,Oe.G)(this,wt,ae,ge,De,cn,mn)};const Kt=(0,c.op)({dilation2d_:function Dt(wt,ae,ge,De,cn=[1,1],mn="NHWC"){const En=(0,m.YT)(wt,"x","dilation2d"),_n=(0,m.YT)(ae,"filter","dilation2d");b.vA(3===En.rank||4===En.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${En.rank}.`),b.vA(3===_n.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${_n.rank}.`),b.vA("NHWC"===mn,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${mn}`);let Yn=En,vs=!1;3===En.rank&&(Yn=(0,S.t)(En,[1,En.shape[0],En.shape[1],En.shape[2]]),vs=!0),b.vA(Yn.shape[3]===_n.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${Yn.shape[3]} vs ${_n.shape[2]}`);const Rs=i.T2.runKernel(E.jxD,{x:Yn,filter:_n},{strides:ge,pad:De,dilations:cn});return vs?(0,S.t)(Rs,[Rs.shape[1],Rs.shape[2],Rs.shape[3]]):Rs}});(0,s.tp)().prototype.dilation2d=function(wt,ae,ge,De,cn){return this.throwIfDisposed(),Kt(this,wt,ae,ge,De,cn)};var te=t(4350),he=t(68833),Ke=t(56914),on=t(44714);const fn=(0,c.op)({divNoNan_:function vn(wt,ae){let ge=(0,m.YT)(wt,"a","div"),De=(0,m.YT)(ae,"b","div");[ge,De]=(0,_.makeTypesMatch)(ge,De);const cn=(0,te.y)(ge,De),mn=(0,on.P)(cn),En=(0,he.L)(De,mn);return(0,Ke._)(En,mn,cn)}});(0,s.tp)().prototype.divNoNan=function(wt){return this.throwIfDisposed(),fn(this,wt)},(0,s.tp)().prototype.div=function(wt){return this.throwIfDisposed(),(0,te.y)(this,wt)};var dn=t(60314);const wn=(0,c.op)({dot_:function $n(wt,ae){const ge=(0,m.YT)(wt,"t1","dot"),De=(0,m.YT)(ae,"t2","dot");b.vA(!(1!==ge.rank&&2!==ge.rank||1!==De.rank&&2!==De.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${ge.rank} and ${De.rank}.`);const cn=1===ge.rank?ge.size:ge.shape[1],mn=1===De.rank?De.size:De.shape[0];if(b.vA(cn===mn,()=>`Error in dot: inner dimensions of inputs must match, but got ${cn} and ${mn}.`),1===ge.rank&&1===De.rank){const En=(0,S.t)(ge,[1,-1]),_n=(0,S.t)(De,[-1,1]),Yn=(0,dn.N)(En,_n);return(0,S.t)(Yn,[])}if(1===ge.rank&&2===De.rank){const En=(0,S.t)(ge,[1,-1]),_n=(0,S.t)(De,[De.shape[0],De.shape[1]]),Yn=(0,dn.N)(En,_n);return(0,S.t)(Yn,[Yn.size])}if(2===ge.rank&&1===De.rank){const En=(0,S.t)(De,[-1,1]),_n=(0,dn.N)(ge,En);return(0,S.t)(_n,[_n.size])}{const En=(0,S.t)(De,[De.shape[0],De.shape[1]]);return(0,dn.N)(ge,En)}}});(0,s.tp)().prototype.dot=function(wt){return this.throwIfDisposed(),wn(this,wt)};var zn=t(41325);(0,s.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,zn.P)(this)},(0,s.tp)().prototype.equal=function(wt){return this.throwIfDisposed(),(0,he.L)(this,wt)};var Gn=t(78650);(0,s.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Gn.Y)(this)};var rs=t(96075);const gs=(0,c.op)({euclideanNorm_:function Jn(wt,ae=null,ge=!1){return(0,rs.x)(wt,"euclidean",ae,ge)}});(0,s.tp)().prototype.euclideanNorm=function(wt,ae){return this.throwIfDisposed(),gs(this,wt,ae)};var As=t(68326);(0,s.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,As.o)(this)};var Gs=t(42103);(0,s.tp)().prototype.expandDims=function(wt){return this.throwIfDisposed(),(0,Gs.U)(this,wt)};const ks=(0,c.op)({expm1_:function us(wt){const ge={x:(0,m.YT)(wt,"x","expm1")};return i.T2.runKernel(E.ybj,ge)}});(0,s.tp)().prototype.expm1=function(){return this.throwIfDisposed(),ks(this)};var Rt=t(90694);(0,s.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Rt.h)(this)},(0,s.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,S.t)(this,[this.size])};var Ut=t(41467);(0,s.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,Ut.R)(this)};var lt=t(34316);(0,s.tp)().prototype.floorDiv=function(wt){return this.throwIfDisposed(),(0,lt.w)(this,wt)};var kt=t(38837);(0,s.tp)().prototype.gather=function(wt,ae,ge){return this.throwIfDisposed(),(0,kt.k)(this,wt,ae,ge)};var q=t(94300);(0,s.tp)().prototype.greaterEqual=function(wt){return this.throwIfDisposed(),(0,q.D)(this,wt)};var xt=t(54807);(0,s.tp)().prototype.greater=function(wt){return this.throwIfDisposed(),(0,xt.r)(this,wt)};var It=t(15245);(0,s.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,It.K)(this)};var dt=t(43);(0,s.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,dt.g)(this)};const Xt=(0,c.op)({isFinite_:function pt(wt){const ge={x:(0,m.YT)(wt,"x","isFinite")};return i.T2.runKernel(E.gIW,ge)}});(0,s.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),Xt(this)};const ve=(0,c.op)({isInf_:function Yt(wt){const ge={x:(0,m.YT)(wt,"x","isInf")};return i.T2.runKernel(E.E3$,ge)}});(0,s.tp)().prototype.isInf=function(){return this.throwIfDisposed(),ve(this)};const tn=(0,c.op)({isNaN_:function be(wt){const ge={x:(0,m.YT)(wt,"x","isNaN")};return i.T2.runKernel(E.iPs,ge)}});(0,s.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),tn(this)};var ln=t(93580);(0,s.tp)().prototype.leakyRelu=function(wt){return this.throwIfDisposed(),(0,ln.H)(this,wt)};var Ee=t(94411);(0,s.tp)().prototype.lessEqual=function(wt){return this.throwIfDisposed(),(0,Ee.I)(this,wt)};var _e=t(56576);(0,s.tp)().prototype.less=function(wt){return this.throwIfDisposed(),(0,_e.M)(this,wt)};const Te=(0,c.op)({localResponseNormalization_:function We(wt,ae=5,ge=1,De=1,cn=.5){const mn=(0,m.YT)(wt,"x","localResponseNormalization");b.vA(4===mn.rank||3===mn.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${mn.rank}.`),b.vA(b.E6(ae),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${ae}.`);let En=mn,_n=!1;3===mn.rank&&(_n=!0,En=(0,S.t)(mn,[1,mn.shape[0],mn.shape[1],mn.shape[2]]));const Vn=i.T2.runKernel(E.jM4,{x:En},{depthRadius:ae,bias:ge,alpha:De,beta:cn});return _n?(0,S.t)(Vn,[Vn.shape[1],Vn.shape[2],Vn.shape[3]]):Vn}});(0,s.tp)().prototype.localResponseNormalization=function(wt,ae,ge,De){return this.throwIfDisposed(),Te(this,wt,ae,ge,De)};var en=t(22047),ze=t(59731),un=t(43267),Sn=t(53205),Un=t(14181);const es=(0,c.op)({logSigmoid_:function bn(wt){const ae=(0,m.YT)(wt,"x","logSigmoid");return(0,en._X)(De=>({value:(0,un.H)((0,Un.l)((0,un.H)(De))),gradFunc:En=>(0,ze.l)(En,(0,Sn.r)((0,un.H)(De)))}))(ae)}});(0,s.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),es(this)};var kn=t(89578);(0,s.tp)().prototype.logSoftmax=function(wt){return this.throwIfDisposed(),(0,kn.H)(this,wt)};var Zn=t(17391);(0,s.tp)().prototype.logSumExp=function(wt,ae){return this.throwIfDisposed(),(0,Zn.V)(this,wt,ae)};var Es=t(8535);(0,s.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,Es.R)(this)};var cs=t(72954);(0,s.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,cs.K)(this)};var fs=t(21292);(0,s.tp)().prototype.logicalAnd=function(wt){return this.throwIfDisposed(),(0,fs.n)(this,wt)};var Hs=t(88288);(0,s.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Hs.N)(this)};var js=t(9269);const ys=(0,c.op)({logicalOr_:function Ds(wt,ae){const ge=(0,m.YT)(wt,"a","logicalOr","bool"),De=(0,m.YT)(ae,"b","logicalOr","bool");return(0,js.assertAndGetBroadcastShape)(ge.shape,De.shape),i.T2.runKernel(E.LXA,{a:ge,b:De})}});(0,s.tp)().prototype.logicalOr=function(wt){return this.throwIfDisposed(),ys(this,wt)};const Fs=(0,c.op)({logicalXor_:function bs(wt,ae){const ge=(0,m.YT)(wt,"a","logicalXor","bool"),De=(0,m.YT)(ae,"b","logicalXor","bool");return(0,js.assertAndGetBroadcastShape)(ge.shape,De.shape),(0,fs.n)(ys(wt,ae),(0,Hs.N)((0,fs.n)(wt,ae)))}});(0,s.tp)().prototype.logicalXor=function(wt){return this.throwIfDisposed(),Fs(this,wt)},(0,s.tp)().prototype.matMul=function(wt,ae,ge){return this.throwIfDisposed(),(0,dn.N)(this,wt,ae,ge)};var Qs=t(40044);(0,s.tp)().prototype.maxPool=function(wt,ae,ge,De){return this.throwIfDisposed(),(0,Qs.j)(this,wt,ae,ge,De)};var Dr=t(56619);(0,s.tp)().prototype.max=function(wt,ae){return this.throwIfDisposed(),(0,Dr.T)(this,wt,ae)};var Ir=t(74659);(0,s.tp)().prototype.maximum=function(wt){return this.throwIfDisposed(),(0,Ir.P)(this,wt)};var Pr=t(23444);(0,s.tp)().prototype.mean=function(wt,ae){return this.throwIfDisposed(),(0,Pr.i)(this,wt,ae)};var lr=t(82825);(0,s.tp)().prototype.min=function(wt,ae){return this.throwIfDisposed(),(0,lr.j)(this,wt,ae)};var Ws=t(85233);(0,s.tp)().prototype.minimum=function(wt){return this.throwIfDisposed(),(0,Ws.B)(this,wt)};const Or=(0,c.op)({mirrorPad_:function ur(wt,ae,ge){b.vA("reflect"===ge||"symmetric"===ge,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${ge}.`);const De=(0,m.YT)(wt,"x","mirrorPad");if(0===De.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");b.vA(ae.length===De.rank,()=>`Padding doesn't match input. Must be ${De.rank}. Got ${ae.length}.`);const cn="reflect"===ge?1:0;for(let _n=0;_n<De.rank;_n++)b.vA(2===ae[_n].length,()=>"Invalid number of paddings. Must be length of 2 each."),b.vA(ae[_n][0]>=0&&ae[_n][0]<=De.shape[_n]-cn&&ae[_n][1]>=0&&ae[_n][1]<=De.shape[_n]-cn,()=>`Padding in dimension ${_n} cannot be greater than or equal to ${De.shape[_n]-cn} or less than 0 for input of shape ${De.shape}`);return i.T2.runKernel(E.x7F,{x:De},{paddings:ae,mode:ge})}});(0,s.tp)().prototype.mirrorPad=function(wt,ae){return this.throwIfDisposed(),Or(this,wt,ae)};const Js=(0,c.op)({mod_:function Is(wt,ae){let ge=(0,m.YT)(wt,"a","mod"),De=(0,m.YT)(ae,"b","mod");return[ge,De]=(0,_.makeTypesMatch)(ge,De),i.T2.runKernel(E.BLA,{a:ge,b:De})}});(0,s.tp)().prototype.mod=function(wt){return this.throwIfDisposed(),Js(this,wt)},(0,s.tp)().prototype.mul=function(wt){return this.throwIfDisposed(),(0,ze.l)(this,wt)},(0,s.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,un.H)(this)},(0,s.tp)().prototype.norm=function(wt,ae,ge){return this.throwIfDisposed(),(0,rs.x)(this,wt,ae,ge)};var cr=t(66279);(0,s.tp)().prototype.notEqual=function(wt){return this.throwIfDisposed(),(0,cr.E)(this,wt)};var qs=t(87073);(0,s.tp)().prototype.oneHot=function(wt,ae=1,ge=0){return this.throwIfDisposed(),(0,qs.M)(this,wt,ae,ge)};var dr=t(28692);(0,s.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,dr.P)(this)};var Ps=t(54472);(0,s.tp)().prototype.pad=function(wt,ae){return this.throwIfDisposed(),(0,Ps.e)(this,wt,ae)};var Us=t(29458),pr=t(93713);const Sr=(0,c.op)({pool_:function hr(wt,ae,ge,De,cn,mn,En){null==cn&&(cn=[1,1]),null==mn&&(mn=1),0===De&&(De="valid");const _n=(0,m.YT)(wt,"x","maxPool");let Yn=_n,vs=!1;3===_n.rank&&(vs=!0,Yn=(0,S.t)(_n,[1,_n.shape[0],_n.shape[1],_n.shape[2]])),b.vA(Us.G0(mn,cn),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${mn} and dilations '${cn}'`);const Vn=Us.E6(Yn.shape,ae,mn,cn,De),os=[Vn.dilationHeight,Vn.dilationWidth];let Rs;Rs="same"===De?function tr(wt,ae){const De=wt.map((En,_n)=>En+(En-1)*(ae[_n]-1)).map(En=>En-1),cn=De.map(En=>Math.floor(En/2)),mn=De.map((En,_n)=>En-cn[_n]);return De.map((En,_n)=>[cn[_n],mn[_n]])}([Vn.filterHeight,Vn.filterWidth],os):[[0,0],[0,0]];const zr=1===os[0]&&1===os[1],[eo,no]=function fr(wt,ae,ge){const De=ge.map(Vn=>Vn[0]),cn=ge.map(Vn=>Vn[1]),mn=wt.concat(De,cn),En=ae.map((Vn,os)=>(Vn-mn[os]%Vn)%Vn),_n=cn.map((Vn,os)=>Vn+En[os]),Yn=ae.map((Vn,os)=>[De[os],_n[os]]),vs=ae.map((Vn,os)=>[0,En[os]]);return[Yn,vs]}([Vn.inHeight,Vn.inWidth],os,Rs),Qr=zr?De:"valid",Jr=zr?Yn:(0,pr.e)(Yn,os,eo),bt=("avg"===ge?()=>(0,it.$)(Jr,ae,mn,Qr,En):()=>(0,Qs.j)(Jr,ae,mn,Qr,En))(),Qt=zr?bt:(0,at.G)(bt,os,no);return vs?(0,S.t)(Qt,[Qt.shape[1],Qt.shape[2],Qt.shape[3]]):Qt}});(0,s.tp)().prototype.pool=function(wt,ae,ge,De,cn,mn){return this.throwIfDisposed(),Sr(this,wt,ae,ge,De,cn,mn)};var Zs=t(53827);(0,s.tp)().prototype.pow=function(wt){return this.throwIfDisposed(),(0,Zs.n)(this,wt)};var Ms=t(62655);(0,s.tp)().prototype.prelu=function(wt){return this.throwIfDisposed(),(0,Ms.N)(this,wt)};const gr=(0,c.op)({prod_:function mr(wt,ae=null,ge=!1){let De=(0,m.YT)(wt,"x","prod");return"bool"===De.dtype&&(De=(0,w.w)(De,"int32")),i.T2.runKernel(E.kdj,{x:De},{axis:ae,keepDims:ge})}});(0,s.tp)().prototype.prod=function(wt,ae){return this.throwIfDisposed(),gr(this,wt,ae)};const y=(0,c.op)({reciprocal_:function O(wt){const ge={x:(0,m.YT)(wt,"x","reciprocal")};return i.T2.runKernel(E.huO,ge)}});(0,s.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),y(this)};var I=t(98611);(0,s.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,I.V)(this)};var K=t(55065);(0,s.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,K.j)(this)},(0,s.tp)().prototype.reshapeAs=function(wt){return this.throwIfDisposed(),(0,S.t)(this,wt.shape)},(0,s.tp)().prototype.reshape=function(wt){return this.throwIfDisposed(),(0,S.t)(this,wt)};var nt=t(26486);(0,s.tp)().prototype.resizeBilinear=function(wt,ae,ge){return this.throwIfDisposed(),(0,nt.v)(this,wt,ae,ge)};var st=t(91719);(0,s.tp)().prototype.resizeNearestNeighbor=function(wt,ae,ge){return this.throwIfDisposed(),(0,st.b)(this,wt,ae,ge)};var Mt=t(21067);(0,s.tp)().prototype.reverse=function(wt){return this.throwIfDisposed(),(0,Mt.B)(this,wt)};var Ot=t(40638);(0,s.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Ot.z)(this)};var ee=t(23821);(0,s.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,ee.L)(this)};var Pe=t(90313);(0,s.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Pe.Z)(this)};var $e=t(26966);(0,s.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,$e.W)(this)};var He=t(48285);(0,s.tp)().prototype.separableConv2d=function(wt,ae,ge,De,cn,mn){return this.throwIfDisposed(),(0,He.w)(this,wt,ae,ge,De,cn,mn)},(0,s.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Sn.r)(this)};const Tn=(0,c.op)({sign_:function qe(wt){const ge={x:(0,m.YT)(wt,"x","sign")};return i.T2.runKernel(E.YVe,ge)}});(0,s.tp)().prototype.sign=function(){return this.throwIfDisposed(),Tn(this)};var Ln=t(20415);(0,s.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,Ln.F)(this)};var xn=t(91071);(0,s.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,xn.L)(this)};var sn=t(94063);(0,s.tp)().prototype.slice=function(wt,ae){return this.throwIfDisposed(),(0,sn.d)(this,wt,ae)};var Pn=t(52431);(0,s.tp)().prototype.softmax=function(wt){return this.throwIfDisposed(),(0,Pn.V)(this,wt)},(0,s.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Un.l)(this)},(0,s.tp)().prototype.spaceToBatchND=function(wt,ae){return this.throwIfDisposed(),(0,pr.e)(this,wt,ae)};var ss=t(91517);(0,s.tp)().prototype.split=function(wt,ae){return this.throwIfDisposed(),(0,ss.l)(this,wt,ae)};var xs=t(51583);(0,s.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,xs.R)(this)};var ds=t(32362);(0,s.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,ds.E)(this)};var Bn=t(24976);(0,s.tp)().prototype.squaredDifference=function(wt){return this.throwIfDisposed(),(0,Bn.P)(this,wt)};var Ns=t(41621);(0,s.tp)().prototype.squeeze=function(wt){return this.throwIfDisposed(),(0,Ns.r)(this,wt)};var Vs=t(92885);(0,s.tp)().prototype.stack=function(wt,ae){this.throwIfDisposed();const ge=wt instanceof s.qY?[this,wt]:[this,...wt];return(0,Vs.t)(ge,ae)};var er=t(72079);(0,s.tp)().prototype.step=function(wt){return this.throwIfDisposed(),(0,er.P)(this,wt)};const sr=(0,c.op)({stridedSlice_:function nr(wt,ae,ge,De,cn=0,mn=0,En=0,_n=0,Yn=0){const Vn={x:(0,m.YT)(wt,"x","stridedSlice","string_or_numeric")};return i.T2.runKernel(E.UcO,Vn,{begin:ae,end:ge,strides:De,beginMask:cn,endMask:mn,ellipsisMask:En,newAxisMask:_n,shrinkAxisMask:Yn})}});(0,s.tp)().prototype.stridedSlice=function(wt,ae,ge,De,cn,mn,En,_n){return this.throwIfDisposed(),sr(this,wt,ae,ge,De,cn,mn,En,_n)};var rr=t(59279);(0,s.tp)().prototype.sub=function(wt){return this.throwIfDisposed(),(0,rr.j)(this,wt)};var Ar=t(66342);(0,s.tp)().prototype.sum=function(wt,ae){return this.throwIfDisposed(),(0,Ar.c)(this,wt,ae)};const kr=(0,c.op)({tan_:function br(wt){const ge={x:(0,m.YT)(wt,"x","tan","float32")};return i.T2.runKernel(E.oFs,ge)}});(0,s.tp)().prototype.tan=function(){return this.throwIfDisposed(),kr(this)};var Er=t(86580);(0,s.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Er.y)(this)};var Fr=t(36409);(0,s.tp)().prototype.tile=function(wt){return this.throwIfDisposed(),(0,Fr.V)(this,wt)},(0,s.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,w.w)(this,"bool")},(0,s.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,w.w)(this,"float32")},(0,s.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,w.w)(this,"int32")};const Ur=(0,c.op)({topk_:function Wr(wt,ae=1,ge=!0){const De=(0,m.YT)(wt,"x","topk");if(0===De.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const cn=De.shape[De.shape.length-1];if(ae<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${ae}`);if(ae>cn)throw new Error(`'k' passed to topk() must be <= the last dimension (${cn}) but got ${ae}`);const mn={x:De},En={k:ae,sorted:ge},[_n,Yn]=i.T2.runKernel(E.TBb,mn,En);return{values:_n,indices:Yn}}});(0,s.tp)().prototype.topk=function(wt,ae){return this.throwIfDisposed(),Ur(this,wt,ae)};var _r=t(77914);(0,s.tp)().prototype.transpose=function(wt){return this.throwIfDisposed(),(0,_r.m)(this,wt)};const Mr=(0,c.op)({unique_:function Vr(wt,ae=0){const ge=(0,m.YT)(wt,"x","unique","string_or_numeric");(0,b.vA)(ge.rank>0,()=>"The input tensor must be at least 1D");const De={x:ge},cn={axis:ae},[mn,En]=i.T2.runKernel(E.EwU,De,cn);return{values:mn,indices:En}}});(0,s.tp)().prototype.unique=function(wt){return this.throwIfDisposed(),Mr(this,wt)};var Kr=t(90893);(0,s.tp)().prototype.unsortedSegmentSum=function(wt,ae){return this.throwIfDisposed(),(0,Kr.z)(this,wt,ae)};var or=t(48256);(0,s.tp)().prototype.unstack=function(wt){return this.throwIfDisposed(),(0,or.K)(this,wt)},(0,s.tp)().prototype.where=function(wt,ae){return this.throwIfDisposed(),(0,Ke._)(wt,this,ae)},(0,s.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,on.P)(this)}},62914:(ft,N,t)=>{"use strict";var e=t(30162),s=t(92290),i=t(59731),E=t(72079);const m={kernelName:e.ljI,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,E.P)((0,s.w)(Bt,"float32"),-1))}}};var c=t(4350),x=t(43267),g=t(10829),h=t(51583),f=t(32362),p=t(59279);const u={kernelName:e.Vvy,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>{const Ht=(0,f.E)((0,s.w)(Bt,"float32")),le=(0,h.R)((0,p.j)((0,g.d)(1),Ht));return(0,x.H)((0,c.y)(bt,le))}}}},d={kernelName:e.PH8,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>{const Ht=(0,h.R)((0,p.j)((0,f.E)((0,s.w)(Bt,"float32")),1));return(0,c.y)(bt,Ht)}}}};var C=t(9269),T=t(94399),D=t(66342);const S={kernelName:e.OMN,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=C.assertAndGetBroadcastShape(Bt.shape,Ht.shape);return{a:()=>{let pe=bt;const ye=C.getReductionAxes(Bt.shape,le);return ye.length>0&&(pe=(0,D.c)(pe,ye)),(0,T.t)(pe,Bt.shape)},b:()=>{let pe=bt;const ye=C.getReductionAxes(Ht.shape,le);return ye.length>0&&(pe=(0,D.c)(pe,ye)),(0,T.t)(pe,Ht.shape)}}}},b={kernelName:e.EkD,saveAllInputs:!0,gradFunc:(bt,Qt)=>{const Bt={};return Qt.forEach((Ht,le)=>{Bt[le]=()=>bt.clone()}),Bt}};var w=t(44714);const G={kernelName:e.Jp_,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,w.P)(Bt)}}},H={kernelName:e.p_m,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,w.P)(Bt)}}},F={kernelName:e.QKF,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,h.R)((0,p.j)((0,g.d)(1),(0,f.E)((0,s.w)(Bt,"float32")))))}}};var B=t(83034);const A={kernelName:e.epO,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>{const Ht=(0,h.R)((0,B.W)((0,g.d)(1),(0,f.E)((0,s.w)(Bt,"float32"))));return(0,c.y)(bt,Ht)}}}},k={kernelName:e.lxb,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,C.assertAndGetBroadcastShape)(Bt.shape,Ht.shape);return{a:()=>{const pe=(0,B.W)((0,f.E)(Bt),(0,f.E)(Ht));let ye=(0,i.l)(bt,(0,c.y)(Ht,pe));const gn=(0,C.getReductionAxes)(Bt.shape,le);return gn.length>0&&(ye=(0,D.c)(ye,gn)),(0,T.t)(ye,Bt.shape)},b:()=>{const pe=(0,B.W)((0,f.E)(Bt),(0,f.E)(Ht));let ye=(0,x.H)((0,i.l)(bt,(0,c.y)(Bt,pe)));const gn=(0,C.getReductionAxes)(Ht.shape,le);return gn.length>0&&(ye=(0,D.c)(ye,gn)),(0,T.t)(ye,Ht.shape)}}}},_={kernelName:e.TyE,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,B.W)((0,f.E)((0,s.w)(Bt,"float32")),1))}}},U={kernelName:e.zP9,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,p.j)((0,g.d)(1),(0,f.E)((0,s.w)(Bt,"float32"))))}}};var W=t(611),Z=t(17636),j=t(26674),it=t(29458),at=t(87844);const ot=(0,at.op)({avgPool3dGrad_:function J(bt,Qt,Bt,Ht,le,fe){const Ce=(0,Z.YT)(bt,"dy","avgPool3dGrad"),pe=(0,Z.YT)(Qt,"input","avgPool3dGrad");let ye=Ce,gn=pe,An=!1;4===pe.rank&&(An=!0,ye=(0,T.t)(Ce,[1,Ce.shape[0],Ce.shape[1],Ce.shape[2],Ce.shape[3]]),gn=(0,T.t)(pe,[1,pe.shape[0],pe.shape[1],pe.shape[2],pe.shape[3]])),j.vA(5===ye.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${ye.rank}.`),j.vA(5===gn.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${gn.rank}.`),(0,it.s_)("avgPool3dGrad",le,fe);const jn=W.T2.runKernel(e.wwC,{dy:ye,input:gn},{filterSize:Bt,strides:Ht,pad:le,dimRoundingMode:fe});return An?(0,T.t)(jn,[jn.shape[1],jn.shape[2],jn.shape[3],jn.shape[4]]):jn}}),rt={kernelName:e.cS,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{filterSize:le,strides:fe,pad:Ce,dimRoundingMode:pe}=Bt;return{x:()=>ot(bt,Ht,le,fe,Ce,pe)}}},Tt=(0,at.op)({avgPoolGrad_:function tt(bt,Qt,Bt,Ht,le){const fe=(0,Z.YT)(bt,"dy","avgPoolGrad"),Ce=(0,Z.YT)(Qt,"input","avgPoolGrad");j.vA(Ce.rank===fe.rank,()=>`Rank of input (${Ce.rank}) does not match rank of dy (${fe.rank})`);let pe=Ce,ye=fe,gn=!1;3===Ce.rank&&(gn=!0,pe=(0,T.t)(Ce,[1,Ce.shape[0],Ce.shape[1],Ce.shape[2]]),ye=(0,T.t)(fe,[1,fe.shape[0],fe.shape[1],fe.shape[2]])),j.vA(4===ye.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${ye.rank}.`),j.vA(4===pe.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${pe.rank}.`);const Kn=W.T2.runKernel(e.VCH,{dy:ye,input:pe},{filterSize:Bt,strides:Ht,pad:le});return gn?(0,T.t)(Kn,[Kn.shape[1],Kn.shape[2],Kn.shape[3]]):Kn}}),Et={kernelName:e.ho8,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{filterSize:le,strides:fe,pad:Ce}=Bt;return{x:()=>Tt(bt,Ht,le,fe,Ce)}}};var At=t(60314);const oe={kernelName:e.jAQ,inputsToSave:["a","b"],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{transposeA:fe,transposeB:Ce}=Bt;return fe||Ce?!fe&&Ce?{a:()=>(0,At.N)(bt,le,!1,!1),b:()=>(0,At.N)(bt,Ht,!0,!1)}:fe&&!Ce?{a:()=>(0,At.N)(le,bt,!1,!0),b:()=>(0,At.N)(Ht,bt,!1,!1)}:{a:()=>(0,At.N)(le,bt,!0,!0),b:()=>(0,At.N)(bt,Ht,!0,!0)}:{a:()=>(0,At.N)(bt,le,!1,!0),b:()=>(0,At.N)(Ht,bt,!0,!1)}}};var Gt=t(93713);const ce={kernelName:e.Ik2,gradFunc:(bt,Qt,Bt)=>{const{blockShape:Ht,crops:le}=Bt;return{x:()=>(0,Gt.e)(bt,Ht,le)}}},Jt={kernelName:e.LB5,gradFunc:(bt,Qt,Bt)=>{const le=Bt.inputShape,fe=Bt.shape,Ce=Array.from(fe);for(let ye=le.length-1;ye>=0;ye--)if(le[ye]===fe[ye])Ce[ye]=1;else if(1!==le[ye])throw new Error(`broadcastTo(): [${le}] cannot be broadcast to [${fe}].`);const pe=[];for(let ye=0;ye<Ce.length;ye++)Ce[ye]>1&&pe.push(ye);return{x:()=>(0,D.c)(bt,pe,!0)}}},ue={kernelName:e.KXH,gradFunc:bt=>({x:()=>bt.clone()})},ie={kernelName:e.QDP,gradFunc:bt=>({x:()=>(0,w.P)(bt)})};var re=t(94300),Se=t(94411),Oe=t(21292),Dt=t(56914);const Kt={kernelName:e.vaV,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{clipValueMin:le,clipValueMax:fe}=Bt;return{x:()=>(0,Dt._)((0,Oe.n)((0,re.D)(Ht,le),(0,Se.I)(Ht,fe)),bt,(0,w.P)(bt))}}},te={kernelName:e.$zE,inputsToSave:["x"],gradFunc:m.gradFunc};var he=t(91517);const Ke={kernelName:e.$dB,saveAllInputs:!0,gradFunc:(bt,Qt,Bt)=>{const Ht=Qt.map(ye=>ye.shape),{axis:le}=Bt,fe=(0,j.Y6)(le,Qt[0].shape)[0],Ce=Ht.map(ye=>ye[fe]);return(0,he.l)(bt,Ce,fe).map(ye=>()=>ye)}};var on=t(70511),vn=t(73725);const fn={kernelName:e.p2J,inputsToSave:["x","filter"],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{dilations:fe,strides:Ce,pad:pe,dataFormat:ye}=Bt;return j.vA(it.Dh(fe),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${fe}'`),{x:()=>(0,vn.v)(Ht.shape,bt,le,Ce,pe,ye),filter:()=>(0,on.H)(Ht,bt,le.shape,Ce,pe,ye)}}};var dn=t(12809);const $n={kernelName:e.jfg,inputsToSave:["dy","filter"],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{strides:fe,pad:Ce,dataFormat:pe,dimRoundingMode:ye}=Bt;return{dy:()=>(0,dn.X)(bt,le,fe,Ce,pe,1,ye),filter:()=>(0,on.H)(bt,Ht,le.shape,fe,Ce,pe,ye)}}},zn=(0,at.op)({conv3DBackpropFilter_:function wn(bt,Qt,Bt,Ht,le){let fe=bt;4===bt.rank&&(fe=(0,T.t)(bt,[1,bt.shape[0],bt.shape[1],bt.shape[2],bt.shape[3]]));let Ce=Qt;return 4===Ce.rank&&(Ce=(0,T.t)(Qt,[1,Qt.shape[0],Qt.shape[1],Qt.shape[2],Qt.shape[3]])),j.vA(5===fe.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${fe.shape}.`),j.vA(5===Ce.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${Ce.shape}.`),j.vA(5===Bt.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${Bt}.`),j.vA(fe.shape[4]===Bt[3],()=>`Error in conv3dDerFilter: depth of input ${fe.shape[4]}) must match input depth in filter (${Bt[3]}.`),j.vA(Ce.shape[4]===Bt[4],()=>`Error in conv3dDerFilter: depth of dy (${Ce.shape[4]}) must match output depth for filter (${Bt[4]}).`),W.T2.runKernel(e.iGz,{x:fe,dy:Ce},{strides:Ht,pad:le,filterShape:Bt})}});var Gn=t(87482);const rs={kernelName:e.A1h,inputsToSave:["x","filter"],gradFunc:(bt,Qt,Bt)=>{const{dilations:Ht,strides:le,pad:fe}=Bt;j.vA((0,it.Dh)(Ht),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${Ht}'`);const[Ce,pe]=Qt;return{x:()=>(0,Gn.c)(Ce.shape,bt,pe,le,fe),filter:()=>zn(Ce,bt,pe.shape,le,fe)}}};var Jn=t(20415);const gs={kernelName:e.Mn0,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)((0,x.H)((0,Jn.F)((0,s.w)(Bt,"float32"))),bt)}}};var As=t(91071);const Gs={kernelName:e.MnK,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)((0,As.L)((0,s.w)(Bt,"float32")),bt)}}};var us=t(94963),ks=t(28799),Rt=t(77914);const Ut={kernelName:e.nY8,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{axis:le,exclusive:fe,reverse:Ce}=Bt;return{x:()=>{const pe=(0,us.Em)([le],Ht.rank);let ye=(0,ks.r)(bt,le,fe,!Ce);return null!=pe&&(ye=(0,Rt.m)(ye,pe)),ye}}}};var lt=t(60455),kt=t(43749);const q={kernelName:e.tGH,inputsToSave:["x","filter"],gradFunc:(bt,Qt,Bt)=>{const{dilations:Ht,strides:le,pad:fe,dimRoundingMode:Ce}=Bt,pe=null==Ht?[1,1]:Ht;j.vA(it.Dh(pe),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${pe}'`);const[ye,gn]=Qt;return j.vA(4===ye.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${ye.rank}.`),j.vA(4===gn.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${gn.rank}.`),j.vA(ye.shape[3]===gn.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${ye.shape[3]}) must match the inChannels dimension in filter ${gn.shape[2]}.`),j.vA(it.G0(le,pe),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${le} and dilations '${pe}'.`),it.s_("depthwiseConv2d",fe,Ce),{x:()=>(0,kt.l)(ye.shape,bt,gn,le,fe,pe,Ce),filter:()=>(0,lt.x)(ye,bt,gn.shape,le,fe,pe,Ce)}}},xt={kernelName:e.jxD,inputsToSave:["x","filter"],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,fe={x:Ht,filter:le,dy:bt},Ce={x:Ht,filter:le,dy:bt};return{x:()=>W.T2.runKernel(e.bP9,fe,Bt),filter:()=>W.T2.runKernel(e.pk0,Ce,Bt)}}},It={kernelName:e.Pah,outputsToSave:[!0],gradFunc:(bt,Qt)=>{const[Bt]=Qt,Ht={dy:bt,y:Bt};return{x:()=>W.T2.runKernel(e.rsH,Ht)}}};var dt=t(68326);const pt={kernelName:e._s9,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt,Ht=(0,i.l)((0,dt.o)((0,x.H)((0,f.E)(Bt))),2/Math.sqrt(Math.PI));return{x:()=>(0,i.l)(bt,Ht)}}},Xt={kernelName:e.ox3,outputsToSave:[!0],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,Bt)}}},Yt={kernelName:e.ybN,inputsToSave:["input"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{input:()=>(0,T.t)(bt,Bt.shape)}}},ve={kernelName:e.ybj,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,dt.o)(Bt))}}},be={kernelName:e.ZgB,gradFunc:bt=>({x:()=>(0,w.P)(bt)})},tn={kernelName:e.ElG,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,C.assertAndGetBroadcastShape)(Bt.shape,Ht.shape);return{a:()=>{const pe=(0,c.y)(bt,(0,s.w)(Ht,"float32")),ye=(0,C.getReductionAxes)(Bt.shape,le);return ye.length>0?(0,T.t)((0,D.c)(pe,ye),Bt.shape):pe},b:()=>{let pe=(0,i.l)(bt,(0,s.w)(Bt,"float32"));const ye=(0,C.getReductionAxes)(Ht.shape,le);ye.length>0&&(pe=(0,T.t)((0,D.c)(pe,ye),Ht.shape));const gn=(0,f.E)(Ht);return(0,x.H)((0,c.y)(pe,(0,s.w)(gn,"float32")))}}}};var ln=t(90313),Ee=t(36409);const _e={kernelName:e.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(bt,Qt,Bt)=>{const{varianceEpsilon:Ht}=Bt,[le,fe,Ce,pe]=Qt,ye=null==pe?(0,g.d)(1):pe,gn=(0,C.getReductionAxes)(fe.shape,le.shape),An=[];if(1===fe.rank){for(let ps=0;ps<le.shape.length-1;++ps)An.push(le.shape[ps]);An.push(1)}const Hn=(0,p.j)(le,fe),Kn=(0,i.l)(bt,ye),jn=(0,ln.Z)((0,B.W)(Ce,(0,g.d)(Ht))),Ys=(0,i.l)((0,i.l)((0,i.l)(jn,jn),jn),(0,g.d)(-.5));return{x:()=>(0,T.t)((0,i.l)((0,i.l)(bt,1===fe.rank?(0,Ee.V)((0,T.t)(jn,[1,1,1,fe.shape[0]]),An):jn),ye),le.shape),mean:()=>{let ps=(0,i.l)((0,i.l)(jn,(0,g.d)(-1)),Kn);return 1===fe.rank&&(ps=(0,D.c)(ps,gn)),(0,T.t)(ps,fe.shape)},variance:()=>{let ps=(0,i.l)((0,i.l)(Ys,Hn),Kn);return 1===fe.rank&&(ps=(0,D.c)(ps,gn)),(0,T.t)(ps,fe.shape)},scale:()=>{const ps=(0,i.l)(Hn,jn);let Gr=(0,i.l)(bt,ps);return 1===fe.rank&&(Gr=(0,D.c)(Gr,gn)),(0,T.t)(Gr,fe.shape)},offset:()=>{let ps=bt;return 1===fe.rank&&(ps=(0,D.c)(ps,gn)),(0,T.t)(ps,fe.shape)}}}};var We=t(92885),Te=t(90893);const en={kernelName:e.mxL,inputsToSave:["x","indices"],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{axis:fe,batchDims:Ce}=Bt,pe=(0,j.Y6)(fe,Ht.shape)[0],ye=(gn,An,Hn)=>()=>{const Kn=gn.shape,jn=An.size,Ys=Kn.slice(0,pe),yr=Ys.length,Ks=Kn.slice(fe,Kn.length).slice(1),po=Ks.length,ho=ze(0,yr),fo=ze(yr+1,yr+1+po),ps=un([Ys,[jn],Ks]),Gr=(0,T.t)(Hn,ps),Po=(0,T.t)(An,[jn]),mo=un([[yr],ho,fo]),Oo=(0,Rt.m)(Gr,mo);let so=(0,Te.z)(Oo,Po,gn.shape[pe]);const go=(0,us.gx)(mo);return so=(0,Rt.m)(so,go),so};if(1===Ce){const An=Ht.split(Ht.shape[0],0);return{x:()=>(0,We.t)(An.map((jn,Ys)=>ye(jn,le.slice(Ys,1),bt.slice(Ys,1))())).reshape(Ht.shape),indices:()=>le}}return{x:ye(Ht,le,bt),indices:()=>le}}};function ze(bt,Qt){const Bt=[];for(let Ht=bt;Ht<Qt;++Ht)Bt.push(Ht);return Bt}function un(bt){const Qt=[];for(let Bt=0;Bt<bt.length;++Bt)for(let Ht=0;Ht<bt[Bt].length;++Ht)Qt.push(bt[Bt][Ht]);return Qt}const Sn={kernelName:e.lLS,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt;return{a:()=>(0,w.P)(Bt),b:()=>(0,w.P)(Ht)}}},Un={kernelName:e.lzr,gradFunc:bt=>({x:()=>(0,s.w)(bt,"float32")})},bn={kernelName:e.gIW,gradFunc:bt=>({x:()=>(0,w.P)(bt)})},es={kernelName:e.E3$,gradFunc:bt=>({x:()=>(0,w.P)(bt)})},kn={kernelName:e.iPs,gradFunc:bt=>({x:()=>(0,w.P)(bt)})};var Zn=t(54807);const Es={kernelName:e.X0$,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{alpha:le}=Bt,fe=(0,Zn.r)(Ht,0);return{x:()=>(0,Dt._)(fe,bt,(0,i.l)(bt,le))}}},cs={kernelName:e.Cg$,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,B.W)(Bt,1))}}},fs={kernelName:e.tG8,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,s.w)(Bt,"float32"))}}},Hs={kernelName:e.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{axis:le}=Bt;return{logits:()=>{const Ce=(0,dt.o)(Ht);return(0,p.j)(bt,(0,i.l)((0,D.c)(bt,le,!0),Ce))}}}},Ds=(0,at.op)({localResponseNormalizationBackprop_:function js(bt,Qt,Bt,Ht=5,le=1,fe=1,Ce=.5){return W.T2.runKernel(e.ToN,{x:bt,y:Qt,dy:Bt},{depthRadius:Ht,bias:le,alpha:fe,beta:Ce})}}),ys={kernelName:e.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{depthRadius:fe,bias:Ce,alpha:pe,beta:ye}=Bt;return{x:()=>Ds(Ht,le,bt,fe,Ce,pe,ye)}}};var bs=t(68833);function Fs(bt,Qt,Bt,Ht){return Qt.rank<Bt.rank&&(Qt=(0,T.t)(Qt,us.SM(Qt.shape,Ht))),bt.rank<Bt.rank&&(bt=(0,T.t)(bt,us.SM(bt.shape,Ht))),{x:()=>(0,i.l)(bt,(0,s.w)((0,bs.L)(Bt,Qt),bt.dtype))}}const Qs={kernelName:e.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const Ht=Bt,{reductionIndices:le}=Ht,fe=Qt[0],ye=Fs(bt,Qt[1],fe,j.Y6(le,fe.shape));return{x:()=>ye.x()}}};var Dr=t(56576);const Ir={kernelName:e.LDN,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt;return{a:()=>(0,i.l)(bt,(0,s.w)((0,re.D)(Bt,Ht),"float32")),b:()=>(0,i.l)(bt,(0,s.w)((0,Dr.M)(Bt,Ht),"float32"))}}},lr=(0,at.op)({maxPool3dGrad_:function Pr(bt,Qt,Bt,Ht,le,fe,Ce){const pe=(0,Z.YT)(bt,"dy","maxPool3dGrad"),ye=(0,Z.YT)(Qt,"input","maxPool3dGrad"),gn=(0,Z.YT)(Bt,"output","maxPool3dGrad");let An=pe,Hn=ye,Kn=gn,jn=!1;4===ye.rank&&(jn=!0,An=(0,T.t)(pe,[1,pe.shape[0],pe.shape[1],pe.shape[2],pe.shape[3]]),Hn=(0,T.t)(ye,[1,ye.shape[0],ye.shape[1],ye.shape[2],ye.shape[3]]),Kn=(0,T.t)(gn,[1,gn.shape[0],gn.shape[1],gn.shape[2],gn.shape[3]])),j.vA(5===An.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${An.rank}.`),j.vA(5===Hn.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${Hn.rank}.`),j.vA(5===Kn.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${Kn.rank}.`),(0,it.s_)("maxPool3dGrad",fe,Ce);const Ks=W.T2.runKernel(e.cHb,{dy:An,input:Hn,output:Kn},{filterSize:Ht,strides:le,pad:fe,dimRoundingMode:Ce});return jn?(0,T.t)(Ks,[Ks.shape[1],Ks.shape[2],Ks.shape[3],Ks.shape[4]]):Ks}}),Ws={kernelName:e.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{filterSize:fe,strides:Ce,pad:pe,dimRoundingMode:ye}=Bt;return{x:()=>lr(bt,Ht,le,fe,Ce,pe,ye)}}},Or=(0,at.op)({maxPoolGrad_:function ur(bt,Qt,Bt,Ht,le,fe,Ce){const pe=(0,Z.YT)(bt,"dy","maxPoolGrad"),ye=(0,Z.YT)(Qt,"input","maxPoolGrad"),gn=(0,Z.YT)(Bt,"output","maxPoolGrad");return j.vA(ye.rank===pe.rank,()=>`Rank of input (${ye.rank}) does not match rank of dy (${pe.rank})`),j.vA(4===pe.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${pe.rank}.`),j.vA(4===ye.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${ye.rank}.`),it.s_("maxPoolGrad",fe,Ce),W.T2.runKernel(e.RXX,{dy:pe,input:ye,output:gn},{filterSize:Ht,strides:le,pad:fe,dimRoundingMode:Ce})}}),Is={kernelName:e.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const[Ht,le]=Qt,{filterSize:fe,strides:Ce,pad:pe}=Bt;return{x:()=>Or(bt,Ht,le,fe,Ce,pe)}}};var Js=t(95032);const cr={kernelName:e.g5A,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{axis:le}=Bt,fe=j.Y6(le,Ht.shape),pe=(0,us.lb)(Ht.shape,fe)[1],ye=j.Ze(pe);return{x:()=>{const An=Ht.shape.slice();fe.forEach(jn=>{An[jn]=1});const Hn=(0,T.t)(bt,An);return(0,c.y)((0,i.l)(Hn,(0,Js.S)(Ht.shape,"float32")),ye)}}}},qs={kernelName:e.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const Ht=Bt,{axis:le}=Ht,[fe,Ce]=Qt,ye=Fs(bt,Ce,fe,j.Y6(le,fe.shape));return{x:()=>ye.x()}}},dr={kernelName:e.LG0,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt;return{a:()=>(0,i.l)(bt,(0,s.w)((0,Se.I)(Bt,Ht),"float32")),b:()=>(0,i.l)(bt,(0,s.w)((0,Zn.r)(Bt,Ht),"float32"))}}};var Ps=t(94063);const Us={kernelName:e.x7F,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const Ht=Qt[0],{paddings:le}=Bt,fe=le.map(Ce=>Ce[0]);return{x:()=>(0,Ps.d)(bt,fe,Ht.shape)}}};var pr=t(41467);const hr={kernelName:e.BLA,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,C.assertAndGetBroadcastShape)(Bt.shape,Ht.shape);return{a:()=>{const pe=(0,C.getReductionAxes)(Bt.shape,le);return pe.length>0?(0,T.t)((0,D.c)(bt,pe),Bt.shape):bt},b:()=>{const pe=(0,i.l)(bt,(0,x.H)((0,pr.R)((0,c.y)(Bt,Ht)))),ye=(0,C.getReductionAxes)(Ht.shape,le);return ye.length>0?(0,T.t)((0,D.c)(pe,ye),Ht.shape):pe}}}},fr={kernelName:e.xu7,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,C.assertAndGetBroadcastShape)(Bt.shape,Ht.shape);return{a:()=>{const pe=(0,i.l)(bt,(0,s.w)(Ht,"float32")),ye=(0,C.getReductionAxes)(Bt.shape,le);return ye.length>0?(0,T.t)((0,D.c)(pe,ye),Bt.shape):pe},b:()=>{const pe=(0,i.l)(bt,(0,s.w)(Bt,"float32")),ye=(0,C.getReductionAxes)(Ht.shape,le);return ye.length>0?(0,T.t)((0,D.c)(pe,ye),Ht.shape):pe}}}},tr={kernelName:e.l0G,gradFunc:bt=>({x:()=>(0,x.H)(bt)})};var Sr=t(20218);const Zs={kernelName:e.urI,inputsToSave:["indices"],gradFunc:(bt,Qt)=>{const Bt=Qt[0];return{indices:()=>(0,Sr.U)(Bt.shape,"float32")}}},Ms={kernelName:e.LWX,gradFunc:bt=>({x:()=>(0,w.P)(bt)})};var mr=t(48256);const gr={kernelName:e.mM$,saveAllInputs:!0,gradFunc:(bt,Qt,Bt)=>{const{axis:Ht}=Bt;return(0,mr.K)(bt,Ht).map(fe=>()=>fe)}},O={kernelName:e.ODT,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const Ht=Qt[0],{paddings:le}=Bt,fe=le.map(Ce=>Ce[0]);return{x:()=>(0,Ps.d)(bt,fe,Ht.shape)}}};var y=t(8535),I=t(53827);const K={kernelName:e.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(bt,Qt)=>{const[Bt,Ht,le]=Qt,fe=Bt,Ce=Ht,pe=C.assertAndGetBroadcastShape(fe.shape,Ce.shape);return{a:()=>{const An=(0,s.w)(Ce,"float32");let Hn=(0,i.l)(bt,(0,i.l)(An,(0,I.n)(fe,(0,p.j)(An,(0,g.d)(1)))));const Kn=C.getReductionAxes(fe.shape,pe);return Kn.length>0&&(Hn=(0,D.c)(Hn,Kn)),(0,T.t)(Hn,fe.shape)},b:()=>{const An=(0,Zn.r)(fe,0),Hn=(0,Dt._)(An,(0,y.R)(fe),(0,w.P)(fe));let Kn=(0,i.l)(bt,(0,i.l)(le,Hn));const jn=C.getReductionAxes(Ce.shape,pe);return jn.length>0&&(Kn=(0,D.c)(Kn,jn)),(0,T.t)(Kn,Ce.shape)}}}},nt={kernelName:e.Ncv,inputsToSave:["x","alpha"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,Zn.r)(Bt,0);return{x:()=>(0,Dt._)(le,bt,(0,i.l)(bt,Ht)),alpha:()=>{let fe=(0,Dt._)(le,(0,w.P)(bt),(0,i.l)(bt,Bt));const Ce=(0,C.getReductionAxes)(Ht.shape,bt.shape);return Ce.length>0&&(fe=(0,D.c)(fe,Ce)),(0,T.t)(fe,Ht.shape)}}}};var st=t(63371);const ee={kernelName:e.kdj,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{axis:le}=Bt;let fe=[];return fe=null==le?Ht.shape.map((Ce,pe)=>pe):"number"==typeof le?[le]:le,{x:()=>function Ot(bt,Qt,Bt){const Ht=bt.shape.length,le=Ht-Bt.length,fe=us.Em(Bt,Ht);let Ce=bt;null!=fe&&(Ce=(0,Rt.m)(bt,fe));const pe=Ce.shape.slice(),gn=pe.splice(Ht-Bt.length,Bt.length).reduce((Kn,jn)=>Kn*jn,1);pe.push(gn);let Hn=function Mt(bt,Qt,Bt){const Ht=bt.shape.slice();Ht[Bt]=1;const le=(0,T.t)(Qt,Ht),fe=(0,st.L)(bt,Bt,!0,!1),Ce=(0,st.L)(bt,Bt,!0,!0),pe=(0,i.l)(fe,Ce);return(0,i.l)(le,pe)}(Ce.reshape(pe),Qt,le);if(Hn=Hn.reshape(Ce.shape),null!=fe){const Kn=us.gx(fe);Hn=(0,Rt.m)(Hn,Kn)}return Hn}(Ht,bt,fe)}}},Pe={kernelName:e.sDr,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=C.assertAndGetBroadcastShape(Bt.shape,Ht.shape);return{a:()=>{const pe=(0,c.y)(bt,(0,s.w)(Ht,"float32")),ye=C.getReductionAxes(Bt.shape,le);return ye.length>0?(0,T.t)((0,D.c)(pe,ye),Bt.shape):pe},b:()=>{let pe=(0,i.l)(bt,(0,s.w)(Bt,"float32"));const ye=C.getReductionAxes(Ht.shape,le);ye.length>0&&(pe=(0,T.t)((0,D.c)(pe,ye),Ht.shape));const gn=(0,f.E)(Ht);return(0,x.H)((0,c.y)(pe,(0,s.w)(gn,"float32")))}}}},$e={kernelName:e.huO,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,x.H)((0,f.E)(Bt)))}}},He={kernelName:e.P_L,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt,Ht=(0,i.l)((0,Se.I)(Bt,6),(0,E.P)(Bt));return{x:()=>(0,i.l)(bt,(0,s.w)(Ht,"float32"))}}},qe={kernelName:e.fUj,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,s.w)((0,E.P)(Bt),"float32"))}}},Tn={kernelName:e.R23,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,T.t)(bt,Bt.shape)}}},Ln={kernelName:e.hgw,inputsToSave:["images"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,le={dy:bt,images:Ht};return{images:()=>W.T2.runKernel(e.FCQ,le,Bt)}}},xn={kernelName:e.jOE,inputsToSave:["images"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,le={dy:bt,images:Ht};return{images:()=>W.T2.runKernel(e.XQy,le,Bt)}}};var sn=t(21067);const Pn={kernelName:e.D7i,gradFunc:(bt,Qt,Bt)=>{const{dims:Ht}=Bt,le=(0,j.Y6)(Ht,bt.shape);return{x:()=>(0,sn.B)(bt,le)}}},ss={kernelName:e.hVg,gradFunc:bt=>({x:()=>(0,w.P)(bt)})},xs={kernelName:e.TOR,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,x.H)((0,c.y)(bt,(0,i.l)((0,I.n)(Bt,1.5),2)))}}};var ds=t(88288);const Bn={kernelName:e.l6P,inputsToSave:["condition"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{condition:()=>(0,s.w)((0,w.P)(Bt),"float32"),t:()=>(0,i.l)(bt,(0,s.w)(Bt,bt.dtype)),e:()=>(0,i.l)(bt,(0,s.w)((0,ds.N)(Bt),bt.dtype))}}};var Ns=t(62597);const Vs={kernelName:e.u$b,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>{const Ht=(0,Zn.r)(Bt,(0,g.d)(0)),le=(0,g.d)(Ns.j),fe=(0,g.d)(Ns.X),Ce=(0,i.l)(bt,fe),pe=(0,i.l)((0,i.l)(bt,le),(0,dt.o)((0,s.w)(Bt,"float32")));return(0,Dt._)(Ht,Ce,pe)}}}},er={kernelName:e.vI1,outputsToSave:[!0],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,i.l)(Bt,(0,p.j)((0,g.d)(1),Bt)))}}},nr={kernelName:e.YVe,gradFunc:bt=>({x:()=>(0,w.P)(bt)})};var sr=t(54758);const rr={kernelName:e.hql,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)((0,sr.g)((0,s.w)(Bt,"float32")),bt)}}};var Ar=t(12076);const br={kernelName:e.J3C,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)((0,Ar.y)((0,s.w)(Bt,"float32")),bt)}}};var kr=t(54472),Er=t(1986);const Fr={kernelName:e.JiE,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{begin:le,size:fe}=Bt,Ce=Ht.shape,[pe,ye]=(0,Er.parseSliceParams)(Ht,le,fe),gn=[];for(let An=0;An<bt.rank;An++)gn.push([pe[An],Ce[An]-pe[An]-ye[An]]);return{x:()=>(0,kr.e)(bt,gn)}}},Wr={kernelName:e.rFG,outputsToSave:[!0],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{dim:le}=Bt,Ce=(0,i.l)(bt,Ht);return{logits:()=>(0,p.j)(Ce,(0,i.l)((0,D.c)(Ce,[le],!0),Ht))}}};var Ur=t(53205);const _r={kernelName:e.Fin,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,Ur.r)(Bt))}}};var Vr=t(69229);const Mr={kernelName:e.A8B,gradFunc:(bt,Qt,Bt)=>{const{blockShape:Ht,paddings:le}=Bt;return{x:()=>(0,Vr.G)(bt,Ht,le)}}};var Kr=t(35213);const or={kernelName:e.Blb,gradFunc:(bt,Qt,Bt)=>{const{axis:Ht}=Bt;return{x:()=>(0,Kr.x)(bt,Ht)}}},wt={kernelName:e.dFH,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,i.l)((0,h.R)((0,s.w)(Bt,"float32")),2))}}},ae={kernelName:e.M6A,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)(bt,(0,i.l)((0,s.w)(Bt,"float32"),2))}}},ge={kernelName:e.Ddj,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=(0,g.d)(2);return{a:()=>(0,i.l)(bt,(0,i.l)(le,(0,p.j)(Bt,Ht))),b:()=>(0,i.l)(bt,(0,i.l)(le,(0,p.j)(Ht,Bt)))}}},De={kernelName:e.pnw,gradFunc:bt=>({x:()=>(0,w.P)(bt)})},cn={kernelName:e.PbM,inputsToSave:["a","b"],gradFunc:(bt,Qt)=>{const[Bt,Ht]=Qt,le=C.assertAndGetBroadcastShape(Bt.shape,Ht.shape);return{a:()=>{let pe=bt;const ye=C.getReductionAxes(Bt.shape,le);return ye.length>0&&(pe=(0,D.c)(pe,ye)),(0,T.t)(pe,Bt.shape)},b:()=>{let pe=bt;const ye=C.getReductionAxes(Ht.shape,le);return ye.length>0&&(pe=(0,D.c)(pe,ye)),(0,T.t)((0,x.H)(pe),Ht.shape)}}}},mn={kernelName:e.WuN,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,le=Ht.shape.slice(),{axis:fe}=Bt;(0,j.Y6)(fe,Ht.shape).forEach(gn=>{le[gn]=1});const pe=(0,T.t)(bt,le),ye=(0,i.l)(pe,(0,Js.S)(Ht.shape,"float32"));return{x:()=>ye}}},En={kernelName:e.oFs,inputsToSave:["x"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,c.y)(bt,(0,f.E)((0,sr.g)(Bt)))}}},_n={kernelName:e.iuW,outputsToSave:[!0],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>(0,i.l)((0,p.j)((0,g.d)(1),(0,f.E)(Bt)),bt)}}},Yn={kernelName:e.FAs,inputsToSave:["x"],gradFunc:(bt,Qt,Bt)=>{const[Ht]=Qt,{reps:le}=Bt;return{x:()=>{let Ce=(0,w.P)(Ht);if(1===Ht.rank)for(let pe=0;pe<le[0];++pe)Ce=(0,B.W)(Ce,(0,Ps.d)(bt,[pe*Ht.shape[0]],[Ht.shape[0]]));else if(2===Ht.rank)for(let pe=0;pe<le[0];++pe)for(let ye=0;ye<le[1];++ye)Ce=(0,B.W)(Ce,(0,Ps.d)(bt,[pe*Ht.shape[0],ye*Ht.shape[1]],[Ht.shape[0],Ht.shape[1]]));else if(3===Ht.rank)for(let pe=0;pe<le[0];++pe)for(let ye=0;ye<le[1];++ye)for(let gn=0;gn<le[2];++gn)Ce=(0,B.W)(Ce,(0,Ps.d)(bt,[pe*Ht.shape[0],ye*Ht.shape[1],gn*Ht.shape[2]],[Ht.shape[0],Ht.shape[1],Ht.shape[2]]));else{if(4!==Ht.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${Ht.rank} tensors yet.`);for(let pe=0;pe<le[0];++pe)for(let ye=0;ye<le[1];++ye)for(let gn=0;gn<le[2];++gn)for(let An=0;An<le[3];++An)Ce=(0,B.W)(Ce,(0,Ps.d)(bt,[pe*Ht.shape[0],ye*Ht.shape[1],gn*Ht.shape[2],An*Ht.shape[3]],[Ht.shape[0],Ht.shape[1],Ht.shape[2],Ht.shape[3]]))}return Ce}}}},vs={kernelName:e.wx0,gradFunc:(bt,Qt,Bt)=>{const Ht=Bt,{perm:le}=Ht,fe=us.gx(le);return{x:()=>(0,Rt.m)(bt,fe)}}},Vn={kernelName:e.dXR,gradFunc:(bt,Qt,Bt)=>{const Ht=Bt,{axis:le}=Ht;return{value:()=>(0,We.t)(bt,le)}}};var os=t(42103),Rs=t(38837),zr=t(74659);const eo={kernelName:e.pPe,inputsToSave:["segmentIds"],gradFunc:(bt,Qt)=>{const[Bt]=Qt;return{x:()=>function no(bt,Qt){const Bt=(0,zr.P)(Qt,(0,w.P)(Qt)),Ht=(0,Rs.k)(bt,Bt);let le=(0,re.D)(Qt,(0,g.d)(0,"int32"));const fe=Ht.rank-le.rank;for(let pe=0;pe<fe;++pe)le=(0,os.U)(le,pe+1);le=(0,Oe.n)(le,(0,Js.S)(Ht.shape,"bool"));const Ce=(0,w.P)(Ht);return(0,Dt._)(le,Ht,Ce)}(bt,Bt)}}},Qr={kernelName:e.xJ3,gradFunc:bt=>({x:()=>(0,w.P)(bt)})};var Jr=t(56203);const co=[m,u,d,S,b,G,H,F,A,k,_,U,rt,Et,oe,ce,Jt,ue,ie,Kt,te,Ke,$n,fn,rs,gs,Gs,Ut,q,xt,Pe,It,pt,Xt,Yt,ve,tn,be,_e,en,Sn,Un,bn,es,kn,Es,cs,fs,Hs,ys,Qs,Qs,Ir,Ws,Is,cr,qs,dr,Us,hr,fr,tr,Zs,Ms,gr,O,O,K,nt,ee,$e,He,qe,Tn,Ln,xn,Pn,ss,xs,Bn,Vs,er,nr,rr,br,Fr,Wr,_r,Mr,Mr,or,or,wt,ge,ae,De,cn,mn,En,_n,Yn,vs,Vn,eo,Qr];for(const bt of co)(0,Jr.kr)(bt)},1506:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{Serializable:()=>E,SerializationMap:()=>m,getRegisteredName:()=>x,registerClass:()=>c});var e=t(26674);const s=new Map,i=new Map;class E{getClassName(){return this.constructor.className}static fromConfig(h,f){return new h(f)}}class m{constructor(){this.classNameMap={}}static getMap(){return null==m.instance&&(m.instance=new m),m.instance}static register(h){m.getMap().classNameMap[h.className]=[h,h.fromConfig]}}function c(g,h,f){(0,e.vA)(null!=g.className,()=>"Class being registered does not have the static className property defined."),(0,e.vA)("string"==typeof g.className,()=>"className is required to be a string, but got type "+typeof g.className),(0,e.vA)(g.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof h>"u"&&(h="Custom"),typeof f>"u"&&(f=g.className);const u=h+">"+f;return m.register(g),s.set(u,g),i.set(g,u),g}function x(g){return i.has(g)?i.get(g):g.className}},73444:(ft,N,t)=>{"use strict";t.d(N,{qY:()=>H,yl:()=>C,rT:()=>B,tp:()=>F,B4:()=>G,Q5:()=>w,qP:()=>b});var e=t(10467),s=t(73366),i=t(26674);const E=20,m=3,c=7;function x(A,k,_,U){const W=(0,i.Ur)(k),Z=function g(A,k,_,U){const W=(0,i.Ze)(k),Z=U[U.length-1],j=new Array(Z).fill(0),it=k.length,at="complex64"===_?u(A):A;if(it>1)for(let J=0;J<W/Z;J++){const ot=J*Z;for(let rt=0;rt<Z;rt++)j[rt]=Math.max(j[rt],h(at[ot+rt],0,_).length)}return j}(A,k,_,W),j=k.length,it=p(A,k,_,W,Z),at=["Tensor"];return U&&(at.push(`  dtype: ${_}`),at.push(`  rank: ${j}`),at.push(`  shape: [${k}]`),at.push("  values:")),at.push(it.map(J=>"    "+J).join("\n")),at.join("\n")}function h(A,k,_){let U;return U=Array.isArray(A)?`${parseFloat(A[0].toFixed(c))} + ${parseFloat(A[1].toFixed(c))}j`:(0,i.Kg)(A)?`'${A}'`:"bool"===_?f(A):parseFloat(A.toFixed(c)).toString(),(0,i.av)(U,k)}function f(A){return 0===A?"false":"true"}function p(A,k,_,U,W,Z=!0){const j="complex64"===_?2:1,it=k[0],at=k.length;if(0===at)return"complex64"===_?[h(u(A)[0],0,_)]:"bool"===_?[f(A[0])]:[A[0].toString()];if(1===at){if(it>E){let Gt=Array.from(A.slice(0,m*j)),ce=Array.from(A.slice((it-m)*j,it*j));return"complex64"===_&&(Gt=u(Gt),ce=u(ce)),["["+Gt.map((Jt,ue)=>h(Jt,W[ue],_)).join(", ")+", ..., "+ce.map((Jt,ue)=>h(Jt,W[it-m+ue],_)).join(", ")+"]"]}return["["+("complex64"===_?u(A):Array.from(A)).map((oe,Gt)=>h(oe,W[Gt],_)).join(", ")+"]"]}const J=k.slice(1),ot=U.slice(1),rt=U[0]*j,tt=[];if(it>E){for(let At=0;At<m;At++){const oe=At*rt;tt.push(...p(A.slice(oe,oe+rt),J,_,ot,W,!1))}tt.push("...");for(let At=it-m;At<it;At++){const oe=At*rt;tt.push(...p(A.slice(oe,oe+rt),J,_,ot,W,At===it-1))}}else for(let At=0;At<it;At++){const oe=At*rt;tt.push(...p(A.slice(oe,oe+rt),J,_,ot,W,At===it-1))}const Tt=2===at?",":"";tt[0]="["+(it>0?tt[0]+Tt:"");for(let At=1;At<tt.length-1;At++)tt[At]=" "+tt[At]+Tt;let Et=",\n";for(let At=2;At<at;At++)Et+="\n";return tt[tt.length-1]=" "+tt[tt.length-1]+"]"+(Z?"":Et),tt}function u(A){const k=[];for(let _=0;_<A.length;_+=2)k.push([A[_],A[_+1]]);return k}var d=t(21710);class C{constructor(k,_,U){if(this.dtype=_,this.shape=k.slice(),this.size=i.Ze(k),null!=U){const W=U.length;i.vA(W===this.size,()=>`Length of values '${W}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===_)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=U||i.Ab(_,this.size),this.strides=(0,i.Ur)(k)}set(k,..._){0===_.length&&(_=[0]),i.vA(_.length===this.rank,()=>`The number of provided coordinates (${_.length}) must match the rank (${this.rank})`);const U=this.locToIndex(_);this.values[U]=k}get(...k){0===k.length&&(k=[0]);let _=0;for(const W of k){if(W<0||W>=this.shape[_])throw new Error(`Requested out of range element at ${k}.   Buffer shape=${this.shape}`);_++}let U=k[k.length-1];for(let W=0;W<k.length-1;++W)U+=this.strides[W]*k[W];return this.values[U]}locToIndex(k){if(0===this.rank)return 0;if(1===this.rank)return k[0];let _=k[k.length-1];for(let U=0;U<k.length-1;++U)_+=this.strides[U]*k[U];return _}indexToLoc(k){if(0===this.rank)return[];if(1===this.rank)return[k];const _=new Array(this.shape.length);for(let U=0;U<_.length-1;++U)_[U]=Math.floor(k/this.strides[U]),k-=_[U]*this.strides[U];return _[_.length-1]=k,_}get rank(){return this.shape.length}toTensor(){return T().makeTensor(this.values,this.shape,this.dtype)}}let T=null,D=null,S=null;function b(A){T=A}function w(A){D=A}function G(A){S=A}class H{constructor(k,_,U,W){this.kept=!1,this.isDisposedInternal=!1,this.shape=k.slice(),this.dtype=_||"float32",this.size=i.Ze(k),this.strides=(0,i.Ur)(k),this.dataId=U,this.id=W,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var k=this;return(0,e.A)(function*(){const _=yield k.data();return D.buffer(k.shape,k.dtype,_)})()}bufferSync(){return D.buffer(this.shape,this.dtype,this.dataSync())}array(){var k=this;return(0,e.A)(function*(){const _=yield k.data();return(0,i.yw)(k.shape,_,"complex64"===k.dtype)})()}arraySync(){return(0,i.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var k=this;return(0,e.A)(function*(){k.throwIfDisposed();const _=T().read(k.dataId);if("string"===k.dtype){const U=yield _;try{return U.map(W=>d.decodeString(W))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return _})()}dataToGPU(k){return this.throwIfDisposed(),T().readToGPU(this.dataId,k)}dataSync(){this.throwIfDisposed();const k=T().readSync(this.dataId);if("string"===this.dtype)try{return k.map(_=>d.decodeString(_))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return k}bytes(){var k=this;return(0,e.A)(function*(){k.throwIfDisposed();const _=yield T().read(k.dataId);return"string"===k.dtype?_:new Uint8Array(_.buffer)})()}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),T().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(k=!1){return D.print(this,k)}clone(){return this.throwIfDisposed(),D.clone(this)}toString(k=!1){return x(this.dataSync(),this.shape,this.dtype,k)}cast(k){return this.throwIfDisposed(),D.cast(this,k)}variable(k=!0,_,U){return this.throwIfDisposed(),T().makeVariable(this,k,_,U)}}function F(){return(0,s.m)("Tensor",()=>H)}Object.defineProperty(H,Symbol.hasInstance,{value:A=>!!A&&null!=A.data&&null!=A.dataSync&&null!=A.throwIfDisposed}),F();class B extends H{constructor(k,_,U,W){super(k.shape,k.dtype,k.dataId,W),this.trainable=_,this.name=U}assign(k){if(k.dtype!==this.dtype)throw new Error(`dtype of the new value (${k.dtype}) and previous value (${this.dtype}) must match`);if(!i.r1(k.shape,this.shape))throw new Error(`shape of the new value (${k.shape}) and previous value (${this.shape}) must match`);T().disposeTensor(this),this.dataId=k.dataId,T().incRef(this,null)}dispose(){T().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(B,Symbol.hasInstance,{value:A=>A instanceof H&&null!=A.assign&&A.assign instanceof Function})},14548:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{assertTypesMatch:()=>m,getTensorsInContainer:()=>x,isTensorInList:()=>c,makeTypesMatch:()=>E});var e=t(73444),s=t(82891),i=t(26674);function E(f,p){if(f.dtype===p.dtype)return[f,p];const u=(0,s.Tu)(f.dtype,p.dtype);return[f.cast(u),p.cast(u)]}function m(f,p){(0,i.vA)(f.dtype===p.dtype,()=>`The dtypes of the first(${f.dtype}) and second(${p.dtype}) input must match`)}function c(f,p){return p.some(u=>u.id===f.id)}function x(f){const p=[];return g(f,p,new Set),p}function g(f,p,u){if(null==f)return;if(f instanceof e.qY)return void p.push(f);if(!function h(f){return Array.isArray(f)||"object"==typeof f}(f))return;const d=f;for(const C in d){const T=d[C];u.has(T)||(u.add(T),g(T,p,u))}}},17636:(ft,N,t)=>{"use strict";t.d(N,{MZ:()=>x,YT:()=>f,j1:()=>p});var e=t(611),s=t(25271),i=t(73444),E=t(82891),m=t(21710),c=t(26674);function x(u,d){let C=u;if((0,m.isTypedArray)(u))return"string"===d?[]:[u.length];if((0,E.Oj)(u))return[u.height,u.width*(u.channels||"RGBA").length];if((0,E.Nw)(u))return[u.buffer.size/(null==d?4:(0,c.jv)(d))];if(!Array.isArray(u))return[];const T=[];for(;Array.isArray(C)||(0,m.isTypedArray)(C)&&"string"!==d;)T.push(C.length),C=C[0];return Array.isArray(u)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&g(u,T,[]),T}function g(u,d,C){if(C=C||[],!Array.isArray(u)&&!(0,m.isTypedArray)(u))return void(0,c.vA)(0===d.length,()=>`Element arr[${C.join("][")}] is a primitive, but should be an array/TypedArray of ${d[0]} elements`);(0,c.vA)(d.length>0,()=>`Element arr[${C.join("][")}] should be a primitive, but is an array of ${u.length} elements`),(0,c.vA)(u.length===d[0],()=>`Element arr[${C.join("][")}] should have ${d[0]} elements, but has ${u.length} elements`);const T=d.slice(1);for(let D=0;D<u.length;++D)g(u[D],T,C.concat(D))}function h(u,d,C,T){if("string_or_numeric"!==u){if(null==u)throw new Error("Expected dtype cannot be null.");if("numeric"!==u&&u!==d||"numeric"===u&&"string"===d)throw new Error(`Argument '${C}' passed to '${T}' must be ${u} tensor, but got ${d} tensor`)}}function f(u,d,C,T="numeric"){if(u instanceof(0,i.tp)())return h(T,u.dtype,d,C),u;let D=(0,c.X$)(u);if("string"!==D&&["bool","int32","float32"].indexOf(T)>=0&&(D=T),h(T,D,d,C),null==u||!(0,m.isTypedArray)(u)&&!Array.isArray(u)&&"number"!=typeof u&&"boolean"!=typeof u&&"string"!=typeof u)throw new Error(`Argument '${d}' passed to '${C}' must be a Tensor or TensorLike, but got '${null==u?"null":u.constructor.name}'`);const S=x(u,D);!(0,m.isTypedArray)(u)&&!Array.isArray(u)&&(u=[u]);const w="string"!==D?(0,m.toTypedArray)(u,D):(0,m.flatten)(u,[],!0);return e.T2.makeTensor(w,S,D)}function p(u,d,C,T="numeric"){if(!Array.isArray(u))throw new Error(`Argument ${d} passed to ${C} must be a \`Tensor[]\` or \`TensorLike[]\``);return u.map((S,b)=>f(S,`${d}[${b}]`,C,T))}},19057:(ft,N,t)=>{"use strict";t.d(N,{B:()=>h});var e=t(1633),s=t(60415),i=t(34128),E=t(26041),m=t(82961),c=t(53532),x=t(11089);const h=class g{static sgd(p){return new x.S(p)}static momentum(p,u,d=!1){return new m.Q(p,u,d)}static rmsprop(p,u=.9,d=0,C=null,T=!1){return new c.P(p,u,d,C,T)}static adam(p=.001,u=.9,d=.999,C=null){return new i.F(p,u,d,C)}static adadelta(p=.001,u=.95,d=null){return new e.K(p,u,d)}static adamax(p=.002,u=.9,d=.999,C=null,T=0){return new E.o(p,u,d,C,T)}static adagrad(p,u=.1){return new s.a(p,u)}}},82891:(ft,N,t)=>{"use strict";t.d(N,{Nw:()=>f,Oj:()=>h,Tu:()=>x,ch:()=>g});var s=function(p){return p.float32="float32",p.int32="int32",p.bool="int32",p.complex64="complex64",p}(s||{}),i=function(p){return p.float32="float32",p.int32="int32",p.bool="bool",p.complex64="complex64",p}(i||{}),E=function(p){return p.float32="float32",p.int32="float32",p.bool="float32",p.complex64="complex64",p}(E||{}),m=function(p){return p.float32="complex64",p.int32="complex64",p.bool="complex64",p.complex64="complex64",p}(m||{});const c={float32:E,int32:s,bool:i,complex64:m};function x(p,u){if("string"===p||"string"===u){if("string"===p&&"string"===u)return"string";throw new Error(`Can not upcast ${p} with ${u}`)}return c[p][u]}function g(p){return x(p,"int32")}function h(p){return null!=p&&"object"==typeof p&&"texture"in p&&p.texture instanceof WebGLTexture}function f(p){return typeof GPUBuffer<"u"&&null!=p&&"object"==typeof p&&"buffer"in p&&p.buffer instanceof GPUBuffer}},21710:(ft,N,t)=>{"use strict";t.r(N),t.d(N,{arraysEqual:()=>i.r1,arraysEqualWithNull:()=>i.e_,assert:()=>i.vA,assertNonNegativeIntegerDimensions:()=>i.SA,assertNonNull:()=>i.HO,assertShapesMatch:()=>i.O3,bytesFromStringArray:()=>i.SL,bytesPerElement:()=>i.jv,checkConversionForErrors:()=>i.nd,clamp:()=>i.qE,computeStrides:()=>i.Ur,convertBackendValuesAndArrayBuffer:()=>i.o2,createScalarValue:()=>B,createShuffledIndices:()=>i.P8,decodeString:()=>Z,distSquared:()=>i.oO,encodeString:()=>W,fetch:()=>U,fingerPrint64:()=>F,flatten:()=>it,getArrayFromDType:()=>i.Ab,getTypedArrayFromDType:()=>i.ce,hasEncodingLoss:()=>i.BE,hexToLong:()=>x,indexToLoc:()=>i._k,inferDtype:()=>i.X$,inferFromImplicitShape:()=>i.XT,isBoolean:()=>i.Lm,isFunction:()=>i.Tn,isInt:()=>i.E6,isNumber:()=>i.Et,isPromise:()=>i.yL,isScalarShape:()=>i.Sf,isString:()=>i.Kg,isTypedArray:()=>j,isValidDtype:()=>i.xn,locToIndex:()=>i.sX,makeOnesTypedArray:()=>i.FZ,makeZerosNestedTypedArray:()=>i.c7,makeZerosTypedArray:()=>i.Ty,nearestDivisor:()=>i.lK,nearestLargerEven:()=>i.eV,now:()=>_,parseAxisParam:()=>i.Y6,randUniform:()=>i.so,repeatedTry:()=>i._q,rightPad:()=>i.av,shuffle:()=>i.k4,shuffleCombo:()=>i.a0,sizeFromShape:()=>i.Ze,sizeToSquarishShape:()=>i.gS,squeezeShape:()=>i.gx,sum:()=>i.cz,swap:()=>i.wg,tanh:()=>i.ym,toNestedArray:()=>i.yw,toTypedArray:()=>k});var e=t(25271),s=t(33319),i=t(26674),E=t(61218);const c=t.n(E)()||E;function x(at){return c.fromString(at,!0,16)}const g=x("c3a5c85c97cb3127"),h=x("b492b66fbe98f273"),f=x("9ae16a3b2f90404f");function p(at){return at.xor(at.shru(47))}function u(at,J,ot){const rt=at.slice(J,J+ot);return c.fromBytes(Array.from(rt),!0,!0)}function d(at,J){return u(at,J,8)}function C(at,J){return u(at,J,4)}function T(at,J){return 0===J?at:at.shru(J).or(at.shl(64-J))}function D(at,J,ot=x("9ddfea08eb382d69")){let rt=at.xor(J).mul(ot);rt=rt.xor(rt.shru(47));let tt=J.xor(rt).mul(ot);return tt=tt.xor(tt.shru(47)),tt=tt.mul(ot),tt}function b(at,J,ot,rt){return function S(at,J,ot,rt,tt,Tt){tt=tt.add(at),Tt=T(Tt.add(tt).add(rt),21);const Et=tt;return tt=(tt=tt.add(J)).add(ot),Tt=Tt.add(T(tt,44)),[tt.add(rt),Tt.add(Et)]}(d(at,J),d(at,J+8),d(at,J+16),d(at,J+24),ot,rt)}function F(at,J=at.length){const ot=c.fromNumber(81,!0);if(J<=32)return J<=16?function w(at,J=at.length){if(J>=8){const ot=f.add(2*J),rt=d(at,0).add(f),tt=d(at,J-8);return D(T(tt,37).mul(ot).add(rt),T(rt,25).add(tt).mul(ot),ot)}if(J>=4){const ot=f.add(2*J);return D(C(at,0).shl(3).add(J),C(at,J-4),ot)}if(J>0){const Et=J+(at[J-1]<<2);return p(f.mul(at[0]+(at[J>>1]<<8)).xor(g.mul(Et))).mul(f)}return f}(at,J):function G(at,J=at.length){const ot=f.add(2*J),rt=d(at,0).mul(h),tt=d(at,8),Tt=d(at,J-8).mul(ot),Et=d(at,J-16).mul(f);return D(T(rt.add(tt),43).add(T(Tt,30)).add(Et),rt.add(T(tt.add(f),18)).add(Tt),ot)}(at,J);if(J<=64)return function H(at,J=at.length){const ot=f.add(2*J),rt=d(at,0).mul(f),tt=d(at,8),Tt=d(at,J-8).mul(ot),Et=d(at,J-16).mul(f),At=T(rt.add(tt),43).add(T(Tt,30)).add(Et),oe=D(At,rt.add(T(tt.add(f),18)).add(Tt),ot),Gt=d(at,16).mul(ot),ce=d(at,24),Jt=At.add(d(at,J-32)).mul(ot),ue=oe.add(d(at,J-24)).mul(ot);return D(T(Gt.add(ce),43).add(T(Jt,30)).add(ue),Gt.add(T(ce.add(rt),18)).add(Jt),ot)}(at,J);let rt=ot,tt=ot.mul(h).add(113),Tt=p(tt.mul(f).add(113)).mul(f),Et=[c.UZERO,c.UZERO],At=[c.UZERO,c.UZERO];rt=rt.mul(f).add(d(at,0));let oe=0;const Gt=64*(J-1>>6),ce=Gt+(J-1&63)-63;do{rt=T(rt.add(tt).add(Et[0]).add(d(at,oe+8)),37).mul(h),tt=T(tt.add(Et[1]).add(d(at,oe+48)),42).mul(h),rt=rt.xor(At[1]),tt=tt.add(Et[0]).add(d(at,oe+40)),Tt=T(Tt.add(At[0]),33).mul(h),Et=b(at,oe,Et[1].mul(h),rt.add(At[0])),At=b(at,oe+32,Tt.add(At[1]),tt.add(d(at,oe+16))),[Tt,rt]=[rt,Tt],oe+=64}while(oe!==Gt);const Jt=h.add(Tt.and(255).shl(1));return oe=ce,At[0]=At[0].add(J-1&63),Et[0]=Et[0].add(At[0]),At[0]=At[0].add(Et[0]),rt=T(rt.add(tt).add(Et[0]).add(d(at,oe+8)),37).mul(Jt),tt=T(tt.add(Et[1]).add(d(at,oe+48)),42).mul(Jt),rt=rt.xor(At[1].mul(9)),tt=tt.add(Et[0].mul(9).add(d(at,oe+40))),Tt=T(Tt.add(At[0]),33).mul(Jt),Et=b(at,oe,Et[1].mul(Jt),rt.add(At[0])),At=b(at,oe+32,Tt.add(At[1]),tt.add(d(at,oe+16))),[Tt,rt]=[rt,Tt],D(D(Et[0],At[0],Jt).add(p(tt).mul(g)).add(Tt),D(Et[1],At[1],Jt).add(rt),Jt)}function B(at,J){return"string"===J?W(at):k([at],J)}function k(at,J){if("string"===J)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(at)&&(at=it(at)),(0,e._K)().getBool("DEBUG")&&i.nd(at,J),function A(at,J){return at instanceof Float32Array&&"float32"===J||at instanceof Int32Array&&"int32"===J||at instanceof Uint8Array&&"bool"===J}(at,J))return at;if(null==J||"float32"===J||"complex64"===J)return new Float32Array(at);if("int32"===J)return new Int32Array(at);if("bool"===J){const ot=new Uint8Array(at.length);for(let rt=0;rt<ot.length;++rt)0!==Math.round(at[rt])&&(ot[rt]=1);return ot}throw new Error(`Unknown data type ${J}`)}function _(){return(0,e._K)().platform.now()}function U(at,J){return(0,e._K)().platform.fetch(at,J)}function W(at,J="utf-8"){return J=J||"utf-8",(0,e._K)().platform.encode(at,J)}function Z(at,J="utf-8"){return J=J||"utf-8",(0,e._K)().platform.decode(at,J)}function j(at){return null!=(0,e._K)().platform.isTypedArray?(0,e._K)().platform.isTypedArray(at):(0,s.Y)(at)}function it(at,J=[],ot=!1){if(null==J&&(J=[]),"boolean"==typeof at||"number"==typeof at||"string"==typeof at||i.yL(at)||null==at||j(at)&&ot)J.push(at);else if(Array.isArray(at)||j(at))for(let rt=0;rt<at.length;++rt)it(at[rt],J,ot);else{let rt=-1;for(const tt of Object.keys(at))/^([1-9]+[0-9]*|0)$/.test(tt)&&(rt=Math.max(rt,Number(tt)));for(let tt=0;tt<=rt;tt++)it(at[tt],J,ot)}return J}},26674:(ft,N,t)=>{"use strict";function e(Dt){let Kt=Dt.length,te=0;for(;Kt>0;)te=Math.random()*Kt|0,Kt--,m(Dt,Kt,te)}function s(Dt,Kt){if(Dt.length!==Kt.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${Dt.length}Second array length was ${Kt.length}`);let te=Dt.length,he=0;for(;te>0;)he=Math.random()*te|0,te--,m(Dt,te,he),m(Kt,te,he)}function i(Dt,Kt,te){return Math.max(Dt,Math.min(Kt,te))}function E(Dt){return Dt%2==0?Dt:Dt+1}function m(Dt,Kt,te){const he=Dt[Kt];Dt[Kt]=Dt[te],Dt[te]=he}function c(Dt){let Kt=0;for(let te=0;te<Dt.length;te++)Kt+=Dt[te];return Kt}function x(Dt,Kt){const te=Math.random();return Kt*te+(1-te)*Dt}function g(Dt,Kt){let te=0;for(let he=0;he<Dt.length;he++){const Ke=Number(Dt[he])-Number(Kt[he]);te+=Ke*Ke}return te}function h(Dt,Kt){if(!Dt)throw new Error("string"==typeof Kt?Kt:Kt())}function f(Dt,Kt,te=""){h(T(Dt,Kt),()=>te+` Shapes ${Dt} and ${Kt} must match`)}function p(Dt){h(null!=Dt,()=>"The input to the tensor constructor must be a non-null value.")}function u(Dt){if(0===Dt.length)return 1;let Kt=Dt[0];for(let te=1;te<Dt.length;te++)Kt*=Dt[te];return Kt}function d(Dt){return 0===Dt.length}function C(Dt,Kt){if(Dt===Kt)return!0;if(null==Dt||null==Kt||Dt.length!==Kt.length)return!1;for(let te=0;te<Dt.length;te++)if(null!==Dt[te]&&null!==Kt[te]&&Dt[te]!==Kt[te])return!1;return!0}function T(Dt,Kt){if(Dt===Kt)return!0;if(null==Dt||null==Kt||Dt.length!==Kt.length)return!1;for(let te=0;te<Dt.length;te++)if(Dt[te]!==Kt[te])return!1;return!0}function D(Dt){return Dt%1==0}function S(Dt){if(null!=Math.tanh)return Math.tanh(Dt);if(Dt===1/0)return 1;if(Dt===-1/0)return-1;{const Kt=Math.exp(2*Dt);return(Kt-1)/(Kt+1)}}function b(Dt){const Kt=Math.ceil(Math.sqrt(Dt));return[Kt,Math.ceil(Dt/Kt)]}function w(Dt){const Kt=new Uint32Array(Dt);for(let te=0;te<Dt;++te)Kt[te]=te;return e(Kt),Kt}function G(Dt,Kt){return Kt<=Dt.length?Dt:Dt+" ".repeat(Kt-Dt.length)}function H(Dt,Kt=Ke=>0,te,he){return new Promise((Ke,on)=>{let vn=0;const fn=()=>{if(Dt())return void Ke();vn++;const dn=Kt(vn);null!=te&&vn>=te?on():null!=he?he(fn,dn):setTimeout(fn,dn)};fn()})}function F(Dt,Kt){let te=1,he=-1;for(let on=0;on<Dt.length;++on)if(Dt[on]>=0)te*=Dt[on];else if(-1===Dt[on]){if(-1!==he)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${he} and dim ${on}`);he=on}else if(Dt[on]<0)throw Error(`Shapes can not be < 0. Found ${Dt[on]} at dim ${on}`);if(-1===he){if(Kt>0&&Kt!==te)throw Error(`Size(${Kt}) must match the product of shape ${Dt}`);return Dt}if(0===te)throw Error(`Cannot infer the missing size in [${Dt}] when there are 0 elements`);if(Kt%te!=0)throw Error(`The implicit shape can't be a fractional number. Got ${Kt} / ${te}`);const Ke=Dt.slice();return Ke[he]=Kt/te,Ke}function B(Dt,Kt){const te=Kt.length;return h((Dt=null==Dt?Kt.map((he,Ke)=>Ke):[].concat(Dt)).every(he=>he>=-te&&he<te),()=>`All values in axis param must be in range [-${te}, ${te}) but got axis ${Dt}`),h(Dt.every(he=>D(he)),()=>`All values in axis param must be integers but got axis ${Dt}`),Dt.map(he=>he<0?te+he:he)}function A(Dt,Kt){const te=[],he=[],Ke=null!=Kt&&Array.isArray(Kt)&&0===Kt.length,on=null==Kt||Ke?null:B(Kt,Dt).sort();let vn=0;for(let fn=0;fn<Dt.length;++fn){if(null!=on){if(on[vn]===fn&&1!==Dt[fn])throw new Error(`Can't squeeze axis ${fn} since its dim '${Dt[fn]}' is not 1`);(null==on[vn]||on[vn]>fn)&&1===Dt[fn]&&(te.push(Dt[fn]),he.push(fn)),on[vn]<=fn&&vn++}1!==Dt[fn]&&(te.push(Dt[fn]),he.push(fn))}return{newShape:te,keptDims:he}}function k(Dt,Kt){return _(Dt,Kt)}function _(Dt,Kt){let te=null;if(null==Dt||"float32"===Dt)te=new Float32Array(Kt);else if("int32"===Dt)te=new Int32Array(Kt);else if("bool"===Dt)te=new Uint8Array(Kt);else{if("string"!==Dt)throw new Error(`Unknown data type ${Dt}`);te=new Array(Kt)}return te}function U(Dt,Kt){for(let te=0;te<Dt.length;te++){const he=Dt[te];if(isNaN(he)||!isFinite(he))throw Error(`A tensor of type ${Kt} being uploaded contains ${he}.`)}}function W(Dt){return"bool"===Dt||"complex64"===Dt||"float32"===Dt||"int32"===Dt||"string"===Dt}function Z(Dt,Kt){return!("complex64"===Kt||"float32"===Kt&&"complex64"!==Dt||"int32"===Kt&&"float32"!==Dt&&"complex64"!==Dt||"bool"===Kt&&"bool"===Dt)}function j(Dt){if("float32"===Dt||"int32"===Dt)return 4;if("complex64"===Dt)return 8;if("bool"===Dt)return 1;throw new Error(`Unknown dtype ${Dt}`)}function it(Dt){if(null==Dt)return 0;let Kt=0;return Dt.forEach(te=>Kt+=te.length),Kt}function at(Dt){return"string"==typeof Dt||Dt instanceof String}function J(Dt){return"boolean"==typeof Dt}function ot(Dt){return"number"==typeof Dt}function rt(Dt){return Array.isArray(Dt)?rt(Dt[0]):Dt instanceof Float32Array?"float32":Dt instanceof Int32Array||Dt instanceof Uint8Array||Dt instanceof Uint8ClampedArray?"int32":ot(Dt)?"float32":at(Dt)?"string":J(Dt)?"bool":"float32"}function tt(Dt){return!!(Dt&&Dt.constructor&&Dt.call&&Dt.apply)}function Tt(Dt,Kt){for(let te=Kt;te<Dt;++te)if(Dt%te==0)return te;return Dt}function Et(Dt){const Kt=Dt.length;if(Kt<2)return[];const te=new Array(Kt-1);te[Kt-2]=Dt[Kt-1];for(let he=Kt-3;he>=0;--he)te[he]=te[he+1]*Dt[he+1];return te}function At(Dt,Kt,te,he=!1){const Ke=new Array;if(1===Kt.length){const on=Kt[0]*(he?2:1);for(let vn=0;vn<on;vn++)Ke[vn]=te[Dt+vn]}else{const on=Kt[0],vn=Kt.slice(1),fn=vn.reduce((dn,$n)=>dn*$n)*(he?2:1);for(let dn=0;dn<on;dn++)Ke[dn]=At(Dt+dn*fn,vn,te,he)}return Ke}function oe(Dt,Kt,te=!1){if(0===Dt.length)return Kt[0];const he=Dt.reduce((Ke,on)=>Ke*on)*(te?2:1);if(0===he)return[];if(he!==Kt.length)throw new Error(`[${Dt}] does not match the input size ${Kt.length}${te?" for a complex tensor":""}.`);return At(0,Dt,Kt,te)}function Gt(Dt,Kt){if(Array.isArray(Dt))return Dt;if("float32"===Kt)return Dt instanceof Float32Array?Dt:new Float32Array(Dt);if("int32"===Kt)return Dt instanceof Int32Array?Dt:new Int32Array(Dt);if("bool"===Kt||"string"===Kt)return Uint8Array.from(new Int32Array(Dt));throw new Error(`Unknown dtype ${Kt}`)}function ce(Dt,Kt){const te=Jt(Dt,Kt);for(let he=0;he<te.length;he++)te[he]=1;return te}function Jt(Dt,Kt){if(null==Kt||"float32"===Kt||"complex64"===Kt)return new Float32Array(Dt);if("int32"===Kt)return new Int32Array(Dt);if("bool"===Kt)return new Uint8Array(Dt);throw new Error(`Unknown data type ${Kt}`)}function ue(Dt,Kt){const te=Dt.reduce((he,Ke)=>he*Ke,1);if(null==Kt||"float32"===Kt)return oe(Dt,new Float32Array(te));if("int32"===Kt)return oe(Dt,new Int32Array(te));if("bool"===Kt)return oe(Dt,new Uint8Array(te));throw new Error(`Unknown data type ${Kt}`)}function ie(Dt){Dt.forEach(Kt=>{h(Number.isInteger(Kt)&&Kt>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${Dt}].`)})}function re(Dt,Kt,te){if(0===Kt)return 0;if(1===Kt)return Dt[0];let he=Dt[Dt.length-1];for(let Ke=0;Ke<Dt.length-1;++Ke)he+=te[Ke]*Dt[Ke];return he}function Se(Dt,Kt,te){if(0===Kt)return[];if(1===Kt)return[Dt];const he=new Array(Kt);for(let Ke=0;Ke<he.length-1;++Ke)he[Ke]=Math.floor(Dt/te[Ke]),Dt-=he[Ke]*te[Ke];return he[he.length-1]=Dt,he}function Oe(Dt){return Dt&&Dt.then&&"function"==typeof Dt.then}t.d(N,{Ab:()=>_,BE:()=>Z,E6:()=>D,Et:()=>ot,FZ:()=>ce,HO:()=>p,Kg:()=>at,Lm:()=>J,O3:()=>f,P8:()=>w,SA:()=>ie,SL:()=>it,Sf:()=>d,Tn:()=>tt,Ty:()=>Jt,Ur:()=>Et,X$:()=>rt,XT:()=>F,Y6:()=>B,Ze:()=>u,_k:()=>Se,_q:()=>H,a0:()=>s,av:()=>G,c7:()=>ue,ce:()=>k,cz:()=>c,eV:()=>E,e_:()=>C,gS:()=>b,gx:()=>A,jv:()=>j,k4:()=>e,lK:()=>Tt,nd:()=>U,o2:()=>Gt,oO:()=>g,qE:()=>i,r1:()=>T,sX:()=>re,so:()=>x,vA:()=>h,wg:()=>m,xn:()=>W,yL:()=>Oe,ym:()=>S,yw:()=>oe})},97762:(ft,N,t)=>{"use strict";t.d(N,{r:()=>e});const e="4.22.0"},61218:ft=>{ft.exports=t;var N=null;try{N=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(k,_,U){this.low=0|k,this.high=0|_,this.unsigned=!!U}function e(k){return!0===(k&&k.__isLong__)}Object.defineProperty(t.prototype,"__isLong__",{value:!0}),t.isLong=e;var s={},i={};function E(k,_){var U,W,Z;return _?(Z=0<=(k>>>=0)&&k<256)&&(W=i[k])?W:(U=c(k,(0|k)<0?-1:0,!0),Z&&(i[k]=U),U):(Z=-128<=(k|=0)&&k<128)&&(W=s[k])?W:(U=c(k,k<0?-1:0,!1),Z&&(s[k]=U),U)}function m(k,_){if(isNaN(k))return _?S:D;if(_){if(k<0)return S;if(k>=d)return F}else{if(k<=-C)return B;if(k+1>=C)return H}return k<0?m(-k,_).neg():c(k%u|0,k/u|0,_)}function c(k,_,U){return new t(k,_,U)}t.fromInt=E,t.fromNumber=m,t.fromBits=c;var x=Math.pow;function g(k,_,U){if(0===k.length)throw Error("empty string");if("NaN"===k||"Infinity"===k||"+Infinity"===k||"-Infinity"===k)return D;if("number"==typeof _?(U=_,_=!1):_=!!_,(U=U||10)<2||36<U)throw RangeError("radix");var W;if((W=k.indexOf("-"))>0)throw Error("interior hyphen");if(0===W)return g(k.substring(1),_,U).neg();for(var Z=m(x(U,8)),j=D,it=0;it<k.length;it+=8){var at=Math.min(8,k.length-it),J=parseInt(k.substring(it,it+at),U);if(at<8){var ot=m(x(U,at));j=j.mul(ot).add(m(J))}else j=(j=j.mul(Z)).add(m(J))}return j.unsigned=_,j}function h(k,_){return"number"==typeof k?m(k,_):"string"==typeof k?g(k,_):c(k.low,k.high,"boolean"==typeof _?_:k.unsigned)}t.fromString=g,t.fromValue=h;var u=4294967296,d=u*u,C=d/2,T=E(1<<24),D=E(0);t.ZERO=D;var S=E(0,!0);t.UZERO=S;var b=E(1);t.ONE=b;var w=E(1,!0);t.UONE=w;var G=E(-1);t.NEG_ONE=G;var H=c(-1,2147483647,!1);t.MAX_VALUE=H;var F=c(-1,-1,!0);t.MAX_UNSIGNED_VALUE=F;var B=c(0,-2147483648,!1);t.MIN_VALUE=B;var A=t.prototype;A.toInt=function(){return this.unsigned?this.low>>>0:this.low},A.toNumber=function(){return this.unsigned?(this.high>>>0)*u+(this.low>>>0):this.high*u+(this.low>>>0)},A.toString=function(_){if((_=_||10)<2||36<_)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(B)){var U=m(_),W=this.div(U),Z=W.mul(U).sub(this);return W.toString(_)+Z.toInt().toString(_)}return"-"+this.neg().toString(_)}for(var j=m(x(_,6),this.unsigned),it=this,at="";;){var J=it.div(j),rt=(it.sub(J.mul(j)).toInt()>>>0).toString(_);if((it=J).isZero())return rt+at;for(;rt.length<6;)rt="0"+rt;at=""+rt+at}},A.getHighBits=function(){return this.high},A.getHighBitsUnsigned=function(){return this.high>>>0},A.getLowBits=function(){return this.low},A.getLowBitsUnsigned=function(){return this.low>>>0},A.getNumBitsAbs=function(){if(this.isNegative())return this.eq(B)?64:this.neg().getNumBitsAbs();for(var _=0!=this.high?this.high:this.low,U=31;U>0&&!(_&1<<U);U--);return 0!=this.high?U+33:U+1},A.isZero=function(){return 0===this.high&&0===this.low},A.eqz=A.isZero,A.isNegative=function(){return!this.unsigned&&this.high<0},A.isPositive=function(){return this.unsigned||this.high>=0},A.isOdd=function(){return!(1&~this.low)},A.isEven=function(){return!(1&this.low)},A.equals=function(_){return e(_)||(_=h(_)),(this.unsigned===_.unsigned||this.high>>>31!=1||_.high>>>31!=1)&&this.high===_.high&&this.low===_.low},A.eq=A.equals,A.notEquals=function(_){return!this.eq(_)},A.neq=A.notEquals,A.ne=A.notEquals,A.lessThan=function(_){return this.comp(_)<0},A.lt=A.lessThan,A.lessThanOrEqual=function(_){return this.comp(_)<=0},A.lte=A.lessThanOrEqual,A.le=A.lessThanOrEqual,A.greaterThan=function(_){return this.comp(_)>0},A.gt=A.greaterThan,A.greaterThanOrEqual=function(_){return this.comp(_)>=0},A.gte=A.greaterThanOrEqual,A.ge=A.greaterThanOrEqual,A.compare=function(_){if(e(_)||(_=h(_)),this.eq(_))return 0;var U=this.isNegative(),W=_.isNegative();return U&&!W?-1:!U&&W?1:this.unsigned?_.high>>>0>this.high>>>0||_.high===this.high&&_.low>>>0>this.low>>>0?-1:1:this.sub(_).isNegative()?-1:1},A.comp=A.compare,A.negate=function(){return!this.unsigned&&this.eq(B)?B:this.not().add(b)},A.neg=A.negate,A.add=function(_){e(_)||(_=h(_));var rt=0,tt=0,Tt=0,Et=0;return Tt+=(Et+=(65535&this.low)+(65535&_.low))>>>16,tt+=(Tt+=(this.low>>>16)+(_.low>>>16))>>>16,rt+=(tt+=(65535&this.high)+(65535&_.high))>>>16,rt+=(this.high>>>16)+(_.high>>>16),c((Tt&=65535)<<16|(Et&=65535),(rt&=65535)<<16|(tt&=65535),this.unsigned)},A.subtract=function(_){return e(_)||(_=h(_)),this.add(_.neg())},A.sub=A.subtract,A.multiply=function(_){if(this.isZero())return D;if(e(_)||(_=h(_)),N)return c(N.mul(this.low,this.high,_.low,_.high),N.get_high(),this.unsigned);if(_.isZero())return D;if(this.eq(B))return _.isOdd()?B:D;if(_.eq(B))return this.isOdd()?B:D;if(this.isNegative())return _.isNegative()?this.neg().mul(_.neg()):this.neg().mul(_).neg();if(_.isNegative())return this.mul(_.neg()).neg();if(this.lt(T)&&_.lt(T))return m(this.toNumber()*_.toNumber(),this.unsigned);var Z=65535&this.high,j=this.low>>>16,it=65535&this.low,J=65535&_.high,ot=_.low>>>16,rt=65535&_.low,tt=0,Tt=0,Et=0,At=0;return Et+=(At+=it*rt)>>>16,Tt+=(Et+=j*rt)>>>16,Et&=65535,Tt+=(Et+=it*ot)>>>16,tt+=(Tt+=Z*rt)>>>16,Tt&=65535,tt+=(Tt+=j*ot)>>>16,Tt&=65535,tt+=(Tt+=it*J)>>>16,tt+=(this.high>>>16)*rt+Z*ot+j*J+it*(_.high>>>16),c((Et&=65535)<<16|(At&=65535),(tt&=65535)<<16|(Tt&=65535),this.unsigned)},A.mul=A.multiply,A.divide=function(_){if(e(_)||(_=h(_)),_.isZero())throw Error("division by zero");var W,Z,j;if(N)return this.unsigned||-2147483648!==this.high||-1!==_.low||-1!==_.high?c((this.unsigned?N.div_u:N.div_s)(this.low,this.high,_.low,_.high),N.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?S:D;if(this.unsigned){if(_.unsigned||(_=_.toUnsigned()),_.gt(this))return S;if(_.gt(this.shru(1)))return w;j=S}else{if(this.eq(B))return _.eq(b)||_.eq(G)?B:_.eq(B)?b:(W=this.shr(1).div(_).shl(1)).eq(D)?_.isNegative()?b:G:(Z=this.sub(_.mul(W)),j=W.add(Z.div(_)));if(_.eq(B))return this.unsigned?S:D;if(this.isNegative())return _.isNegative()?this.neg().div(_.neg()):this.neg().div(_).neg();if(_.isNegative())return this.div(_.neg()).neg();j=D}for(Z=this;Z.gte(_);){W=Math.max(1,Math.floor(Z.toNumber()/_.toNumber()));for(var at=Math.ceil(Math.log(W)/Math.LN2),J=at<=48?1:x(2,at-48),ot=m(W),rt=ot.mul(_);rt.isNegative()||rt.gt(Z);)rt=(ot=m(W-=J,this.unsigned)).mul(_);ot.isZero()&&(ot=b),j=j.add(ot),Z=Z.sub(rt)}return j},A.div=A.divide,A.modulo=function(_){return e(_)||(_=h(_)),N?c((this.unsigned?N.rem_u:N.rem_s)(this.low,this.high,_.low,_.high),N.get_high(),this.unsigned):this.sub(this.div(_).mul(_))},A.mod=A.modulo,A.rem=A.modulo,A.not=function(){return c(~this.low,~this.high,this.unsigned)},A.and=function(_){return e(_)||(_=h(_)),c(this.low&_.low,this.high&_.high,this.unsigned)},A.or=function(_){return e(_)||(_=h(_)),c(this.low|_.low,this.high|_.high,this.unsigned)},A.xor=function(_){return e(_)||(_=h(_)),c(this.low^_.low,this.high^_.high,this.unsigned)},A.shiftLeft=function(_){return e(_)&&(_=_.toInt()),0==(_&=63)?this:_<32?c(this.low<<_,this.high<<_|this.low>>>32-_,this.unsigned):c(0,this.low<<_-32,this.unsigned)},A.shl=A.shiftLeft,A.shiftRight=function(_){return e(_)&&(_=_.toInt()),0==(_&=63)?this:_<32?c(this.low>>>_|this.high<<32-_,this.high>>_,this.unsigned):c(this.high>>_-32,this.high>=0?0:-1,this.unsigned)},A.shr=A.shiftRight,A.shiftRightUnsigned=function(_){if(e(_)&&(_=_.toInt()),0==(_&=63))return this;var U=this.high;return _<32?c(this.low>>>_|U<<32-_,U>>>_,this.unsigned):c(32===_?U:U>>>_-32,0,this.unsigned)},A.shru=A.shiftRightUnsigned,A.shr_u=A.shiftRightUnsigned,A.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},A.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},A.toBytes=function(_){return _?this.toBytesLE():this.toBytesBE()},A.toBytesLE=function(){var _=this.high,U=this.low;return[255&U,U>>>8&255,U>>>16&255,U>>>24,255&_,_>>>8&255,_>>>16&255,_>>>24]},A.toBytesBE=function(){var _=this.high,U=this.low;return[_>>>24,_>>>16&255,_>>>8&255,255&_,U>>>24,U>>>16&255,U>>>8&255,255&U]},t.fromBytes=function(_,U,W){return W?t.fromBytesLE(_,U):t.fromBytesBE(_,U)},t.fromBytesLE=function(_,U){return new t(_[0]|_[1]<<8|_[2]<<16|_[3]<<24,_[4]|_[5]<<8|_[6]<<16|_[7]<<24,U)},t.fromBytesBE=function(_,U){return new t(_[4]<<24|_[5]<<16|_[6]<<8|_[7],_[0]<<24|_[1]<<16|_[2]<<8|_[3],U)}},4902:(ft,N,t)=>{"use strict";t.d(N,{q:()=>e});class e{}},8084:(ft,N,t)=>{"use strict";t.d(N,{c:()=>f});var e=t(10467),s=t(41653),i=t(74042);class E extends i.DJ{split(u){return new m(this,u)}}class m extends E{constructor(u,d){super(),this.upstream=u,this.impl=new c(u,d)}summary(){return this.impl.summary()}next(){var u=this;return(0,e.A)(function*(){return u.impl.next()})()}}class c extends i.lh{constructor(u,d){super(),this.upstream=u,this.separator=d,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){var u=this;return(0,e.A)(function*(){const d=yield u.upstream.next();if(d.done)return""!==u.carryover&&(u.outputQueue.push(u.carryover),u.carryover="",!0);const C=d.value.split(u.separator);C[0]=u.carryover+C[0];for(const T of C.slice(0,-1))u.outputQueue.push(T);return u.carryover=C[C.length-1],!0})()}}class x extends i.DJ{decodeUTF8(){return new g(this)}}class g extends E{constructor(u){super(),this.upstream=u,this.impl=new h(u)}summary(){return this.impl.summary()}next(){var u=this;return(0,e.A)(function*(){return u.impl.next()})()}}class h extends i.lh{constructor(u){if(super(),this.upstream=u,(0,s._K2)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:d}=t(4530);this.decoder=new d("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){var u=this;return(0,e.A)(function*(){const d=yield u.upstream.next();let C,T;return!d.done&&(C=d.value,T=(0,s._K2)().get("IS_BROWSER")?u.decoder.decode(C,{stream:!0}):u.decoder.write(Buffer.from(C.buffer)),u.outputQueue.push(T),!0)})()}}class f extends x{constructor(u,d={}){super(),this.file=u,this.options=d,s.ZSL.assert(u instanceof Uint8Array||!!(0,s._K2)().get("IS_BROWSER")&&(u instanceof File||u instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=d.offset||0,this.chunkSize=d.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){var u=this;return(0,e.A)(function*(){return u.offset>=(u.file instanceof Uint8Array?u.file.byteLength:u.file.size)?{value:null,done:!0}:{value:yield new Promise((C,T)=>{const D=u.offset+u.chunkSize;if(u.file instanceof Uint8Array)C(new Uint8Array(u.file.slice(u.offset,D)));else{const S=new FileReader;S.onload=w=>{let G=S.result;if(G instanceof ArrayBuffer&&(G=new Uint8Array(G)),!(G instanceof Uint8Array))return T(new TypeError("FileReader returned unknown type."));C(G)},S.onabort=w=>T(new Error("Aborted")),S.onerror=w=>T(new Error(w.type));const b=u.file.slice(u.offset,D);S.readAsArrayBuffer(b)}u.offset=D}),done:!1}})()}}},11033:(ft,N,t)=>{"use strict";t.d(N,{t:()=>E});var e=t(10467),s=t(41653),i=t(8084);function E(x){return m.apply(this,arguments)}function m(){return(m=(0,e.A)(function*(x,g={},h){let f,p;"string"==typeof x?f=x:(f=x.url,p=c(x));const u=yield(h||s.ZSL.fetch)(f,p);if(u.ok){const d=new Uint8Array(yield u.arrayBuffer());return new i.c(d,g)}throw new Error(u.statusText)})).apply(this,arguments)}const c=x=>({method:x.method,headers:x.headers,body:x.body,mode:x.mode,credentials:x.credentials,cache:x.cache,redirect:x.redirect,referrer:x.referrer,integrity:x.integrity})},58034:(ft,N,t)=>{"use strict";t.d(N,{G:()=>i});var e=t(41653),s=t(27669);function i(m){return(0,s.Bl)(m,E)}function E(m){return m instanceof e.qYS?{value:m.clone(),recurse:!1}:(0,s.xZ)(m)?{value:null,recurse:!0}:{value:m,recurse:!1}}},52531:(ft,N,t)=>{"use strict";t.d(N,{g:()=>s});var e=t(92357);let s=(()=>{class i extends e.N{constructor(){super(i.INITIAL_CAPACITY)}isFull(){return!1}push(m){super.isFull()&&this.expand(),super.push(m)}unshift(m){super.isFull()&&this.expand(),super.unshift(m)}expand(){const m=2*this.capacity,c=new Array(m),x=this.length();for(let g=0;g<x;g++)c[g]=this.get(this.wrap(this.begin+g));this.data=c,this.capacity=m,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=x}}return i.INITIAL_CAPACITY=32,i})()},92357:(ft,N,t)=>{"use strict";t.d(N,{N:()=>e});class e{constructor(i){if(this.capacity=i,this.begin=0,this.end=0,null==i)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(i<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(i),this.doubledCapacity=2*i}wrap(i){for(;i<0;)i+=this.doubledCapacity;return i%this.doubledCapacity}get(i){if(i<0)throw new RangeError("Can't get item at a negative index.");return this.data[i%this.capacity]}set(i,E){if(i<0)throw new RangeError("Can't set item at a negative index.");this.data[i%this.capacity]=E}length(){let i=this.end-this.begin;return i<0&&(i=this.doubledCapacity+i),i}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(i){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,i),this.end=this.wrap(this.end+1)}pushAll(i){for(const E of i)this.push(E)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const i=this.get(this.end);return this.set(this.end,void 0),i}unshift(i){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,i)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const i=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),i}shuffleExcise(i){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const E=this.wrap(this.begin+i),m=this.get(E);return this.set(E,this.pop()),m}}},41014:(ft,N,t)=>{"use strict";function e(s){return"string"==typeof s&&"file://"===s.slice(0,7)}t.d(N,{N:()=>e})},98603:(ft,N,t)=>{"use strict";t.d(N,{r:()=>e});const e="4.22.0"},42804:(ft,N,t)=>{"use strict";t.d(N,{Bu:()=>H,b_:()=>B,rF:()=>T});var e=t(41653),s=t(99198),i=t(24503);class E extends e.JFn.Serializable{getConfig(){return{}}}e.JFn.registerClass((()=>{class A extends E{apply(_,U=1){return s.Pq(_,U)}}return A.className="elu",A})());let c=(()=>{class A extends E{apply(_){return e.WfX(_)}}return A.className="selu",A})();e.JFn.registerClass(c);let x=(()=>{class A extends E{apply(_){return e.VVh(_)}}return A.className="relu",A})();e.JFn.registerClass(x);let g=(()=>{class A extends E{apply(_){return(0,e.DZQ)(()=>e.BpO(6,e.VVh(_)))}}return A.className="relu6",A})();e.JFn.registerClass(g),e.JFn.registerClass((()=>{class A extends E{apply(_){return _}}return A.className="linear",A})());let f=(()=>{class A extends E{apply(_){return e.ry7(_)}}return A.className="sigmoid",A})();e.JFn.registerClass(f),e.JFn.registerClass((()=>{class A extends E{apply(_){return s.KK(_)}}return A.className="hardSigmoid",A})());let u=(()=>{class A extends E{apply(_){return e.lw0(_)}}return A.className="softplus",A})();e.JFn.registerClass(u),e.JFn.registerClass((()=>{class A extends E{apply(_){return s.aY(_)}}return A.className="softsign",A})());let C=(()=>{class A extends E{apply(_){return e.ymU(_)}}return A.className="tanh",A})();e.JFn.registerClass(C);let T=(()=>{class A extends E{apply(_,U=-1){return e.Vs9(_,U)}}return A.className="softmax",A})();e.JFn.registerClass(T);let D=(()=>{class A extends E{apply(_,U=-1){return e.HPB(_,U)}}return A.className="logSoftmax",A})();e.JFn.registerClass(D);let S=(()=>{class A extends E{apply(_){return(0,e.DZQ)(()=>e.DZQ(()=>{const U=Math.sqrt(2),W=e.lKK(.5,e.WQq(1,e.Y12(e.y4m(_,U))));return e.lKK(_,W)}))}}return A.className="gelu",A})();e.JFn.registerClass(S);let b=(()=>{class A extends E{apply(_){return(0,e.DZQ)(()=>e.lKK(.5,e.lKK(_,e.WQq(1,e.ymU(e.lKK(e.RZD(e.y4m(2,Math.PI)),e.WQq(_,e.lKK(.044715,e.n7C(_,3)))))))))}}return A.className="gelu_new",A})();e.JFn.registerClass(b);let w=(()=>{class A extends E{apply(_){return(0,e.DZQ)(()=>e.lKK(_,e.ymU(e.lw0(_))))}}return A.className="mish",A})();e.JFn.registerClass(w);let G=(()=>{class A extends E{apply(_,U=1){return(0,e.DZQ)(()=>e.lKK(e.ry7(e.lKK(_,U)),_))}}return A.className="swish",A})();function H(A){return A.getClassName()}function F(A,k={}){return(0,i.Xv)(A,e.JFn.SerializationMap.getMap().classNameMap,k,"activation")}function B(A){if(null==A){return F({className:"linear",config:{}})}if("string"==typeof A){const k={};return k.className=A,k.config={},F(k)}return A instanceof E?A:F(A)}e.JFn.registerClass(G)},17513:(ft,N,t)=>{"use strict";t.d(N,{Ni:()=>i,VI:()=>m});var e=t(41653);let s;function i(){return null==s&&(s=(0,e.Hs)().epsilon()),s}function m(){return"channelsLast"}},29887:(ft,N,t)=>{"use strict";t.d(N,{j:()=>s,v:()=>E});let e=0;function s(){return e++}const i={};function E(m=""){return m in i||(i[m]=0),i[m]+=1,m+i[m].toString()}},99198:(ft,N,t)=>{"use strict";t.d(N,{Bq:()=>C,Dh:()=>D,EZ:()=>J,Ew:()=>U,FE:()=>F,KK:()=>ot,Ls:()=>rt,Om:()=>B,PS:()=>T,Pq:()=>it,UG:()=>u,Vs:()=>H,aY:()=>at,kg:()=>_,ly:()=>G,ni:()=>j,r0:()=>b,u1:()=>w,ux:()=>d,wg:()=>p});var e=t(41653),s=t(9980),i=t(42946),E=t(89119),m=t(17513);function p(tt,Tt){return e.wgE(tt,Tt)}function u(tt,Tt=-1){const Et=tt.shape.slice();return Tt<0&&(Tt=Et.length+Tt+1),Et.splice(Tt,0,1),e.tQQ(tt,Et)}function d(tt,Tt){return(0,e.DZQ)(()=>{if(2!==tt.shape.length)throw new i.Qp(`repeat() expects a rank-2 tensor, but received a rank-${tt.shape.length} tensor.`);return H(u(tt,1),[1,Tt,1])})}function C(tt){const Tt=[E.no(tt.shape)];return e.tQQ(tt,Tt)}function T(tt){if(tt.rank<=1)throw new i.Qp(`batchFlatten requires a minimum rank of 2. Got rank: ${tt.rank}.`);const Tt=[tt.shape[0],E.no(tt.shape,1)];return e.tQQ(tt,Tt)}function D(tt,Tt,Et){return(0,e.DZQ)(()=>{switch(tt.rank){case 1:return e.Q$M(tt,Tt,Et);case 2:return e.zAd(tt,[Tt,0],[Et,tt.shape[1]]);case 3:return e.wck(tt,[Tt,0,0],[Et,tt.shape[1],tt.shape[2]]);case 4:return e.R0O(tt,[Tt,0,0,0],[Et,tt.shape[1],tt.shape[2],tt.shape[3]]);case 5:return e.dik(tt,[Tt,0,0,0,0],[Et,tt.shape[1],tt.shape[2],tt.shape[3],tt.shape[4]]);case 6:return e.dik(tt,[Tt,0,0,0,0,0],[Et,tt.shape[1],tt.shape[2],tt.shape[3],tt.shape[4],tt.shape[5]]);default:throw new i.Qp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${tt.rank}`)}})}function S(tt,Tt,Et){return(0,e.DZQ)(()=>{switch(tt.rank){case 1:return e.Q$M(tt,Tt,Et);case 2:return e.zAd(tt,[0,Tt],[tt.shape[0],Et]);case 3:return e.wck(tt,[0,0,Tt],[tt.shape[0],tt.shape[1],Et]);case 4:return e.R0O(tt,[0,0,0,Tt],[tt.shape[0],tt.shape[1],tt.shape[2],Et]);default:throw new i.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${tt.rank}`)}})}function b(tt,Tt,Et,At){return(0,e.DZQ)(()=>{switch(tt.rank){case 1:return e.Q$M(tt,Tt,Et);case 2:switch(At){case 1:return D(tt,Tt,Et);case 2:return S(tt,Tt,Et);default:throw new i.Qp(`The axis is not within the rank of the tensor ${At}`)}case 3:switch(At){case 1:return D(tt,Tt,Et);case 2:return e.wck(tt,[0,Tt,0],[tt.shape[0],Et,tt.shape[2]]);case 3:return S(tt,Tt,Et);default:throw new i.Qp(`The axis is not within the rank of the tensor ${At}`)}case 4:switch(At){case 1:return D(tt,Tt,Et);case 2:return e.R0O(tt,[0,Tt,0,0],[tt.shape[0],Et,tt.shape[2],tt.shape[3]]);case 3:return e.R0O(tt,[0,0,Tt,0],[tt.shape[0],tt.shape[1],Et,tt.shape[3]]);case 4:return S(tt,Tt,Et);default:throw new i.Qp(`The axis is not within the rank of the tensor ${At}`)}default:throw new i.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${tt.rank}`)}})}function w(tt,Tt=-1){let Et;return Tt<0&&(Et=tt[0].rank,Tt=0!==Et?Et:0),Tt===tt[0].rank&&(Tt=-1),e.xWs(tt,Tt)}function G(tt,Tt){switch(tt.rank){case 1:return e.I1m([tt,Tt]);case 2:return e.RPU([tt,Tt],0);case 3:return e.O5O([tt,Tt],0);case 4:return e.P1l([tt,Tt],0);default:throw new i.Qp(`concatAlongFirstAxis() received an unsupported tensor rank: ${tt.rank}`)}}function H(tt,Tt){if(Array.isArray(Tt)||(Tt=[Tt]),tt.rank!==Tt.length)throw new i.Qp(`The length of input n (${Tt.length}) does not match the number of dimensions in input x (${tt.rank})`);return e.Vsq(tt,Tt)}function F(tt,Tt=0,Et=1,At,oe){return e.FE$(tt,Tt,Et,At,oe)}function B(tt,Tt,Et,At){if(tt.rank<2||Tt.rank<2)throw new i.EH(`dot requires both inputs to be rank >= 2 but got x shape = ${tt.shape} and y shape = ${Tt.shape}`);if(Tt.rank>=3&&tt.shape.slice(-1)[0]!==Tt.shape.slice(-2)[0])throw new i.EH(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${tt.shape} and  y shape = ${Tt.shape}`);if(2===tt.rank&&2===Tt.rank)return e.cZk.matMul({a:tt,b:Tt,transposeA:!1,transposeB:!1,bias:At?Z(tt.rank,At,(0,m.VI)()):null,activation:Et});{const oe=tt.shape.slice(),Gt=oe.pop();tt=e.tQQ(tt,[-1,Gt]);const ce=Tt.shape.slice(),Jt=ce.pop(),ue=ce.pop(),ie=[...ce,Jt],re=Array.from({length:Tt.rank},(Kt,te)=>0===te?Tt.rank-2:te<=Tt.rank-2?te-1:te);Tt=e.tQQ(e.mgz(Tt,re),[ue,-1]);const Se=[...oe,...ie];return e.tQQ(e.cZk.matMul({a:tt,b:Tt,transposeA:!1,transposeB:!1,bias:At?Z(tt.rank,At,(0,m.VI)()):null,activation:Et}),Se)}}function _(tt,Tt,Et){return(0,e.DZQ)(()=>(Tt=Array.isArray(Tt)?(0,e.tGX)(Tt,"int32"):e.wgE(Tt,"int32"),e.kgh(tt,Tt,Et)))}function U(tt){return e.lKK(tt,tt)}function Z(tt,Tt,Et){const At=Tt.shape;if(1!==Tt.rank&&Tt.rank!==tt)throw new i.Qp(`Unexpected bias dimensions: ${Tt.rank}; expected it to be 1 or ${tt}`);if(5===tt){if("channelsFirst"===Et)return e.tQQ(Tt,1===At.length?[1,At[0],1,1,1]:[1,At[3],At[0],At[1],At[2]]);if("channelsLast"===Et)return e.tQQ(Tt,1===At.length?[1,1,1,1,At[0]]:[1].concat(At))}else if(4===tt){if("channelsFirst"===Et)return e.tQQ(Tt,1===At.length?[1,At[0],1,1]:[1,At[2],At[0],At[1]]);if("channelsLast"===Et)return e.tQQ(Tt,1===At.length?[1,1,1,At[0]]:[1].concat(At))}else if(3===tt){if("channelsFirst"===Et)return e.tQQ(Tt,1===At.length?[1,At[0],1]:[1,At[1],At[0]]);if("channelsLast"===Et)return e.tQQ(Tt,1===At.length?[1,1,At[0]]:[1].concat(At))}else if(tt<3)return Tt;throw new i.Qp(`Unsupported input rank by biasAdd: ${Tt.rank}`)}function j(tt,Tt,Et){return(0,e.DZQ)(()=>(null==Et&&(Et=(0,m.VI)()),(0,s.uM)(Et),e.WQq(tt,Z(tt.rank,Tt,Et))))}function it(tt,Tt=1){if(1!==Tt)throw new i.EH(`Support for alpha values other than 1 (${Tt}) is not implemented yet.`);return e.Pqc(tt)}function at(tt){return(0,e.DZQ)(()=>e.y4m(tt,e.WQq(e.tnl(tt),1)))}function J(tt,Tt,Et,At){return(0,e.DZQ)(()=>e.EZY(tt,Tt,Et,At))}function ot(tt){return(0,e.DZQ)(()=>{const Tt=e.WQq(.5,e.lKK(.2,tt));return e.zQh(Tt,0,1)})}function rt(tt,Tt,Et=!1){return Et?tt():Tt()}},40083:(ft,N,t)=>{"use strict";t.d(N,{Eq:()=>d,J5:()=>g,dY:()=>T});var e=t(10467),s=t(41653),i=t(42946),E=t(35814),m=t(24503);class g{constructor(){this.validationData=null}setParams(S){this.params=S}onEpochBegin(S,b){return(0,e.A)(function*(){})()}onEpochEnd(S,b){return(0,e.A)(function*(){})()}onBatchBegin(S,b){return(0,e.A)(function*(){})()}onBatchEnd(S,b){return(0,e.A)(function*(){})()}onTrainBegin(S){return(0,e.A)(function*(){})()}onTrainEnd(S){return(0,e.A)(function*(){})()}setModel(S){}}class h{constructor(S,b=10){null==S&&(S=[]),this.callbacks=S,this.queueLength=b}append(S){this.callbacks.push(S)}setParams(S){for(const b of this.callbacks)b.setParams(S)}setModel(S){for(const b of this.callbacks)b.setModel(S)}onEpochBegin(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const G of w.callbacks)yield G.onEpochBegin(S,b)})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const G of w.callbacks)yield G.onEpochEnd(S,b)})()}onBatchBegin(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const G of w.callbacks)yield G.onBatchBegin(S,b)})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const G of w.callbacks)yield G.onBatchEnd(S,b)})()}onTrainBegin(S){var b=this;return(0,e.A)(function*(){null==S&&(S={});for(const w of b.callbacks)yield w.onTrainBegin(S)})()}onTrainEnd(S){var b=this;return(0,e.A)(function*(){null==S&&(S={});for(const w of b.callbacks)yield w.onTrainEnd(S)})()}}class f extends g{constructor(){super()}onEpochBegin(S){var b=this;return(0,e.A)(function*(){b.seen=0,b.totals={}})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});const G=null==b.size?0:b.size;w.seen+=G;for(const H in b){const F=b[H];if("number"==typeof F)w.totals.hasOwnProperty(H)||(w.totals[H]=0),w.totals[H]=w.totals[H]+F*G;else{let B;H in w.totals?B=w.totals[H]:w.totals[H]=0;const A=(0,s.DZQ)(()=>(0,s.WQq)(w.totals[H],(0,s.lKK)(F,G)));w.totals[H]=A,null!=B&&B.dispose()}}})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){if(null!=b)for(const G of w.params.metrics)null!=w.totals[G]&&("number"==typeof w.totals[G]?b[G]=w.totals[G]/w.seen:(0,s.DZQ)(()=>{const H=(0,s.lKK)((0,s.y4m)(1,w.seen),w.totals[G]);b[G]=H,w.totals[G].dispose(),(0,s.aCs)(b[G])}))})()}}class p extends g{onTrainBegin(S){var b=this;return(0,e.A)(function*(){b.epoch=[],b.history={}})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={}),w.epoch.push(S);for(const G in b)null==w.history[G]&&(w.history[G]=[]),w.history[G].push(b[G])})()}syncData(){var S=this;return(0,e.A)(function*(){const b=[],w=[],G=[];for(const F in S.history){const B=S.history[F];for(let A=0;A<B.length;++A)"number"!=typeof B[A]&&(b.push(B[A].data()),w.push(F),G.push(A))}const H=yield Promise.all(b);for(let F=0;F<H.length;++F)S.history[w[F]][G[F]].dispose(),S.history[w[F]][G[F]]=H[F][0]})()}}class u extends g{constructor(S,b){if(super(),this.currentEpoch=0,this.nowFunc=S.nowFunc,this.nextFrameFunc=S.nextFrameFunc||s.dA1,this.yieldEvery=b||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=S.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=m.sg(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=S.onTrainBegin,this.trainEnd=S.onTrainEnd,this.epochBegin=S.onEpochBegin,this.epochEnd=S.onEpochEnd,this.batchBegin=S.onBatchBegin,this.batchEnd=S.onBatchEnd,this.yield=S.onYield}maybeWait(S,b,w){var G=this;return(0,e.A)(function*(){const H=[];null!=G.yield&&(yield(0,E.I)(w),H.push(G.yield(S,b,w))),H.push(G.nextFrameFunc()),yield Promise.all(H)})()}onEpochBegin(S,b){var w=this;return(0,e.A)(function*(){w.currentEpoch=S,null!=w.epochBegin&&(yield(0,E.I)(b),yield w.epochBegin(S,b))})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){const G=[];null!=w.epochEnd&&(yield(0,E.I)(b),G.push(w.epochEnd(S,b))),"epoch"===w.yieldEvery&&G.push(w.nextFrameFunc()),yield Promise.all(G)})()}onBatchBegin(S,b){var w=this;return(0,e.A)(function*(){null!=w.batchBegin&&(yield(0,E.I)(b),yield w.batchBegin(S,b))})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){const G=[];null!=w.batchEnd&&(yield(0,E.I)(b),G.push(w.batchEnd(S,b))),"batch"===w.yieldEvery?G.push(w.nextFrameFunc()):s.ZSL.isNumber(w.yieldEvery)&&G.push(w.maybeWait(w.currentEpoch,S,b)),yield Promise.all(G)})()}onTrainBegin(S){var b=this;return(0,e.A)(function*(){null!=b.trainBegin&&(yield(0,E.I)(S),yield b.trainBegin(S))})()}onTrainEnd(S){var b=this;return(0,e.A)(function*(){null!=b.trainEnd&&(yield(0,E.I)(S),yield b.trainEnd(S))})()}}function d(D,S){return null==D&&(D={}),D instanceof g?[D]:Array.isArray(D)&&D[0]instanceof g?D:m.st(D).map(w=>new u(w,S))}let C=(()=>{class D{constructor(){}static registerCallbackConstructor(b,w){s.ZSL.assert(b>=0&&Number.isInteger(b),()=>`Verbosity level is expected to be an integer >= 0, but got ${b}`),D.checkForDuplicate(w),null==D.constructors[b]&&(D.constructors[b]=[]),D.constructors[b].push(w)}static checkForDuplicate(b){for(const w in D.constructors)D.constructors[+w].forEach(H=>{if(H===b)throw new i.Qp("Duplicate callback constructor.")})}static clear(){D.constructors={}}static createCallbacks(b){const w=[];for(const G in D.constructors){const H=+G;b>=H&&w.push(...D.constructors[H])}return w.map(G=>new G)}}return D.constructors={},D})();function T(D,S,b,w,G,H,F,B,A){const k=new p,_=[new f,...C.createCallbacks(S)];null!=D&&_.push(...D),_.push(k);const U=new h(_);return U.setParams({epochs:b,initialEpoch:w,samples:G,steps:H,batchSize:F,verbose:S,doValidation:B,metrics:A}),{callbackList:U,history:k}}},30593:(ft,N,t)=>{"use strict";t(10467),t(40083),t(31542),t(42946),t(35814)},9980:(ft,N,t)=>{"use strict";t.d(N,{BC:()=>u,IU:()=>f,Kx:()=>x,Uc:()=>d,tB:()=>c,uM:()=>E,uU:()=>m});var e=t(89893),s=t(24503);const i=new Map;function E(D){(0,s.E6)(e.To,"DataFormat",D)}function m(D){(0,s.E6)(e.ft,"InterpolationFormat",D)}function c(D){(0,s.E6)(e.EY,"PaddingMode",D)}function x(D){(0,s.E6)(e.bb,"PoolMode",D)}const g=[],h="/";function f(D,S){g.push(D);try{const b=S();return g.pop(),b}catch(b){throw g.pop(),b}}function u(D){if(!T(D))throw new Error("Not a valid tensor name: '"+D+"'");return function p(){return 0===g.length?"":g.join(h)+h}()+D}function d(D){if(!T(D))throw new Error("Not a valid tensor name: '"+D+"'");i.has(D)||i.set(D,0);const S=i.get(D);if(i.set(D,i.get(D)+1),S>0){const b=`${D}_${S}`;return i.set(b,1),b}return D}const C=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function T(D){return!!D.match(C)}},67165:(ft,N,t)=>{"use strict";t.d(N,{YZ:()=>d,uH:()=>p});var e=t(41653),s=t(17513),i=t(24503);function E(C,T){return(0,e.DZQ)(()=>e.RZD(e.czq(e.lKK(C,C),T,!0)))}class m extends e.JFn.Serializable{getConfig(){return{}}}let c=(()=>{class C extends m{constructor(D){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=D.maxValue?D.maxValue:this.defaultMaxValue,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>{const S=E(D,this.axis),b=e.zQh(S,0,this.maxValue);return e.lKK(D,e.y4m(b,e.WQq((0,s.Ni)(),S)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return C.className="MaxNorm",C})();e.JFn.registerClass(c);let x=(()=>{class C extends m{constructor(D){super(),this.defaultAxis=0,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>e.y4m(D,e.WQq((0,s.Ni)(),E(D,this.axis))))}getConfig(){return{axis:this.axis}}}return C.className="UnitNorm",C})();e.JFn.registerClass(x);let g=(()=>{class C extends m{apply(D){return e.VVh(D)}}return C.className="NonNeg",C})();e.JFn.registerClass(g);let h=(()=>{class C extends m{constructor(D){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=D.minValue?D.minValue:this.defaultMinValue,this.maxValue=null!=D.maxValue?D.maxValue:this.defaultMaxValue,this.rate=null!=D.rate?D.rate:this.defaultRate,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>{const S=E(D,this.axis),b=e.WQq(e.lKK(this.rate,e.zQh(S,this.minValue,this.maxValue)),e.lKK(1-this.rate,S));return e.lKK(D,e.y4m(b,e.WQq((0,s.Ni)(),S)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return C.className="MinMaxNorm",C})();e.JFn.registerClass(h);const f={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function p(C){return(0,i.k4)(C)}function u(C,T={}){return(0,i.Xv)(C,e.JFn.SerializationMap.getMap().classNameMap,T,"constraint")}function d(C){return null==C?null:"string"==typeof C?u({className:C in f?f[C]:C,config:{}}):C instanceof m?C:u(C)}},29947:(ft,N,t)=>{"use strict";t.d(N,{W:()=>i});var e=t(22919);let s=(()=>{class E{constructor(c){this.seed=c}next(){if(void 0!==this.seed)return this.seed++}}return E.className="RandomSeed",E})(),i=(()=>{class E extends e.Wd{constructor(c){super(c),this.randomGenerator=new s(c.seed)}getConfig(){const c={seed:this.randomGenerator.seed},x=super.getConfig();return Object.assign(c,x),c}}return E.className="BaseRandomLayer",E})()},10281:(ft,N,t)=>{"use strict";t.d(N,{RW:()=>g,g7:()=>u,oR:()=>p});var e=t(41653),s=t(42946);class i{constructor(b){this.maxEntries=b||100,this.cache=new Map}get(b){let w;return this.cache.has(b)&&(w=this.cache.get(b),this.cache.delete(b),this.cache.set(b,w)),w}put(b,w){if(this.cache.has(b))this.cache.delete(b);else if(this.cache.size>=this.maxEntries){const G=this.cache.keys().next().value;this.cache.delete(G)}this.cache.set(b,w)}getMaxEntries(){return this.maxEntries}setMaxEntries(b){if(b<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${b}.`);if(this.maxEntries>b)for(let w=0;w<this.maxEntries-b;w++){const G=this.cache.keys().next().value;this.cache.delete(G)}this.maxEntries=b}}var E=t(24503),m=t(91806),c=t(22919);class g{constructor(b){if(this.id2Value={},this.id2Mask={},this.name2Id={},b instanceof g)for(const w in b.id2Value)this.id2Value[w]=b.id2Value[w],w in b.id2Mask&&(this.id2Mask[w]=b.id2Mask[w]);else{if(null==b)return;for(const w of b)this.add(w.key,w.value)}}add(b,w,G){if(null!=this.id2Value[b.id])throw new s.Qp(`Duplicate key: name=${b.name}, id=${b.id}`);return this.id2Value[b.id]=function x(S,b){if(null==S.dtype||S.dtype===b.dtype)return b;try{return(0,e.wgE)(b,S.dtype)}catch{throw new s.Qp(`The dtype of the feed (${b.dtype}) can not be cast to the dtype of the key '${S.name}' (${S.dtype}).`)}}(b,w),this.name2Id[b.name]=b.id,null!=G&&(this.id2Mask[b.id]=G),this}addFeed(b){this.add(b.key,b.value)}hasKey(b){return null!=this.id2Value[b.id]}names(){return Object.keys(this.name2Id)}getValue(b){if(b instanceof c.Ar){if(null==this.id2Value[b.id])throw new s.Qp(`Nonexistent key: ${b.name}`);return this.id2Value[b.id]}{const w=this.name2Id[b];if(null==w)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${b}`);return this.id2Value[w]}}getMask(b){if(b instanceof c.Ar){if(null==this.id2Value[b.id])throw new s.Qp(`Nonexistent key: ${b.name}`);return this.id2Mask[b.id]}{const w=this.name2Id[b];if(null==w)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${b}`);return this.id2Mask[w]}}disposeMasks(){null!=this.id2Mask&&(0,e.ASo)(this.id2Mask)}}const h=new i,f=new i;function p(S){null!=h&&h.setMaxEntries(S),null!=f&&f.setMaxEntries(S)}function u(S,b,w,G){const H=null!=w&&w.training,F=Array.isArray(S),B=F?S:[S],A=B.map(it=>it.name),k=[],_=b.names();for(const it of A)-1!==_.indexOf(it)?k.push(b.getValue(it)):k.push(null);null!=G&&(G.maxNumTensors=-1/0,G.minNumTensors=1/0);const U=A.join(",")+"|"+b.names().sort().join(",");let Z,W=h.get(U);if(null==W){const it=function d(S,b){e.ZSL.assert(null!=S&&S.length>0,()=>"Expected at least one fetch, got none");let w=[],G={};if(1===S.length){const H=T(S[0],b);w=H.sorted,G=H.recipientMap}else{const H=new Set;for(const F of S){const{sorted:B,recipientMap:A}=T(F,b);for(const k of B)H.has(k.name)||(w.push(k),H.add(k.name));for(const k in A)null==G[k]&&(G[k]=new Set),A[k].forEach(_=>G[k].add(_))}}return{sorted:w,recipientCounts:C(G)}}(B,b);W=it.sorted,Z=it.recipientCounts,h.put(U,W),f.put(U,Z)}Z={},H||Object.assign(Z,f.get(U));const j=new g(b);for(let it=0;it<W.length;++it){if(null!=G){const ce=(0,e.m1Z)().numTensors;ce>G.maxNumTensors&&(G.maxNumTensors=ce),ce<G.minNumTensors&&(G.minNumTensors=ce)}const at=W[it],J=at.sourceLayer;if(J instanceof m.m)continue;const ot=[],rt=[],tt=[];let Tt=!1;for(const ce of at.inputs){const Jt=j.getValue(ce),ue=j.getMask(ce);ot.push(Jt),rt.push(ue),null!=ue&&(Tt=!0),H||(Z[ce.name]--,0===Z[ce.name]&&!b.hasKey(ce)&&-1===A.indexOf(ce.name)&&!Jt.isDisposed&&!0!==ce.sourceLayer.stateful&&tt.push(Jt))}Tt&&((w=w||{}).mask=rt[0]);const Et=(0,E.st)(J.apply(ot,w));let At=null;J.supportsMasking&&(At=J.computeMask(ot,rt));const oe=D(at),Gt=Array.isArray(oe)?oe:[oe];for(let ce=0;ce<Gt.length;++ce){j.hasKey(Gt[ce])||j.add(Gt[ce],Et[ce],Array.isArray(At)?At[0]:At);const Jt=A.indexOf(Gt[ce].name);-1!==Jt&&(k[Jt]=Et[ce])}H||(0,e.ASo)(tt)}return j.disposeMasks(),F?k:k[0]}function C(S){const b={};for(const w in S)b[w]=S[w].size;return b}function T(S,b){const w=new Set,G=[],H={};for(const A of b.names())w.add(A);const F=[],B=[];for(F.push(S);F.length>0;){const A=F[F.length-1];if(w.has(A.name)){F.pop();continue}const k=B[B.length-1]===F.length-1;if(0===A.inputs.length||k)F.pop(),G.push(A),w.add(A.name),k&&B.pop();else{B.push(F.length-1);for(const _ of A.inputs)null==H[_.name]&&(H[_.name]=new Set),H[_.name].add(A.name),!w.has(_.name)&&F.push(_)}}return{sorted:G,recipientMap:H}}function D(S){let b;if(1===S.sourceLayer.inboundNodes.length)b=S.sourceLayer.output;else{let w=null;for(let G=0;G<S.sourceLayer.inboundNodes.length;++G)for(const H of S.sourceLayer.inboundNodes[G].outputTensors)if(H.id===S.id){w=G;break}b=S.sourceLayer.getOutputAt(w)}return b}},22919:(ft,N,t)=>{"use strict";t.d(N,{Ar:()=>p,Wd:()=>T,X6:()=>b,bP:()=>d,eO:()=>f});var e=t(41653),s=t(29887),i=t(9980),E=t(42946),m=t(7257),c=t(24503),x=t(71936),g=t(43549),h=t(75768);class f{constructor(F){this.dtype=F.dtype,this.shape=F.shape,this.ndim=null!=F.shape?F.shape.length:F.ndim,this.maxNDim=F.maxNDim,this.minNDim=F.minNDim,this.axes=F.axes||{}}}class p{constructor(F,B,A,k,_,U,W){this.dtype=F,this.shape=B,this.sourceLayer=A,this.inputs=k,this.callArgs=_,this.outputTensorIndex=W,this.id=(0,s.j)(),null!=U&&(this.originalName=(0,i.BC)(U),this.name=(0,i.Uc)(this.originalName)),this.rank=B.length}}let u=0;class d{constructor(F,B){this.callArgs=B,this.id=u++,this.outboundLayer=F.outboundLayer,this.inboundLayers=F.inboundLayers,this.nodeIndices=F.nodeIndices,this.tensorIndices=F.tensorIndices,this.inputTensors=F.inputTensors,this.outputTensors=F.outputTensors,this.inputMasks=F.inputMasks,this.outputMasks=F.outputMasks,this.inputShapes=F.inputShapes,this.outputShapes=F.outputShapes;for(const A of F.inboundLayers)null!=A&&A.outboundNodes.push(this);F.outboundLayer.inboundNodes.push(this)}getConfig(){const F=[];for(const B of this.inboundLayers)F.push(null!=B?B.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:F,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let C=0;class T extends e.JFn.Serializable{constructor(F={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=C++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let B=F.name;if(!B){const A=this.getClassName();B=c.uc(A)+"_"+(0,s.v)(A)}if(this.name=B,this.trainable_=null==F.trainable||F.trainable,null!=F.inputShape||null!=F.batchInputShape){let A;if(null!=F.batchInputShape)A=F.batchInputShape;else if(null!=F.inputShape){let _=null;null!=F.batchSize&&(_=F.batchSize),A=[_].concat(F.inputShape)}this.batchInputShape=A;let k=F.dtype;null==k&&(k=F.inputDType),null==k&&(k="float32"),this.dtype=k}this.initialWeights=null!=F.weights?F.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(F,B){return F.name+"_ib-"+B.toString()}getNodeAtIndex(F,B){if(0===this.inboundNodes.length)throw new E.bu(`The layer has never been called and thus has no defined ${B}.`);if(this.inboundNodes.length<=F)throw new E.Qp(`Asked to get ${B} at node ${F}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[F]}getInputAt(F){return c.wL(this.getNodeAtIndex(F,"input").inputTensors)}getOutputAt(F){return c.wL(this.getNodeAtIndex(F,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new E.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new E.l7(`Layer ${this.name} is not connected, no input to return.`);return c.wL(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new E.l7(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new E.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return c.wL(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(F=>F())}get updates(){return this._updates}get built(){return this._built}set built(F){this._built=F}get trainable(){return this.trainable_}set trainable(F){this._trainableWeights.forEach(B=>B.trainable=F),this.trainable_=F}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(F=>F.trainable):[]}set trainableWeights(F){this._trainableWeights=F}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(F=>!F.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(F){this._nonTrainableWeights=F}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(F){const B=c.st(F);if(null==this.inputSpec||0===this.inputSpec.length)return;const A=c.st(this.inputSpec);if(B.length!==A.length)throw new E.Qp(`Layer ${this.name} expects ${A.length} inputs, but it received ${B.length} input tensors. Input received: ${F}`);for(let k=0;k<B.length;k++){const _=B[k],U=A[k];if(null==U)continue;const W=_.rank;if(null!=U.ndim&&W!==U.ndim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected ndim=${U.ndim}, found ndim=${W}`);if(null!=U.maxNDim&&W>U.maxNDim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected max_ndim=${U.maxNDim}, found ndim=${W}`);if(null!=U.minNDim&&W<U.minNDim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected min_ndim=${U.minNDim}, found ndim=${W}.`);if(null!=U.dtype&&_.dtype!==U.dtype)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name} : expected dtype=${U.dtype}, found dtype=${_.dtype}.`);if(U.axes){const Z=_.shape;for(const j in U.axes){const it=Number(j),at=U.axes[j];if(null!=at&&-1===[at,null].indexOf(it>=0?Z[it]:Z[Z.length+it]))throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected axis ${it} of input shape to have value ${at} but got shape ${Z}.`)}}if(null!=U.shape)for(let Z=0;Z<U.shape.length;++Z){const j=U.shape[Z],it=_.shape[Z];if(null!=j&&null!=it&&j!==it)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected shape=${U.shape}, found shape=${_.shape}.`)}}}call(F,B){return F}invokeCallHook(F,B){null!=this._callHook&&this._callHook(F,B)}setCallHook(F){this._callHook=F}clearCallHook(){this._callHook=null}apply(F,B){B=B||{},this.assertNotDisposed();const A=c.st(F),k=function w(H){let F=!0;for(const B of c.st(H))if(!(B instanceof p)){F=!1;break}return F}(F),_=function G(H){let F=!0;for(const B of c.st(H))if(B instanceof p){F=!1;break}return F}(F);if(k===_)throw new E.Qp("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,i.IU)(this.name,()=>{if(!this.built){this.assertInputCompatibility(F);const U=[];for(const W of c.st(F))U.push(W.shape);this.build(c.wL(U)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&_&&(this._refCount=1)}if(this.assertInputCompatibility(F),_){let U=this.call(F,B);this.supportsMasking&&this.setMaskMetadata(F,U);const W=c.st(U),Z=[];for(let j of W)-1!==A.indexOf(j)&&(j=j.clone()),Z.push(j);if(U=c.wL(Z),null!=this.activityRegularizer)throw new E.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return U}{const U=function D(H){H=c.st(H);const F=[];for(const B of H)F.push(B.shape);return c.wL(F)}(F),W=this.computeOutputShape(U);let Z;const j="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(F)?U[0]:U),Z=null!=W&&W.length>0&&Array.isArray(W[0])?W.map((it,at)=>new p(j,it,this,c.st(F),B,this.name,at)):new p(j,W,this,c.st(F),B,this.name),this.addInboundNode(F,Z,null,null,U,W,B),this._refCount++,null!=this.activityRegularizer)throw new E.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return Z}})}warnOnIncompatibleInputShape(F){if(null!=this.batchInputShape)if(F.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(F)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let B=!1;this.batchInputShape.forEach((A,k)=>{null!=A&&null!=F[k]&&F[k]!==A&&(B=!0)}),B&&console.warn(`The shape of the input tensor (${JSON.stringify(F)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new E.l7(`The layer ${this.name} has never been called and thus has no defined output shape.`);const F=[];for(const B of this.inboundNodes){const A=JSON.stringify(B.outputShapes);-1===F.indexOf(A)&&F.push(A)}if(1===F.length){const B=this.inboundNodes[0].outputShapes;return Array.isArray(B)&&Array.isArray(B[0])&&1===B.length?B[0]:B}throw new E.l7(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new E.bu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return g.Y(this.weights)}build(F){this.built=!0}getWeights(F=!1){return(0,h.ex)(F?this.trainableWeights:this.weights)}setWeights(F){(0,e.DZQ)(()=>{const B=this.weights;if(B.length!==F.length)throw new E.Qp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${F.length}, but the layer was expecting ${B.length} weights. Provided weights: ${F}...`);if(0===B.length)return;const A=[],k=(0,h.ex)(B);for(let _=0;_<k.length;++_){const U=k[_],W=B[_],Z=F[_];if(!e.ZSL.arraysEqual(U.shape,Z.shape))throw new E.Qp(`Layer weight shape ${U.shape} not compatible with provided weight shape ${Z.shape}`);A.push([W,Z])}(0,h.UM)(A)})}addWeight(F,B,A,k,_,U,W,Z){if(-1!==this._addedWeightNames.indexOf(F))throw new E.Qp(`Duplicate weight name ${F} for layer ${this.name}`);this._addedWeightNames.push(F),null==A&&(A="float32"),this.fastWeightInitDuringBuild&&(k=null!=Z?Z():(0,m.Fe)("zeros"));const j=k.apply(B,A),it=new h.eR(j,A,F,U,W);return j.dispose(),null!=_&&this.addLoss(()=>_.apply(it.read())),null==U&&(U=!0),U?this._trainableWeights.push(it):this._nonTrainableWeights.push(it),it}setFastWeightInitDuringBuild(F){this.fastWeightInitDuringBuild=F}addLoss(F){null==F||Array.isArray(F)&&0===F.length||(F=c.st(F),null!=this._losses&&this.losses.push(...F))}computeOutputShape(F){return F}computeMask(F,B){if(!this.supportsMasking){if(null!=B){if(!Array.isArray(B))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);B.forEach(A=>{if(null!=A)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return B}setMaskMetadata(F,B,A){if(!this.supportsMasking)return;const k=this.computeMask(F,A),_=c.st(B),U=c.st(k);if(_.length!==U.length)throw new Error(`${this.name} outputs ${_.length} tensors but ${_.length} masks for those tensors`);for(let W=0;W<_.length;W++)_[W].kerasMask=U[W]}addInboundNode(F,B,A,k,_,U,W=null){const Z=c.st(F);B=c.st(B),A=c.st(A),k=c.st(k),_=x.FS(_),U=x.FS(U);const j=[],it=[],at=[];for(const J of Z)j.push(J.sourceLayer),it.push(J.nodeIndex),at.push(J.tensorIndex);new d({outboundLayer:this,inboundLayers:j,nodeIndices:it,tensorIndices:at,inputTensors:Z,outputTensors:B,inputMasks:A,outputMasks:k,inputShapes:_,outputShapes:U},W);for(let J=0;J<B.length;J++)B[J].sourceLayer=this,B[J].nodeIndex=this.inboundNodes.length-1,B[J].tensorIndex=J}getConfig(){const F={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(F.batchInputShape=this.batchInputShape),null!=this.dtype&&(F.dtype=this.dtype),F}disposeWeights(){return this.weights.forEach(F=>F.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let F=0;return 0==--this._refCount&&(F=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:F}}}function b(H,F,B){if((null==F||null!=B&&B>0)&&(F=H.sourceLayer,B=H.nodeIndex),0===F.inboundNodes.length)return[H];{const A=F.inboundNodes[B];if(0===A.inboundLayers.length)return A.inputTensors;{const k=[];for(let _=0;_<A.inboundLayers.length;_++){const j=b(A.inputTensors[_],A.inboundLayers[_],A.nodeIndices[_]);for(const it of j)-1===k.indexOf(it)&&k.push(it)}return k}}}},31542:(ft,N,t)=>{"use strict";t.d(N,{Gw:()=>us});var e=t(10467),s=t(41653),i=t(99198),E=t(40083),m=t(9980),c=t(42946),x=t(53340),g=t(35814),h=t(55294),f=t(98552),p=t(17513);const d=1048576;function C(Rt,Ut,lt=!1){if(null==Rt||"object"!=typeof Rt||Object.getPrototypeOf(Rt)!==Object.prototype||!T(Rt))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(lt){const kt=JSON.stringify(Rt);kt.length>d&&console.warn(`User-defined metadata of model "${Ut}" is too large in size (length=${kt.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${d}.`)}}function T(Rt){if(null===Rt)return!0;if("object"==typeof Rt){if(Object.getPrototypeOf(Rt)===Object.prototype){const Ut=Object.keys(Rt);for(const lt of Ut)if("string"!=typeof lt||!T(Rt[lt]))return!1;return!0}if(Array.isArray(Rt)){for(const Ut of Rt)if(!T(Ut))return!1;return!0}return!1}{const Ut=typeof Rt;return"string"===Ut||"number"===Ut||"boolean"===Ut}}var D=t(24503),S=t(43549);function H(Rt,Ut,lt=console.log){let kt="";for(let q=0;q<Rt.length;++q)q>0&&(kt=kt.slice(0,kt.length-1)+" "),kt+=Rt[q],kt=kt.slice(0,Ut[q]),kt+=" ".repeat(Ut[q]-kt.length);lt(kt)}function F(Rt,Ut,lt){let kt,q;try{q=Rt.inboundNodes.map(pt=>JSON.stringify(pt.inputShapes)).join(",")}catch{q="multiple"}try{kt=JSON.stringify(Rt.outputShape)}catch{kt="multiple"}H([`${Rt.name} (${Rt.getClassName()})`,q,kt,Rt.countParams().toString()],Ut,lt)}function B(Rt,Ut,lt,kt){let q,xt;try{xt=Rt.inboundNodes.map(ve=>JSON.stringify(ve.inputShapes)).join(",")}catch{xt="multiple"}try{q=JSON.stringify(Rt.outputShape)}catch{q="multiple"}const It=[];for(const ve of Rt.inboundNodes)if(!(null!=lt&&lt.length>0&&-1===lt.indexOf(ve)))for(let be=0;be<ve.inboundLayers.length;++be)It.push(`${ve.inboundLayers[be].name}[${ve.nodeIndices[be]}][${ve.tensorIndices[be]}]`);const dt=Rt.name,pt=Rt.getClassName(),Xt=0===It.length?"":It[0];H([`${dt} (${pt})`,xt,q,Rt.countParams().toString(),Xt],Ut,kt);for(let ve=1;ve<It.length;++ve)H(["","","","",It[ve]],Ut,kt)}var A=t(89119),k=t(13425),_=t(13509),U=t(29887),W=t(71936),Z=t(75768),j=t(10281),it=t(91806),at=t(22919);class ot extends at.Wd{constructor(Ut){if(super({}),this.containerNodes=new Set,this.name=Ut.name,null==this.name){const Te=this.getClassName().toLowerCase();this.name=(0,U.v)(Te)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(Ut.inputs)?Ut.inputs.slice():[Ut.inputs],this.outputs=Array.isArray(Ut.outputs)?Ut.outputs.slice():[Ut.outputs],D.Am(this.inputs).length!==this.inputs.length)throw new c.Qp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(Te=>Te.name)}`);D.Am(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(Te=>Te.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const Te of this.outputs){const ze=Te.nodeIndex,un=Te.tensorIndex;this.outputLayers.push(Te.sourceLayer),this.outputLayersNodeIndices.push(ze),this.outputLayersTensorIndices.push(un)}for(const Te of this.inputs){const en=Te.sourceLayer,ze=Te.nodeIndex,un=Te.tensorIndex;D.vA(0===ze,"input layer has >1 nodes"),D.vA(0===un,"input layer has >1 tensors"),this.inputLayers.push(en),this.inputLayersNodeIndices.push(ze),this.inputLayersTensorIndices.push(un)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let Te=0;Te<this.inputLayers.length;Te++){const en=this.inputLayers[Te];if(!(en instanceof it.m))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${Ut.inputs}. Input ${Te} (0-based) originates from layer type ${en.getClassName()}.`);this.inputNames.push(en.name),this.feedInputShapes.push(en.batchInputShape),this.feedInputNames.push(en.name)}for(const Te of this.outputLayers)this.outputNames.push(Te.name);this.internalInputShapes=this.inputs.map(Te=>Te.shape),this.internalOutputShapes=this.outputs.map(Te=>Te.shape);const lt={},kt={},q={},xt={},It={},dt=[],pt=(Te,en,ze,un,Sn,Un)=>{(null==un||null==Sn||null==Un)&&(un=Te.sourceLayer,Sn=Te.nodeIndex,Un=Te.tensorIndex);const bn=un.inboundNodes[Sn];if(-1!==ze.indexOf(bn))throw new c.bu(`The tensor ${Te.name} at layer "${un.name}" is part of a cycle.`);if(-1!==en.indexOf(bn))return;this.containerNodes.add(ot.nodeKey(un,Sn)),un.id in It||(It[un.id]=Object.keys(It).length),-1===ze.indexOf(bn)&&ze.push(bn);const es=bn.inboundLayers.length;for(let kn=0;kn<es;kn++)pt(bn.inputTensors[kn],en,ze,bn.inboundLayers[kn],bn.nodeIndices[kn],bn.tensorIndices[kn]);for(en.push(bn);ze.indexOf(bn)>=0;)ze.splice(ze.indexOf(bn),1);dt.push(bn)},Xt=[],Yt=[];for(const Te of this.outputs)pt(Te,Xt,Yt);const ve=dt.slice().reverse();for(const Te of ve){kt[Te.id]=Te,Te.id in lt||(lt[Te.id]=0);let en=lt[Te.id];en=Math.max(en,null==q[Te.outboundLayer.id]?0:q[Te.outboundLayer.id]),q[Te.outboundLayer.id]=en,xt[Te.outboundLayer.id]=Te.outboundLayer,lt[Te.id]=en;for(let un=0;un<Te.inboundLayers.length;un++){const bn=Te.inboundLayers[un].inboundNodes[Te.nodeIndices[un]];lt[bn.id]=Math.max(en+1,null==lt[bn.id]?0:lt[bn.id]),kt[bn.id]=bn}}const be={};for(const Te in lt){const en=lt[Te];en in be||(be[en]=[]),be[en].push(kt[Te])}const tn={};for(const Te in q){const en=q[Te];en in tn||(tn[en]=[]),tn[en].push(xt[Te])}let ln=Object.keys(tn).map(Te=>parseInt(Te,10)).sort(D.th);this.layers=[];for(const Te of ln){const en=tn[Te];en.sort((ze,un)=>{const Sn=It[ze.id],Un=It[un.id];return Sn<Un?-1:Sn>Un?1:0});for(const ze of en)ze instanceof ot&&this.internalContainerRefs.push(ze),this.layers.push(ze)}this.layersByDepth=tn,ln=Object.keys(be).map(Te=>parseInt(Te,10)).sort(D.th);const Ee=this.inputs.slice(),_e=[];for(const Te of ln)for(const en of be[Te]){const ze=en.outboundLayer;if(null!=ze){for(const un of en.inputTensors)if(-1===Ee.indexOf(un))throw new c.bu(`Graph disconnected: cannot obtain value for tensor ${un} at layer "${ze.name}". The following previous layers were accessed without issue: ${_e}`);for(const un of en.outputTensors)Ee.push(un);_e.push(ze.name)}}this.nodesByDepth=be;const We=this.layers.map(Te=>Te.name);for(const Te of We){const en=We.filter(ze=>ze===Te).length;if(1!==en)throw new c.bu(`The name "${Te}" is used ${en} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(We))}this.outboundNodes=[],this.inboundNodes=[],new at.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(Te=>null),outputMasks:this.outputs.map(Te=>null),inputShapes:this.inputs.map(Te=>Te.shape),outputShapes:this.outputs.map(Te=>Te.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const Ut={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const lt of this.layers)Ut.numDisposedVariables+=lt.dispose().numDisposedVariables;for(const lt of this.internalContainerRefs)Ut.numDisposedVariables+=lt.dispose().numDisposedVariables}return Ut.refCountAfterDispose=this._refCount,Ut}get trainable(){return this.trainable_}set trainable(Ut){this.layers.forEach(lt=>{lt._trainableWeights.forEach(kt=>kt.trainable=Ut)}),this.trainable_=Ut}get trainableWeights(){if(this._trainableWeights.length>0)throw new c.Qp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let Ut=[];for(const lt of this.layers)Ut=Ut.concat(lt.trainableWeights);return Ut}get nonTrainableWeights(){const Ut=[];for(const lt of this.layers)Ut.push(...lt.nonTrainableWeights);if(!this.trainable){const lt=[];for(const kt of this.layers)lt.push(...kt.trainableWeights);return lt.concat(Ut)}return Ut}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(Ut,lt=!0){const kt={};let q=0;const xt=(Rt=>{const Ut=Object.keys(Rt);if(0===Ut.length)return!1;const lt=Ut[0].split("/");return!isNaN(parseInt(lt[lt.length-1],10))})(Ut);xt&&this.parseWeights(Ut);for(const dt of this.layers)for(const[pt,Xt]of dt.weights.entries()){const Yt=xt?`${Xt.name.split("/").slice(0,-1).join("/")+"/"}${pt}`:Xt.originalName;if(null!=kt[Yt])throw new c.Qp(`Duplicate weight name: ${Yt}`);kt[Yt]=Xt,q++}const It=[];for(const dt in Ut){let pt=dt;if(null==kt[dt]){const Xt=dt.split("/");pt=Xt.slice(0,-2).concat([Xt[Xt.length-1]]).join("/")}if(null!=kt[pt])It.push([kt[pt],Ut[dt]]);else if(lt)throw new c.Qp(`Provided weight data has no target variable: ${dt}`);delete kt[pt]}if(lt){const dt=[];for(const pt in kt)dt.push(pt);if(dt.length>0)throw new c.Qp(`${dt.length} of ${q} weights are not set: ${dt}`)}(0,Z.UM)(It)}parseWeights(Ut){for(const lt in Object.keys(Ut)){const kt=lt.split("/"),q=["vars","layer_checkpoint_dependencies"],xt=kt.map(It=>It.startsWith("_")?It.slice(1):It).filter(It=>!q.includes(It)).join("/");xt!==lt&&(Ut[xt]=Ut[lt],delete Ut[lt])}}updatedConfig(){const Ut=this.getConfig(),lt={};return lt.className=this.getClassName(),lt.config=Ut,lt.kerasVersion=`tfjs-layers ${_.r}`,lt.backend="TensorFlow.js",lt}toJSON(Ut,lt=!0){const kt=(0,k.M)(this.updatedConfig());return lt?JSON.stringify(kt):kt}call(Ut,lt){return(0,s.DZQ)(()=>{Ut=D.st(Ut);const kt=new j.RW;for(let q=0;q<this.inputs.length;++q)kt.add(this.inputs[q],Ut[q]);return(0,j.g7)(this.outputs,kt,lt)})}computeMask(Ut,lt){return(0,s.DZQ)(()=>{let kt;return Ut=D.st(Ut),kt=null==lt?D.fD(null,Ut.length):D.st(lt),this.runInternalGraph(Ut,kt)[1]})}computeOutputShape(Ut){const lt=W.FS(Ut);if(lt.length!==this.inputLayers.length)throw new c.Qp(`Invalid inputShape argument ${Ut}: model has ${this.inputLayers.length} tensor inputs.`);const kt={};for(let dt=0;dt<lt.length;dt++)kt[this.inputLayers[dt].name+"_0_0"]=lt[dt];const q=Object.keys(this.nodesByDepth).map(dt=>parseInt(dt,10)).sort(D.th);if(q.length>1)for(const dt of q){const pt=this.nodesByDepth[dt];for(const Xt of pt){const Yt=Xt.outboundLayer;if(-1!==this.inputLayers.map(Ee=>Ee.id).indexOf(Yt.id))continue;const ve=[];for(let Ee=0;Ee<Xt.inboundLayers.length;Ee++)ve.push(kt[`${Xt.inboundLayers[Ee].name}_${Xt.nodeIndices[Ee]}_${Xt.tensorIndices[Ee]}`]);const be=Yt.computeOutputShape(D.wL(ve)),tn=W.FS(be),ln=Yt.inboundNodes.indexOf(Xt);for(let Ee=0;Ee<tn.length;Ee++)kt[`${Yt.name}_${ln}_${Ee}`]=tn[Ee]}}const xt=[],It=[];for(let dt=0;dt<this.outputLayers.length;dt++)It.push(`${this.outputLayers[dt].name}_${this.outputLayersNodeIndices[dt]}_${this.outputLayersTensorIndices[dt]}`);for(let dt=0;dt<It.length;dt++){const pt=It[dt];D.vA(pt in kt),xt.push(kt[pt])}return D.wL(xt)}runInternalGraph(Ut,lt){null==lt&&(lt=D.fD(null,Ut.length));const kt={};for(let pt=0;pt<this.inputs.length;++pt)kt[this.inputs[pt].id]=[Ut[pt],lt[pt]];const q=Object.keys(this.nodesByDepth).map(pt=>parseInt(pt,10)).sort(D.th);for(const pt of q){const Xt=this.nodesByDepth[pt];for(const Yt of Xt){const ve=Yt.outboundLayer,be=Yt.inputTensors,tn=Yt.outputTensors,ln=new Array;for(const Ee of be)Ee.id in kt&&ln.push(kt[Ee.id]);if(ln.length===be.length){let _e,We,Te,en,Ee={};if(null!=Yt.callArgs&&(Ee=Yt.callArgs),1===ln.length){const[ze,un]=ln[0];null==Ee.mask&&(Ee.mask=un),Te=D.st(ve.call(ze,Ee)),en=D.st(ve.computeMask(ze,un)),_e=[ze],We=[un]}else _e=ln.map(ze=>ze[0]),We=ln.map(ze=>ze[1]),null==Ee.mask&&(Ee.mask=We),Te=D.st(ve.call(_e,Ee)),en=D.st(ve.computeMask(_e,We));if(ve.activityRegularizer)throw new c.EH("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let ze=0;ze<tn.length;++ze)kt[tn[ze].id]=[Te[ze],en[ze]]}}}const xt=[],It=[],dt=[];for(const pt of this.outputs){D.vA(pt.id in kt,`Could not compute output ${pt.name} : ${pt.id}`);const[Xt,Yt]=kt[pt.id];dt.push(Xt.shape),xt.push(Xt),It.push(Yt)}return[xt,It,dt]}buildNodeConversionMap(Ut){const lt={};let kt;for(const q of this.layers){kt=q instanceof ot?1:0;for(let xt=0;xt<q.inboundNodes.length;xt++){const It=ot.nodeKey(q,xt);this.containerNodes.has(It)&&(lt[It]=kt,kt+=1)}}return lt}getLayer(Ut,lt){if(null!=lt)return this.findLayer(lt);if(null==Ut)throw new c.Qp("Provide either a layer name or layer index");if("number"==typeof Ut)return this.findLayer(Ut);for(const kt of this.layers)if(kt.name===Ut)return kt;throw new c.Qp(`No such layer: ${Ut}`)}findLayer(Ut){if(this.layers.length<=Ut)throw new c.Qp(`Was asked to retrieve layer at index ${Ut}, but model only has ${this.layers.length} layer(s).`);return this.layers[Ut]}calculateLosses(){return(0,s.DZQ)(()=>{const Ut=[];for(const lt of this.layers)for(let kt=0;kt<lt.inboundNodes.length;++kt){const q=ot.nodeKey(lt,kt);this.containerNodes.has(q)&&Ut.push(...lt.calculateLosses())}return Ut})}getConfig(){const Ut={name:this.name},lt=this.buildNodeConversionMap(this.layers),kt=[];for(const It of this.layers){const dt=It.getClassName(),pt=It.getConfig(),Xt=[];for(let ve=0;ve<It.inboundNodes.length;ve++){const be=It.inboundNodes[ve],tn=ot.nodeKey(It,ve);let ln={};if(this.containerNodes.has(tn)){if(be.callArgs)try{JSON.stringify(be.callArgs),ln=be.callArgs}catch{console.warn(`Layer ${It.name} was passed non-serializable keyword arguments: ${be.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),ln={}}if(be.inboundLayers.length>0){const Ee=[];for(let _e=0;_e<be.inboundLayers.length;_e++){const We=be.inboundLayers[_e],en=be.tensorIndices[_e];let un=lt[ot.nodeKey(We,be.nodeIndices[_e])];null==un&&(un=0),Ee.push([We.name,un,en,ln])}Xt.push(Ee)}}}const Yt={};Yt.name=It.name,Yt.className=dt,Yt.config=pt,Yt.inboundNodes=Xt,kt.push(Yt)}Ut.layers=kt;const q=[];for(let It=0;It<this.inputLayers.length;It++){const dt=this.inputLayers[It],Xt=ot.nodeKey(dt,this.inputLayersNodeIndices[It]);if(!this.containerNodes.has(Xt))continue;let Yt=lt[Xt];null==Yt&&(Yt=0),q.push([dt.name,Yt,this.inputLayersTensorIndices[It]])}Ut.inputLayers=q;const xt=[];for(let It=0;It<this.outputLayers.length;It++){const dt=this.outputLayers[It],Xt=ot.nodeKey(dt,this.outputLayersNodeIndices[It]);if(!this.containerNodes.has(Xt))continue;let Yt=lt[Xt];null==Yt&&(Yt=0),xt.push([dt.name,Yt,this.outputLayersTensorIndices[It]])}return Ut.outputLayers=xt,Ut}static fromConfig(Ut,lt,kt={},q=!1){const xt={},It={};function dt(_e,We){_e.name in It?It[_e.name].push(We):It[_e.name]=[We]}function pt(_e,We){const Te=[];let en;for(const ze of We){const un=ze[0],Sn=ze[1],Un=ze[2];if(en=null==ze[3]?{}:ze[3],!(un in xt))return void dt(_e,We);const bn=xt[un];if(bn.inboundNodes.length<=Sn)return void dt(_e,We);Te.push(bn.inboundNodes[Sn].outputTensors[Un])}Te.length>0&&_e.apply(D.wL(Te),en)}function Xt(_e){const We=_e.name,Te=(0,x.i)(_e,null!=lt.customObjects?lt.customObjects:{});Te.setFastWeightInitDuringBuild(q),xt[We]=Te,_e.inboundNodes.forEach(ze=>{if(!(ze instanceof Array))throw new c.Qp(`Corrupted configuration, expected array for nodeData: ${ze}`);dt(Te,ze)})}const Yt=lt.name,ve=lt.layers;for(const _e of ve)Xt(_e);for(;!D.ZF(It);)for(const _e of ve){const We=xt[_e.name];if(We.name in It){const Te=It[We.name];delete It[We.name];for(const en of Te)pt(We,en)}}const be=[],tn=[],ln=lt.inputLayers;for(const _e of ln){const We=_e[0],Te=_e[1],en=_e[2];D.vA(We in xt),be.push(xt[We].inboundNodes[Te].outputTensors[en])}const Ee=lt.outputLayers;for(const _e of Ee){const We=_e[0],Te=_e[1],en=_e[2];D.vA(We in xt),tn.push(xt[We].inboundNodes[Te].outputTensors[en])}return new Ut({inputs:be,outputs:tn,name:Yt})}get stateful(){if(this._stateful)throw new c.Qp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const Ut of this.layers)if(Ut.stateful)return!0;return!1}resetStates(){(0,s.DZQ)(()=>{this.layers.forEach(Ut=>{Ut.stateful&&Ut.resetStates()})})}}function tt(Rt,Ut){return function rt(Rt,Ut,lt){const kt=Ut.length;if(null==Rt||Array.isArray(Rt)&&0===Rt.length)return Ut.map(q=>null);if(1===kt)return Array.isArray(Rt)&&1===Rt.length?Rt:"object"==typeof Rt&&Ut[0]in Rt?[Rt[Ut[0]]]:[Rt];if(Array.isArray(Rt)){if(Rt.length!==kt)throw new Error(`Provided ${lt} is an array of ${Rt.length} element(s), but the model has ${kt} outputs. Make sure a set of weights is provided for each model output.`);return Rt}if("object"==typeof Rt&&Object.keys(Rt).length>0&&"object"==typeof Rt[Object.keys(Rt)[0]]){const q=[];return Ut.forEach(xt=>{q.push(xt in Rt?Rt[xt]:null)}),q}throw new Error(`The model has multiple (${kt}) outputs, so ${lt} must be either an array with ${kt} elements or an object with ${Ut} keys. Provided ${lt} not understood: ${JSON.stringify(Rt)}`)}(Rt,Ut,"classWeight")}function Et(Rt,Ut,lt,kt){return At.apply(this,arguments)}function At(){return(At=(0,e.A)(function*(Rt,Ut,lt,kt){if(null!=Ut||null!=kt)throw new Error("Support sampleWeight is not implemented yet");if(null!=lt){const q=(0,s.DZQ)(()=>{if(1===Rt.shape.length)return(0,s.o8B)(Rt);if(2===Rt.shape.length){if(Rt.shape[1]>1)return(0,s.FLi)(Rt,1);if(1===Rt.shape[1])return(0,s.tQQ)(Rt,[Rt.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${Rt.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${Rt.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),xt=Array.from(yield q.data());(0,s.ASo)(q);const It=[];return xt.forEach(dt=>{if(null==lt[dt])throw new Error(`classWeight must contain all classes in the training data. The class ${dt} exists in the data but not in classWeight`);It.push(lt[dt])}),(0,s.tGX)(It,"float32")}return null})).apply(this,arguments)}function oe(Rt,Ut){return(0,s.lKK)(Rt,Ut)}function ce(Rt,Ut){let lt,kt;lt=Ut.xs,kt=Ut.ys,s.ZSL.assert(null!=lt&&null!=kt,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${Ut}`);const xt=Jt("input",Rt.inputNames,lt),It=Jt("output",Rt.outputNames,kt),dt=xt[0].shape[0];s.ZSL.assert(xt.length===Rt.inputs.length,()=>`LayersModel has ${Rt.inputs.length} inputs, but the dataset provides ${xt.length} inputs.  (Expected input keys: ${JSON.stringify(Rt.inputNames)})`),s.ZSL.assert(It.length===Rt.outputs.length,()=>`LayersModel has ${Rt.outputs.length} outputs, but the dataset provides ${It.length} outputs.  (Expected output keys: ${JSON.stringify(Rt.outputNames)})`);for(let pt=0;pt<xt.length;pt++)s.ZSL.assert(xt[pt].shape[0]===dt,()=>`Batch size mismatch: input ${Rt.inputNames[pt]} has ${xt[pt].shape[0]}; expected  ${dt} based on input ${Rt.inputNames[0]}.`);for(let pt=0;pt<It.length;pt++)s.ZSL.assert(It[pt].shape[0]===dt,()=>`Batch size mismatch: output ${Rt.outputNames[pt]} has ${It[pt].shape[0]}; expected  ${dt} based on input ${Rt.inputNames[0]}.`);return{xs:xt,ys:It}}function Jt(Rt,Ut,lt){if(lt instanceof s.qYS)return[lt];if(Array.isArray(lt))return s.ZSL.assert(lt.length===Ut.length,()=>`Received an array of ${lt.length} Tensors, but expected ${Ut.length} to match the ${Rt} keys ${Ut}.`),lt;{const kt=[];for(const q of Ut){if(null==lt[q])throw new c.Qp(`The feature data generated by the dataset lacks the required ${Rt} key '${q}'.`);kt.push(lt[q])}return kt}}function re(){return(re=(0,e.A)(function*(Rt,Ut,lt){const kt=null!=lt.batchesPerEpoch;if(s.ZSL.assert(null!=Rt.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),s.ZSL.assert(null!=lt,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),s.ZSL.assert(null!=lt.epochs&&lt.epochs>0&&Number.isInteger(lt.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${lt.epochs}`),s.ZSL.assert(!kt||lt.batchesPerEpoch>0&&Number.isInteger(lt.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${lt.batchesPerEpoch}`),s.ZSL.assert(null==lt.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),Rt.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");Rt.isTraining=!0;try{const q=null!=lt.validationData;let xt,It;if(q)if(Oe(lt.validationData))s.ZSL.assert(null==lt.validationBatches||lt.validationBatches>0&&Number.isInteger(lt.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${lt.validationBatches}`);else{const _e=function ue(Rt){if(3===Rt.length)throw new c.EH("Validation with sample weights is not implemented yet.");return{xs:Rt[0],ys:Rt[1]}}(lt.validationData);xt=_e.xs,It=_e.ys}const dt=Rt.makeTrainFunction(),pt=Rt.getDedupedMetricsNames();let Xt;Xt=q?pt.slice().concat(pt.map(_e=>"val_"+_e)):pt.slice();const Yt=(0,E.Eq)(lt.callbacks,lt.yieldEvery),ve=null==lt.verbose?1:lt.verbose,{callbackList:be,history:tn}=(0,E.dY)(Yt,ve,lt.epochs,null,null,function Se(Rt,Ut){let lt=null;return null!=Ut.batchesPerEpoch?lt=Ut.batchesPerEpoch:Number.isFinite(Rt.size)&&(lt=Rt.size),lt}(Ut,lt),null,q,Xt);be.setModel(Rt),Rt.history=tn,yield be.onTrainBegin(),Rt.stopTraining_=!1;let ln=null==lt.initialEpoch?0:lt.initialEpoch,Ee=yield Ut.iterator();for(;ln<lt.epochs;){const _e={};yield be.onEpochBegin(ln);let We=0,Te=0;for(kt||(Ee=yield Ut.iterator());!kt||We<lt.batchesPerEpoch;){const en=yield Ee.next();if(kt&&en.done){console.warn(`You provided \`batchesPerEpoch\` as ${lt.batchesPerEpoch}, but your dataset iterator ran out of data after ${We} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${lt.batchesPerEpoch*lt.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=en.value){const{xs:ze,ys:un}=ce(Rt,en.value),Sn={};Sn.batch=Te,Sn.size=ze[0].shape[0],yield be.onBatchBegin(Te,Sn);const Un=[];if(null!=lt.classWeight){const kn=tt(lt.classWeight,Rt.outputNames);for(let Zn=0;Zn<kn.length;++Zn)Un.push(yield Et(un[Zn],null,kn[Zn]))}const bn=ze.concat(un).concat(Un),es=dt(bn);s.ASo(bn);for(let kn=0;kn<pt.length;++kn){const Es=es[kn];Sn[pt[kn]]=Es,s.aCs(Es)}yield be.onBatchEnd(Te,Sn),(0,g.i)(Sn),Te++,We++}if(kt?We>=lt.batchesPerEpoch:en.done){if(q){let ze;ze=Oe(lt.validationData)?(0,D.st)(yield Rt.evaluateDataset(lt.validationData,{batches:lt.validationBatches})):(0,D.st)(Rt.evaluate(xt,It,{batchSize:null==lt.validationBatchSize?32:lt.validationBatchSize,verbose:0}));for(let un=0;un<Rt.metricsNames.length;++un)_e[`val_${Rt.metricsNames[un]}`]=ze[un]}break}if(Rt.stopTraining_)break}if(yield be.onEpochEnd(ln,_e),ln++,Rt.stopTraining_)break}return yield be.onTrainEnd(),yield Rt.history.syncData(),Rt.history}finally{Rt.isTraining=!1}})).apply(this,arguments)}function Oe(Rt){return"function"==typeof Rt.iterator}function te(){return(te=(0,e.A)(function*(Rt,Ut,lt){const kt=null!=(lt=lt||{}).batches,q=Rt.testFunction;let xt=[];if(lt.verbose>0)throw new c.EH("Verbose mode is not implemented yet.");s.ZSL.assert(!kt||lt.batches>0&&Number.isInteger(lt.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(lt.batches)}`);const It=function Dt(Rt){return"function"==typeof Rt.next}(Ut)?Ut:yield Ut.iterator();let dt=0,pt=0;for(;!kt||pt<lt.batches;){const Xt=yield It.next();if(xt=s.DZQ(()=>{if(Xt.value){const{xs:Yt,ys:ve}=ce(Rt,Xt.value),be=Yt.concat(ve),tn=s.DZQ(()=>q(be));if(s.ASo(be),0===pt)for(let Ee=0;Ee<tn.length;++Ee)xt.push((0,s.d_2)(0));const ln=be[0].shape[0];for(let Ee=0;Ee<tn.length;++Ee){const _e=tn[Ee],We=xt[Ee];xt[Ee]=s.DZQ(()=>s.WQq(xt[Ee],s.lKK(ln,_e))),pt>0&&s.ASo(We)}s.ASo(tn),dt+=ln,++pt}return xt}),Xt.done){kt&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${lt.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let Xt=0;Xt<xt.length;++Xt){const Yt=xt[Xt];xt[Xt]=s.y4m(xt[Xt],dt),s.ASo(Yt)}return(0,D.wL)(xt)})).apply(this,arguments)}function he(Rt){s.ZSL.assert(Rt>0&&Number.isInteger(Rt),()=>`batchSize is required to be a positive integer, but got ${Rt}`)}function Ke(Rt,Ut,lt){return null==Rt?[null]:Array.isArray(Rt)?Rt.map(kt=>(0,i.Dh)(kt,Ut,lt-Ut)):(0,i.Dh)(Rt,Ut,lt-Ut)}function on(Rt,Ut){return s.DZQ(()=>null==Rt?null:Array.isArray(Rt)?Rt.map(lt=>on(lt,Ut)):(0,i.kg)(Rt,"int32"===Ut.dtype?Ut:s.wgE(Ut,"int32")))}function vn(Rt,Ut){const lt=[];let kt=0,q=null;for(;kt<Rt;)q=kt+Ut,q>=Rt&&(q=Rt),lt.push([kt,q]),kt=q;return lt}function fn(Rt){const Ut=[];Rt instanceof s.qYS&&(Rt=[Rt]);for(let lt=0;lt<Rt.length;++lt){const kt=Rt[lt];if(1===kt.rank)Ut.push((0,i.UG)(kt,1));else{if(0===kt.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");Ut.push(kt)}}return Ut}function dn(Rt,Ut){if(null==Rt)return;const lt=[];if(Ut instanceof s.qYS)lt.push(Ut.id);else if(Array.isArray(Ut))Ut.forEach(q=>lt.push(q.id));else if(null!=Ut)for(const q in Ut)lt.push(Ut[q].id);const kt=[];if(Rt instanceof s.qYS)-1===lt.indexOf(Rt.id)&&kt.push(Rt);else if(Array.isArray(Rt))Rt.forEach(q=>{-1===lt.indexOf(q.id)&&kt.push(q)});else if(null!=Rt)for(const q in Rt){const xt=Rt[q];-1===lt.indexOf(xt.id)&&kt.push(xt)}kt.forEach(q=>{q.isDisposed||q.dispose()})}function wn(Rt){return Array.isArray(Rt)}function zn(Rt){return!function $n(Rt){return Rt instanceof s.qYS}(Rt)&&!wn(Rt)}function Gn(Rt,Ut,lt,kt=!0,q=""){if(null==Ut||0===Ut.length){if(null!=Rt){let It=!1;if(wn(Rt)&&Rt.length>0)It=!0;else if(zn(Rt)){for(const dt in Rt)if(Rt.hasOwnProperty(dt)){It=!0;break}}else It=!0;if(It)throw new c.Qp(`Error when checking model ${q} expected no data, but got ${Rt}`)}return[]}if(null==Rt)return Ut.map(It=>null);let xt;if(zn(Rt)){xt=[];for(const It of Ut){if(null==Rt[It])throw new c.Qp(`No data provided for "${It}". Need data for each key in: ${Ut}`);xt.push(Rt[It])}}else if(wn(Rt)){if(Rt.length!==Ut.length)throw new c.Qp(`Error when checking model ${q}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${Ut.length} Tensor(s), but instead got the following list of Tensor(s): ${Rt}`);xt=Rt}else{if(Ut.length>1)throw new c.Qp(`The model ${q} expects ${Ut.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${Rt.shape}`);xt=[Rt]}if(xt=fn(xt),null!=lt)for(let It=0;It<Ut.length;++It){if(null==lt[It])continue;const dt=xt[It];if(dt.shape.length!==lt[It].length)throw new c.Qp(`Error when checking ${q}: expected ${Ut[It]} to have ${lt[It].length} dimension(s). but got array with shape ${dt.shape}`);for(let pt=0;pt<lt[It].length;++pt){if(0===pt&&!kt)continue;const Yt=lt[It][pt];if(null!=Yt&&Yt>=0&&dt.shape[pt]!==Yt)throw new c.Qp(`${q} expected a batch of elements where each example has shape [${lt[It].slice(1,lt[It].length)}] (i.e.,tensor shape [*,${lt[It].slice(1,lt[It].length)}]) but the ${q} received an input with ${dt.shape[0]} examples, each with shape [${dt.shape.slice(1,dt.shape.length)}] (tensor shape [${dt.shape}])`)}}return xt}function gs(Rt,Ut,lt,kt=!0,q=""){let xt;if(Array.isArray(Rt)){if(Rt.length!==Ut.length)throw new c.Qp(`Error when checking model ${q}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${Ut.length} Tensor(s), but instead got ${Rt.length} Tensors(s).`);xt=Rt}else{if(Ut.length>1)throw new c.Qp(`The model expects ${Ut.length} ${q} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(Rt.shape)}.`);xt=[Rt]}if(null!=lt)for(let It=0;It<Ut.length;++It){if(null==lt[It])continue;const dt=xt[It];if(dt.shape.length!==lt[It].length)throw new c.Qp(`Error when checking ${q}: expected ${Ut[It]} to have ${lt[It].length} dimension(s), but got array with shape ${JSON.stringify(dt.shape)}`);for(let pt=0;pt<lt[It].length;++pt){if(0===pt&&!kt)continue;const Yt=lt[It][pt];if(null!=Yt&&Yt!==dt.shape[pt])throw new c.Qp(`Error when checking ${q}: expected ${Ut[It]} to have shape ${JSON.stringify(lt[It])} but got array with shape ${JSON.stringify(dt.shape)}.`)}}}let us=(()=>{class Rt extends ot{constructor(lt){super(lt),this.isTraining=!1}summary(lt,kt,q=console.log){if(!this.built)throw new c.Qp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function b(Rt,Ut,lt,kt=console.log){const q=function G(Rt){let Ut=!0;const lt=[],kt=[];for(const q in Rt.nodesByDepth)lt.push(Rt.nodesByDepth[q]);for(const q of lt){if(q.length>1||1===q.length&&q[0].inboundLayers.length>1){Ut=!1;break}kt.push(...q)}if(Ut)for(const q of Rt.layers){let xt=!1;for(const It of q.inboundNodes)if(-1!==kt.indexOf(It)){if(xt){Ut=!1;break}xt=!0}if(!Ut)break}return Ut}(Rt),xt=["Layer (type)","Input Shape","Output shape","Param #"];let It;if(q?(Ut=Ut||90,lt=lt||[.32,.61,.89,1]):(Ut=Ut||115,lt=lt||[.24,.48,.7,.8,1]),lt[lt.length-1]<=1&&(lt=lt.map(Yt=>Math.floor(Ut*Yt))),!q){xt.push("Receives inputs"),It=[];for(const Yt in Rt.nodesByDepth)It.push(...Rt.nodesByDepth[Yt])}kt("_".repeat(Ut)),H(xt,lt,kt),kt("=".repeat(Ut));const dt=Rt.layers;for(let Yt=0;Yt<dt.length;++Yt)q?F(dt[Yt],lt,kt):B(dt[Yt],lt,It,kt),kt((Yt===dt.length-1?"=":"_").repeat(Ut));Rt.checkTrainableWeightsConsistency();const pt=function w(Rt){let Ut;return Ut=(0,S.Y)(null!=Rt.collectedTrainableWeights?Rt.collectedTrainableWeights:Rt.trainableWeights),Ut}(Rt),Xt=(0,S.Y)(Rt.nonTrainableWeights);kt(`Total params: ${pt+Xt}`),kt(`Trainable params: ${pt}`),kt(`Non-trainable params: ${Xt}`),kt("_".repeat(Ut))}(this,lt,kt,q)}compile(lt){if(null==lt.loss&&(lt.loss=[]),this.loss=lt.loss,"string"==typeof lt.optimizer)this.optimizer_=function u(Rt){const Ut={Adagrad:()=>s.BaG.adagrad(.01),Adadelta:()=>s.BaG.adadelta(1,.95,(0,p.Ni)()),Adam:()=>s.BaG.adam(.001,.9,.999,(0,p.Ni)()),Adamax:()=>s.BaG.adamax(.002,.9,.999,(0,p.Ni)(),0),RMSProp:()=>s.BaG.rmsprop(.001,.9,0,(0,p.Ni)()),SGD:()=>s.BaG.sgd(.01)};if(Ut.adagrad=Ut.Adagrad,Ut.adadelta=Ut.Adadelta,Ut.adam=Ut.Adam,Ut.adamax=Ut.Adamax,Ut.rmsprop=Ut.RMSProp,Ut.sgd=Ut.SGD,Rt in Ut)return Ut[Rt]();throw new c.Qp(`Unknown Optimizer ${Rt}`)}(lt.optimizer),this.isOptimizerOwned=!0;else{if(!(lt.optimizer instanceof s.ELo))throw new c.Qp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=lt.optimizer,this.isOptimizerOwned=!1}let kt=[];if(Array.isArray(lt.loss)||"string"==typeof lt.loss||"function"==typeof lt.loss)if(Array.isArray(lt.loss)){if(lt.loss.length!==this.outputs.length)throw new c.Qp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${lt.loss}.`);kt=lt.loss.map(pt=>h.Jt(pt))}else{const dt=h.Jt(lt.loss);this.outputs.forEach(pt=>{kt.push(dt)})}else{lt.loss=lt.loss;for(const dt in lt.loss)if(-1===this.outputNames.indexOf(dt))throw new c.Qp(`Unknown entry in loss dictionary: "${dt}". Only expected the following keys: ${this.outputNames}`);for(const dt of this.outputNames)null==lt.loss[dt]&&console.warn(`Output "${dt}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${dt} during training`),kt.push(h.Jt(lt.loss[dt]))}this.lossFunctions=kt,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let dt=0;dt<this.outputs.length;++dt){const pt=this.internalOutputShapes[dt];this.feedOutputNames.push(this.outputNames[dt]),this.feedOutputShapes.push(pt),this.feedLossFns.push(this.lossFunctions[dt])}const q=[];this.metrics=lt.metrics,this.metricsNames=["loss"],this.metricsTensors=[],(0,m.IU)("loss",()=>{for(let dt=0;dt<this.outputs.length;++dt)-1===q.indexOf(dt)&&this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[dt],dt]),this.metricsNames.push(this.outputNames[dt]+"_loss"))});const xt=function As(Rt,Ut){if(null==Rt||Array.isArray(Rt)&&0===Rt.length)return Ut.map(kt=>[]);let lt;if("string"==typeof Rt||"function"==typeof Rt)lt=[Rt];else{if(!Array.isArray(Rt)&&"object"!=typeof Rt)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${Rt}`);lt=Rt}if(Array.isArray(lt))return Ut.map(kt=>lt);{const kt=[];for(const q of Ut){let xt=lt.hasOwnProperty(q)?lt[q]:[];Array.isArray(xt)||(xt=[xt]),kt.push(xt)}return kt}}(lt.metrics,this.outputNames),It=(dt,pt,Xt)=>{this.outputNames.length>1&&(pt=this.outputNames[dt]+"_"+pt),this.metricsNames.push(pt),this.metricsTensors.push([Xt,dt])};(0,m.IU)("metric",()=>{for(let dt=0;dt<this.outputs.length;++dt)-1===q.indexOf(dt)&&(Yt=>{let be,tn,ln;for(const Ee of Yt){if("string"==typeof Ee&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(Ee)){const We=this.internalOutputShapes[dt];let Te;1===We[We.length-1]||this.lossFunctions[dt]===h.Jc?-1!==["accuracy","acc"].indexOf(Ee)?tn=f.xM:-1!==["crossentropy","ce"].indexOf(Ee)&&(tn=f.Jc):this.lossFunctions[dt]===h.qp?-1!==["accuracy","acc"].indexOf(Ee)?tn=f.qv:-1!==["crossentropy","ce"].indexOf(Ee)&&(tn=f.qp):-1!==["accuracy","acc"].indexOf(Ee)?tn=f.yP:-1!==["crossentropy","ce"].indexOf(Ee)&&(tn=f.Ol),-1!==["accuracy","acc"].indexOf(Ee)?Te="acc":-1!==["crossentropy","ce"].indexOf(Ee)&&(Te="ce"),ln=tn,be=""+Te}else ln=f.Jt(Ee),be=""+f.GT(Ee);let _e;(0,m.IU)(be,()=>{_e=ln}),It(dt,be,_e)}})(xt[dt])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(lt,kt,q={}){const xt=null==q.batchSize?32:q.batchSize;he(xt);const dt=this.standardizeUserDataXY(lt,kt,!0,xt);try{const pt=dt[0].concat(dt[1]);this.makeTestFunction();const Yt=this.testLoop(this.testFunction,pt,xt,q.verbose,q.steps);return(0,D.wL)(Yt)}finally{dn(dt[0],lt),dn(dt[1],kt)}}evaluateDataset(lt,kt){var q=this;return(0,e.A)(function*(){return q.makeTestFunction(),function Kt(Rt,Ut,lt){return te.apply(this,arguments)}(q,lt,kt)})()}checkNumSamples(lt,kt,q,xt="steps"){let It;if(null!=q){if(It=null,null!=kt)throw new c.Qp(`If ${xt} is set, batchSize must be null or undefined.Got batchSize = ${kt}`)}else{if(null==lt)throw new c.Qp(`Either the input data should have a defined shape, or ${xt} shoud be specified.`);It=Array.isArray(lt)?lt[0].shape[0]:lt.shape[0]}return It}execute(lt,kt){if(Array.isArray(kt)&&0===kt.length)throw new c.Qp("`outputs` is an empty Array, which is not allowed.");const q=Array.isArray(kt),It=this.retrieveSymbolicTensors(q?kt:[kt]),dt=new j.RW;if(lt instanceof s.qYS&&(lt=[lt]),Array.isArray(lt)){if(lt.length!==this.inputs.length)throw new c.Qp(`The number of inputs provided (${lt.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let Xt=0;Xt<this.inputs.length;++Xt)dt.add(this.inputs[Xt],lt[Xt])}else for(const Xt of this.inputs){const Yt=lt[Xt.name];if(null==Yt)throw new c.Qp(`No value is provided for the model's input ${Xt.name}`);dt.add(Xt,Yt)}const pt=(0,j.g7)(It,dt);return q?pt:pt[0]}retrieveSymbolicTensors(lt){const kt=(0,D.fD)(null,lt.length);let q=lt.length;for(const xt of this.layers){const It=Array.isArray(xt.output)?xt.output:[xt.output],dt=It.map(pt=>pt.name);for(let pt=0;pt<lt.length;++pt){const Xt=dt.indexOf(lt[pt]);if(-1!==Xt&&(kt[pt]=It[Xt],q--),0===q)break}if(0===q)break}if(q>0){const xt=[];throw kt.forEach((It,dt)=>{null==It&&xt.push(lt[dt])}),new c.Qp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(xt)}`)}return kt}predictLoop(lt,kt=32,q=!1){return s.DZQ(()=>{const xt=this.checkNumSamples(lt);if(q)throw new c.EH("Verbose predictLoop() is not implemented yet.");const It=vn(xt,kt),dt=this.outputs.map(pt=>[]);for(let pt=0;pt<It.length;++pt)s.DZQ(()=>{const be=Ke(lt,It[pt][0],It[pt][1]),tn=[];if(Array.isArray(be))for(let Ee=0;Ee<be.length;++Ee)tn.push({key:this.inputs[Ee],value:be[Ee]});else tn.push({key:this.inputs[0],value:be});const ln=new j.RW(tn);return(0,j.g7)(this.outputs,ln)}).forEach((Yt,ve)=>dt[ve].push(Yt));return(0,D.wL)(dt.map(pt=>s.xWs(pt,0)))})}predict(lt,kt={}){const q=fn(lt);gs(q,this.inputNames,this.feedInputShapes,!1);try{const xt=null==kt.batchSize?32:kt.batchSize;return he(xt),this.predictLoop(q,xt)}finally{dn(q,lt)}}predictOnBatch(lt){gs(lt,this.inputNames,this.feedInputShapes,!0);const kt=(Array.isArray(lt)?lt[0]:lt).shape[0];return this.predictLoop(lt,kt)}standardizeUserDataXY(lt,kt,q=!0,xt){if(null==this.optimizer_)throw new c.bu("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const It=[];for(let dt=0;dt<this.feedOutputShapes.length;++dt){const pt=this.feedOutputShapes[dt];It.push(this.feedLossFns[dt]===h.qp?pt.slice(0,pt.length-1).concat([1]):pt)}if(function rs(Rt,Ut){const kt=(0,D.Am)(Rt.map(xt=>xt.shape[0]));kt.sort();const q=(0,D.Am)(Ut.map(xt=>xt.shape[0]));if(q.sort(),kt.length>1)throw new c.Qp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(Rt.map(xt=>xt.shape))}`);if(q.length>1)throw new c.Qp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(Ut.map(xt=>xt.shape))}`);if(kt.length>0&&q.length>0&&!s.ZSL.arraysEqual(kt,q))throw new c.Qp(`Input Tensors should have the same number of samples as target Tensors. Found ${kt[0]} input sample(s) and ${q[0]} target sample(s).`)}(lt=Gn(lt,this.feedInputNames,this.feedInputShapes,!1,"input"),kt=Gn(kt,this.feedOutputNames,It,!1,"target")),function Jn(Rt,Ut,lt){const kt=[h.bt,h.Jc,h.Ol];for(let q=0;q<Rt.length;++q){const xt=Rt[q],It=Ut[q],dt=lt[q];if(null!=It){if(It===h.Ol&&1===xt.shape[xt.shape.length-1])throw new c.Qp(`You are passing a target array of shape ${xt.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==kt.indexOf(It)){const pt=xt.shape.slice(1),Xt=dt.slice(1);for(let Yt=0;Yt<pt.length;++Yt){const be=Xt[Yt];if(null!=be&&pt[Yt]!==be)throw new c.Qp(`A target Tensor with shape ${xt.shape} was passed for an output of shape ${dt}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(kt,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=xt&&xt>0&&lt[0].shape[0]%xt!=0)throw new c.Qp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${xt}. Found: ${lt[0].shape[0]} sample(s).`);return[lt,kt]}standardizeUserData(lt,kt,q,xt){var It=this;return(0,e.A)(function*(dt,pt,Xt,Yt,ve=!0,be){const[tn,ln]=It.standardizeUserDataXY(dt,pt,ve,be);if(null!=Xt)throw new Error("sample weight is not supported yet.");let Ee=null;if(null!=Yt){const _e=tt(Yt,It.outputNames);Ee=[];for(let We=0;We<_e.length;++We)Ee.push(yield Et(ln[We],null,_e[We]))}return[tn,ln,Ee]}).apply(this,arguments)}testLoop(lt,kt,q,xt=0,It){return s.DZQ(()=>{const dt=this.checkNumSamples(kt,q,It,"steps"),pt=[];if(xt>0)throw new c.EH("Verbose mode is not implemented yet.");if(null!=It)throw new c.EH("steps mode in testLoop() is not implemented yet");{const Xt=vn(dt,q),Yt=(0,s.tGX)((0,A.y1)(0,dt));for(let ve=0;ve<Xt.length;++ve){const be=Xt[ve][0],tn=Xt[ve][1],ln=i.Dh(Yt,be,tn-be),Ee=on(kt,ln),_e=lt(Ee);if(0===ve)for(let We=0;We<_e.length;++We)pt.push((0,s.d_2)(0));for(let We=0;We<_e.length;++We)pt[We]=s.WQq(pt[We],s.lKK(tn-be,_e[We]))}for(let ve=0;ve<pt.length;++ve)pt[ve]=s.y4m(pt[ve],dt)}return pt})}getDedupedMetricsNames(){const lt=this.metricsNames,kt=[];for(let q=0;q<lt.length;++q){const xt=lt[q];let It=xt;(0,D.U9)(lt,xt)>1&&(It+=`_${(0,D.U9)(lt.slice(0,q),xt)}`),kt.push(It)}return kt}makeTrainFunction(){return lt=>{const kt=[],q=lt.slice(0,this.inputs.length),xt=lt.slice(this.inputs.length,this.inputs.length+this.outputs.length),It=lt.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),dt=[],Xt=this.collectedTrainableWeights.map(be=>be.read());return[this.optimizer_.minimize(()=>{const be=[];for(let _e=0;_e<this.inputs.length;++_e)be.push({key:this.inputs[_e],value:q[_e]});const tn=new j.RW(be),ln=(0,j.g7)(this.outputs,tn,{training:!0});let Ee;for(let _e=0;_e<this.lossFunctions.length;++_e){let Te=(0,this.lossFunctions[_e])(xt[_e],ln[_e]);null!=It[_e]&&(Te=oe(Te,It[_e]));const en=s.i2o(Te);kt.push(en),Ee=0===_e?Te:s.WQq(Ee,Te)}for(let _e=0;_e<this.metricsTensors.length;++_e){let We;if(this.outputs.length>1&&_e<this.outputs.length)We=kt[_e];else{const en=this.metricsTensors[_e][1];We=s.i2o((0,this.metricsTensors[_e][0])(xt[en],ln[en]))}s.aCs(We),dt.push(We)}return Ee=s.i2o(Ee),this.calculateLosses().forEach(_e=>{Ee=s.WQq(Ee,_e)}),Ee},!0,Xt)].concat(dt)}}makeTestFunction(){this.testFunction=lt=>s.DZQ(()=>{const kt=[];let q;const xt=lt.slice(0,this.inputs.length),It=lt.slice(this.inputs.length,this.inputs.length+this.outputs.length),dt=[];for(let Yt=0;Yt<this.inputs.length;++Yt)dt.push({key:this.inputs[Yt],value:xt[Yt]});const pt=new j.RW(dt),Xt=(0,j.g7)(this.outputs,pt);for(let Yt=0;Yt<this.lossFunctions.length;++Yt){const be=s.i2o((0,this.lossFunctions[Yt])(It[Yt],Xt[Yt]));q=0===Yt?be:s.WQq(q,be),kt.push(q)}for(let Yt=0;Yt<this.metricsTensors.length;++Yt){const be=this.metricsTensors[Yt][1],tn=s.i2o((0,this.metricsTensors[Yt][0])(It[be],Xt[be]));kt.push(tn)}return kt})}fit(lt,kt){var q=this;return(0,e.A)(function*(xt,It,dt={}){if(q.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let pt,Xt,Yt,ve,be,tn,ln,Ee,_e;q.isTraining=!0;try{const We=null==dt.batchSize?32:dt.batchSize;he(We);const en=yield q.standardizeUserData(xt,It,dt.sampleWeight,dt.classWeight,!1,We);pt=en[0],Xt=en[1],_e=en[2];let un,ze=!1;if(null!=dt.validationData&&dt.validationData.length>0){if(ze=!0,2!==dt.validationData.length)throw 3===dt.validationData.length?new c.EH("validationData including sample weights is not supported yet."):new c.Qp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${dt.validationData} is invalid.`);be=dt.validationData[0],tn=dt.validationData[1];const fs=yield q.standardizeUserData(be,tn,null,null,!0,We);ln=fs[0],Ee=fs[1],un=ln.concat(Ee)}else if(null!=dt.validationSplit&&dt.validationSplit>0&&dt.validationSplit<1){ze=!0;const cs=Math.floor(pt[0].shape[0]*(1-dt.validationSplit)),fs=pt[0].shape[0];ln=Ke(pt,cs,fs),Yt=pt,pt=Ke(pt,0,cs),Ee=Ke(Xt,cs,fs),ve=Xt,Xt=Ke(Xt,0,cs),un=ln.concat(Ee)}else null!=dt.validationSteps&&(ze=!0);const Sn=pt.concat(Xt).concat(_e);q.checkTrainableWeightsConsistency();const Un=q.makeTrainFunction(),bn=q.getDedupedMetricsNames();let es,kn;ze?(q.makeTestFunction(),es=q.testFunction,kn=bn.slice().concat(bn.map(cs=>"val_"+cs))):(es=null,un=[],kn=bn.slice());const Zn=(0,E.Eq)(dt.callbacks,dt.yieldEvery);return yield q.fitLoop(Un,Sn,bn,We,dt.epochs,dt.verbose,Zn,es,un,dt.shuffle,kn,dt.initialEpoch,null,null)}finally{q.isTraining=!1,dn(pt,xt),dn(Xt,It),dn(Yt,xt),dn(ve,It),dn(ln,be),dn(Ee,tn),null!=_e&&s.ASo(_e)}}).apply(this,arguments)}fitLoop(lt,kt,q,xt,It,dt,pt,Xt,Yt,ve,be,tn,ln,Ee){var _e=this;return(0,e.A)(function*(){null==xt&&(xt=32),null==It&&(It=1),null==ve&&(ve=!0),null==tn&&(tn=0);let We=!1;if(null!=Xt&&null!=Yt&&(We=!0),null!=Ee&&(We=!0,null==ln))throw new c.Qp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const Te=_e.checkNumSamples(kt,xt,ln,"steps_per_epoch");let en;null!=Te&&(en=(0,A.y1)(0,Te)),null==dt&&(dt=1);const{callbackList:ze,history:un}=(0,E.dY)(pt,dt,It,tn,Te,ln,xt,We,be);ze.setModel(_e),_e.history=un,yield ze.onTrainBegin(),_e.stopTraining_=!1;for(let Sn=tn;Sn<It;++Sn){yield ze.onEpochBegin(Sn);const Un={};if(null!=ln)throw new c.EH("stepsPerEpoch mode is not implemented yet.");{if("batch"===ve)throw new c.EH("batch shuffling is not implemneted yet");ve&&s.ZSL.shuffle(en);const bn=(0,s.tGX)(en),es=vn(Te,xt);for(let kn=0;kn<es.length;++kn){const Zn={};if(yield ze.onBatchBegin(kn,Zn),s.DZQ(()=>{const Es=es[kn][0],cs=es[kn][1],fs=i.Dh(bn,Es,cs-Es);Zn.batch=kn,Zn.size=cs-Es;const Hs=on(kt,fs),js=lt(Hs);for(let Ds=0;Ds<q.length;++Ds){const bs=js[Ds];Zn[q[Ds]]=bs,s.aCs(bs)}if(kn===es.length-1&&We){const Ds=_e.testLoop(Xt,Yt,xt);for(let ys=0;ys<q.length;++ys){const bs=q[ys],Fs=Ds[ys];s.aCs(Fs),Un["val_"+bs]=Fs}}}),yield ze.onBatchEnd(kn,Zn),(0,g.i)(Zn),_e.stopTraining_)break}bn.dispose()}if(yield ze.onEpochEnd(Sn,Un),_e.stopTraining_)break}return yield ze.onTrainEnd(),yield _e.history.syncData(),_e.history})()}fitDataset(lt,kt){var q=this;return(0,e.A)(function*(){return function ie(Rt,Ut,lt){return re.apply(this,arguments)}(q,lt,kt)})()}trainOnBatch(lt,kt){var q=this;return(0,e.A)(function*(){const xt=yield q.standardizeUserData(lt,kt),It=xt[0],dt=xt[1],Xt=q.makeTrainFunction()(It.concat(dt)),Yt=[];for(const ve of Xt){const be=yield ve.data();Yt.push(be[0])}return s.ASo(Xt),dn(xt[0],lt),dn(xt[1],kt),(0,D.wL)(Yt)})()}getNamedWeights(lt){const kt=[],q=null!=lt&&lt.trainableOnly,xt=q?this.trainableWeights:this.weights,It=this.getWeights(q);for(let dt=0;dt<xt.length;++dt)q&&!xt[dt].trainable||kt.push({name:xt[dt].originalName,tensor:It[dt]});return kt}set stopTraining(lt){this.stopTraining_=lt}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(lt){this.optimizer_!==lt&&(this.optimizer_=lt,this.isOptimizerOwned=!1)}dispose(){const lt=super.dispose();if(0===lt.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const kt=s.m1Z().numTensors;this.optimizer_.dispose(),lt.numDisposedVariables+=kt-s.m1Z().numTensors}return lt}getLossIdentifiers(){let lt;if("string"==typeof this.loss)lt=(0,D.uc)(this.loss);else if(Array.isArray(this.loss)){for(const kt of this.loss)if("string"!=typeof kt)throw new Error("Serialization of non-string loss is not supported.");lt=this.loss.map(kt=>(0,D.uc)(kt))}else{const kt=Object.keys(this.loss);lt={};const q=this.loss;for(const xt of kt){if("string"!=typeof q[xt])throw new Error("Serialization of non-string loss is not supported.");lt[xt]=(0,D.uc)(q[xt])}}return lt}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[(0,D.uc)(f.GT(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(lt=>(0,D.uc)(f.GT(lt)));{const lt={};for(const kt in this.metrics)lt[kt]=(0,D.uc)(f.GT(this.metrics[kt]));return lt}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(lt){if(null!=lt.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=lt.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=lt.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const kt=(0,k.w)(lt.optimizer_config),q=(0,x.i)(kt);let xt,It;if("string"==typeof lt.loss)xt=(0,D.Cb)(lt.loss);else if(Array.isArray(lt.loss))xt=lt.loss.map(dt=>(0,D.Cb)(dt));else if(null!=lt.loss){xt={};for(const dt in lt.loss)xt[dt]=(0,D.Cb)(lt.loss[dt])}if(Array.isArray(lt.metrics))It=lt.metrics.map(dt=>(0,D.Cb)(dt));else if(null!=lt.metrics){It={};for(const dt in lt.metrics)It[dt]=(0,D.Cb)(lt.metrics[dt])}this.compile({loss:xt,metrics:It,optimizer:q})}save(lt,kt){var q=this;return(0,e.A)(function*(){if("string"==typeof lt){const ve=s.io.getSaveHandlers(lt);if(0===ve.length)throw new c.Qp(`Cannot find any save handlers for URL '${lt}'`);if(ve.length>1)throw new c.Qp(`Found more than one (${ve.length}) save handlers for URL '${lt}'`);lt=ve[0]}if(null==lt.save)throw new c.Qp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const xt=yield s.io.encodeWeights(q.getNamedWeights(kt)),Xt={modelTopology:q.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${_.r}`,convertedBy:null};if(null!=kt&&kt.includeOptimizer&&null!=q.optimizer){Xt.trainingConfig=q.getTrainingConfig();const ve="optimizer",{data:be,specs:tn}=yield s.io.encodeWeights(yield q.optimizer.getWeights(),ve);xt.specs.push(...tn),xt.data=s.io.concatenateArrayBuffers([xt.data,be])}return null!=q.userDefinedMetadata&&(C(q.userDefinedMetadata,q.name,!0),Xt.userDefinedMetadata=q.userDefinedMetadata),Xt.weightData=xt.data,Xt.weightSpecs=xt.specs,lt.save(Xt)})()}setUserDefinedMetadata(lt){C(lt,this.name),this.userDefinedMetadata=lt}getUserDefinedMetadata(){return this.userDefinedMetadata}}return Rt.className="Model",Rt})();s.JFn.registerClass(us),s.JFn.registerClass((()=>{class Rt extends us{}return Rt.className="Functional",Rt})())},42946:(ft,N,t)=>{"use strict";t.d(N,{EH:()=>E,Qp:()=>i,bu:()=>s,l7:()=>e,pf:()=>m});class e extends Error{constructor(g){super(g),Object.setPrototypeOf(this,e.prototype)}}class s extends Error{constructor(g){super(g),Object.setPrototypeOf(this,s.prototype)}}class i extends Error{constructor(g){super(g),Object.setPrototypeOf(this,i.prototype)}}class E extends Error{constructor(g){super(g),Object.setPrototypeOf(this,E.prototype)}}class m extends Error{constructor(g){super(g),Object.setPrototypeOf(this,m.prototype)}}Error},15293:(ft,N,t)=>{"use strict";t(67165)},91584:(ft,N,t)=>{"use strict";t(7257)},39416:(ft,N,t)=>{"use strict";t(55294),t(98552)},40183:(ft,N,t)=>{"use strict";t(48631)},73112:(ft,N,t)=>{"use strict";t(59352)},50531:(ft,N,t)=>{"use strict";var e=t(41653),s=t(10281);(0,e._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,s.oR)},7257:(ft,N,t)=>{"use strict";t.d(N,{H4:()=>u,sN:()=>C,Fe:()=>at,zo:()=>it});var e=t(41653),s=t(99198),i=t(9980),E=t(42946);const m=["fanIn","fanOut","fanAvg"],c=["normal","uniform","truncatedNormal"];var g=t(24503),h=t(89119);class u extends e.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}e.JFn.registerClass((()=>{class J extends u{apply(rt,tt){return(0,e.Ul9)(rt,tt)}}return J.className="Zeros",J})());let C=(()=>{class J extends u{apply(rt,tt){return(0,e.SaS)(rt,tt)}}return J.className="Ones",J})();e.JFn.registerClass(C),e.JFn.registerClass((()=>{class J extends u{constructor(rt){if(super(),"object"!=typeof rt)throw new E.Qp(`Expected argument of type ConstantConfig but got ${rt}`);if(void 0===rt.value)throw new E.Qp(`config must have value set but got ${rt}`);this.value=rt.value}apply(rt,tt){return(0,e.DZQ)(()=>(0,e.lKK)((0,e.d_2)(this.value),(0,e.SaS)(rt,tt)))}getConfig(){return{value:this.value}}}return J.className="Constant",J})()),e.JFn.registerClass((()=>{class J extends u{constructor(rt){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=rt.minval||this.DEFAULT_MINVAL,this.maxval=rt.maxval||this.DEFAULT_MAXVAL,this.seed=rt.seed}apply(rt,tt){return(0,e.YeY)(rt,this.minval,this.maxval,tt,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return J.className="RandomUniform",J})()),e.JFn.registerClass((()=>{class J extends u{constructor(rt){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=rt.mean||this.DEFAULT_MEAN,this.stddev=rt.stddev||this.DEFAULT_STDDEV,this.seed=rt.seed}apply(rt,tt){if("float32"!==(tt=tt||"float32")&&"int32"!==tt)throw new E.EH(`randomNormal does not support dType ${tt}.`);return s.FE(rt,this.mean,this.stddev,tt,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return J.className="RandomNormal",J})()),e.JFn.registerClass((()=>{class J extends u{constructor(rt){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=rt.mean||this.DEFAULT_MEAN,this.stddev=rt.stddev||this.DEFAULT_STDDEV,this.seed=rt.seed}apply(rt,tt){if("float32"!==(tt=tt||"float32")&&"int32"!==tt)throw new E.EH(`truncatedNormal does not support dType ${tt}.`);return(0,e.efE)(rt,this.mean,this.stddev,tt,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return J.className="TruncatedNormal",J})()),e.JFn.registerClass((()=>{class J extends u{constructor(rt){super(),this.gain=null!=rt.gain?rt.gain:1}apply(rt,tt){return(0,e.DZQ)(()=>{if(2!==rt.length||rt[0]!==rt[1])throw new E.Qp("Identity matrix initializer can only be used for 2D square matrices.");return(0,e.lKK)(this.gain,(0,e.y5U)(rt[0]))})}getConfig(){return{gain:this.gain}}}return J.className="Identity",J})());let H=(()=>{class J extends u{constructor(rt){if(super(),rt.scale<0)throw new E.Qp(`scale must be a positive float. Got: ${rt.scale}`);this.scale=null==rt.scale?1:rt.scale,this.mode=null==rt.mode?"fanIn":rt.mode,function f(J){(0,g.E6)(m,"FanMode",J)}(this.mode),this.distribution=null==rt.distribution?"normal":rt.distribution,function p(J){(0,g.E6)(c,"Distribution",J)}(this.distribution),this.seed=rt.seed}apply(rt,tt){const Tt=function G(J,ot="channelsLast"){let rt,tt;if((0,i.uM)(ot),2===J.length)rt=J[0],tt=J[1];else if(-1!==[3,4,5].indexOf(J.length)){if("channelsFirst"===ot){const Tt=(0,h.no)(J,2);rt=J[1]*Tt,tt=J[0]*Tt}else if("channelsLast"===ot){const Tt=(0,h.no)(J,0,J.length-2);rt=J[J.length-2]*Tt,tt=J[J.length-1]*Tt}}else{const Tt=(0,h.no)(J);rt=Math.sqrt(Tt),tt=Math.sqrt(Tt)}return[rt,tt]}(rt),Et=Tt[0],At=Tt[1];let oe=this.scale;if(oe/="fanIn"===this.mode?Math.max(1,Et):"fanOut"===this.mode?Math.max(1,At):Math.max(1,(Et+At)/2),"normal"===this.distribution){const Gt=Math.sqrt(oe);if("float32"!==(tt=tt||"float32")&&"int32"!==tt)throw new E.EH(`${this.getClassName()} does not support dType ${tt}.`);return(0,e.efE)(rt,0,Gt,tt,this.seed)}{const Gt=Math.sqrt(3*oe);return(0,e.YeY)(rt,-Gt,Gt,tt,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return J.className="VarianceScaling",J})();e.JFn.registerClass(H);let F=(()=>{class J extends H{constructor(rt){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="GlorotUniform",J})();e.JFn.registerClass(F);let B=(()=>{class J extends H{constructor(rt){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="GlorotNormal",J})();e.JFn.registerClass(B);let A=(()=>{class J extends H{constructor(rt){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="HeNormal",J})();e.JFn.registerClass(A);let k=(()=>{class J extends H{constructor(rt){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="HeUniform",J})();e.JFn.registerClass(k);let _=(()=>{class J extends H{constructor(rt){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="LeCunNormal",J})();e.JFn.registerClass(_);let U=(()=>{class J extends H{constructor(rt){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return H.className}}return J.className="LeCunUniform",J})();e.JFn.registerClass(U);let W=(()=>{class J extends u{constructor(rt){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==rt.gain?this.DEFAULT_GAIN:rt.gain,this.seed=rt.seed}apply(rt,tt){return(0,e.DZQ)(()=>{if(rt.length<2)throw new E.EH("Shape must be at least 2D.");if("int32"!==tt&&"float32"!==tt&&void 0!==tt)throw new TypeError(`Unsupported data type ${tt}.`);const Tt=e.ZSL.sizeFromShape(rt.slice(0,-1)),Et=rt[rt.length-1],At=Tt*Et;At>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${At}) elements: Slowness may result.`);const oe=[Math.max(Et,Tt),Math.min(Et,Tt)],Gt=s.FE(oe,0,1,tt,this.seed),ce=e.mPL.qr(Gt,!1);let Jt=ce[0];const ie=ce[1].flatten().stridedSlice([0],[Math.min(Et,Tt)*Math.min(Et,Tt)],[Math.min(Et,Tt)+1]);return Jt=(0,e.lKK)(Jt,ie.sign()),Tt<Et&&(Jt=Jt.transpose()),(0,e.lKK)((0,e.d_2)(this.gain),Jt.reshape(rt))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return J.className="Orthogonal",J})();e.JFn.registerClass(W);const Z={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function j(J,ot={}){return(0,g.Xv)(J,e.JFn.SerializationMap.getMap().classNameMap,ot,"initializer")}function it(J){return(0,g.k4)(J)}function at(J){if("string"==typeof J){const ot=J in Z?Z[J]:J;if("GlorotNormal"===ot)return new B;if("GlorotUniform"===ot)return new F;if("HeNormal"===ot)return new A;if("HeUniform"===ot)return new k;if("LeCunNormal"===ot)return new _;if("LeCunUniform"===ot)return new U;{const rt={};return rt.className=ot,rt.config={},j(rt)}}return J instanceof u?J:j(J)}},89893:(ft,N,t)=>{"use strict";t.d(N,{EY:()=>i,To:()=>e,bb:()=>E,ft:()=>s,r$:()=>m});const e=["channelsFirst","channelsLast"],s=["nearest","bilinear"],i=["valid","same","causal"],E=["max","avg"],m=["sum","mul","concat","ave"]},97301:(ft,N,t)=>{"use strict";t.d(N,{w:()=>m});var e=t(41653),s=t(71936),i=t(42946),E=t(99198);function m(c,x,g,h){let f=(0,s.un)(c);if("int32"!==f.dtype&&(f=E.wg(f,"int32")),"int"===x)return f;const p=f.shape;if(0===f.rank&&(f=(0,e.UG6)(f,-1)),"oneHot"===x&&1!==f.shape[f.shape.length-1]&&(f=(0,e.UG6)(f,-1)),f.rank>2)throw new i.Qp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${x} and input shape ${p} which would result in output rank ${f.rank}.`);const u=["multiHot","oneHot"].includes(x);let C;if(C=(0,e.aOp)(f,typeof h<"u"&&"count"===x?h:[],g,u),"tfIdf"!==x)return C;if(h)return(0,e.lKK)(C,h);throw new i.Qp("When outputMode is 'tfIdf', weights must be provided.")}},53340:(ft,N,t)=>{"use strict";t.d(N,{i:()=>i});var e=t(41653),s=t(24503);function i(E,m={},c=!1){return(0,s.Xv)(E,e.JFn.SerializationMap.getMap().classNameMap,m,"layer",c)}},35814:(ft,N,t)=>{"use strict";t.d(N,{I:()=>i,i:()=>m});var e=t(10467),s=t(41653);function i(c){return E.apply(this,arguments)}function E(){return(E=(0,e.A)(function*(c){if(null==c)return;const x=[],g=[],h=[];for(const f in c){const p=c[f];if("number"!=typeof p){const u=p;x.push(u.data()),g.push(f),h.push(u)}}if(x.length>0){const f=yield Promise.all(x);for(let p=0;p<f.length;++p)c[g[p]]=f[p][0];(0,s.ASo)(h)}})).apply(this,arguments)}function m(c){if(null!=c)for(const x in c){const g=c[x];"number"!=typeof g&&g.dispose()}}},55294:(ft,N,t)=>{"use strict";t.d(N,{Jc:()=>S,Jt:()=>J,Ol:()=>C,Pg:()=>G,SO:()=>at,VW:()=>g,Xv:()=>x,Yq:()=>m,bt:()=>c,qp:()=>T});var e=t(41653),s=t(17513),i=t(99198),E=t(42946);function m(ot,rt){return(0,e.DZQ)(()=>{"float32"!==ot.dtype&&(ot=e.wgE(ot,"float32"));const tt=e.czq(i.Ew(ot),rt,!0),Tt=e.GSj(tt.shape,(0,s.Ni)()),Et=e.RZD(e.PhQ(tt,Tt));return e.y4m(ot,Et)})}function c(ot,rt){return(0,e.DZQ)(()=>e.i2o(i.Ew(e.jbE(rt,ot)),-1))}function x(ot,rt){return(0,e.DZQ)(()=>e.i2o(e.tnl(e.jbE(rt,ot)),-1))}function g(ot,rt){return(0,e.DZQ)(()=>{const tt=e.jbE(ot,rt),Tt=e.zQh(e.tnl(ot),(0,s.Ni)(),Number.MAX_VALUE),Et=e.tnl(e.y4m(tt,Tt));return e.lKK(100,e.i2o(Et,-1))})}function C(ot,rt,tt=!1){return(0,e.DZQ)(()=>{if(tt)rt=e.Vs9(rt);else{const Tt=e.czq(rt,rt.shape.length-1,!0);rt=e.y4m(rt,Tt)}return rt=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)()),e.HZy(e.czq(e.lKK(e.wgE(ot,"float32"),e.Rm2(rt)),rt.shape.length-1))})}function T(ot,rt,tt=!1){return(0,e.DZQ)(()=>{const Tt=e.wgE(e.RIf(i.Bq(ot)),"int32"),Et=(rt=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)())).shape;return C(e.tQQ(e.Mw0(Tt,Et[Et.length-1]),Et),rt,tt)})}function S(ot,rt){return(0,e.DZQ)(()=>{let tt;return tt=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)()),tt=e.Rm2(e.y4m(tt,e.jbE(1,tt))),e.i2o(function D(ot,rt){if(!e.ZSL.arraysEqual(ot.shape,rt.shape))throw new E.Qp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(ot.shape)} and ${JSON.stringify(rt.shape)}`);return(0,e.DZQ)(()=>{const tt=e.VVh(rt),Tt=e.HZy(e.tnl(rt));return e.WQq(e.jbE(tt,e.lKK(rt,ot)),e.Kko(e.oNF(Tt)))})}(ot,tt),-1)})}function G(ot,rt){return(0,e.DZQ)(()=>{const tt=m(ot,-1),Tt=m(rt,-1),Et=e.lKK(tt,Tt);return e.HZy(e.czq(Et,-1))})}const at={meanSquaredError:c,meanAbsoluteError:x,meanAbsolutePercentageError:g,meanSquaredLogarithmicError:function h(ot,rt){return(0,e.DZQ)(()=>{const tt=e.zQh(rt,(0,s.Ni)(),Number.MAX_VALUE),Tt=e.Rm2(e.WQq(1,tt)),Et=e.zQh(ot,(0,s.Ni)(),Number.MAX_VALUE),At=e.Rm2(e.WQq(1,Et));return e.i2o(i.Ew(e.jbE(Tt,At)),-1)})},squaredHinge:function f(ot,rt){return(0,e.DZQ)(()=>{const tt=e.PhQ(0,e.jbE(1,e.lKK(ot,rt)));return e.i2o(i.Ew(tt),-1)})},hinge:function p(ot,rt){return(0,e.DZQ)(()=>{const tt=e.PhQ(0,e.jbE(1,e.lKK(ot,rt)));return e.i2o(tt,-1)})},categoricalHinge:function u(ot,rt){return(0,e.DZQ)(()=>{const tt=e.czq(e.lKK(ot,rt),-1),Tt=e.T9B(e.lKK(e.jbE(1,ot),rt),-1);return e.PhQ(0,e.WQq(1,e.jbE(Tt,tt)))})},logcosh:function d(ot,rt){return(0,e.DZQ)(()=>{const tt=Math.log(2),Tt=e.jbE(rt,ot),Et=e.jbE(e.WQq(Tt,e.lw0(e.lKK(-2,Tt))),tt);return e.i2o(Et,-1)})},categoricalCrossentropy:C,sparseCategoricalCrossentropy:T,binaryCrossentropy:S,kullbackLeiblerDivergence:function b(ot,rt){return(0,e.DZQ)(()=>{const tt=e.zQh(ot,(0,s.Ni)(),1),Tt=e.zQh(rt,(0,s.Ni)(),1);return e.czq(e.lKK(ot,e.Rm2(e.y4m(tt,Tt))),-1)})},poisson:function w(ot,rt){return(0,e.DZQ)(()=>{const tt=e.Rm2(e.WQq((0,s.Ni)(),rt));return e.i2o(e.jbE(rt,e.lKK(ot,tt)),-1)})},cosineProximity:G};function J(ot){if("string"==typeof ot){if(ot in at)return at[ot];let rt=`Unknown loss ${ot}`;throw ot.toLowerCase().includes("softmaxcrossentropy")&&(rt=`Unknown loss ${ot}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new E.Qp(rt)}return ot}},98552:(ft,N,t)=>{"use strict";t.d(N,{GT:()=>Z,Jc:()=>d,Jt:()=>W,Ol:()=>A,qp:()=>_,qv:()=>C,xM:()=>c,yP:()=>x});var e=t(41653),s=t(99198),i=t(42946),E=t(55294),m=t(24503);function c(j,it){return(0,e.DZQ)(()=>{const at=e.lKK(.5,e.P61(it)),J=s.wg(e.rhj(it,at),j.dtype);return e.i2o(e.LCg(j,J),-1)})}function x(j,it){return(0,e.DZQ)(()=>s.wg(e.LCg(e.FLi(j,-1),e.FLi(it,-1)),"float32"))}function d(j,it){return(0,E.Jc)(j,it)}function C(j,it){return j.rank===it.rank&&(j=e.r2V(j,[j.rank-1])),(it=e.FLi(it,-1)).dtype!==j.dtype&&(it=e.wgE(it,j.dtype)),e.wgE(e.LCg(j,it),"float32")}const A=E.Ol,_=E.qp,U={binaryAccuracy:c,categoricalAccuracy:x,precision:function p(j,it){return(0,e.DZQ)(()=>{const at=function g(j,it){return(0,e.DZQ)(()=>e.wgE(e.czq(e.n76(e.LCg(j,1),e.LCg(it,1))),"float32"))}(j,it),J=function f(j,it){return(0,e.DZQ)(()=>e.wgE(e.czq(e.n76(e.LCg(j,0),e.LCg(it,1))),"float32"))}(j,it),ot=e.WQq(at,J);return e.wgE(e._M9(e.rhj(ot,0),e.y4m(at,ot),0),"float32")})},categoricalCrossentropy:A,sparseCategoricalCrossentropy:_,mse:E.bt,MSE:E.bt,mae:E.Xv,MAE:E.Xv,mape:E.VW,MAPE:E.VW,cosine:E.Pg};function W(j){if("string"==typeof j&&j in U)return U[j];if("string"!=typeof j&&null!=j)return j;throw new i.Qp(`Unknown metric ${j}`)}function Z(j){if(m.vA(null!==j,`Unknown LossOrMetricFn ${j}`),"string"==typeof j)return j;{let it;for(const at of Object.keys(E.SO))if(E.SO[at]===j){it=at;break}if(void 0!==it)return it;for(const at of Object.keys(U))if(U[at]===j){it=at;break}return void 0!==it?it:j.name}}},59352:(ft,N,t)=>{"use strict";t.d(N,{Bm:()=>u,R9:()=>f});var e=t(41653),s=t(99198),i=t(24503);class m extends e.JFn.Serializable{}let c=(()=>{class d extends m{constructor(T){super(),function E(d){if(null!=d&&"object"!=typeof d)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${d}`)}(T),this.l1=null==T||null==T.l1?.01:T.l1,this.l2=null==T||null==T.l2?.01:T.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(T){return(0,e.DZQ)(()=>{let D=(0,e.Ul9)([1]);return this.hasL1&&(D=(0,e.WQq)(D,(0,e.czq)(e.lKK(this.l1,(0,e.tnl)(T))))),this.hasL2&&(D=(0,e.WQq)(D,(0,e.czq)(e.lKK(this.l2,s.Ew(T))))),e.tQQ(D,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(T,D){return new T({l1:D.l1,l2:D.l2})}}return d.className="L1L2",d})();e.JFn.registerClass(c);const h={l1l2:"L1L2"};function f(d){return(0,i.k4)(d)}function p(d,C={}){return(0,i.Xv)(d,e.JFn.SerializationMap.getMap().classNameMap,C,"regularizer")}function u(d){return null==d?null:"string"==typeof d?p({className:d in h?h[d]:d,config:{}}):d instanceof m?d:p(d)}},51367:(ft,N,t)=>{"use strict";t.d(N,{J:()=>E,Ol:()=>m,mW:()=>c});var e=t(42946),s=t(24503),i=t(89119);function E(x,g,h){if("number"==typeof x)return(0,s.fD)(x,g);if(x.length!==g)throw new e.Qp(`The ${h} argument must be an integer or tuple of ${g} integers. Received: ${x.length} elements.`);for(let f=0;f<g;++f){const p=x[f];if(!(0,i.Fq)(p))throw new e.Qp(`The ${h} argument must be an integer or tuple of ${g} integers. Received: ${JSON.stringify(x)} including a non-integer number ${p}`)}return x}function m(x,g,h,f,p=1){if(null==x)return x;let d;return d="same"===h?x:x-(g+(g-1)*(p-1))+1,Math.floor((d+f-1)/f)}function c(x,g,h,f){if(null==x)return null;if("valid"===f)x=x*g+(0,i.T9)([h-g,0]);else{if("same"!==f)throw new e.Qp(`Unsupport padding mode: ${f}.`);x*=g}return x}},24503:(ft,N,t)=>{"use strict";t.d(N,{Am:()=>w,Cb:()=>f,Cd:()=>_,E6:()=>H,HP:()=>F,U9:()=>m,Xv:()=>C,ZF:()=>G,fD:()=>i,k4:()=>u,oo:()=>B,sg:()=>k,st:()=>x,th:()=>D,uc:()=>h,vA:()=>E,wL:()=>c});var e=t(41653),s=t(42946);function i(W,Z){if(Array.isArray(W)){let j=[];for(let it=0;it<Z;it++)j=j.concat(W);return j}{const j=new Array(Z);return j.fill(W),j}}function E(W,Z){if(!W)throw new s.pf(Z)}function m(W,Z){let j=0;for(const it of W)it===Z&&j++;return j}function c(W){return 1===W.length?W[0]:W}function x(W){return Array.isArray(W)?W:[W]}function h(W){const j=W.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==j[0]?j:"private"+j}function f(W){return W.length<=1||-1===W.indexOf("_")?W:W.replace(/[_]+(\w|$)/g,(Z,j)=>j.toUpperCase())}let p={};function u(W){if(null==W)return null;const Z={};return Z.className=W.getClassName(),Z.config=W.getConfig(),Z}function d(W){if(null!=W&&"object"==typeof W)if(Array.isArray(W))W.forEach(Z=>d(Z));else{const Z=Object.keys(W);for(const j of Z){const it=W[j];null!=it&&"object"==typeof it&&(Array.isArray(it)||"ndarray"!==it.type||"number"!=typeof it.value?d(it):W[j]=it.value)}}}function C(W,Z={},j={},it="object",at=!1){if("string"==typeof W){let ot;if(W in j)ot=j[W];else if(W in p)ot=p[W];else if(ot=Z[W],null==ot)throw new s.Qp(`Unknown ${it}: ${W}. This may be due to one of the following reasons:\n1. The ${it} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${it} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return ot}{const J=W;if(null==J.className||null==J.config)throw new s.Qp(`${it}: Improper config format: ${JSON.stringify(J)}.\n'className' and 'config' must set.`);const ot=J.className;let rt,tt;if(ot in j?[rt,tt]=j[ot]:ot in p?[rt,tt]=p.className:ot in Z&&([rt,tt]=Z[ot]),null==rt)throw new s.Qp(`Unknown ${it}: ${ot}. This may be due to one of the following reasons:\n1. The ${it} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${it} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=tt){const Tt={};for(const Gt of Object.keys(p))Tt[Gt]=p[Gt];for(const Gt of Object.keys(j))Tt[Gt]=j[Gt];J.config.customObjects=Tt;const At=Object.assign({},p);for(const Gt of Object.keys(j))p[Gt]=j[Gt];d(J.config);const oe=tt(rt,J.config,j,at);return p=Object.assign({},At),oe}{const Tt=Object.assign({},p);for(const At of Object.keys(j))p[At]=j[At];const Et=new rt(J.config);return p=Object.assign({},Tt),Et}}}function D(W,Z){return-1*function T(W,Z){return W<Z?-1:W>Z?1:0}(W,Z)}function w(W){if(null==W)return W;const Z=[];for(const j of W)-1===Z.indexOf(j)&&Z.push(j);return Z}function G(W){if(null==W)throw new s.Qp(`Invalid value in obj: ${JSON.stringify(W)}`);for(const Z in W)if(W.hasOwnProperty(Z))return!1;return!0}function H(W,Z,j){if(null!=j&&W.indexOf(j)<0)throw new s.Qp(`${j} is not a valid ${Z}.  Valid values are ${W} or null/undefined.`)}function F(W,Z,j=0,it=1/0){return E(j>=0),E(it>=j),Array.isArray(W)&&W.length>=j&&W.length<=it&&W.every(at=>typeof at===Z)}function B(W,Z){Array.isArray(W)?(e.ZSL.assert(W.length>0,()=>`${Z} is unexpectedly an empty array.`),W.forEach((j,it)=>B(j,`element ${it+1} of ${Z}`))):e.ZSL.assert(Number.isInteger(W)&&W>0,()=>`Expected ${Z} to be a positive integer, but got ${A(W)}.`)}function A(W){return null===W?"null":Array.isArray(W)?"["+W.map(Z=>A(Z)).join(",")+"]":"string"==typeof W?`"${W}"`:`${W}`}function k(W,Z,j){let at,it=null!=j?j():e.ZSL.now();return(...ot)=>{const rt=null!=j?j():e.ZSL.now();return rt-it<Z||(it=rt,at=W(...ot)),at}}function _(W){return"relu"===W?"relu":"linear"===W?"linear":"elu"===W?"elu":null}},89119:(ft,N,t)=>{"use strict";t.d(N,{Fq:()=>s,T9:()=>m,jk:()=>E,no:()=>i,y1:()=>f});var e=t(42946);function s(p){return p===parseInt(p.toString(),10)}function i(p,u,d){null==u&&(u=0),null==d&&(d=p.length);let C=1;for(let T=u;T<d;++T)C*=p[T];return C}function E(p){if(0===p.length)return Number.NaN;let u=Number.POSITIVE_INFINITY;for(let d=0;d<p.length;d++){const C=p[d];C<u&&(u=C)}return u}function m(p){if(0===p.length)return Number.NaN;let u=Number.NEGATIVE_INFINITY;for(let d=0;d<p.length;d++){const C=p[d];C>u&&(u=C)}return u}function f(p,u){if(u<p)throw new e.Qp(`end (${u}) < begin (${p}) is forbidden.`);const d=[];for(let C=p;C<u;++C)d.push(C);return d}},71936:(ft,N,t)=>{"use strict";t.d(N,{FS:()=>i,TT:()=>s,U$:()=>m,un:()=>E});var e=t(42946);function s(c){return Array.isArray(c)&&Array.isArray(c[0])}function i(c){return 0===c.length?[]:Array.isArray(c[0])?c:[c]}function E(c){let x;if(Array.isArray(c)){if(1!==c.length)throw new e.Qp(`Expected Tensor length to be 1; got ${c.length}`);x=c[0]}else x=c;return x}function m(c){if(Array.isArray(c)&&Array.isArray(c[0])){if(1===c.length)return c[0];throw new e.Qp(`Expected exactly 1 Shape; got ${c.length}`)}return c}},43549:(ft,N,t)=>{"use strict";function e(s){let i=0;for(const E of s)i+=0===E.shape.length?1:E.shape.reduce((m,c)=>m*c);return i}t.d(N,{Y:()=>e})},75768:(ft,N,t)=>{"use strict";t.d(N,{UM:()=>H,eR:()=>c,ex:()=>G});var e=t(41653),s=t(29887),i=t(9980);t(42946);const m="Variable";class c{constructor(A,k="float32",_=m,U=!0,W=null){this.dtype=null==k?"float32":k,this.shape=A.shape,this.id=(0,s.j)(),this.originalName=(0,i.BC)(_=null==_?m:_),this.name=(0,i.Uc)(this.originalName),this.trainable_=U,this.constraint=W,this.val=e.bvq(A,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(A){return this.assertNotDisposed(),function x(B,A){if(B.shape.toString()!==A.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(B.shape)+" vs. "+JSON.stringify(A.shape))}(this.val,A),this.val.id!==A.id&&(this.val.assign(A),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(A){this.trainable_=A,this.val.trainable=A}}function G(B){return B.map(A=>A.read())}function H(B){B.forEach(A=>{A[0].write(A[1])})}},13509:(ft,N,t)=>{"use strict";t.d(N,{r:()=>e});const e="4.22.0"},77816:(ft,N,t)=>{"use strict";t.d(N,{r:()=>e});const e="4.22.0"},2495:function(ft,N,t){var e;!function(s,i){function m(h){var f=this,p=function g(){var h=4022871197;return function(p){p=String(p);for(var u=0;u<p.length;u++){var d=.02519603282416938*(h+=p.charCodeAt(u));d-=h=d>>>0,h=(d*=h)>>>0,h+=4294967296*(d-=h)}return 2.3283064365386963e-10*(h>>>0)}}();f.next=function(){var u=2091639*f.s0+2.3283064365386963e-10*f.c;return f.s0=f.s1,f.s1=f.s2,f.s2=u-(f.c=0|u)},f.c=1,f.s0=p(" "),f.s1=p(" "),f.s2=p(" "),f.s0-=p(h),f.s0<0&&(f.s0+=1),f.s1-=p(h),f.s1<0&&(f.s1+=1),f.s2-=p(h),f.s2<0&&(f.s2+=1),p=null}function c(h,f){return f.c=h.c,f.s0=h.s0,f.s1=h.s1,f.s2=h.s2,f}function x(h,f){var p=new m(h),u=f&&f.state,d=p.next;return d.int32=function(){return 4294967296*p.next()|0},d.double=function(){return d()+11102230246251565e-32*(2097152*d()|0)},d.quick=d,u&&("object"==typeof u&&c(u,p),d.state=function(){return c(p,{})}),d}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.alea=x}(0,ft=t.nmd(ft))},84478:function(ft,N,t){var e;!function(s,i){function m(g){var h=this,f="";h.next=function(){var u=h.b,d=h.c,C=h.d,T=h.a;return u=u<<25^u>>>7^d,d=d-C|0,C=C<<24^C>>>8^T,T=T-u|0,h.b=u=u<<20^u>>>12^d,h.c=d=d-C|0,h.d=C<<16^d>>>16^T,h.a=T-u|0},h.a=0,h.b=0,h.c=-1640531527,h.d=1367130551,g===Math.floor(g)?(h.a=g/4294967296|0,h.b=0|g):f+=g;for(var p=0;p<f.length+20;p++)h.b^=0|f.charCodeAt(p),h.next()}function c(g,h){return h.a=g.a,h.b=g.b,h.c=g.c,h.d=g.d,h}function x(g,h){var f=new m(g),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.tychei=x}(0,ft=t.nmd(ft))},57850:function(ft,N,t){var e;!function(s,i){function m(g){var h=this,f="";h.x=0,h.y=0,h.z=0,h.w=0,h.next=function(){var u=h.x^h.x<<11;return h.x=h.y,h.y=h.z,h.z=h.w,h.w^=h.w>>>19^u^u>>>8},g===(0|g)?h.x=g:f+=g;for(var p=0;p<f.length+64;p++)h.x^=0|f.charCodeAt(p),h.next()}function c(g,h){return h.x=g.x,h.y=g.y,h.z=g.z,h.w=g.w,h}function x(g,h){var f=new m(g),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.xor128=x}(0,ft=t.nmd(ft))},79040:function(ft,N,t){var e;!function(s,i){function m(g){var h=this;h.next=function(){var C,T,p=h.w,u=h.X,d=h.i;return h.w=p=p+1640531527|0,T=u[d+34&127],C=u[d=d+1&127],T^=T<<13,C^=C<<17,T=u[d]=(T^=T>>>15)^(C^=C>>>12),h.i=d,T+(p^p>>>16)|0},function f(p,u){var d,C,T,D,S,b=[],w=128;for(u===(0|u)?(C=u,u=null):(u+="\0",C=0,w=Math.max(w,u.length)),T=0,D=-32;D<w;++D)u&&(C^=u.charCodeAt((D+32)%u.length)),0===D&&(S=C),C^=C<<10,C^=C>>>15,C^=C<<4,C^=C>>>13,D>=0&&(T=0==(d=b[127&D]^=C+(S=S+1640531527|0))?T+1:0);for(T>=128&&(b[127&(u&&u.length||0)]=-1),T=127,D=512;D>0;--D)C=b[T+34&127],d=b[T=T+1&127],C^=C<<13,d^=d<<17,b[T]=(C^=C>>>15)^(d^=d>>>12);p.w=S,p.X=b,p.i=T}(h,g)}function c(g,h){return h.i=g.i,h.w=g.w,h.X=g.X.slice(),h}function x(g,h){null==g&&(g=+new Date);var f=new m(g),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&(p.X&&c(p,f),u.state=function(){return c(f,{})}),u}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.xor4096=x}(0,ft=t.nmd(ft))},88114:function(ft,N,t){var e;!function(s,i){function m(g){var h=this;h.next=function(){var d,C,p=h.x,u=h.i;return d=p[u],C=(d^=d>>>7)^d<<24,C^=(d=p[u+1&7])^d>>>10,C^=(d=p[u+3&7])^d>>>3,C^=(d=p[u+4&7])^d<<7,d=p[u+7&7],p[u]=C^=(d^=d<<13)^d<<9,h.i=u+1&7,C},function f(p,u){var d,T=[];if(u===(0|u))T[0]=u;else for(u=""+u,d=0;d<u.length;++d)T[7&d]=T[7&d]<<15^u.charCodeAt(d)+T[d+1&7]<<13;for(;T.length<8;)T.push(0);for(d=0;d<8&&0===T[d];++d);for(8==d&&(T[7]=-1),p.x=T,p.i=0,d=256;d>0;--d)p.next()}(h,g)}function c(g,h){return h.x=g.x.slice(),h.i=g.i,h}function x(g,h){null==g&&(g=+new Date);var f=new m(g),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&(p.x&&c(p,f),u.state=function(){return c(f,{})}),u}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.xorshift7=x}(0,ft=t.nmd(ft))},85704:function(ft,N,t){var e;!function(s,i){function m(g){var h=this,f="";h.next=function(){var u=h.x^h.x>>>2;return h.x=h.y,h.y=h.z,h.z=h.w,h.w=h.v,(h.d=h.d+362437|0)+(h.v=h.v^h.v<<4^u^u<<1)|0},h.x=0,h.y=0,h.z=0,h.w=0,h.v=0,g===(0|g)?h.x=g:f+=g;for(var p=0;p<f.length+64;p++)h.x^=0|f.charCodeAt(p),p==f.length&&(h.d=h.x<<10^h.x>>>4),h.next()}function c(g,h){return h.x=g.x,h.y=g.y,h.z=g.z,h.w=g.w,h.v=g.v,h.d=g.d,h}function x(g,h){var f=new m(g),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}i&&i.exports?i.exports=x:t.amdD&&t.amdO?void 0!==(e=function(){return x}.call(N,t,N,i))&&(i.exports=e):this.xorwow=x}(0,ft=t.nmd(ft))},97454:function(ft,N,t){var e;!function(s,i,E){var d,m=256,h=E.pow(m,6),f=E.pow(2,52),p=2*f,u=m-1;function C(H,F,B){var A=[],k=b(S((F=1==F?{entropy:!0}:F||{}).entropy?[H,G(i)]:null==H?function w(){try{var H;return d&&(H=d.randomBytes)?H=H(m):(H=new Uint8Array(m),(s.crypto||s.msCrypto).getRandomValues(H)),G(H)}catch{var F=s.navigator,B=F&&F.plugins;return[+new Date,s,B,s.screen,G(i)]}}():H,3),A),_=new T(A),U=function(){for(var W=_.g(6),Z=h,j=0;W<f;)W=(W+j)*m,Z*=m,j=_.g(1);for(;W>=p;)W/=2,Z/=2,j>>>=1;return(W+j)/Z};return U.int32=function(){return 0|_.g(4)},U.quick=function(){return _.g(4)/4294967296},U.double=U,b(G(_.S),i),(F.pass||B||function(W,Z,j,it){return it&&(it.S&&D(it,_),W.state=function(){return D(_,{})}),j?(E.random=W,Z):W})(U,k,"global"in F?F.global:this==E,F.state)}function T(H){var F,B=H.length,A=this,k=0,_=A.i=A.j=0,U=A.S=[];for(B||(H=[B++]);k<m;)U[k]=k++;for(k=0;k<m;k++)U[k]=U[_=u&_+H[k%B]+(F=U[k])],U[_]=F;(A.g=function(W){for(var Z,j=0,it=A.i,at=A.j,J=A.S;W--;)Z=J[it=u&it+1],j=j*m+J[u&(J[it]=J[at=u&at+Z])+(J[at]=Z)];return A.i=it,A.j=at,j})(m)}function D(H,F){return F.i=H.i,F.j=H.j,F.S=H.S.slice(),F}function S(H,F){var k,B=[],A=typeof H;if(F&&"object"==A)for(k in H)try{B.push(S(H[k],F-1))}catch{}return B.length?B:"string"==A?H:H+"\0"}function b(H,F){for(var A,B=H+"",k=0;k<B.length;)F[u&k]=u&(A^=19*F[u&k])+B.charCodeAt(k++);return G(F)}function G(H){return String.fromCharCode.apply(0,H)}if(b(E.random(),i),ft.exports){ft.exports=C;try{d=t(41234)}catch{}}else void 0!==(e=function(){return C}.call(N,t,N,ft))&&(ft.exports=e)}(typeof self<"u"?self:this,[],Math)},85817:()=>{},18590:()=>{},4530:()=>{},8108:()=>{},80551:()=>{},41234:()=>{}}]);