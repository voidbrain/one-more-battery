(self.webpackChunkapp=self.webpackChunkapp||[]).push([[2296],{27543:(pt,R,t)=>{"use strict";t.d(R,{C:()=>s});var e=t(41653);function s(l,E){Array.isArray(l)||(l=[l]),l.forEach(g=>{null!=g&&e.ZSL.assert("complex64"!==g.dtype,()=>`${E} does not support complex64 tensors in the CPU backend.`)})}},21750:(pt,R,t)=>{"use strict";t.d(R,{Um:()=>c});var e=t(41653),s=t(10467),l=t(27543);const E=e.kpo.YO;let g=(()=>{class ut extends e.uI_{nextDataId(){return ut.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new e.GJx(this,(0,e.Hi9)())}write(N,Q,$){this.firstUse&&(this.firstUse=!1,(0,e._K2)().get("IS_NODE")&&e.C0T.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const J={id:this.nextDataId()};return this.data.set(J,{values:N,dtype:$,refCount:1}),J}makeTensorInfo(N,Q,$){let J;if("string"===Q&&null!=$&&$.length>0&&e.ZSL.isString($[0])){const Et=$.map(gt=>e.ZSL.encodeString(gt));J=this.write(Et,N,Q)}else J=this.write($,N,Q);return{dataId:J,shape:N,dtype:Q}}refCount(N){return this.data.has(N)?this.data.get(N).refCount:0}incRef(N){this.data.get(N).refCount++}decRef(N){this.data.has(N)&&this.data.get(N).refCount--}move(N,Q,$,J,Et){this.data.set(N,{values:Q,dtype:J,refCount:Et})}numDataIds(){return this.data.numDataIds()}read(N){var Q=this;return(0,s.A)(function*(){return Q.readSync(N)})()}readSync(N){const{dtype:Q,complexTensorInfos:$}=this.data.get(N);if("complex64"===Q){const J=this.readSync($.real.dataId),Et=this.readSync($.imag.dataId);return e.C0T.mergeRealAndImagArrays(J,Et)}return e.ZSL.convertBackendValuesAndArrayBuffer(this.data.get(N).values,Q)}bufferSync(N){const Q=this.readSync(N.dataId);if("string"===N.dtype)try{const $=Q.map(J=>e.ZSL.decodeString(J));return(0,e.ra8)(N.shape,N.dtype,$)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,e.ra8)(N.shape,N.dtype,Q)}makeOutput(N,Q,$){return(0,e.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(Q,$,N),this)}disposeData(N,Q=!1){if(this.data.has(N)){if(this.data.get(N).refCount--,!Q&&this.data.get(N).refCount>0)return!1;const{complexTensorInfos:$}=this.data.get(N);null!=$&&(this.disposeData($.real.dataId,!0),this.disposeData($.imag.dataId,!0)),this.data.delete(N)}return!0}disposeIntermediateTensorInfo(N){this.disposeData(N.dataId)}time(N){return(0,s.A)(function*(){const Q=e.ZSL.now();return N(),{kernelMs:e.ZSL.now()-Q}})()}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(N){(0,l.C)([N],"where");const Q=this.readSync(N.dataId);return E(N.shape,Q)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return ut.nextDataId=0,ut})();const c="4.22.0";(0,e.gJX)("cpu",()=>new g,1);var y=t(80345);const m=(0,y.v)(e.Pah,ut=>ut>=0?ut:Math.exp(ut)-1),h={kernelName:e.Pah,backendName:"cpu",kernelFunc:m};var f=t(5029);function p(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{alpha:J}=Q;(0,l.C)([$],"leakyRelu");const Et=e.ZSL.sizeFromShape($.shape),gt=N.data.get($.dataId).values,_t=e.ZSL.getTypedArrayFromDType("float32",Et);for(let ft=0;ft<gt.length;ft++)_t[ft]=gt[ft]<0?J*gt[ft]:gt[ft];return N.makeTensorInfo($.shape,"float32",_t)}const u={kernelName:e.X0$,backendName:"cpu",kernelFunc:p};var d=t(99800);const C=(0,d.Z)((ut,ht)=>ut<0?ht*ut:ut);function T(ut){const{inputs:ht,backend:N}=ut,{x:Q,alpha:$}=ht;(0,l.C)([Q,$],"prelu");const J=N.data.get(Q.dataId).values,Et=N.data.get($.dataId).values,[gt,_t]=C(Q.shape,$.shape,J,Et,"float32");return N.makeTensorInfo(_t,"float32",gt)}const D={kernelName:e.Ncv,backendName:"cpu",kernelFunc:T},S=(0,y.v)(e.fUj,ut=>Math.max(0,ut)),b={kernelName:e.fUj,backendName:"cpu",kernelFunc:S},w=(0,y.v)(e.P_L,ut=>Math.min(Math.max(0,ut),6)),H={kernelName:e.P_L,backendName:"cpu",kernelFunc:w};var j=t(94303);function F(ut,ht,N,Q,$){if("linear"===N)return(0,f.D)({inputs:{x:ht},backend:ut});if("relu"===N)return S({inputs:{x:ht},backend:ut});if("elu"===N)return m({inputs:{x:ht},backend:ut});if("relu6"===N)return w({inputs:{x:ht},backend:ut});if("prelu"===N)return T({inputs:{x:ht,alpha:Q},backend:ut});if("leakyrelu"===N)return p({inputs:{x:ht},backend:ut,attrs:{alpha:$}});if("sigmoid"===N)return(0,j.ry)({inputs:{x:ht},backend:ut});throw new Error(`Activation ${N} has not been implemented for the CPU backend.`)}var B=t(6936);function A(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{shape:J}=Q,Et=e.ZSL.sizeFromShape($.shape),gt=e.ZSL.inferFromImplicitShape(J,Et),_t=e.ZSL.sizeFromShape(gt);e.ZSL.assert(Et===_t,()=>`The new shape (${gt}) has ${_t} elements and the old shape (${$.shape}) has ${Et} elements. The new shape and old shape must have the same number of elements.`),N.incRef($.dataId);const ft=N.data.get($.dataId);if(null!=ft.complexTensorInfos){const Ot=ft.complexTensorInfos.imag;ft.complexTensorInfos.real.shape=gt,Ot.shape=gt}return{dataId:$.dataId,shape:gt,dtype:$.dtype}}const k={kernelName:e.R23,backendName:"cpu",kernelFunc:A};function x(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{a:$,b:J}=ht,{transposeA:Et,transposeB:gt}=Q;(0,l.C)([$,J],"matMul");const _t=$.shape.length,ft=J.shape.length,dt=Et?$.shape[_t-2]:$.shape[_t-1],Ot=gt?J.shape[ft-1]:J.shape[ft-2],Dt=Et?$.shape[_t-1]:$.shape[_t-2],Lt=gt?J.shape[ft-2]:J.shape[ft-1],Ut=$.shape.slice(0,-2),Ft=J.shape.slice(0,-2),Kt=e.ZSL.sizeFromShape(Ut),Zt=e.ZSL.sizeFromShape(Ft),ee=e.ZEY.assertAndGetBroadcastShape($.shape.slice(0,-2),J.shape.slice(0,-2)).concat([Dt,Lt]);e.ZSL.assert(dt===Ot,()=>`Error in matMul: inner shapes (${dt}) and (${Ot}) of Tensors with shapes ${$.shape} and ${J.shape} and transposeA=${Et} and transposeB=${gt} must match.`);const le=gt?[Zt,Lt,Ot]:[Zt,Ot,Lt],fe=A({inputs:{x:$},backend:N,attrs:{shape:Et?[Kt,dt,Dt]:[Kt,Dt,dt]}}),_e=A({inputs:{x:J},backend:N,attrs:{shape:le}}),$e=Et?fe.shape[1]:fe.shape[2],Fe=Et?fe.shape[2]:fe.shape[1],Be=gt?_e.shape[1]:_e.shape[2],Ke=Math.max(Kt,Zt),Ze=N.data.get(fe.dataId).values,Ae=N.data.get(_e.dataId).values,we=e.ZSL.computeStrides(fe.shape),Me=e.ZSL.computeStrides(_e.shape),[Ne,Ve,Re]=Et?[we[0],1,we[1]]:[we[0],we[1],1],[ke,Ye,He]=gt?[1,Me[1],Me[0]]:[Me[1],1,Me[0]],rn=Fe*Be,Xe=(0,e.ra8)([Ke,Fe,Be],fe.dtype),ln=Xe.values,Qe=N.blockSize;for(let pn=0;pn<Ke;pn++){const En=pn%Kt,In=pn%Zt;for(let Tn=0;Tn<Fe;Tn+=Qe){const bn=Math.min(Tn+Qe,Fe);for(let Nn=0;Nn<Be;Nn+=Qe){const Zn=Math.min(Nn+Qe,Be);for(let Jn=0;Jn<$e;Jn+=Qe){const os=Math.min(Jn+Qe,$e);for(let qn=Tn;qn<bn;qn++)for(let Yn=Nn;Yn<Zn;Yn++){let as=0;for(let es=Jn;es<os;es++)as+=Ze[En*Ne+qn*Ve+es*Re]*Ae[es*ke+Yn*Ye+In*He];ln[pn*rn+(qn*Be+Yn)]+=as}}}}}return N.disposeIntermediateTensorInfo(fe),N.disposeIntermediateTensorInfo(_e),N.makeTensorInfo(ee,Xe.dtype,Xe.values)}const V={kernelName:e.jAQ,backendName:"cpu",kernelFunc:x},Y={kernelName:e.Dr,backendName:"cpu",kernelFunc:function W(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{a:$,b:J,bias:Et,preluActivationWeights:gt}=ht,{transposeA:_t,transposeB:ft,activation:dt,leakyreluAlpha:Ot}=Q;let Dt,Lt,Ut;const Ft=[];Dt=x({inputs:{a:$,b:J},attrs:{transposeA:_t,transposeB:ft},backend:N}),Et&&(Lt=(0,B.WQ)({inputs:{a:Dt,b:Et},backend:N}),Ft.push(Dt),Dt=Lt),dt&&(Ut=F(N,Dt,dt,gt,Ot),Ft.push(Dt),Dt=Ut);for(const Zt of Ft)N.disposeIntermediateTensorInfo(Zt);return Dt}};var Z=t(13375);const it=(0,y.v)(e.Vvy,ut=>Math.acos(ut)),at={kernelName:e.Vvy,backendName:"cpu",kernelFunc:it},q=(0,y.v)(e.PH8,ut=>Math.acosh(ut)),ot={kernelName:e.PH8,backendName:"cpu",kernelFunc:q},et={kernelName:e.EkD,backendName:"cpu",kernelFunc:function rt(ut){const{inputs:ht,backend:N}=ut,Q=ht;(0,l.C)(ht,"addN");const $=Q.map(gt=>N.data.get(gt.dataId).values),J=(0,e.ra8)(Q[0].shape,Q[0].dtype),Et=J.values;for(let gt=0;gt<Q.length;gt++){const _t=$[gt];for(let ft=0;ft<Et.length;ft++)Et[ft]+=_t[ft]}return N.makeTensorInfo(J.shape,J.dtype,J.values)}};var yt=t(87599);const St={kernelName:e.u8Z,backendName:"cpu",kernelFunc:function mt(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,keepDims:Et}=Q;(0,l.C)($,"all");const gt=e.ZSL.parseAxisParam(J,$.shape);let _t=gt;const ft=e.C0T.getAxesPermutation(_t,$.shape.length);let dt=$;null!=ft&&(dt=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:ft}}),_t=e.C0T.getInnerMostAxes(_t.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("all",_t,dt.shape.length);const[Ot,Dt]=e.C0T.computeOutAndReduceShapes(dt.shape,_t),Lt=e.ZSL.sizeFromShape(Dt),Ut=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(Ot),dt.dtype),Ft=N.data.get(dt.dataId).values;for(let Zt=0;Zt<Ut.length;++Zt){const qt=Zt*Lt;let ee=Ft[qt];for(let Qt=0;Qt<Lt;++Qt)ee=ee&&Ft[qt+Qt];Ut[Zt]=ee}null!=ft&&N.disposeIntermediateTensorInfo(dt);const Kt=N.makeTensorInfo(Ot,dt.dtype,Ut);if(Et){const qt=A({inputs:{x:Kt},backend:N,attrs:{shape:e.C0T.expandShapeToKeepDim(Ot,gt)}});return N.disposeIntermediateTensorInfo(Kt),qt}return Kt}},Ht={kernelName:e.FSt,backendName:"cpu",kernelFunc:function se(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,keepDims:Et}=Q;(0,l.C)($,"any");const gt=e.ZSL.parseAxisParam(J,$.shape);let _t=gt;const ft=e.C0T.getAxesPermutation(_t,$.shape.length);let dt=$;null!=ft&&(dt=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:ft}}),_t=e.C0T.getInnerMostAxes(_t.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("any",_t,dt.shape.length);const[Ot,Dt]=e.C0T.computeOutAndReduceShapes(dt.shape,_t),Lt=e.ZSL.sizeFromShape(Dt),Ut=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(Ot),dt.dtype),Ft=N.data.get(dt.dataId).values;for(let Zt=0;Zt<Ut.length;++Zt){const qt=Zt*Lt;let ee=Ft[qt];for(let Qt=0;Qt<Lt;++Qt)ee=ee||Ft[qt+Qt];Ut[Zt]=ee}null!=ft&&N.disposeIntermediateTensorInfo(dt);const Kt=N.makeTensorInfo(Ot,dt.dtype,Ut);if(Et){const qt=A({inputs:{x:Kt},backend:N,attrs:{shape:e.C0T.expandShapeToKeepDim(Ot,gt)}});return N.disposeIntermediateTensorInfo(Kt),qt}return Kt}},Xt={kernelName:e.Jp_,backendName:"cpu",kernelFunc:function ue(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J}=Q;(0,l.C)($,"argMax");let Et=e.ZSL.parseAxisParam(J,$.shape);const gt=e.C0T.getAxesPermutation(Et,$.shape.length);let _t=$;const ft=[];null!=gt&&(_t=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:gt}}),ft.push(_t),Et=e.C0T.getInnerMostAxes(Et.length,_t.shape.length)),Et=[Et[0]],e.C0T.assertAxesAreInnerMostDims("argMax",Et,_t.shape.length);const[dt,Ot]=e.C0T.computeOutAndReduceShapes(_t.shape,Et),Dt=e.ZSL.sizeFromShape(dt),Lt=e.ZSL.makeZerosTypedArray(Dt,"int32"),Ut=e.ZSL.sizeFromShape(Ot),Ft=N.data.get(_t.dataId).values;for(let Kt=0;Kt<Lt.length;++Kt){const Zt=Kt*Ut;let qt=Ft[Zt],ee=0;for(let Qt=0;Qt<Ut;++Qt){const le=Ft[Zt+Qt];le>qt&&(qt=le,ee=Qt)}Lt[Kt]=ee}return ft.forEach(Kt=>N.disposeIntermediateTensorInfo(Kt)),N.makeTensorInfo(dt,"int32",Lt)}},ae={kernelName:e.p_m,backendName:"cpu",kernelFunc:function ie(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J}=Q;(0,l.C)($,"argMin");let Et=e.ZSL.parseAxisParam(J,$.shape);const gt=e.C0T.getAxesPermutation(Et,$.shape.length);let _t=$;const ft=[];null!=gt&&(_t=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:gt}}),ft.push(_t),Et=e.C0T.getInnerMostAxes(Et.length,_t.shape.length)),Et=[Et[0]],e.C0T.assertAxesAreInnerMostDims("argMin",Et,_t.shape.length);const[dt,Ot]=e.C0T.computeOutAndReduceShapes(_t.shape,Et),Dt=e.ZSL.sizeFromShape(dt),Lt=e.ZSL.makeZerosTypedArray(Dt,"int32"),Ut=e.ZSL.sizeFromShape(Ot),Ft=N.data.get(_t.dataId).values;for(let Kt=0;Kt<Lt.length;++Kt){const Zt=Kt*Ut;let qt=Ft[Zt],ee=0;for(let Qt=0;Qt<Ut;++Qt){const le=Ft[Zt+Qt];le<qt&&(qt=le,ee=Qt)}Lt[Kt]=ee}return ft.forEach(Kt=>N.disposeIntermediateTensorInfo(Kt)),N.makeTensorInfo(dt,"int32",Lt)}},ne=(0,y.v)(e.QKF,ut=>Math.asin(ut)),Pe={kernelName:e.QKF,backendName:"cpu",kernelFunc:ne},Ie=(0,y.v)(e.epO,ut=>Math.asinh(ut)),Ct={kernelName:e.epO,backendName:"cpu",kernelFunc:Ie},zt=(0,y.v)(e.TyE,ut=>Math.atan(ut)),Jt={kernelName:e.TyE,backendName:"cpu",kernelFunc:zt};var pe=t(445);const ze=(0,d.Z)((ut,ht)=>Math.atan2(ut,ht)),an=(0,pe.j)(e.lxb,ze),vn={kernelName:e.lxb,backendName:"cpu",kernelFunc:an},mn=(0,y.v)(e.zP9,ut=>Math.atanh(ut)),hn={kernelName:e.zP9,backendName:"cpu",kernelFunc:mn};function $n(ut,ht,N,Q,$,J){const Et=$.strideHeight,gt=$.strideWidth,_t=$.dilationHeight,ft=$.dilationWidth,dt=$.effectiveFilterHeight,Ot=$.effectiveFilterWidth,Dt=$.padInfo.top,Lt=$.padInfo.left,Ut="max"===J?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,Ft=(0,e.ra8)($.outShape,N),Kt=Ft.values,Zt=$.outShape[1]*$.outShape[2]*$.outShape[3],qt=$.outShape[2]*$.outShape[3],ee=$.outShape[3];for(let Qt=0;Qt<$.batchSize;++Qt){const le=Qt*Zt,fe=Qt*Q[0];for(let _e=0;_e<$.inChannels;++_e)for(let $e=0;$e<$.outHeight;++$e){const Fe=$e*Et-Dt,Be=Math.max(0,Fe),Ke=Math.min($.inHeight,dt+Fe),Ze=le+$e*qt;for(let Ae=0;Ae<$.outWidth;++Ae){const we=Ae*gt-Lt,Me=Math.max(0,we),Ne=Math.min($.inWidth,Ot+we);let Ve=Ut,Re=0,ke=0;for(let He=Be;He<Ke;He+=_t){const rn=fe+He*Q[1];for(let Xe=Me;Xe<Ne;Xe+=ft){const Qe=ut[rn+Xe*Q[2]+_e];"max"===J&&Qe>Ve?Ve=Qe:"avg"===J&&(Re+=Qe,ke++)}if(isNaN(Ve))break}Kt[Ze+Ae*ee+_e]="avg"===J?Re/ke:Ve}}}return Ft}function wn(ut,ht,N,Q,$=!1,J=!1){const Et=(0,e.ra8)(Q.outShape,"int32"),gt=Q.strideHeight,_t=Q.strideWidth,ft=Q.dilationHeight,dt=Q.dilationWidth,Ot=Q.effectiveFilterHeight,Dt=Q.effectiveFilterWidth,Lt=Q.padInfo.top,Ut=Q.padInfo.left,Ft=(0,e.ra8)(ht,N,ut);for(let Kt=0;Kt<Q.batchSize;++Kt)for(let Zt=0;Zt<Q.inChannels;++Zt)for(let qt=0;qt<Q.outHeight;++qt){const ee=qt*gt-Lt;let Qt=ee;for(;Qt<0;)Qt+=ft;const le=Math.min(Q.inHeight,Ot+ee);for(let fe=0;fe<Q.outWidth;++fe){const _e=fe*_t-Ut;let $e=_e;for(;$e<0;)$e+=dt;const Fe=Math.min(Q.inWidth,Dt+_e);let Be=Number.NEGATIVE_INFINITY,Ke=-1;for(let Ze=Qt;Ze<le;Ze+=ft){const Ae=Ze-ee;for(let we=$e;we<Fe;we+=dt){const Me=we-_e,Ne=Ft.get(Kt,Ze,we,Zt);Ne>Be&&(Be=Ne,Ke=$?J?((Kt*Q.inHeight+Ze)*Q.inWidth+we)*Q.inChannels+Zt:(Ze*Q.inWidth+we)*Q.inChannels+Zt:Ae*Dt+Me)}}Et.set(Ke,Kt,qt,fe,Zt)}}return Et}function Gn(ut,ht,N,Q,$,J){const Et=$.strideDepth,gt=$.strideHeight,_t=$.strideWidth,ft=$.dilationDepth,dt=$.dilationHeight,Ot=$.dilationWidth,Dt=$.effectiveFilterDepth,Lt=$.effectiveFilterHeight,Ut=$.effectiveFilterWidth,Ft=$.padInfo.front,Kt=$.padInfo.top,Zt=$.padInfo.left,qt="max"===J?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,ee=(0,e.ra8)($.outShape,N),Qt=ee.values,le=$.outShape[1]*$.outShape[2]*$.outShape[3]*$.outShape[4],fe=$.outShape[2]*$.outShape[3]*$.outShape[4],_e=$.outShape[3]*$.outShape[4],$e=$.outShape[4];for(let Fe=0;Fe<$.batchSize;++Fe){const Be=Fe*le,Ke=Fe*Q[0];for(let Ze=0;Ze<$.inChannels;++Ze)for(let Ae=0;Ae<$.outDepth;++Ae){const we=Ae*Et-Ft;let Me=we;for(;Me<0;)Me+=ft;const Ne=Math.min($.inDepth,Dt+we),Ve=Be+Ae*fe;for(let Re=0;Re<$.outHeight;++Re){const ke=Re*gt-Kt;let Ye=ke;for(;Ye<0;)Ye+=dt;const He=Math.min($.inHeight,Lt+ke),rn=Ve+Re*_e;for(let Xe=0;Xe<$.outWidth;++Xe){const ln=Xe*_t-Zt;let Qe=ln;for(;Qe<0;)Qe+=Ot;const pn=Math.min($.inWidth,Ut+ln),En=rn+Xe*$e;let In=qt,Tn=0,bn=0;for(let Zn=Me;Zn<Ne;Zn+=ft){const Jn=Ke+Zn*Q[1];for(let os=Ye;os<He;os+=dt){const qn=Jn+os*Q[2];for(let Yn=Qe;Yn<pn;Yn+=Ot){const es=ut[qn+Yn*Q[3]+Ze];if("max"===J&&es>In?In=es:"avg"===J&&(Tn+=es,bn++),isNaN(In))break}if(isNaN(In))break}if(isNaN(In))break}Qt[En+Ze]="avg"===J?Tn/Math.max(bn,1):In}}}}return ee}const ts={kernelName:e.ho8,backendName:"cpu",kernelFunc:function ls(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht;(0,l.C)($,"avgPool");const{filterSize:J,strides:Et,pad:gt,dimRoundingMode:_t}=Q;e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(Et,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${Et} and dilations '1'`);const dt=e.C0T.computePool2DInfo($.shape,J,Et,1,gt,_t);let Ot;if(1===dt.filterWidth&&1===dt.filterHeight&&e.ZSL.arraysEqual(dt.inShape,dt.outShape))Ot=(0,f.D)({inputs:{x:$},backend:N});else{const Dt=N.data.get($.dataId).values,Lt=e.ZSL.computeStrides($.shape),Ut=$n(Dt,0,$.dtype,Lt,dt,"avg");Ot=N.makeTensorInfo(dt.outShape,$.dtype,Ut.values)}return Ot}},ws={kernelName:e.cS,backendName:"cpu",kernelFunc:function Es(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{filterSize:J,strides:Et,pad:gt,dimRoundingMode:_t,dataFormat:ft}=Q;(0,l.C)($,"avgPool3d");const dt=e.C0T.computePool3DInfo($.shape,J,Et,1,gt,_t,ft),Dt=Gn(N.data.get($.dataId).values,0,$.dtype,e.ZSL.computeStrides($.shape),dt,"avg");return N.makeTensorInfo(Dt.shape,"float32",Dt.values)}},ps={kernelName:e.wwC,backendName:"cpu",kernelFunc:function Ys(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,input:J}=ht,{filterSize:Et,strides:gt,pad:_t,dimRoundingMode:ft}=Q;(0,l.C)([$,J],"avgPool3DGrad");const dt=e.C0T.computePool3DInfo(J.shape,Et,gt,1,_t,ft),Ot=dt.strideDepth,Dt=dt.strideHeight,Lt=dt.strideWidth,Ut=dt.filterDepth,Ft=dt.filterHeight,Kt=dt.filterWidth,Zt=dt.dilationDepth,qt=dt.dilationHeight,ee=dt.dilationWidth,Qt=dt.effectiveFilterDepth,le=dt.effectiveFilterHeight,fe=dt.effectiveFilterWidth,_e=Qt-1-dt.padInfo.front,$e=fe-1-dt.padInfo.left,Fe=le-1-dt.padInfo.top,Be=(0,e.ra8)(J.shape,"float32"),Ke=1/(Ut*Ft*Kt),Ze=N.bufferSync($);for(let Ae=0;Ae<dt.batchSize;++Ae)for(let we=0;we<dt.inChannels;++we)for(let Me=0;Me<dt.inDepth;++Me)for(let Ne=0;Ne<dt.inHeight;++Ne)for(let Ve=0;Ve<dt.inWidth;++Ve){const Re=Me-_e,ke=Ne-Fe,Ye=Ve-$e;let He=0;for(let rn=0;rn<Qt;rn+=Zt){const Xe=(Re+rn)/Ot;if(!(Xe<0||Xe>=dt.outDepth||Math.floor(Xe)!==Xe))for(let ln=0;ln<le;ln+=qt){const Qe=(ke+ln)/Dt;if(!(Qe<0||Qe>=dt.outHeight||Math.floor(Qe)!==Qe))for(let pn=0;pn<fe;pn+=ee){const En=(Ye+pn)/Lt;En<0||En>=dt.outWidth||Math.floor(En)!==En||(He+=Ze.get(Ae,Xe,Qe,En,we))}}}Be.set(He*Ke,Ae,Me,Ne,Ve,we)}return N.makeTensorInfo(Be.shape,Be.dtype,Be.values)}},$t={kernelName:e.VCH,backendName:"cpu",kernelFunc:function Vs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,input:J}=ht,Et=J;(0,l.C)([$,J],"avgPoolGrad");const{filterSize:gt,strides:_t,pad:ft}=Q,dt=e.C0T.computePool2DInfo(Et.shape,gt,_t,1,ft),Ot=dt.strideHeight,Dt=dt.strideWidth,Lt=dt.filterHeight,Ut=dt.filterWidth,Ft=dt.dilationHeight,Kt=dt.dilationWidth,Zt=dt.effectiveFilterHeight,qt=dt.effectiveFilterWidth,ee=qt-1-dt.padInfo.left,Qt=Zt-1-dt.padInfo.top,le=(0,e.ra8)(Et.shape,"float32"),fe=1/(Lt*Ut),_e=N.data.get($.dataId).values,$e=(0,e.ra8)($.shape,"float32",_e);for(let Fe=0;Fe<dt.batchSize;++Fe)for(let Be=0;Be<dt.inChannels;++Be)for(let Ke=0;Ke<dt.inHeight;++Ke)for(let Ze=0;Ze<dt.inWidth;++Ze){const Ae=Ke-Qt,we=Ze-ee;let Me=0;for(let Ne=0;Ne<Zt;Ne+=Ft){const Ve=(Ae+Ne)/Ot;if(!(Ve<0||Ve>=dt.outHeight||Math.floor(Ve)!==Ve))for(let Re=0;Re<qt;Re+=Kt){const ke=(we+Re)/Dt;ke<0||ke>=dt.outWidth||Math.floor(ke)!==ke||(Me+=$e.get(Fe,Ve,ke,Be))}}le.set(Me*fe,Fe,Ke,Ze,Be)}return N.makeTensorInfo(le.shape,le.dtype,le.values)}},G={kernelName:e.i5R,backendName:"cpu",kernelFunc:function Vt(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,scale:J,offset:Et,mean:gt,variance:_t}=ht;e.ZSL.assert(gt.shape.length===_t.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),e.ZSL.assert(null==Et||gt.shape.length===Et.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),e.ZSL.assert(null==J||gt.shape.length===J.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),(0,l.C)([$,gt,_t,J,Et],"batchNorm");let{varianceEpsilon:ft}=Q;null==ft&&(ft=.001);const dt=N.data.get($.dataId).values,Ot=N.data.get(gt.dataId).values,Dt=N.data.get(_t.dataId).values,Lt=J?N.data.get(J.dataId).values:new Float32Array([1]),Ut=Et?N.data.get(Et.dataId).values:new Float32Array([0]),Ft=new Float32Array(dt.length),Kt=Ut.length,Zt=Lt.length,qt=Dt.length,ee=Ot.length;let Qt=0,le=0,fe=0,_e=0;for(let $e=0;$e<dt.length;++$e)Ft[$e]=Ut[Qt++]+(dt[$e]-Ot[le++])*Lt[fe++]/Math.sqrt(Dt[_e++]+ft),Qt>=Kt&&(Qt=0),le>=ee&&(le=0),fe>=Zt&&(fe=0),_e>=qt&&(_e=0);return N.makeTensorInfo($.shape,$.dtype,Ft)}};var ct=t(63685);const Tt={kernelName:e.Ik2,backendName:"cpu",kernelFunc:function vt(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{blockShape:J,crops:Et}=Q;(0,l.C)([$],"batchToSpaceND");const gt=J.reduce((Zt,qt)=>Zt*qt),_t=e.C0T.getReshaped($.shape,J,gt),ft=e.C0T.getPermuted(_t.length,J.length),dt=e.C0T.getReshapedPermuted($.shape,J,gt),Ot=e.C0T.getSliceBeginCoords(Et,J.length),Dt=e.C0T.getSliceSize(dt,Et,J.length),Lt=A({inputs:{x:$},backend:N,attrs:{shape:_t}}),Ut=(0,yt.m)({inputs:{x:Lt},backend:N,attrs:{perm:ft}}),Ft=A({inputs:{x:Ut},backend:N,attrs:{shape:dt}}),Kt=(0,ct.di)({inputs:{x:Ft},backend:N,attrs:{begin:Ot,size:Dt}});return N.disposeIntermediateTensorInfo(Lt),N.disposeIntermediateTensorInfo(Ut),N.disposeIntermediateTensorInfo(Ft),Kt}};var It=t(40364);const Mt={kernelName:e.N4F,backendName:"cpu",kernelFunc:function bt(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,weights:J}=ht,{size:Et}=Q,gt=N.data.get($.dataId).values,_t=N.data.get(J.dataId).values,ft=(0,It.X)(gt,_t,J.dtype,J.shape,Et);return N.makeTensorInfo([Et],J.dtype,ft)}};var ce=t(74291);const Se={kernelName:e.vj7,backendName:"cpu",kernelFunc:function ge(ut){const{inputs:ht,backend:N}=ut,{s0:Q,s1:$}=ht,J=N.data.get(Q.dataId).values,Et=N.data.get($.dataId).values,gt=e.C0T.assertAndGetBroadcastShape(Array.from(J),Array.from(Et));return N.makeTensorInfo([gt.length],"int32",Int32Array.from(gt))}};var We=t(75148),Ue=t(18946);const Je=(0,y.v)(e.vaV,(ut,ht)=>ut>ht.clipValueMax?ht.clipValueMax:ut<ht.clipValueMin?ht.clipValueMin:ut),be={kernelName:e.vaV,backendName:"cpu",kernelFunc:Je};var Ce=t(46499);const xe={kernelName:e.$zE,backendName:"cpu",kernelFunc:ut=>{const{x:ht}=ut.inputs,N=ut.backend,Q=new Float32Array(e.ZSL.sizeFromShape(ht.shape)),$=N.data.get(ht.dataId),Et=$.complexTensorInfos.imag,gt=N.data.get($.complexTensorInfos.real.dataId).values,_t=N.data.get(Et.dataId).values;for(let ft=0;ft<gt.length;ft++)Q[ft]=Math.hypot(gt[ft],_t[ft]);return N.makeOutput(Q,ht.shape,"float32")}};var nn=t(91332);function Ge(ut){const{inputs:ht,backend:N}=ut,{input:Q}=ht,$=N.data.get(Q.dataId).complexTensorInfos.imag,J=N.data.get($.dataId).values;return N.makeTensorInfo($.shape,$.dtype,J)}const un={kernelName:e.dv8,backendName:"cpu",kernelFunc:Ge};var An=t(80363);function Vn(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{axis:$}=Q,J=e.ZSL.parseAxisParam($,ht[0].shape)[0],Et=ht.map(Ft=>Ft.shape);e.C0T.assertParamsConsistent(Et,J);let gt=e.C0T.computeOutShape(ht.map(Ft=>Ft.shape),J);if(0===e.ZSL.sizeFromShape(gt))return N.makeTensorInfo(gt,ht[0].dtype,[]);const _t=ht.filter(Ft=>e.ZSL.sizeFromShape(Ft.shape)>0);if(1===_t.length)return(0,f.D)({inputs:{x:_t[0]},backend:N});if("complex64"===_t[0].dtype){const Ft=_t.map(Qt=>(0,An.x)({inputs:{input:Qt},backend:N})),Kt=_t.map(Qt=>Ge({inputs:{input:Qt},backend:N})),Zt=Vn({inputs:Ft,backend:N,attrs:{axis:J}}),qt=Vn({inputs:Kt,backend:N,attrs:{axis:J}}),ee=(0,Ce.f)({inputs:{real:Zt,imag:qt},backend:N});return Ft.forEach(Qt=>N.disposeIntermediateTensorInfo(Qt)),Kt.forEach(Qt=>N.disposeIntermediateTensorInfo(Qt)),N.disposeIntermediateTensorInfo(Zt),N.disposeIntermediateTensorInfo(qt),ee}const ft=_t.map(Ft=>{const Zt=[-1,e.ZSL.sizeFromShape(Ft.shape.slice(J))];return A({inputs:{x:Ft},backend:N,attrs:{shape:Zt}})}),dt=ft.map(Ft=>({vals:N.data.get(Ft.dataId).values,shape:Ft.shape}));gt=e.C0T.computeOutShape(ft.map(Ft=>Ft.shape),1);const Dt=(0,nn.h)(dt,gt,ht[0].dtype,1===ft[0].shape[0]),Lt=e.C0T.computeOutShape(_t.map(Ft=>Ft.shape),J),Ut=N.makeTensorInfo(Lt,ht[0].dtype,Dt);return ft.forEach(Ft=>N.disposeIntermediateTensorInfo(Ft)),Ut}const Rn={kernelName:e.$dB,backendName:"cpu",kernelFunc:Vn};function ns(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,filter:J}=ht,{strides:Et,pad:gt,dataFormat:_t,dilations:ft,dimRoundingMode:dt}=Q;(0,l.C)([$,J],"conv2d");const Ot=e.C0T.convertConv2DDataFormat(_t),Dt=e.C0T.computeConv2DInfo($.shape,J.shape,Et,ft,gt,dt,!1,Ot),Lt=Dt.filterHeight,Ut=Dt.filterWidth,Ft=Dt.dilationHeight,Kt=Dt.dilationWidth,Zt=Dt.padInfo.left,qt=Dt.padInfo.top,ee="channelsLast"===Dt.dataFormat,Qt=new e.ylz(Dt.outShape,$.dtype),le=e.ZSL.computeStrides($.shape),fe=e.ZSL.computeStrides(J.shape),_e=le[0],$e=ee?le[1]:le[2],Fe=ee?le[2]:1,Be=ee?1:le[1],Ke=Qt.strides[0],Ze=ee?Qt.strides[1]:Qt.strides[2],Ae=ee?Qt.strides[2]:1,we=ee?1:Qt.strides[1],Me=N.data.get($.dataId).values,Ne=N.data.get(J.dataId).values,Ve=Qt.values;for(let Re=0;Re<Dt.batchSize;++Re){const ke=Re*_e,Ye=Re*Ke;for(let He=0;He<Dt.outHeight;++He){const rn=Ye+He*Ze,Xe=He*Dt.strideHeight-qt;for(let ln=0;ln<Lt;++ln){const Qe=Xe+ln*Ft;if(Qe<0||Qe>=Dt.inHeight)continue;const pn=ln*fe[0],En=ke+Qe*$e;for(let In=0;In<Dt.outWidth;++In){const Tn=rn+In*Ae,bn=In*Dt.strideWidth-Zt;for(let Nn=0;Nn<Ut;++Nn){const Zn=bn+Nn*Kt;if(Zn<0||Zn>=Dt.inWidth)continue;const os=En+Zn*Fe;let qn=pn+Nn*fe[1];for(let Yn=0;Yn<Dt.inChannels;++Yn){const as=Me[os+Yn*Be];for(let es=0;es<Dt.outChannels;++es)Ve[Tn+es*we]+=as*Ne[qn+es];qn+=Dt.outChannels}}}}}}return N.makeTensorInfo(Qt.shape,Qt.dtype,Ve)}const Wn={kernelName:e.p2J,backendName:"cpu",kernelFunc:ns},_s={kernelName:e.rFm,backendName:"cpu",kernelFunc:function Xn(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,dy:J}=ht,{strides:Et,pad:gt,dataFormat:_t,dimRoundingMode:ft,filterShape:dt}=Q;(0,l.C)([$,J],"conv2dBackpropFilter");const Ot=e.C0T.convertConv2DDataFormat(_t),Dt=e.C0T.computeConv2DInfo($.shape,dt,Et,1,gt,ft,!1,Ot),{strideHeight:Lt,strideWidth:Ut,filterHeight:Ft,filterWidth:Kt}=Dt,Zt="channelsLast"===Dt.dataFormat,qt=new e.ylz(Dt.filterShape,"float32"),ee=Dt.padInfo.left,Qt=Dt.padInfo.top,le=N.data.get($.dataId).values,fe=N.data.get(J.dataId).values,_e=new e.ylz($.shape,$.dtype,le),$e=new e.ylz(J.shape,J.dtype,fe);for(let Fe=0;Fe<Ft;++Fe){const Be=Math.max(0,Math.ceil((Qt-Fe)/Lt)),Ke=Math.min(Dt.outHeight,(Dt.inHeight+Qt-Fe)/Lt);for(let Ze=0;Ze<Kt;++Ze){const Ae=Math.max(0,Math.ceil((ee-Ze)/Ut)),we=Math.min(Dt.outWidth,(Dt.inWidth+ee-Ze)/Ut);for(let Me=0;Me<Dt.inChannels;++Me)for(let Ne=0;Ne<Dt.outChannels;++Ne){let Ve=0;for(let Re=0;Re<Dt.batchSize;++Re)for(let ke=Be;ke<Ke;++ke){const Ye=Fe+ke*Lt-Qt;for(let He=Ae;He<we;++He){const rn=Ze+He*Ut-ee;Ve+=Zt?_e.get(Re,Ye,rn,Me)*$e.get(Re,ke,He,Ne):_e.get(Re,Me,Ye,rn)*$e.get(Re,Ne,ke,He)}}qt.set(Ve,Fe,Ze,Me,Ne)}}}return N.makeTensorInfo(qt.shape,qt.dtype,qt.values)}},ms={kernelName:e.jfg,backendName:"cpu",kernelFunc:function hs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,filter:J}=ht,{inputShape:Et,strides:gt,pad:_t,dataFormat:ft,dimRoundingMode:dt}=Q;(0,l.C)([$,J],"conv2dBackpropInput");const Ot=e.ZSL.computeStrides(J.shape),Dt=e.ZSL.computeStrides($.shape);let Lt=e.C0T.convertConv2DDataFormat(ft);const Ut=e.C0T.computeConv2DInfo(Et,J.shape,gt,1,_t,dt,!1,Lt),Ft=new e.ylz(Ut.inShape,"float32"),Kt=Ft.values,Zt=N.data.get($.dataId).values,qt=N.data.get(J.dataId).values,[ee,Qt,le]=Ot,{batchSize:fe,filterHeight:_e,filterWidth:$e,inChannels:Fe,inHeight:Be,inWidth:Ke,outChannels:Ze,outHeight:Ae,outWidth:we,strideHeight:Me,strideWidth:Ne}=Ut;Lt=Ut.dataFormat;const Ve=_e-1-Ut.padInfo.top,Re=$e-1-Ut.padInfo.left,ke="channelsLast"===Lt,Ye=Ft.strides[0],He=ke?Ft.strides[1]:Ft.strides[2],rn=ke?Ft.strides[2]:1,Xe=ke?1:Ft.strides[1],ln=Dt[0],Qe=ke?Dt[1]:Dt[2],pn=ke?Dt[2]:1,En=ke?1:Dt[1];for(let In=0;In<fe;++In)for(let Tn=0;Tn<Fe;++Tn)for(let bn=0;bn<Be;++bn){const Nn=bn-Ve,Zn=Math.max(0,Math.ceil(Nn/Me)),Jn=Math.min(Ae,(_e+Nn)/Me);for(let os=0;os<Ke;++os){const qn=os-Re,Yn=Math.max(0,Math.ceil(qn/Ne)),as=Math.min(we,($e+qn)/Ne);let es=0;for(let is=Zn;is<Jn;++is){const mr=is*Me-Nn;for(let Ms=Yn;Ms<as;++Ms){const Ns=ln*In+Qe*is+pn*Ms,nr=ee*(_e-1-mr)+Qt*($e-1-(Ms*Ne-qn))+le*Tn;for(let sr=0;sr<Ze;++sr)es+=Zt[Ns+En*sr]*qt[nr+sr]}}Kt[Ye*In+He*bn+rn*os+Xe*Tn]=es}}return N.makeTensorInfo(Ft.shape,Ft.dtype,Ft.values)}},Qs={kernelName:e.A1h,backendName:"cpu",kernelFunc:function Xs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,filter:J}=ht,{strides:Et,pad:gt,dilations:_t}=Q;(0,l.C)([$,J],"conv3d");const ft=e.C0T.computeConv3DInfo($.shape,J.shape,Et,_t,gt),{filterDepth:dt,filterHeight:Ot,filterWidth:Dt,dilationDepth:Lt,dilationHeight:Ut,dilationWidth:Ft,padInfo:Kt}=ft,Zt=Kt.front,qt=Kt.left,ee=Kt.top,Qt=new e.ylz(ft.outShape,$.dtype),le=N.data.get($.dataId).values,fe=N.data.get(J.dataId).values,_e=Qt.values,$e=e.ZSL.computeStrides($.shape),Fe=e.ZSL.computeStrides(J.shape);for(let Be=0;Be<ft.batchSize;++Be){const Ke=Be*$e[0],Ze=Be*Qt.strides[0];for(let Ae=0;Ae<ft.outDepth;++Ae){const we=Ze+Ae*Qt.strides[1],Me=Ae*ft.strideDepth-Zt;for(let Ne=0;Ne<dt;++Ne){const Ve=Me+Ne*Lt;if(Ve<0||Ve>=ft.inDepth)continue;const Re=Ne*Fe[0],ke=Ke+Ve*$e[1];for(let Ye=0;Ye<ft.outHeight;++Ye){const He=we+Ye*Qt.strides[2],rn=Ye*ft.strideHeight-ee;for(let Xe=0;Xe<Ot;++Xe){const ln=rn+Xe*Ut;if(ln<0||ln>=ft.inHeight)continue;const Qe=Re+Xe*Fe[1],pn=ke+ln*$e[2];for(let En=0;En<ft.outWidth;++En){const In=He+En*ft.outChannels,Tn=En*ft.strideWidth-qt;for(let bn=0;bn<Dt;++bn){const Nn=Tn+bn*Ft;if(Nn<0||Nn>=ft.inWidth)continue;const Jn=pn+Nn*ft.inChannels;let os=Qe+bn*Fe[2];for(let qn=0;qn<ft.inChannels;++qn){const Yn=le[Jn+qn];for(let as=0;as<ft.outChannels;++as)_e[In+as]+=Yn*fe[os+as];os+=ft.outChannels}}}}}}}}return N.makeTensorInfo(Qt.shape,Qt.dtype,Qt.values)}},vs={kernelName:e.iGz,backendName:"cpu",kernelFunc:function Ps(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,dy:J}=ht,{strides:Et,pad:gt,filterShape:_t}=Q;(0,l.C)([$,J],"conv3dBackpropFilterV2");const ft=e.ZSL.computeStrides($.shape),dt=e.ZSL.computeStrides(J.shape),Ot=e.C0T.computeConv3DInfo($.shape,_t,Et,1,gt),Dt=Ot.strideDepth,Lt=Ot.strideHeight,Ut=Ot.strideWidth,Ft=Ot.filterDepth,Kt=Ot.filterHeight,Zt=Ot.filterWidth,qt=new e.ylz(Ot.filterShape,"float32"),ee=qt.values,[Qt,le,fe,_e]=qt.strides,$e=N.data.get(J.dataId).values,[Fe,Be,Ke,Ze]=dt,Ae=N.data.get($.dataId).values,[we,Me,Ne,Ve]=ft,Re=Ot.padInfo.front,ke=Ot.padInfo.left,Ye=Ot.padInfo.top;for(let He=0;He<Ft;++He){const rn=Math.max(0,Math.ceil((Re-He)/Dt)),Xe=Math.min(Ot.outDepth,(Ot.inDepth+Re-He)/Dt),ln=He*Qt;for(let Qe=0;Qe<Kt;++Qe){const pn=Math.max(0,Math.ceil((Ye-Qe)/Lt)),En=Math.min(Ot.outHeight,(Ot.inHeight+Ye-Qe)/Lt),In=Qe*le+ln;for(let Tn=0;Tn<Zt;++Tn){const bn=Math.max(0,Math.ceil((ke-Tn)/Ut)),Nn=Math.min(Ot.outWidth,(Ot.inWidth+ke-Tn)/Ut),Zn=Tn*fe+In;for(let Jn=0;Jn<Ot.inChannels;++Jn){const os=Jn*_e+Zn;for(let qn=0;qn<Ot.outChannels;++qn){let Yn=0;for(let as=0;as<Ot.batchSize;++as){const es=as*we,er=as*Fe;for(let is=rn;is<Xe;++is){const Ms=(He+is*Dt-Re)*Me+es,wr=is*Be+er;for(let Ns=pn;Ns<En;++Ns){const sr=(Qe+Ns*Lt-Ye)*Ne+Ms,gr=Ns*Ke+wr;for(let Er=bn;Er<Nn;++Er)Yn+=Ae[(Tn+Er*Ut-ke)*Ve+sr+Jn]*$e[Er*Ze+gr+qn]}}}ee[os+qn]=Yn}}}}}return N.makeTensorInfo(qt.shape,qt.dtype,qt.values)}},Ks={kernelName:e.gC7,backendName:"cpu",kernelFunc:function Bs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,filter:J}=ht,{pad:Et,strides:gt,inputShape:_t}=Q;(0,l.C)([$],"conv3dBackpropInputV2");const ft=e.ZSL.computeStrides($.shape),dt=e.ZSL.computeStrides(J.shape),Ot=e.C0T.computeConv3DInfo(_t,J.shape,gt,1,Et),Dt=new e.ylz(Ot.inShape,"float32"),Lt=Dt.values,[Ut,Ft,Kt,Zt]=Dt.strides,qt=N.data.get($.dataId).values,[ee,Qt,le,fe]=ft,_e=N.data.get(J.dataId).values,[$e,Fe,Be,Ke]=dt,{batchSize:Ze,filterDepth:Ae,filterHeight:we,filterWidth:Me,inChannels:Ne,inDepth:Ve,inHeight:Re,inWidth:ke,outChannels:Ye,outDepth:He,outHeight:rn,outWidth:Xe,strideDepth:ln,strideHeight:Qe,strideWidth:pn}=Ot,En=Ae-1-Ot.padInfo.front,In=we-1-Ot.padInfo.top,Tn=Me-1-Ot.padInfo.left;for(let bn=0;bn<Ze;++bn)for(let Nn=0;Nn<Ne;++Nn)for(let Zn=0;Zn<Ve;++Zn){const Jn=Zn-En,os=Math.max(0,Math.ceil(Jn/ln)),qn=Math.min(He,(Ae+Jn)/ln);for(let Yn=0;Yn<Re;++Yn){const as=Yn-In,es=Math.max(0,Math.ceil(as/Qe)),er=Math.min(rn,(we+as)/Qe);for(let is=0;is<ke;++is){const mr=is-Tn,Ms=Math.max(0,Math.ceil(mr/pn)),wr=Math.min(Xe,(Me+mr)/pn);let Ns=0;for(let nr=os;nr<qn;++nr){const sr=nr*ln-Jn;for(let gr=es;gr<er;++gr){const Er=gr*Qe-as;for(let lo=Ms;lo<wr;++lo){const No=ee*bn+Qt*nr+le*gr+fe*lo,yl=$e*(Ae-1-sr)+Fe*(we-1-Er)+Be*(Me-1-(lo*pn-mr))+Ke*Nn;for(let To=0;To<Ye;++To)Ns+=qt[No+To]*_e[yl+To]}}}Lt[Ut*bn+Ft*Zn+Kt*Yn+Zt*is+Nn]=Ns}}}return N.makeTensorInfo(Dt.shape,Dt.dtype,Dt.values)}},or=(0,y.v)(e.Mn0,ut=>Math.cos(ut)),Br={kernelName:e.Mn0,backendName:"cpu",kernelFunc:or},kr=(0,y.v)(e.MnK,ut=>Math.cosh(ut)),Fr={kernelName:e.MnK,backendName:"cpu",kernelFunc:kr},zs={kernelName:e.MRQ,backendName:"cpu",kernelFunc:function yr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{image:$,boxes:J,boxInd:Et}=ht,{cropSize:gt,method:_t,extrapolationValue:ft}=Q,[dt,Ot,Dt,Lt]=$.shape,Ut=J.shape[0],[Ft,Kt]=gt,Zt=(0,e.ra8)([Ut,Ft,Kt,Lt],"float32"),qt=N.data.get(J.dataId).values,ee=N.data.get(Et.dataId).values,Qt=N.data.get($.dataId).values,le=e.ZSL.computeStrides($.shape),fe=e.ZSL.computeStrides(Zt.shape);for(let _e=0;_e<Ut;_e++){const $e=4*_e,Fe=qt[$e],Be=qt[$e+1],Ke=qt[$e+2],Ze=qt[$e+3],Ae=ee[_e];if(Ae>=dt)continue;const we=Ft>1?(Ke-Fe)*(Ot-1)/(Ft-1):0,Me=Kt>1?(Ze-Be)*(Dt-1)/(Kt-1):0;for(let Ne=0;Ne<Ft;Ne++){const Ve=Ft>1?Fe*(Ot-1)+Ne*we:.5*(Fe+Ke)*(Ot-1);if(Ve<0||Ve>Ot-1)for(let Re=0;Re<Kt;Re++)for(let ke=0;ke<Lt;ke++)Zt.values[ke+Re*fe[2]+Ne*fe[1]+_e*fe[0]]=ft;else if("bilinear"===_t){const Re=Math.floor(Ve),ke=Math.ceil(Ve),Ye=Ve-Re;for(let He=0;He<Kt;He++){const rn=Kt>1?Be*(Dt-1)+He*Me:.5*(Be+Ze)*(Dt-1);if(rn<0||rn>Dt-1){for(let pn=0;pn<Lt;pn++)Zt.values[pn+He*fe[2]+Ne*fe[1]+_e*fe[0]]=ft;continue}const Xe=Math.floor(rn),ln=Math.ceil(rn),Qe=rn-Xe;for(let pn=0;pn<Lt;pn++){let En=pn+Xe*le[2]+Re*le[1]+Ae*le[0];const In=Qt[En];En=pn+ln*le[2]+Re*le[1]+Ae*le[0];const Tn=Qt[En];En=pn+Xe*le[2]+ke*le[1]+Ae*le[0];const bn=Qt[En];En=pn+ln*le[2]+ke*le[1]+Ae*le[0];const Nn=Qt[En],Zn=In+(Tn-In)*Qe;En=pn+He*fe[2]+Ne*fe[1]+_e*fe[0],Zt.values[En]=Zn+(bn+(Nn-bn)*Qe-Zn)*Ye}}}else for(let Re=0;Re<Kt;++Re){const ke=Kt>1?Be*(Dt-1)+Re*Me:.5*(Be+Ze)*(Dt-1);if(ke<0||ke>Dt-1){for(let rn=0;rn<Lt;rn++)Zt.values[rn+Re*fe[2]+Ne*fe[1]+_e*fe[0]]=ft;continue}const Ye=Math.round(ke),He=Math.round(Ve);for(let rn=0;rn<Lt;rn++)Zt.values[rn+Re*fe[2]+Ne*fe[1]+_e*fe[0]]=Qt[rn+Ye*le[2]+He*le[1]+Ae*le[0]]}}}return N.makeTensorInfo(Zt.shape,Zt.dtype,Zt.values)}},Wr={kernelName:e.jj_,backendName:"cpu",kernelFunc:function xr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,exclusive:Et,reverse:gt}=Q;(0,l.C)($,"cumprod");const _t=e.C0T.getAxesPermutation([J],$.shape.length);let ft=$;null!=_t&&(ft=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:_t}}));const dt=e.C0T.getInnerMostAxes(1,$.shape.length)[0];if(dt!==ft.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${ft.shape.length-1} but got axis=${dt}`);const Ot=(0,e.TuY)(ft.dtype,"int32"),Dt=e.ZSL.makeOnesTypedArray(e.ZSL.sizeFromShape(ft.shape),Ot),Lt=N.data.get(ft.dataId).values,Ut=ft.shape[ft.shape.length-1],Ft=gt?(Zt,qt)=>Zt+Ut-qt-1:(Zt,qt)=>Zt+qt;for(let Zt=0;Zt<Lt.length;Zt+=Ut)for(let qt=0;qt<Ut;qt++){const ee=Ft(Zt,qt);if(0===qt)Dt[ee]=Et?1:Lt[ee];else{const Qt=Ft(Zt,qt-1);Dt[ee]=Et?Lt[Qt]*Dt[Qt]:Lt[ee]*Dt[Qt]}}const Kt=N.makeTensorInfo(ft.shape,Ot,Dt);if(null!=_t){const Zt=e.C0T.getUndoAxesPermutation(_t),qt=(0,yt.m)({inputs:{x:Kt},backend:N,attrs:{perm:Zt}});return N.disposeIntermediateTensorInfo(Kt),N.disposeIntermediateTensorInfo(ft),qt}return Kt}},Js={kernelName:e.nY8,backendName:"cpu",kernelFunc:function Os(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,exclusive:Et,reverse:gt}=Q;(0,l.C)($,"cumsum");const _t=e.C0T.getAxesPermutation([J],$.shape.length);let ft=$;null!=_t&&(ft=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:_t}}));const dt=e.C0T.getInnerMostAxes(1,$.shape.length)[0];if(dt!==ft.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${ft.shape.length-1} but got axis=${dt}`);const Ot=(0,e.TuY)(ft.dtype,"int32"),Dt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(ft.shape),Ot),Lt=N.data.get(ft.dataId).values,Ut=ft.shape[ft.shape.length-1],Ft=gt?(Zt,qt)=>Zt+Ut-qt-1:(Zt,qt)=>Zt+qt;for(let Zt=0;Zt<Lt.length;Zt+=Ut)for(let qt=0;qt<Ut;qt++){const ee=Ft(Zt,qt);if(0===qt)Dt[ee]=Et?0:Lt[ee];else{const Qt=Ft(Zt,qt-1);Dt[ee]=Et?Lt[Qt]+Dt[Qt]:Lt[ee]+Dt[Qt]}}const Kt=N.makeTensorInfo(ft.shape,Ot,Dt);if(null!=_t){const Zt=e.C0T.getUndoAxesPermutation(_t),qt=(0,yt.m)({inputs:{x:Kt},backend:N,attrs:{perm:Zt}});return N.disposeIntermediateTensorInfo(Kt),N.disposeIntermediateTensorInfo(ft),qt}return Kt}},ar={kernelName:e.wNW,backendName:"cpu",kernelFunc:function vr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,weights:J}=ht,{size:Et,binaryOutput:gt}=Q;if(1===$.shape.length){const _t=N.data.get($.dataId).values,ft=N.data.get(J.dataId).values,dt=(0,It.X)(_t,ft,J.dtype,J.shape,Et);return N.makeTensorInfo([Et],J.dtype,dt)}if(2===$.shape.length){const _t=N.bufferSync($),ft=N.bufferSync(J),dt=(0,It.N)(_t,ft,Et,gt);return N.makeTensorInfo(dt.shape,J.dtype,dt.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${$.shape.length}.`)}},Rs={kernelName:e.TMz,backendName:"cpu",kernelFunc:function Tr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{blockSize:J,dataFormat:Et}=Q;e.ZSL.assert("NHWC"===Et,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${Et}`);const gt=$.shape[0],_t=$.shape[1],ft=$.shape[2],dt=$.shape[3],Ot=_t*J,Dt=ft*J,Lt=dt/(J*J),Ut=N.data.get($.dataId).values,Ft=new Float32Array(gt*Ot*Dt*Lt);let Kt=0;for(let Zt=0;Zt<gt;++Zt)for(let qt=0;qt<Ot;++qt){const ee=Math.floor(qt/J),Qt=qt%J;for(let le=0;le<Dt;++le){const fe=Math.floor(le/J),$e=(Qt*J+le%J)*Lt;for(let Fe=0;Fe<Lt;++Fe)Ft[Kt++]=Ut[Fe+$e+dt*(fe+ft*(ee+_t*Zt))]}}return N.makeTensorInfo([gt,Ot,Dt,Lt],$.dtype,Ft)}};function Gs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,filter:J}=ht,{strides:Et,pad:gt,dilations:_t,dimRoundingMode:ft}=Q;(0,l.C)([$,J],"depthwiseConv2DNative");const dt=e.ZSL.computeStrides($.shape),Ot=e.ZSL.computeStrides(J.shape);let Dt=_t;null==Dt&&(Dt=[1,1]),e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(Et,Dt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${Et} and dilations '${Dt}'`);const Lt=e.C0T.computeConv2DInfo($.shape,J.shape,Et,Dt,gt,ft,!0),{filterHeight:Ut,filterWidth:Ft,dilationHeight:Kt,dilationWidth:Zt,padInfo:qt}=Lt,ee=qt.left,Qt=qt.top,le=Lt.outChannels/Lt.inChannels,fe=new e.ylz(Lt.outShape,$.dtype),_e=N.data.get($.dataId).values,$e=N.data.get(J.dataId).values,Fe=fe.values;for(let Be=0;Be<Lt.batchSize;++Be){const Ke=Be*dt[0],Ze=Be*fe.strides[0];for(let Ae=0;Ae<Lt.outHeight;++Ae){const we=Ze+Ae*fe.strides[1],Me=Ae*Lt.strideHeight-Qt;for(let Ne=0;Ne<Ut;++Ne){const Ve=Me+Ne*Kt;if(Ve<0||Ve>=Lt.inHeight)continue;const Re=Ne*Ot[0],ke=Ke+Ve*dt[1];for(let Ye=0;Ye<Lt.outWidth;++Ye){const He=we+Ye*fe.strides[2],rn=Ye*Lt.strideWidth-ee;for(let Xe=0;Xe<Ft;++Xe){const ln=rn+Xe*Zt;if(ln<0||ln>=Lt.inWidth)continue;const pn=ke+ln*Lt.inChannels;let En=He,In=Re+Xe*Ot[1];for(let Tn=0;Tn<Lt.inChannels;++Tn){const bn=_e[pn+Tn];for(let Nn=0;Nn<le;++Nn)Fe[En+Nn]+=bn*$e[In+Nn];En+=le,In+=le}}}}}}return N.makeTensorInfo(fe.shape,fe.dtype,fe.values)}const Cr={kernelName:e.tGH,backendName:"cpu",kernelFunc:Gs},Ir={kernelName:e.X$8,backendName:"cpu",kernelFunc:function Dr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,dy:J}=ht,{strides:Et,dilations:gt,pad:_t,dimRoundingMode:ft,filterShape:dt}=Q;(0,l.C)([$,J],"depthwiseConv2dNativeBackpropFilter");const Ot=e.C0T.computeConv2DInfo($.shape,dt,Et,gt,_t,ft,!0),{strideHeight:Dt,strideWidth:Lt,filterHeight:Ut,filterWidth:Ft}=Ot,Kt=new e.ylz(Ot.filterShape,"float32"),Zt=Ot.padInfo.left,qt=Ot.padInfo.top,ee=Ot.outChannels/Ot.inChannels,Qt=N.data.get($.dataId).values,le=new e.ylz($.shape,$.dtype,Qt),fe=N.data.get(J.dataId).values,_e=new e.ylz(J.shape,J.dtype,fe);for(let $e=0;$e<Ut;++$e){const Fe=Math.max(0,Math.ceil((qt-$e)/Dt)),Be=Math.min(Ot.outHeight,(Ot.inHeight+qt-$e)/Dt);for(let Ke=0;Ke<Ft;++Ke){const Ze=Math.max(0,Math.ceil((Zt-Ke)/Lt)),Ae=Math.min(Ot.outWidth,(Ot.inWidth+Zt-Ke)/Lt);for(let we=0;we<Ot.outChannels;++we){const Me=Math.trunc(we/ee),Ne=we%ee;let Ve=0;for(let Re=0;Re<Ot.batchSize;++Re)for(let ke=Fe;ke<Be;++ke){const Ye=$e+ke*Dt-qt;for(let He=Ze;He<Ae;++He)Ve+=le.get(Re,Ye,Ke+He*Lt-Zt,Me)*_e.get(Re,ke,He,we)}Kt.set(Ve,$e,Ke,Me,Ne)}}}return N.makeTensorInfo(Kt.shape,Kt.dtype,Kt.values)}},Ur={kernelName:e.nVu,backendName:"cpu",kernelFunc:function ir(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,filter:J}=ht,{strides:Et,dilations:gt,pad:_t,dimRoundingMode:ft,inputShape:dt}=Q;(0,l.C)([$,J],"depthwiseConv2DNativeBackpropInput");const Ot=e.ZSL.computeStrides($.shape),Dt=e.ZSL.computeStrides(J.shape),Lt=e.C0T.computeConv2DInfo(dt,J.shape,Et,gt,_t,ft,!0),Ut=new e.ylz(Lt.inShape,"float32"),Ft=Ut.values,[Kt,Zt,qt]=Ut.strides,ee=N.data.get($.dataId).values,[Qt,le,fe]=Ot,_e=N.data.get(J.dataId).values,[$e,Fe,Be]=Dt,{batchSize:Ke,filterHeight:Ze,filterWidth:Ae,inChannels:we,inHeight:Me,inWidth:Ne,outChannels:Ve,outHeight:Re,outWidth:ke,strideHeight:Ye,strideWidth:He}=Lt,rn=Ze-1-Lt.padInfo.top,Xe=Ae-1-Lt.padInfo.left,ln=Ve/we;for(let Qe=0;Qe<Ke;++Qe)for(let pn=0;pn<we;++pn)for(let En=0;En<Me;++En){const In=En-rn,Tn=Math.max(0,Math.ceil(In/Ye)),bn=Math.min(Re,(Ze+In)/Ye);for(let Nn=0;Nn<Ne;++Nn){const Zn=Nn-Xe,Jn=Math.max(0,Math.ceil(Zn/He)),os=Math.min(ke,(Ae+Zn)/He);let qn=0;for(let Yn=Tn;Yn<bn;++Yn){const as=Yn*Ye-In;for(let es=Jn;es<os;++es){const is=Qt*Qe+le*Yn+fe*es,mr=$e*(Ze-1-as)+Fe*(Ae-1-(es*He-Zn))+Be*pn;for(let Ms=0;Ms<ln;++Ms)qn+=ee[is+(pn*ln+Ms)]*_e[mr+Ms]}}Ft[Kt*Qe+Zt*En+qt*Nn+pn]=qn}}return N.makeTensorInfo(Ut.shape,Ut.dtype,Ut.values)}},ks={kernelName:e.ORI,backendName:"cpu",kernelFunc:function qs(ut){const{inputs:ht,backend:N}=ut,{x:Q}=ht,$=e.ZSL.sizeFromShape(Q.shape),J=N.data.get(Q.dataId).values,Et=(0,e.ra8)([$,$],Q.dtype),gt=Et.values;for(let ft=0;ft<J.length;ft++)gt[ft*$+ft]=J[ft];const _t=[...Q.shape,...Q.shape];return N.makeTensorInfo(_t,Et.dtype,Et.values)}},Pr={kernelName:e.jxD,backendName:"cpu",kernelFunc:({inputs:ut,backend:ht,attrs:N})=>{const{x:Q,filter:$}=ut,{strides:J,pad:Et,dilations:gt}=N,_t=ht,ft=_t.data.get(Q.dataId).values,dt=Q.shape.length,Ot=_t.data.get($.dataId).values,Dt=$.shape.length,{batchSize:Lt,inHeight:Ut,inWidth:Ft,inChannels:Kt,outHeight:Zt,outWidth:qt,padInfo:ee,strideHeight:Qt,strideWidth:le,filterHeight:fe,filterWidth:_e,dilationHeight:$e,dilationWidth:Fe,outShape:Be}=e.C0T.computeDilation2DInfo(Q.shape,$.shape,J,Et,"NHWC",gt),Ke=e.ZSL.sizeFromShape(Be),Ze=Be.length,Ae=e.ZSL.getArrayFromDType(Q.dtype,Ke);for(let Me=0;Me<Lt;++Me)for(let Ne=0;Ne<Zt;++Ne){const Ve=Ne*Qt-ee.top;for(let Re=0;Re<qt;++Re){const ke=Re*le-ee.left;for(let Ye=0;Ye<Kt;++Ye){let He=Number.MIN_SAFE_INTEGER;for(let Xe=0;Xe<fe;++Xe){const ln=Ve+Xe*$e;if(ln>=0&&ln<Ut)for(let Qe=0;Qe<_e;++Qe){const pn=ke+Qe*Fe;if(pn>=0&&pn<Ft){const En=e.ZSL.locToIndex([Me,ln,pn,Ye],dt,e.ZSL.computeStrides(Q.shape)),In=e.ZSL.locToIndex([Xe,Qe,Ye],Dt,e.ZSL.computeStrides($.shape)),Tn=ft[En]+Ot[In];Tn>He&&(He=Tn)}}}Ae[e.ZSL.locToIndex([Me,Ne,Re,Ye],Ze,e.ZSL.computeStrides(Be))]=He}}}return{dataId:_t.write(e.ZSL.toTypedArray(Ae,Q.dtype),Be,Q.dtype),shape:Be,dtype:Q.dtype}}},Or={kernelName:e.pk0,backendName:"cpu",kernelFunc:({inputs:ut,backend:ht,attrs:N})=>{const{x:Q,filter:$,dy:J}=ut,{strides:Et,pad:gt,dilations:_t}=N,ft=ht,dt=e.ZSL.toNestedArray(Q.shape,ft.data.get(Q.dataId).values),Ot=e.ZSL.toNestedArray($.shape,ft.data.get($.dataId).values),{batchSize:Dt,inHeight:Lt,inWidth:Ut,inChannels:Ft,outHeight:Kt,outWidth:Zt,padInfo:qt,strideHeight:ee,strideWidth:Qt,filterHeight:le,filterWidth:fe,dilationHeight:_e,dilationWidth:$e,outShape:Fe}=e.C0T.computeDilation2DInfo(Q.shape,$.shape,Et,gt,"NHWC",_t);e.ZSL.assert(J.rank===Fe.length,()=>`Error in ${e.pk0}, dy must have the same rank as output ${Fe.length}, but got ${J.rank}`);const Be=e.ZSL.toNestedArray(Fe,ft.data.get(J.dataId).values),Ke=e.ZSL.makeZerosNestedTypedArray($.shape,$.dtype);for(let Ae=0;Ae<Dt;++Ae)for(let we=0;we<Kt;++we){const Me=we*ee-qt.top;for(let Ne=0;Ne<Zt;++Ne){const Ve=Ne*Qt-qt.left;for(let Re=0;Re<Ft;++Re){let ke=Number.MIN_SAFE_INTEGER,Ye=0,He=0;for(let rn=0;rn<le;++rn){const Xe=Me+rn*_e;if(Xe>=0&&Xe<Lt)for(let ln=0;ln<fe;++ln){const Qe=Ve+ln*$e;if(Qe>=0&&Qe<Ut){const pn=dt[Ae][Xe][Qe][Re]+Ot[rn][ln][Re];pn>ke&&(ke=pn,Ye=rn,He=ln)}}}Ke[Ye][He][Re]+=Be[Ae][we][Ne][Re]}}}return{dataId:ft.write(e.ZSL.toTypedArray(Ke,Q.dtype),$.shape,$.dtype),shape:$.shape,dtype:$.dtype}}},O={kernelName:e.bP9,backendName:"cpu",kernelFunc:({inputs:ut,backend:ht,attrs:N})=>{const{x:Q,filter:$,dy:J}=ut,{strides:Et,pad:gt,dilations:_t}=N,ft=ht,dt=e.ZSL.toNestedArray(Q.shape,ft.data.get(Q.dataId).values),Ot=e.ZSL.toNestedArray($.shape,ft.data.get($.dataId).values),{batchSize:Dt,inHeight:Lt,inWidth:Ut,inChannels:Ft,outHeight:Kt,outWidth:Zt,padInfo:qt,strideHeight:ee,strideWidth:Qt,filterHeight:le,filterWidth:fe,dilationHeight:_e,dilationWidth:$e,outShape:Fe}=e.C0T.computeDilation2DInfo(Q.shape,$.shape,Et,gt,"NHWC",_t);e.ZSL.assert(J.rank===Fe.length,()=>`Error in ${e.bP9}, dy must have the same rank as output ${Fe.length}, but got ${J.rank}`);const Be=e.ZSL.toNestedArray(Fe,ft.data.get(J.dataId).values),Ke=e.ZSL.makeZerosNestedTypedArray(Q.shape,Q.dtype);for(let Ae=0;Ae<Dt;++Ae)for(let we=0;we<Kt;++we){const Me=we*ee-qt.top;for(let Ne=0;Ne<Zt;++Ne){const Ve=Ne*Qt-qt.left;for(let Re=0;Re<Ft;++Re){let ke=Number.MIN_SAFE_INTEGER,Ye=Me<0?0:Me,He=Ve<0?0:Ve;for(let rn=0;rn<le;++rn){const Xe=Me+rn*_e;if(Xe>=0&&Xe<Lt)for(let ln=0;ln<fe;++ln){const Qe=Ve+ln*$e;if(Qe>=0&&Qe<Ut){const pn=dt[Ae][Xe][Qe][Re]+Ot[rn][ln][Re];pn>ke&&(ke=pn,Ye=Xe,He=Qe)}}}Ke[Ae][Ye][He][Re]+=Be[Ae][we][Ne][Re]}}}return{dataId:ft.write(e.ZSL.toTypedArray(Ke,Q.dtype),Q.shape,Q.dtype),shape:Q.shape,dtype:Q.dtype}}},I={kernelName:e.XmO,backendName:"cpu",kernelFunc:function _(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{image:$}=ht,{canvas:J,options:Et}=Q,{contextOptions:gt,imageOptions:_t}=Et||{},ft=(null==_t?void 0:_t.alpha)||1,dt=(null==gt?void 0:gt.contextType)||"2d";if("2d"!==dt)throw new Error(`Context type ${gt.contextType} is not supported by the CPU backend.`);const Ot=J.getContext(dt,(null==gt?void 0:gt.contextAttributes)||{});if(null==Ot)throw new Error(`Could not get the context with ${dt} type.`);const[Dt,Lt]=$.shape.slice(0,2),Ut=2===$.shape.length?1:$.shape[2],Ft=N.data.get($.dataId).values,Kt="float32"===$.dtype?255:1,Zt=new Uint8ClampedArray(Lt*Dt*4);for(let ee=0;ee<Dt*Lt;++ee){const Qt=[0,0,0,255*ft];for(let fe=0;fe<Ut;fe++){const _e=Ft[ee*Ut+fe];if("float32"===$.dtype){if(_e<0||_e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_e}.`)}else if("int32"===$.dtype&&(_e<0||_e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_e}.`);1===Ut?(Qt[0]=_e*Kt,Qt[1]=_e*Kt,Qt[2]=_e*Kt):Qt[fe]=_e*Kt}const le=4*ee;Zt[le+0]=Math.round(Qt[0]),Zt[le+1]=Math.round(Qt[1]),Zt[le+2]=Math.round(Qt[2]),Zt[le+3]=Math.round(Qt[3])}J.width=Lt,J.height=Dt;const qt=new ImageData(Zt,Lt,Dt);return Ot.putImageData(qt,0,0),$}};var K=t(92287),nt=t(10708);function st(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,keepDims:Et}=Q;let gt;(0,l.C)($,"sum"),gt="bool"===$.dtype?(0,We.wg)({inputs:{x:$},backend:N,attrs:{dtype:"int32"}}):(0,f.D)({inputs:{x:$},backend:N});const _t=gt.shape.length,ft=e.ZSL.parseAxisParam(J,gt.shape),dt=e.C0T.getAxesPermutation(ft,_t);let Ot=ft,Dt=gt;null!=dt&&(Dt=(0,yt.m)({inputs:{x:gt},backend:N,attrs:{perm:dt}}),Ot=e.C0T.getInnerMostAxes(Ot.length,_t)),e.C0T.assertAxesAreInnerMostDims("sum",Ot,Dt.shape.length);const[Lt,Ut]=e.C0T.computeOutAndReduceShapes(Dt.shape,Ot),Ft=e.C0T.upcastType(Dt.dtype,"int32");let Kt=(0,nt.U)(N,Lt,Ft);const Zt=e.ZSL.sizeFromShape(Ut),qt=N.data.get(Kt.dataId).values,ee=N.data.get(Dt.dataId).values;for(let Qt=0;Qt<qt.length;++Qt){const le=Qt*Zt;let fe=0;for(let _e=0;_e<Zt;++_e)fe+=ee[le+_e];qt[Qt]=fe}if(Et){const le=Kt;Kt=A({inputs:{x:Kt},backend:N,attrs:{shape:e.C0T.expandShapeToKeepDim(Kt.shape,ft)}}),N.disposeIntermediateTensorInfo(le)}return N.disposeIntermediateTensorInfo(gt),null!=dt&&N.disposeIntermediateTensorInfo(Dt),Kt}const Nt={kernelName:e.WuN,backendName:"cpu",kernelFunc:st},te={kernelName:e.Qgm,backendName:"cpu",kernelFunc:function Pt(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{equation:$}=Q,J=ht,{allDims:Et,summedDims:gt,idDims:_t}=e.C0T.decodeEinsumEquation($,J.length);e.C0T.checkEinsumDimSizes(Et.length,_t,J);const{path:ft,steps:dt}=e.C0T.getEinsumComputePath(gt,_t),Ot=dt.length;let Dt=null,Lt=Et.length;const Ut=[];for(let Ft=0;Ft<Ot;++Ft){for(const Kt of dt[Ft]){const{permutationIndices:Zt,expandDims:qt}=e.C0T.getEinsumPermutation(Lt,_t[Kt]);let ee;e.C0T.isIdentityPermutation(Zt)?ee=J[Kt]:(ee=(0,yt.m)({inputs:{x:J[Kt]},backend:N,attrs:{perm:Zt}}),Ut.push(ee));const Qt=ee.shape.slice();for(let le=0;le<qt.length;++le)Qt.splice(qt[le],0,1);e.ZSL.arraysEqual(ee.shape,Qt)||(ee=A({inputs:{x:ee},backend:N,attrs:{shape:Qt}}),Ut.push(ee)),null===Dt?Dt=ee:(Dt=(0,K.lw)({inputs:{a:ee,b:Dt},backend:N}),Ut.push(Dt))}Ft<Ot-1&&(ft[Ft]>=0&&(Dt=st({inputs:{x:Dt},backend:N,attrs:{axis:ft[Ft]-(Et.length-Lt),keepDims:!1}}),Ut.push(Dt)),Lt--)}for(const Ft of Ut)Ft!==Dt&&N.disposeIntermediateTensorInfo(Ft);return Dt}},Le={kernelName:e.rsH,backendName:"cpu",kernelFunc:function De(ut){const{inputs:ht,backend:N}=ut,{dy:Q,y:$}=ht;(0,l.C)([Q,$],"eluGrad");const J=new Float32Array(e.ZSL.sizeFromShape($.shape)),Et=N.data.get($.dataId).values,gt=N.data.get(Q.dataId).values;for(let _t=0;_t<Et.length;++_t){const ft=Et[_t];J[_t]=ft>=0?gt[_t]:gt[_t]*(ft+1)}return N.makeTensorInfo($.shape,"float32",J)}};var je=t(71007);const en=e.C0T.ERF_P,Dn=e.C0T.ERF_A1,Ln=e.C0T.ERF_A2,xn=e.C0T.ERF_A3,on=e.C0T.ERF_A4,Pn=e.C0T.ERF_A5,ss=(0,y.v)(e._s9,ut=>{const ht=Math.sign(ut),N=Math.abs(ut),Q=1/(1+en*N);return ht*(1-((((Pn*Q+on)*Q+xn)*Q+Ln)*Q+Dn)*Q*Math.exp(-N*N))}),Ts={kernelName:e._s9,backendName:"cpu",kernelFunc:ss};var fs=t(18692);function Bn(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{input:$}=ht,{dim:J}=Q,Et=$.shape.length,gt=$.shape.slice();let _t=J;return J<0&&(e.ZSL.assert(-(Et+1)<=J,()=>`Axis must be in the interval [${-(Et+1)}, ${Et}]`),_t=Et+J+1),gt.splice(_t,0,1),A({inputs:{x:$},backend:N,attrs:{shape:gt}})}const Fs={kernelName:e.ybN,backendName:"cpu",kernelFunc:Bn};var Hs=t(3878);const lr=(0,d.Z)((ut,ht)=>ut/ht),ur=(0,pe.j)(e.sDr,lr),cr={kernelName:e.sDr,backendName:"cpu",kernelFunc:ur};var dr=t(33197);function Vr(ut,ht,N){const Q=ut.shape,$=Q[0],J=Q[1],Et=N.data.get(ut.dataId),gt=Et.complexTensorInfos.real,_t=Et.complexTensorInfos.imag,ft=[$,J],dt=e.ZSL.sizeFromShape(ft),Ot=e.ZSL.getTypedArrayFromDType("float32",dt),Dt=e.ZSL.getTypedArrayFromDType("float32",dt);for(let Kt=0;Kt<$;Kt++){const Zt=(0,ct.di)({inputs:{x:gt},backend:N,attrs:{begin:[Kt,0],size:[1,J]}}),qt=(0,ct.di)({inputs:{x:_t},backend:N,attrs:{begin:[Kt,0],size:[1,J]}}),ee=(0,Ce.f)({inputs:{real:Zt,imag:qt},backend:N}),{real:Qt,imag:le}=Kr(ee,ht,N),fe=e.C0T.mergeRealAndImagArrays(Qt,le);for(let _e=0;_e<J;_e++){const $e=e.C0T.getComplexWithIndex(fe,_e);Ot[Kt*J+_e]=$e.real,Dt[Kt*J+_e]=$e.imag}N.disposeIntermediateTensorInfo(Zt),N.disposeIntermediateTensorInfo(qt),N.disposeIntermediateTensorInfo(ee)}const Lt=N.makeTensorInfo(ft,"float32",Ot),Ut=N.makeTensorInfo(ft,"float32",Dt),Ft=(0,Ce.f)({inputs:{real:Lt,imag:Ut},backend:N});return N.disposeIntermediateTensorInfo(Lt),N.disposeIntermediateTensorInfo(Ut),Ft}function Kr(ut,ht,N){const Q=e.ZSL.sizeFromShape(ut.shape),$=N.data.get(ut.dataId),J=N.data.get($.complexTensorInfos.real.dataId).values,Et=N.data.get($.complexTensorInfos.imag.dataId).values;if(function Yr(ut){return!(ut&ut-1)}(Q)){const gt=Sr(J,Et,Q,ht,N),_t=[ut.shape[0],ut.shape[1]];if(ht){const ft=N.makeTensorInfo(_t,"float32",gt.real),dt=N.makeTensorInfo(_t,"float32",gt.imag),Ot=N.makeTensorInfo([],"float32",e.ZSL.createScalarValue(Q,"float32")),Dt=(0,f.D)({inputs:{x:Ot},backend:N}),Lt=cr.kernelFunc({inputs:{a:ft,b:Ot},backend:N}),Ut=cr.kernelFunc({inputs:{a:dt,b:Dt},backend:N}),Ft=N.data.get(Lt.dataId).values,Kt=N.data.get(Ut.dataId).values;return N.disposeIntermediateTensorInfo(ft),N.disposeIntermediateTensorInfo(dt),N.disposeIntermediateTensorInfo(Ot),N.disposeIntermediateTensorInfo(Dt),N.disposeIntermediateTensorInfo(Lt),N.disposeIntermediateTensorInfo(Ut),{real:Ft,imag:Kt}}return gt}{const _t=function Xr(ut,ht,N){const Q=new Float32Array(2*ht);for(let $=0;$<ht;$++){let J=0,Et=0;for(let gt=0;gt<ht;gt++){const _t=e.C0T.exponent($*gt,ht,N),ft=e.C0T.getComplexWithIndex(ut,gt);J+=ft.real*_t.real-ft.imag*_t.imag,Et+=ft.real*_t.imag+ft.imag*_t.real}N&&(J/=ht,Et/=ht),e.C0T.assignToTypedArray(Q,J,Et,$)}return Q}(e.C0T.mergeRealAndImagArrays(J,Et),Q,ht);return e.C0T.splitRealAndImagArrays(_t)}}function Sr(ut,ht,N,Q,$){if(1===N)return{real:ut,imag:ht};const J=e.C0T.mergeRealAndImagArrays(ut,ht),Et=N/2,gt=e.C0T.complexWithEvenIndex(J),_t=gt.real,ft=gt.imag,dt=[_t.length],Ot=$.makeTensorInfo(dt,"float32",_t),Dt=$.makeTensorInfo(dt,"float32",ft),Lt=(0,Ce.f)({inputs:{real:Ot,imag:Dt},backend:$}),Ut=e.C0T.complexWithOddIndex(J),Ft=Ut.real,Kt=Ut.imag,Zt=[Ft.length],qt=$.makeTensorInfo(Zt,"float32",Ft),ee=$.makeTensorInfo(Zt,"float32",Kt),Qt=(0,Ce.f)({inputs:{real:qt,imag:ee},backend:$}),le=Sr(_t,ft,Et,Q,$),fe=le.real,_e=le.imag,$e=[fe.length],Fe=$.makeTensorInfo($e,"float32",fe),Be=$.makeTensorInfo($e,"float32",_e),Ke=(0,Ce.f)({inputs:{real:Fe,imag:Be},backend:$}),Ze=Sr(Ft,Kt,Et,Q,$),Ae=Ze.real,we=Ze.imag,Me=[Ae.length],Ne=$.makeTensorInfo(Me,"float32",Ae),Ve=$.makeTensorInfo(Me,"float32",we),Re=(0,Ce.f)({inputs:{real:Ne,imag:Ve},backend:$}),ke=e.C0T.exponents(N,Q),Ye=[ke.real.length],He=$.makeTensorInfo(Ye,"float32",ke.real),rn=$.makeTensorInfo(Ye,"float32",ke.imag),Xe=(0,Ce.f)({inputs:{real:He,imag:rn},backend:$}),ln=(0,K.lw)({inputs:{a:Xe,b:Re},backend:$}),Qe=(0,B.WQ)({inputs:{a:Ke,b:ln},backend:$}),pn=(0,dr.jb)({inputs:{a:Ke,b:ln},backend:$}),En=(0,An.x)({inputs:{input:Qe},backend:$}),In=(0,An.x)({inputs:{input:pn},backend:$}),Tn=Ge({inputs:{input:Qe},backend:$}),bn=Ge({inputs:{input:pn},backend:$}),Nn=Vn({inputs:[En,In],backend:$,attrs:{axis:0}}),Zn=Vn({inputs:[Tn,bn],backend:$,attrs:{axis:0}}),Jn=$.data.get(Nn.dataId).values,os=$.data.get(Zn.dataId).values;return $.disposeIntermediateTensorInfo(Ot),$.disposeIntermediateTensorInfo(Dt),$.disposeIntermediateTensorInfo(Lt),$.disposeIntermediateTensorInfo(qt),$.disposeIntermediateTensorInfo(ee),$.disposeIntermediateTensorInfo(Qt),$.disposeIntermediateTensorInfo(Fe),$.disposeIntermediateTensorInfo(Be),$.disposeIntermediateTensorInfo(Ke),$.disposeIntermediateTensorInfo(Ne),$.disposeIntermediateTensorInfo(Ve),$.disposeIntermediateTensorInfo(Re),$.disposeIntermediateTensorInfo(He),$.disposeIntermediateTensorInfo(rn),$.disposeIntermediateTensorInfo(Xe),$.disposeIntermediateTensorInfo(ln),$.disposeIntermediateTensorInfo(Qe),$.disposeIntermediateTensorInfo(pn),$.disposeIntermediateTensorInfo(En),$.disposeIntermediateTensorInfo(Tn),$.disposeIntermediateTensorInfo(In),$.disposeIntermediateTensorInfo(bn),$.disposeIntermediateTensorInfo(Nn),$.disposeIntermediateTensorInfo(Zn),{real:Jn,imag:os}}const Jr={kernelName:e.rGP,backendName:"cpu",kernelFunc:function Qr(ut){const{inputs:ht,backend:N}=ut,{input:Q}=ht,$=e.ZSL.sizeFromShape(Q.shape),J=Q.shape[Q.shape.length-1],gt=A({inputs:{x:Q},backend:N,attrs:{shape:[$/J,J]}}),_t=Vr(gt,!1,N),ft=A({inputs:{x:_t},backend:N,attrs:{shape:Q.shape}});return N.disposeIntermediateTensorInfo(gt),N.disposeIntermediateTensorInfo(_t),ft}};function Ar(ut){const{backend:ht,attrs:N}=ut,{shape:Q,value:$,dtype:J}=N,Et=J||e.ZSL.inferDtype($),gt=e.ZSL.getArrayFromDType(Et,e.ZSL.sizeFromShape(Q));return function zr(ut,ht){ut.fill(ht)}(gt,$),ht.makeTensorInfo(Q,Et,gt)}const qr={kernelName:e.SQl,backendName:"cpu",kernelFunc:Ar},to={kernelName:e.BxF,backendName:"cpu",kernelFunc:({inputs:ut,backend:N})=>{const{image:Q}=ut,$=N,J=e.ZSL.getTypedArrayFromDType(Q.dtype,e.ZSL.sizeFromShape(Q.shape)),[Et,gt,_t,ft]=Q.shape,dt=$.data.get(Q.dataId).values;for(let Dt=0;Dt<Et;Dt++){const Lt=Dt*_t*gt*ft;for(let Ut=0;Ut<gt;Ut++){const Ft=Ut*(_t*ft);for(let Kt=0;Kt<_t;Kt++){const Zt=Kt*ft;for(let qt=0;qt<ft;qt++){const ee=Math.round(_t-Kt-1),Qt=Lt+Ft+Zt+qt;let le=dt[Qt];ee>=0&&ee<_t&&(le=dt[Lt+Ft+ee*ft+qt]),J[Qt]=le}}}}return{dataId:$.write(J,Q.shape,Q.dtype),shape:Q.shape,dtype:Q.dtype}}};var pr=t(2017);const Bt=(0,d.Z)((ut,ht)=>Math.floor(ut/ht)),re=(0,pe.j)(e.ElG,Bt,null,"int32"),me={kernelName:e.ElG,backendName:"cpu",kernelFunc:re},cn={kernelName:e.aAr,backendName:"cpu",kernelFunc:function ve(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,filter:J,bias:Et,preluActivationWeights:gt}=ht,{strides:_t,pad:ft,dataFormat:dt,dilations:Ot,dimRoundingMode:Dt,activation:Lt,leakyreluAlpha:Ut}=Q;let Ft=ns({inputs:{x:$,filter:J},backend:N,attrs:{strides:_t,pad:ft,dataFormat:dt,dilations:Ot,dimRoundingMode:Dt}});if(Et){const Kt=Ft;if("NCHW"===dt&&1===Et.shape.length&&1!==Et.shape[0]){const Zt=A({inputs:{x:Et},backend:N,attrs:{shape:[Et.shape[0],1,1]}});Ft=(0,B.WQ)({inputs:{a:Ft,b:Zt},backend:N}),N.disposeIntermediateTensorInfo(Zt)}else Ft=(0,B.WQ)({inputs:{a:Ft,b:Et},backend:N});N.disposeIntermediateTensorInfo(Kt)}if(Lt){const Kt=Ft;if("NCHW"===dt&&"prelu"===Lt&&1===gt.shape.length&&1!==gt.shape[0]){const Zt=A({inputs:{x:gt},backend:N,attrs:{shape:[gt.shape[0],1,1]}});Ft=F(N,Ft,Lt,Zt,Ut),N.disposeIntermediateTensorInfo(Zt)}else Ft=F(N,Ft,Lt,gt,Ut);N.disposeIntermediateTensorInfo(Kt)}return Ft}},_n={kernelName:e.T7M,backendName:"cpu",kernelFunc:function gn(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,filter:J,bias:Et,preluActivationWeights:gt}=ht,{strides:_t,pad:ft,dataFormat:dt,dilations:Ot,dimRoundingMode:Dt,activation:Lt,leakyreluAlpha:Ut}=Q;let Ft=Gs({inputs:{x:$,filter:J},backend:N,attrs:{strides:_t,pad:ft,dataFormat:dt,dilations:Ot,dimRoundingMode:Dt}});if(Et){const Kt=Ft;Ft=(0,B.WQ)({inputs:{a:Ft,b:Et},backend:N}),N.disposeIntermediateTensorInfo(Kt)}if(Lt){const Kt=Ft;Ft=F(N,Ft,Lt,gt,Ut),N.disposeIntermediateTensorInfo(Kt)}return Ft}};var yn=t(86315);const Cs={kernelName:e.O4G,backendName:"cpu",kernelFunc:function Qn(ut){const{inputs:ht,backend:N}=ut,{params:Q,indices:$}=ht,J=e.ZSL.sizeFromShape(Q.shape),Et=$.shape,gt=Et[Et.length-1],[_t,ft,dt,Ot]=e.C0T.prepareAndValidate(Q,$);if(0===ft)return N.makeTensorInfo(_t,Q.dtype,[]);const Dt=N.data.get($.dataId).values,Lt=N.bufferSync(Q),Ut=(0,yn.q)(Dt,Lt,Q.dtype,ft,gt,dt,Ot,Q.shape,J);return N.makeTensorInfo(_t,Q.dtype,Ut.values)}};var Kn=t(60509);const Ss={kernelName:e.mxL,backendName:"cpu",kernelFunc:function rs(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,indices:J}=ht,{axis:Et,batchDims:gt}=Q;(0,l.C)([$,J],"gatherV2");const _t=e.ZSL.parseAxisParam(Et,$.shape)[0],ft=N.data.get(J.dataId).values,dt=$.shape[_t];for(let Qt=0;Qt<ft.length;++Qt){const le=ft[Qt];e.ZSL.assert(le<=dt-1&&le>=0,()=>`GatherV2: the index value ${le} is not in [0, ${dt-1}]`)}let Ot=gt;null==gt&&(Ot=0);const Dt=e.ZSL.sizeFromShape(J.shape),Lt=e.C0T.segment_util.collectGatherOpShapeInfo($,J,_t,Ot),Ut=A({inputs:{x:$},backend:N,attrs:{shape:[Lt.batchSize,Lt.outerSize,Lt.dimSize,Lt.sliceSize]}}),Ft=A({inputs:{x:J},backend:N,attrs:{shape:[Lt.batchSize,Dt/Lt.batchSize]}}),Kt=[Lt.batchSize,Lt.outerSize,Dt/Lt.batchSize,Lt.sliceSize],Zt=N.bufferSync(Ft),qt=N.bufferSync(Ut),ee=(0,Kn.G)(qt,Zt,Kt);return N.disposeIntermediateTensorInfo(Ut),N.disposeIntermediateTensorInfo(Ft),N.makeTensorInfo(Lt.outputShape,ee.dtype,ee.values)}};var br=t(89505),eo=t(1885);const Gr={kernelName:e.OAQ,backendName:"cpu",kernelFunc:function no(ut){const{inputs:ht,backend:N}=ut,{input:Q}=ht,$=e.ZSL.sizeFromShape(Q.shape),J=Q.shape[Q.shape.length-1],gt=A({inputs:{x:Q},backend:N,attrs:{shape:[$/J,J]}}),_t=Vr(gt,!0,N),ft=A({inputs:{x:_t},backend:N,attrs:{shape:Q.shape}});return N.disposeIntermediateTensorInfo(gt),N.disposeIntermediateTensorInfo(_t),ft}},Hr=(0,y.v)(e.gIW,ut=>Number.isFinite(ut)?1:0,"bool"),co={kernelName:e.gIW,backendName:"cpu",kernelFunc:Hr},At=(0,y.v)(e.E3$,ut=>Math.abs(ut)===1/0?1:0,"bool"),Yt={kernelName:e.E3$,backendName:"cpu",kernelFunc:At},kt=(0,y.v)(e.iPs,ut=>Number.isNaN(ut)?1:0,"bool"),Gt={kernelName:e.iPs,backendName:"cpu",kernelFunc:kt};var oe=t(64730),he=t(11040),ye=t(43905);const Ee={kernelName:e.mnI,backendName:"cpu",kernelFunc:function de(ut){const{backend:ht,attrs:N}=ut,{start:Q,stop:$,num:J}=N,Et=(0,ye.G)(Q,$,J);return ht.makeTensorInfo([Et.length],"float32",Et)}};var fn=t(94621);const Sn=(0,y.v)(e.Cg$,ut=>Math.log1p(ut)),zn={kernelName:e.Cg$,backendName:"cpu",kernelFunc:Sn},Un=(0,d.Z)((ut,ht)=>ut&&ht),Hn=(0,pe.j)(e.RUm,Un,null,"bool"),Ws={kernelName:e.RUm,backendName:"cpu",kernelFunc:Hn},tr=(0,y.v)(e.nZd,ut=>ut?0:1,"bool"),Ls={kernelName:e.nZd,backendName:"cpu",kernelFunc:tr},po=(0,d.Z)((ut,ht)=>ut||ht),ho=(0,pe.j)(e.LXA,po,null,"bool"),fo={kernelName:e.LXA,backendName:"cpu",kernelFunc:ho},Mr={kernelName:e.jM4,backendName:"cpu",kernelFunc:function us(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{depthRadius:J,bias:Et,alpha:gt,beta:_t}=Q;(0,l.C)($,"LRN");const ft=$.shape[3],dt=ft-1,Ot=N.data.get($.dataId).values,Dt=e.ZSL.sizeFromShape($.shape),Lt=new Float32Array(Dt);function Ut(Ft){const Kt=Ft%ft;let Zt=Ft-Kt+Math.max(0,Kt-J);const qt=Ft-Kt+Math.min(Kt+J,dt);let ee=0;for(;Zt<=qt;Zt++){const Qt=Ot[Zt];ee+=Qt*Qt}return ee}for(let Ft=0;Ft<Dt;Ft++){const Kt=Ut(Ft),Zt=Ot[Ft]*Math.pow(Et+gt*Kt,-_t);Lt[Ft]=Zt}return N.makeTensorInfo($.shape,$.dtype,Lt)}},mo={kernelName:e.ToN,backendName:"cpu",kernelFunc:function Po(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,y:J,dy:Et}=ht,{depthRadius:gt,bias:_t,alpha:ft,beta:dt}=Q;(0,l.C)(Et,"LRNGrad");const Ot=e.ZSL.sizeFromShape(Et.shape),Dt=Et.shape[3],Lt=N.data.get(Et.dataId).values,Ut=N.data.get($.dataId).values,Ft=N.data.get(J.dataId).values,Kt=new Float32Array(Ot),Zt=Ot;for(let qt=0;qt<Zt;qt++){const ee=qt%Dt,Qt=qt-ee+Math.max(0,ee-gt),le=qt-ee+Math.min(Dt,ee+gt+1);let fe=0;for(let _e=Qt;_e<le;_e++)fe+=Math.pow(Ut[_e],2);fe=ft*fe+_t;for(let _e=Qt;_e<le;_e++){let $e=-2*ft*dt*Ut[_e]*Ft[qt]/fe;qt===_e&&($e+=Math.pow(fe,-dt)),$e*=Lt[qt],Kt[_e]+=$e}}return N.makeTensorInfo(Et.shape,$.dtype,Kt)}};var Oo=t(33438),so=t(44169);function go(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{reductionIndices:J,keepDims:Et}=Q,gt=N;let _t=$.shape;const ft=_t.length,dt=e.ZSL.parseAxisParam(J,_t);let Ot=dt;const Dt=e.C0T.getAxesPermutation(Ot,ft);let Lt=gt.data.get($.dataId).values;if(null!=Dt){const Qt=new Array(ft);for(let le=0;le<Qt.length;le++)Qt[le]=_t[Dt[le]];Lt=(0,so._)(Lt,_t,$.dtype,Dt,Qt),Ot=e.C0T.getInnerMostAxes(Ot.length,ft),_t=Qt}(0,l.C)($,"max"),e.C0T.assertAxesAreInnerMostDims("max",Ot,ft);const[Ut,Ft]=e.C0T.computeOutAndReduceShapes(_t,Ot),Kt=e.ZSL.sizeFromShape(Ft),Zt=(0,Oo.j)(Lt,Kt,Ut,$.dtype),qt=gt.write(Zt,Ut,$.dtype);let ee=Ut;return Et&&(ee=e.C0T.expandShapeToKeepDim(Ut,dt)),{dataId:qt,shape:ee,dtype:$.dtype}}const Ea={kernelName:e.VAI,backendName:"cpu",kernelFunc:go};var _a=t(40553);const xa={kernelName:e.t3d,backendName:"cpu",kernelFunc:function ya(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht;(0,l.C)($,"maxPool");const{filterSize:J,strides:Et,pad:gt,dimRoundingMode:_t}=Q;e.ZSL.assert(e.C0T.eitherStridesOrDilationsAreOne(Et,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${Et} and dilations '1'`);const dt=e.C0T.computePool2DInfo($.shape,J,Et,1,gt,_t);let Ot;if(1===dt.filterWidth&&1===dt.filterHeight&&e.ZSL.arraysEqual(dt.inShape,dt.outShape))Ot=(0,f.D)({inputs:{x:$},backend:N});else{const Dt=N.data.get($.dataId).values,Lt=e.ZSL.computeStrides($.shape),Ut=$n(Dt,0,$.dtype,Lt,dt,"max");Ot=N.makeTensorInfo(dt.outShape,$.dtype,Ut.values)}return Ot}},va={kernelName:e.ySp,backendName:"cpu",kernelFunc:function $o(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{filterSize:J,strides:Et,pad:gt,dimRoundingMode:_t,dataFormat:ft}=Q;(0,l.C)($,"maxPool3d");const dt=e.C0T.computePool3DInfo($.shape,J,Et,1,gt,_t,ft),Dt=Gn(N.data.get($.dataId).values,0,$.dtype,e.ZSL.computeStrides($.shape),dt,"max");return N.makeTensorInfo(Dt.shape,"float32",Dt.values)}},Ca={kernelName:e.cHb,backendName:"cpu",kernelFunc:function Ta(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,input:J}=ht,{filterSize:Et,strides:gt,pad:_t,dimRoundingMode:ft}=Q;(0,l.C)([$,J],"maxPool3DGrad");const dt=e.C0T.computePool3DInfo(J.shape,Et,gt,1,_t,ft),Dt=function jn(ut,ht){const N=(0,e.ra8)(ht.outShape,"int32"),Q=ht.strideDepth,$=ht.strideHeight,J=ht.strideWidth,Et=ht.dilationDepth,gt=ht.dilationHeight,_t=ht.dilationWidth,ft=ht.effectiveFilterDepth,dt=ht.effectiveFilterHeight,Ot=ht.effectiveFilterWidth,Dt=ht.padInfo.front,Lt=ht.padInfo.top,Ut=ht.padInfo.left;for(let Ft=0;Ft<ht.batchSize;++Ft)for(let Kt=0;Kt<ht.inChannels;++Kt)for(let Zt=0;Zt<ht.outDepth;++Zt){const qt=Zt*Q-Dt;let ee=qt;for(;ee<0;)ee+=Et;const Qt=Math.min(ht.inDepth,ft+qt);for(let le=0;le<ht.outHeight;++le){const fe=le*$-Lt;let _e=fe;for(;_e<0;)_e+=gt;const $e=Math.min(ht.inHeight,dt+fe);for(let Fe=0;Fe<ht.outWidth;++Fe){const Be=Fe*J-Ut;let Ke=Be;for(;Ke<0;)Ke+=_t;const Ze=Math.min(ht.inWidth,Ot+Be);let Ae=Number.NEGATIVE_INFINITY,we=-1;for(let Me=ee;Me<Qt;Me+=Et){const Ne=Me-qt;for(let Ve=_e;Ve<$e;Ve+=gt){const Re=Ve-fe;for(let ke=Ke;ke<Ze;ke+=_t){const Ye=ke-Be,He=ut.get(Ft,Me,Ve,ke,Kt);He>=Ae&&(Ae=He,we=Ne*dt*Ot+Re*dt+Ye)}}}N.set(we,Ft,Zt,le,Fe,Kt)}}}return N}(N.bufferSync(J),dt),Lt=dt.strideDepth,Ut=dt.strideHeight,Ft=dt.strideWidth,Kt=dt.dilationDepth,Zt=dt.dilationHeight,qt=dt.dilationWidth,ee=dt.effectiveFilterDepth,Qt=dt.effectiveFilterHeight,le=dt.effectiveFilterWidth,fe=ee-1-dt.padInfo.front,_e=le-1-dt.padInfo.left,$e=Qt-1-dt.padInfo.top,Fe=(0,e.ra8)(J.shape,"float32"),Be=N.bufferSync($);for(let Ke=0;Ke<dt.batchSize;++Ke)for(let Ze=0;Ze<dt.inChannels;++Ze)for(let Ae=0;Ae<dt.inDepth;++Ae)for(let we=0;we<dt.inHeight;++we)for(let Me=0;Me<dt.inWidth;++Me){const Ne=Ae-fe,Ve=we-$e,Re=Me-_e;let ke=0;for(let Ye=0;Ye<ee;Ye+=Kt){const He=(Ne+Ye)/Lt;if(!(He<0||He>=dt.outDepth||Math.floor(He)!==He))for(let rn=0;rn<Qt;rn+=Zt){const Xe=(Ve+rn)/Ut;if(!(Xe<0||Xe>=dt.outHeight||Math.floor(Xe)!==Xe))for(let ln=0;ln<le;ln+=qt){const Qe=(Re+ln)/Ft;if(Qe<0||Qe>=dt.outWidth||Math.floor(Qe)!==Qe)continue;const In=ee*Qt*le-1-Dt.get(Ke,He,Xe,Qe,Ze)===Ye*Qt*le+rn*le+ln?1:0;0!==In&&(ke+=Be.get(Ke,He,Xe,Qe,Ze)*In)}}}Fe.set(ke,Ke,Ae,we,Me,Ze)}return N.makeTensorInfo(Fe.shape,Fe.dtype,Fe.values)}},Ia={kernelName:e.RXX,backendName:"cpu",kernelFunc:function Da(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{dy:$,input:J,output:Et}=ht,gt=J;(0,l.C)([J,Et],"maxPoolGrad");const{filterSize:_t,strides:ft,pad:dt,dimRoundingMode:Ot}=Q,Dt=e.C0T.computePool2DInfo(gt.shape,_t,ft,1,dt,Ot),Lt=N.data.get(gt.dataId).values,Ut=(0,e.ra8)(Dt.outShape,gt.dtype,wn(Lt,gt.shape,gt.dtype,Dt).values),Ft=Dt.strideHeight,Kt=Dt.strideWidth,Zt=Dt.dilationHeight,qt=Dt.dilationWidth,ee=Dt.effectiveFilterHeight,Qt=Dt.effectiveFilterWidth,le=Qt-1-Dt.padInfo.left,fe=ee-1-Dt.padInfo.top,_e=(0,e.ra8)(gt.shape,"float32"),$e=N.data.get($.dataId).values,Fe=(0,e.ra8)($.shape,"float32",$e);for(let Be=0;Be<Dt.batchSize;++Be)for(let Ke=0;Ke<Dt.inChannels;++Ke)for(let Ze=0;Ze<Dt.inHeight;++Ze)for(let Ae=0;Ae<Dt.inWidth;++Ae){const we=Ze-fe,Me=Ae-le;let Ne=0;for(let Ve=0;Ve<ee;Ve+=Zt){const Re=(we+Ve)/Ft;if(!(Re<0||Re>=Dt.outHeight||Math.floor(Re)!==Re))for(let ke=0;ke<Qt;ke+=qt){const Ye=(Me+ke)/Kt;if(Ye<0||Ye>=Dt.outWidth||Math.floor(Ye)!==Ye)continue;const Xe=ee*Qt-1-Ut.get(Be,Re,Ye,Ke)===Ve*Qt+ke?1:0;0!==Xe&&(Ne+=Fe.get(Be,Re,Ye,Ke)*Xe)}}_e.set(Ne,Be,Ze,Ae,Ke)}return N.makeTensorInfo(_e.shape,_e.dtype,_e.values)}},Oa={kernelName:e.TL8,backendName:"cpu",kernelFunc:({inputs:ut,attrs:ht,backend:N})=>{const{x:Q}=ut,{filterSize:$,strides:J,pad:Et,includeBatchInIndex:gt}=ht,_t=N;(0,l.C)(Q,"MaxPoolWithArgmax");const ft=_t.data.get(Q.dataId).values,dt=e.C0T.computePool2DInfo(Q.shape,$,J,[1,1],Et),[Ot,Dt]=function Pa(ut,ht,N,Q,$){const Et=$n(ut,0,N,e.ZSL.computeStrides(ht),$,"max"),gt=wn(ut,ht,N,$,!0,Q);return[Et.values,gt.values]}(ft,Q.shape,Q.dtype,gt,dt),Lt=_t.write(Ot,dt.outShape,Q.dtype),Ut=_t.write(Dt,dt.outShape,Q.dtype);return[{dataId:Lt,shape:dt.outShape,dtype:Q.dtype},{dataId:Ut,shape:dt.outShape,dtype:"int32"}]}},Aa={kernelName:e.g5A,backendName:"cpu",kernelFunc:function Sa(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,keepDims:Et}=Q,gt=e.ZSL.parseAxisParam(J,$.shape),ft=e.C0T.computeOutAndReduceShapes($.shape,gt)[1],dt=e.ZSL.sizeFromShape(ft),Ot=[],Dt=N.makeTensorInfo([],"float32",new Float32Array([dt]));Ot.push(Dt);const Lt=(0,We.wg)({inputs:{x:$},backend:N,attrs:{dtype:"float32"}});Ot.push(Lt);const Ut=ur({inputs:{a:Lt,b:Dt},backend:N});Ot.push(Ut);const Ft=st({inputs:{x:Ut},backend:N,attrs:{axis:J,keepDims:Et}});return Ot.forEach(Kt=>N.disposeIntermediateTensorInfo(Kt)),Ft}},Ma={kernelName:e.lNG,backendName:"cpu",kernelFunc:function ba(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{axis:J,keepDims:Et}=Q;(0,l.C)($,"min");const gt=e.ZSL.parseAxisParam(J,$.shape);let _t=gt;const ft=e.C0T.getAxesPermutation(_t,$.shape.length);let dt=$;null!=ft&&(dt=(0,yt.m)({inputs:{x:$},backend:N,attrs:{perm:ft}}),_t=e.C0T.getInnerMostAxes(_t.length,$.shape.length)),e.C0T.assertAxesAreInnerMostDims("min",_t,dt.shape.length);const[Ot,Dt]=e.C0T.computeOutAndReduceShapes(dt.shape,_t),Lt=e.ZSL.sizeFromShape(Dt),Ut=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(Ot),dt.dtype),Ft=N.data.get(dt.dataId).values;for(let Zt=0;Zt<Ut.length;++Zt){const qt=Zt*Lt;let ee=Ft[qt];for(let Qt=0;Qt<Lt;++Qt){const le=Ft[qt+Qt];(Number.isNaN(le)||le<ee)&&(ee=le)}Ut[Zt]=ee}null!=ft&&N.disposeIntermediateTensorInfo(dt);const Kt=N.makeTensorInfo(Ot,dt.dtype,Ut);if(Et){const qt=A({inputs:{x:Kt},backend:N,attrs:{shape:e.C0T.expandShapeToKeepDim(Ot,gt)}});return N.disposeIntermediateTensorInfo(Kt),qt}return Kt}};var Na=t(32747);const La={kernelName:e.x7F,backendName:"cpu",kernelFunc:function Ra(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{paddings:J,mode:Et}=Q;(0,l.C)($,"mirrorPad");const gt=J.map((ee,Qt)=>ee[0]+$.shape[Qt]+ee[1]),_t=J.map(ee=>ee[0]),ft=J.map((ee,Qt)=>ee[0]+$.shape[Qt]),dt="reflect"===Et?0:1,Ot=N.data.get($.dataId).values,Dt=$.shape.length,Lt=e.ZSL.computeStrides($.shape),Ut=e.ZSL.sizeFromShape(gt),Ft=gt.length,Kt=e.ZSL.computeStrides(gt),Zt=e.ZSL.getTypedArrayFromDType($.dtype,Ut);for(let ee=0;ee<Ut;ee++){let Qt=e.ZSL.indexToLoc(ee,Ft,Kt);for(let fe=0;fe<Ft;fe++)Qt[fe]<_t[fe]?Qt[fe]=2*_t[fe]-Qt[fe]-dt:Qt[fe]>=ft[fe]&&(Qt[fe]=2*(ft[fe]-1)-Qt[fe]+dt);Qt=Qt.map((fe,_e)=>fe-_t[_e]);const le=e.ZSL.locToIndex(Qt,Dt,Lt);Zt[ee]=Ot[le]}return{dataId:N.write(Zt,gt,$.dtype),shape:gt,dtype:$.dtype}}},$a=(0,d.Z)((ut,ht)=>{const N=ut%ht;return ut<0&&ht<0||ut>=0&&ht>=0?N:(N+ht)%ht}),wa=(0,pe.j)(e.BLA,$a),Ba={kernelName:e.BLA,backendName:"cpu",kernelFunc:wa};var ka=t(48814);function wo(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{logits:$}=ht,{dim:J}=Q,Et=$.shape.length;let gt=J;if(-1===gt&&(gt=Et-1),gt!==Et-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${Et} and dim was ${gt}`);const _t=e.ZSL.parseAxisParam([gt],$.shape),ft=go({inputs:{x:$},backend:N,attrs:{reductionIndices:_t,keepDims:!1}}),dt=e.C0T.expandShapeToKeepDim(ft.shape,_t),Ot=A({inputs:{x:ft},backend:N,attrs:{shape:dt}}),Dt=(0,dr.jb)({inputs:{a:$,b:Ot},backend:N}),Lt=(0,fs.oN)({inputs:{x:Dt},backend:N}),Ut=st({inputs:{x:Lt},backend:N,attrs:{axis:_t,keepDims:!1}}),Ft=A({inputs:{x:Ut},backend:N,attrs:{shape:dt}}),Kt=ur({inputs:{a:Lt,b:Ft},backend:N});return N.disposeIntermediateTensorInfo(ft),N.disposeIntermediateTensorInfo(Ot),N.disposeIntermediateTensorInfo(Dt),N.disposeIntermediateTensorInfo(Lt),N.disposeIntermediateTensorInfo(Ut),N.disposeIntermediateTensorInfo(Ft),Kt}const Fa={kernelName:e.rFG,backendName:"cpu",kernelFunc:wo},Ua={kernelName:e.WT3,backendName:"cpu",kernelFunc:function Wa(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{logits:$}=ht,{numSamples:J,seed:Et,normalized:gt}=Q;(0,l.C)($,"multinomial");const _t=gt?$:wo({inputs:{logits:$},backend:N,attrs:{dim:-1}}),ft=_t.shape[0],dt=_t.shape[1],Ot=N.data.get(_t.dataId).values,Dt=[ft,J],Lt=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(Dt),"int32");for(let Ut=0;Ut<ft;++Ut){const Ft=Ut*dt,Kt=new Float32Array(dt-1);Kt[0]=Ot[Ft];for(let ee=1;ee<Kt.length;++ee)Kt[ee]=Kt[ee-1]+Ot[Ft+ee];const Zt=ka.alea(Et.toString()),qt=Ut*J;for(let ee=0;ee<J;++ee){const Qt=Zt();Lt[qt+ee]=Kt.length;for(let le=0;le<Kt.length;le++)if(Qt<Kt[le]){Lt[qt+ee]=le;break}}}return gt||N.disposeIntermediateTensorInfo(_t),N.makeTensorInfo(Dt,"int32",Lt)}};var Va=t(86705);const Ka=e.kpo.c7,Ga={kernelName:e.SDM,backendName:"cpu",kernelFunc:function za(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{boxes:$,scores:J}=ht,{maxOutputSize:Et,iouThreshold:gt,scoreThreshold:_t}=Q;(0,l.C)($,"NonMaxSuppression");const ft=N.data.get($.dataId).values,dt=N.data.get(J.dataId).values,{selectedIndices:Ot}=Ka(ft,dt,Et,gt,_t);return N.makeTensorInfo([Ot.length],"int32",new Int32Array(Ot))}},Ha=e.kpo.ZS,Za={kernelName:e.Zl4,backendName:"cpu",kernelFunc:function ja(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{boxes:$,scores:J}=ht,{maxOutputSize:Et,iouThreshold:gt,scoreThreshold:_t,padToMaxOutputSize:ft}=Q;(0,l.C)($,"NonMaxSuppressionPadded");const dt=N.data.get($.dataId).values,Ot=N.data.get(J.dataId).values,{selectedIndices:Dt,validOutputs:Lt}=Ha(dt,Ot,Et,gt,_t,ft);return[N.makeTensorInfo([Dt.length],"int32",new Int32Array(Dt)),N.makeTensorInfo([],"int32",new Int32Array([Lt]))]}},Ya=e.kpo.ut,Bo={kernelName:e.e0f,backendName:"cpu",kernelFunc:function Xa(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{boxes:$,scores:J}=ht,{maxOutputSize:Et,iouThreshold:gt,scoreThreshold:_t,softNmsSigma:ft}=Q;(0,l.C)($,"NonMaxSuppressionWithScore");const dt=N.data.get($.dataId).values,Ot=N.data.get(J.dataId).values,Dt=Et,Lt=gt,Ut=_t,Ft=ft,{selectedIndices:Kt,selectedScores:Zt}=Ya(dt,Ot,Dt,Lt,Ut,Ft);return[N.makeTensorInfo([Kt.length],"int32",new Int32Array(Kt)),N.makeTensorInfo([Zt.length],"float32",new Float32Array(Zt))]}};var Qa=t(13432);const qa={kernelName:e.urI,backendName:"cpu",kernelFunc:function Ja(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{indices:$}=ht,{dtype:J,depth:Et,onValue:gt,offValue:_t}=Q;(0,l.C)($,"oneHot");const ft=e.ZSL.sizeFromShape($.shape),dt=new Float32Array(ft*Et);dt.fill(_t);const Ot=N.data.get($.dataId).values;for(let Dt=0;Dt<ft;++Dt)Ot[Dt]>=0&&Ot[Dt]<Et&&(dt[Dt*Et+Ot[Dt]]=gt);return N.makeTensorInfo([...$.shape,Et],J,dt)}};function ro(ut){const{inputs:ht,backend:N}=ut,{x:Q}=ht;if("string"===Q.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===Q.dtype){const $=(0,An.x)({inputs:{input:Q},backend:N}),J=ro({inputs:{x:$},backend:N}),Et=Ge({inputs:{input:Q},backend:N}),gt=ro({inputs:{x:Et},backend:N}),_t=(0,Ce.f)({inputs:{real:J,imag:gt},backend:N});return N.disposeIntermediateTensorInfo($),N.disposeIntermediateTensorInfo(J),N.disposeIntermediateTensorInfo(Et),N.disposeIntermediateTensorInfo(gt),_t}return Ar({backend:N,attrs:{shape:Q.shape,value:0,dtype:Q.dtype}})}const ti={kernelName:e.xJ3,backendName:"cpu",kernelFunc:ro},ei={kernelName:e.LWX,backendName:"cpu",kernelFunc:function ko(ut){const{inputs:ht,backend:N}=ut,{x:Q}=ht;if("string"===Q.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===Q.dtype){const $=(0,An.x)({inputs:{input:Q},backend:N}),J=ko({inputs:{x:$},backend:N}),Et=Ge({inputs:{input:Q},backend:N}),gt=ro({inputs:{x:Et},backend:N}),_t=(0,Ce.f)({inputs:{real:J,imag:gt},backend:N});return N.disposeIntermediateTensorInfo($),N.disposeIntermediateTensorInfo(J),N.disposeIntermediateTensorInfo(Et),N.disposeIntermediateTensorInfo(gt),_t}return Ar({backend:N,attrs:{shape:Q.shape,value:1,dtype:Q.dtype}})}};function Fo(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{axis:$}=Q;if(1===ht.length)return Bn({inputs:{input:ht[0]},backend:N,attrs:{dim:$}});const J=ht[0].shape,Et=ht[0].dtype;ht.forEach(dt=>{e.ZSL.assertShapesMatch(J,dt.shape,"All tensors passed to stack must have matching shapes"),e.ZSL.assert(Et===dt.dtype,()=>"All tensors passed to stack must have matching dtypes")});const gt=[],ft=Vn({inputs:ht.map(dt=>{const Ot=Bn({inputs:{input:dt},backend:N,attrs:{dim:$}});return gt.push(Ot),Ot}),backend:N,attrs:{axis:$}});return gt.forEach(dt=>N.disposeIntermediateTensorInfo(dt)),ft}const ni={kernelName:e.mM$,backendName:"cpu",kernelFunc:Fo},Wo={kernelName:e.ODT,backendName:"cpu",kernelFunc:function si(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{paddings:J,constantValue:Et}=Q;(0,l.C)($,"pad");const gt=J.map((qt,ee)=>qt[0]+$.shape[ee]+qt[1]),_t=J.map(qt=>qt[0]),ft=N.data.get($.dataId).values,dt=e.ZSL.sizeFromShape($.shape),Ot=$.shape.length,Dt=e.ZSL.computeStrides($.shape),Lt=e.ZSL.sizeFromShape(gt),Ut=gt.length,Ft=e.ZSL.computeStrides(gt),Kt=e.ZSL.getTypedArrayFromDType($.dtype,Lt);0!==Et&&Kt.fill(Et);for(let qt=0;qt<dt;qt++){const Qt=e.ZSL.indexToLoc(qt,Ot,Dt).map((fe,_e)=>fe+_t[_e]);Kt[e.ZSL.locToIndex(Qt,Ut,Ft)]=ft[qt]}return{dataId:N.write(Kt,gt,$.dtype),shape:gt,dtype:$.dtype}}},ri=(0,d.Z)((ut,ht)=>Math.pow(ut,ht)),oi=(0,pe.j)(e.pyJ,ri),So={kernelName:e.pyJ,backendName:"cpu",kernelFunc:oi};var ai=t(88054),Uo=t(6567);const ii={kernelName:e.oJ2,backendName:"cpu",kernelFunc:function ys(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{paramsNestedSplits:$,paramsDenseValues:J,indices:Et}=ht,{outputRaggedRank:gt}=Q,_t=$.map(Zt=>N.data.get(Zt.dataId).values),ft=$.map(Zt=>Zt.shape),dt=N.data.get(J.dataId).values,Ot=N.data.get(Et.dataId).values,[Dt,Lt,Ut]=(0,Uo.u)(_t,ft,dt,J.shape,J.dtype,Ot,Et.shape,gt),Ft=Dt.map(Zt=>N.makeTensorInfo([Zt.length],"int32",Zt)),Kt=N.makeTensorInfo(Ut,J.dtype,Lt);return Ft.concat([Kt])}};var li=t(8161);const ui={kernelName:e.CQC,backendName:"cpu",kernelFunc:function Vo(ut){const{inputs:ht,backend:N}=ut,{starts:Q,limits:$,deltas:J}=ht,Et=N.data.get(Q.dataId).values,gt=N.data.get($.dataId).values,_t=N.data.get(J.dataId).values,[ft,dt]=(0,li._)(Et,Q.shape,Q.dtype,gt,$.shape,_t,J.shape);return[N.makeTensorInfo([ft.length],"int32",ft),N.makeTensorInfo([dt.length],Q.dtype,dt)]}};var ci=t(673);const Ko={kernelName:e.mH5,backendName:"cpu",kernelFunc:function di(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{shape:$,values:J,defaultValue:Et,rowPartitionTensors:gt}=ht,{rowPartitionTypes:_t}=Q,ft=N.data.get($.dataId).values,dt=N.data.get(J.dataId).values,Ot=N.data.get(Et.dataId).values,Dt=gt.map(Kt=>N.data.get(Kt.dataId).values),Lt=gt.map(Kt=>Kt.shape),[Ut,Ft]=(0,ci.K)(ft,$.shape,dt,J.shape,J.dtype,Ot,Et.shape,Dt,Lt,_t);return N.makeTensorInfo(Ut,J.dtype,Ft)}};var pi=t(6251);const zo={kernelName:e.Q6t,backendName:"cpu",kernelFunc:function hi(ut){const{backend:ht,attrs:N}=ut,{start:Q,stop:$,dtype:J,step:Et}=N,gt=(0,pi.q)(Q,$,Et,J);return ht.makeTensorInfo([gt.length],J,gt)}},Go=(0,y.v)(e.huO,ut=>1/ut),js={kernelName:e.huO,backendName:"cpu",kernelFunc:Go},fi={kernelName:e.hgw,backendName:"cpu",kernelFunc:function As(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{images:$}=ht,{alignCorners:J,halfPixelCenters:Et,size:gt}=Q;(0,l.C)($,"resizeBilinear");const _t=e.ZSL.computeStrides($.shape),[ft,dt]=gt,[Ot,Dt,Lt,Ut]=$.shape,Ft=N.data.get($.dataId).values,Kt=new Float32Array(e.ZSL.sizeFromShape([Ot,ft,dt,Ut])),Zt=[J&&ft>1?Dt-1:Dt,J&&dt>1?Lt-1:Lt],qt=[J&&ft>1?ft-1:ft,J&&dt>1?dt-1:dt];let ee=0;const Qt=Zt[0]/qt[0],le=Zt[1]/qt[1];for(let fe=0;fe<Ot;fe++)for(let _e=0;_e<ft;_e++){let $e;$e=Et?Qt*(_e+.5)-.5:Qt*_e;const Fe=Math.max(0,Math.floor($e)),Be=$e-Fe,Ke=Math.min(Dt-1,Math.ceil($e)),Ze=fe*_t[0]+Fe*_t[1],Ae=fe*_t[0]+Ke*_t[1];for(let we=0;we<dt;we++){let Me;Me=Et?le*(we+.5)-.5:le*we;const Ne=Math.max(0,Math.floor(Me)),Ve=Me-Ne,Re=Math.min(Lt-1,Math.ceil(Me)),ke=Ze+Ne*_t[2],Ye=Ae+Ne*_t[2],He=Ze+Re*_t[2],rn=Ae+Re*_t[2];for(let Xe=0;Xe<Ut;Xe++){const ln=Ft[ke+Xe],Qe=Ft[Ye+Xe],In=ln+(Ft[He+Xe]-ln)*Ve;Kt[ee++]=In+(Qe+(Ft[rn+Xe]-Qe)*Ve-In)*Be}}}return N.makeTensorInfo([Ot,ft,dt,Ut],"float32",Kt)}},Pl={kernelName:e.FCQ,backendName:"cpu",kernelFunc:function Ho(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{images:$,dy:J}=ht,{alignCorners:Et}=Q;(0,l.C)([J,$],"resizeBilinearGrad");const gt=e.ZSL.computeStrides($.shape),[_t,ft,dt,Ot]=$.shape,[,Dt,Lt]=J.shape,Ut=new Float32Array(_t*ft*dt*Ot),Ft=[Et&&Dt>1?ft-1:ft,Et&&Lt>1?dt-1:dt],Kt=[Et&&Dt>1?Dt-1:Dt,Et&&Lt>1?Lt-1:Lt],Zt=Ft[0]/Kt[0],qt=Ft[1]/Kt[1],ee=N.data.get(J.dataId).values;let Qt=0;for(let le=0;le<_t;le++){const fe=le*gt[0];for(let _e=0;_e<Dt;_e++){const $e=_e*Zt,Fe=Math.floor($e),Be=Math.min(Math.ceil($e),ft-1),Ke=fe+Fe*gt[1],Ze=fe+Be*gt[1],Ae=$e-Fe,we=1-Ae;for(let Me=0;Me<Lt;Me++){const Ne=Me*qt,Ve=Math.floor(Ne),Re=Math.min(Math.ceil(Ne),dt-1),ke=Ne-Ve,Ye=1-ke,He=Ke+Ve*gt[2],rn=Ke+Re*gt[2],Xe=Ze+Ve*gt[2],ln=Ze+Re*gt[2],Qe=we*Ye,pn=we*ke,En=Ae*Ye,In=Ae*ke;for(let Tn=0;Tn<Ot;Tn++){const bn=ee[Qt++];Ut[He+Tn]+=bn*Qe,Ut[rn+Tn]+=bn*pn,Ut[Xe+Tn]+=bn*En,Ut[ln+Tn]+=bn*In}}}}return N.makeTensorInfo([_t,dt,ft,Ot],"float32",Ut)}},gi={kernelName:e.jOE,backendName:"cpu",kernelFunc:function mi(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{images:$}=ht,{alignCorners:J,halfPixelCenters:Et,size:gt}=Q;(0,l.C)($,"resizeNearestNeighbor");const _t=e.ZSL.computeStrides($.shape),[ft,dt]=gt,[Ot,Dt,Lt,Ut]=$.shape,Ft=N.data.get($.dataId).values,Kt=new Float32Array(Ot*ft*dt*Ut),Zt=[J&&ft>1?Dt-1:Dt,J&&dt>1?Lt-1:Lt],qt=[J&&ft>1?ft-1:ft,J&&dt>1?dt-1:dt],ee=Zt[0]/qt[0],Qt=Zt[1]/qt[1];let le=0;for(let fe=0;fe<Ot;fe++){const _e=fe*_t[0];for(let $e=0;$e<ft;$e++){const Fe=Et?ee*($e+.5):ee*$e;let Be=Math.min(Dt-1,J?Math.round(Fe):Math.floor(Fe));Et&&(Be=Math.max(0,Be));const Ke=_e+Be*_t[1];for(let Ze=0;Ze<dt;Ze++){const Ae=Et?Qt*(Ze+.5):Qt*Ze;let we=Math.min(Lt-1,J?Math.round(Ae):Math.floor(Ae));Et&&(we=Math.max(0,we));const Me=Ke+we*_t[2];for(let Ne=0;Ne<Ut;Ne++)Kt[le++]=Ft[Me+Ne]}}}return N.makeTensorInfo([Ot,ft,dt,Ut],$.dtype,Kt)}},hr={kernelName:e.XQy,backendName:"cpu",kernelFunc:function Ei(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{images:$,dy:J}=ht,{alignCorners:Et}=Q;(0,l.C)([J,$],"resizeNearestNeighborGrad");const gt=e.ZSL.computeStrides($.shape),_t=e.ZSL.computeStrides(J.shape),[ft,dt,Ot,Dt]=$.shape,[,Lt,Ut]=J.shape,Ft=new Float32Array(ft*dt*Ot*Dt),Kt=N.data.get(J.dataId).values,Zt=[Et&&Lt>1?dt-1:dt,Et&&Ut>1?Ot-1:Ot],qt=[Et&&Lt>1?Lt-1:Lt,Et&&Ut>1?Ut-1:Ut],ee=Zt[0]/qt[0],Qt=Zt[1]/qt[1],le=1/ee,fe=1/Qt,_e=2*Math.ceil(le)+2,$e=2*Math.ceil(fe)+2;for(let Fe=0;Fe<ft;Fe++){const Be=Fe*gt[0];for(let Ke=0;Ke<dt;Ke++){const Ze=Be+Ke*gt[1],Ae=Math.floor(Ke*le),we=Math.floor(Ae-_e/2);for(let Me=0;Me<Ot;Me++){const Ne=Ze+Me*gt[2],Ve=Math.floor(Me*fe),Re=Math.floor(Ve-$e/2);for(let ke=0;ke<Dt;ke++){let Ye=0;for(let He=0;He<_e;He++){const rn=He+we;if(rn<0||rn>=Lt)continue;const Xe=Be+rn*_t[1],ln=rn*ee;if(Ke===Math.min(dt-1,Et?Math.round(ln):Math.floor(ln)))for(let pn=0;pn<$e;pn++){const En=pn+Re;if(En<0||En>=Ut)continue;const In=Xe+En*_t[2],Tn=En*Qt;Me===Math.min(Ot-1,Et?Math.round(Tn):Math.floor(Tn))&&(Ye+=Kt[In+ke])}}Ft[Ne+ke]=Ye}}}}return N.makeTensorInfo($.shape,$.dtype,Ft)}},yi={kernelName:e.D7i,backendName:"cpu",kernelFunc:function _i(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{dims:J}=Q;(0,l.C)($,"reverse");const Et=$.shape.length,gt=e.ZSL.parseAxisParam(J,$.shape);if(0===Et)return(0,f.D)({inputs:{x:$},backend:N});const _t=new e.ylz($.shape,$.dtype),ft=N.bufferSync($);for(let dt=0;dt<_t.size;dt++){const Ot=_t.indexToLoc(dt),Dt=Ot.slice();gt.forEach(Lt=>Dt[Lt]=$.shape[Lt]-1-Dt[Lt]),_t.set(ft.get(...Dt),...Ot)}return N.makeTensorInfo(_t.shape,_t.dtype,_t.values)}},xi={kernelName:e.BK4,backendName:"cpu",kernelFunc:({inputs:ut,attrs:ht,backend:N})=>{const{image:Q}=ut,{radians:$,fillValue:J,center:Et}=ht,gt=N,_t=e.ZSL.getTypedArrayFromDType(Q.dtype,e.ZSL.sizeFromShape(Q.shape)),[ft,dt,Ot,Dt]=Q.shape,[Lt,Ut]=e.C0T.getImageCenter(Et,dt,Ot),Kt=Math.sin($),Zt=Math.cos($),qt=gt.data.get(Q.dataId).values;for(let Qt=0;Qt<ft;Qt++){const le=Qt*Ot*dt*Dt;for(let fe=0;fe<dt;fe++){const _e=fe*(Ot*Dt);for(let $e=0;$e<Ot;$e++){const Fe=$e*Dt;for(let Be=0;Be<Dt;Be++){const Ke=[ft,fe,$e,Be],Ze=Ke[2],Ae=Ke[1];let we=(Ze-Lt)*Zt-(Ae-Ut)*Kt,Me=(Ze-Lt)*Kt+(Ae-Ut)*Zt;we=Math.round(we+Lt),Me=Math.round(Me+Ut);let Ne=J;"number"!=typeof J&&(Ne=3===Be?255:J[Be]),we>=0&&we<Ot&&Me>=0&&Me<dt&&(Ne=qt[le+Me*(Ot*Dt)+we*Dt+Be]),_t[le+_e+Fe+Be]=Ne}}}}return{dataId:gt.write(_t,Q.shape,Q.dtype),shape:Q.shape,dtype:Q.dtype}}},vi=(0,y.v)(e.hVg,ut=>{const ht=Math.floor(ut);return ut-ht<.5?Math.floor(ut):ut-ht>.5?Math.ceil(ut):ht%2==0?ht:ht+1}),Ti={kernelName:e.hVg,backendName:"cpu",kernelFunc:vi};var Ci=t(36499),bs=t(94014);const Ii={kernelName:e.pJc,backendName:"cpu",kernelFunc:function Di(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{indices:$,updates:J}=ht,{shape:Et}=Q,{sliceRank:gt,numUpdates:_t,sliceSize:ft,strides:dt,outputSize:Ot}=e.C0T.calculateShapes(J,$,Et),Lt=N.bufferSync($),Ut=N.bufferSync(J),Ft=(0,bs.b)(Lt,Ut,Et,Ot,ft,_t,gt,dt,0,!0);return N.makeTensorInfo(Et,Ft.dtype,Ft.values)}};function Pi(ut,ht){let N=0,Q=ut.length,$=0;for(;N<Q;)$=Math.floor((N+Q)/2),ut[$]<ht?N=$+1:Q=$;return Q}function Oi(ut,ht){let N=0,Q=ut.length,$=0;for(;N<Q;)$=Math.floor((N+Q)/2),ut[$]<=ht?N=$+1:Q=$;return Q}const Ai={kernelName:e.uWl,backendName:"cpu",kernelFunc:function Si(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{sortedSequence:$,values:J}=ht,{side:Et}=Q,ft=function Eo(ut,ht,N,Q,$,J){const Et=e.ZSL.getArrayFromDType("int32",N*$);for(let gt=0;gt<N;++gt){const _t=ut.slice(gt*Q,(gt+1)*Q),ft=gt*$;for(let dt=0;dt<$;++dt)Et[ft+dt]="left"===J?Pi(_t,ht[dt+ft]):Oi(_t,ht[dt+ft])}return Et}(N.data.get($.dataId).values,N.data.get(J.dataId).values,$.shape[0],$.shape[1],J.shape[1],Et);return N.makeTensorInfo(J.shape,"int32",ft)}},Mi={kernelName:e.l6P,backendName:"cpu",kernelFunc:function bi(ut){const{inputs:ht,backend:N}=ut,{condition:Q,t:$,e:J}=ht;(0,l.C)([Q,$,J],"select");const Et=Q.shape.length,gt=N.data.get(Q.dataId).values,_t=N.data.get($.dataId).values,ft=N.data.get(J.dataId).values,dt=(0,e.TuY)($.dtype,J.dtype),Ot=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape($.shape),dt);let Dt=0;const Lt=0===Et||Et>1||1===$.shape.length?1:e.ZSL.sizeFromShape($.shape.slice(1));for(let Ut=0;Ut<gt.length;Ut++)for(let Ft=0;Ft<Lt;Ft++)Ot[Dt++]=1===gt[Ut]?_t[Ut]:ft[Ut];return N.makeTensorInfo($.shape,dt,Ot)}},Ni=e.C0T.SELU_SCALEALPHA,Ri=e.C0T.SELU_SCALE,Li=(0,y.v)(e.u$b,ut=>ut>=0?Ri*ut:Ni*(Math.exp(ut)-1)),$i={kernelName:e.u$b,backendName:"cpu",kernelFunc:Li},Ol=(0,y.v)(e.YVe,ut=>ut<0?-1:ut>0?1:0),Ao={kernelName:e.YVe,backendName:"cpu",kernelFunc:Ol},Sl=(0,y.v)(e.hql,ut=>Math.sin(ut)),Nr={kernelName:e.hql,backendName:"cpu",kernelFunc:Sl},Rr=(0,y.v)(e.J3C,ut=>Math.sinh(ut)),Al={kernelName:e.J3C,backendName:"cpu",kernelFunc:Rr},Lr=Math.log(1.1920928955078125e-7)+2,Ds=(0,y.v)(e.Fin,ut=>{const ht=ut>-Lr,N=ut<Lr,Q=Math.exp(ut);let $;return $=N?Q:ht?ut:Math.log(1+Q),$}),wi={kernelName:e.Fin,backendName:"cpu",kernelFunc:Ds},Bi={kernelName:e.A8B,backendName:"cpu",kernelFunc:function fr(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{blockShape:J,paddings:Et}=Q;(0,l.C)([$],"spaceToBatchND");const gt=e.ZSL.sizeFromShape(J),_t=[[0,0]];_t.push(...Et);for(let fe=1+J.length;fe<$.shape.length;++fe)_t.push([0,0]);const ft=Wo.kernelFunc({inputs:{x:$},backend:N,attrs:{paddings:_t,constantValue:0}}),dt=e.C0T.getReshaped(ft.shape,J,gt,!1),Ot=e.C0T.getPermuted(dt.length,J.length,!1),Dt=e.C0T.getReshapedPermuted(ft.shape,J,gt,!1),Ft=A({inputs:{x:ft},backend:N,attrs:{shape:dt}}),qt=(0,yt.m)({inputs:{x:Ft},backend:N,attrs:{perm:Ot}}),le=A({inputs:{x:qt},backend:N,attrs:{shape:Dt}});return N.disposeIntermediateTensorInfo(ft),N.disposeIntermediateTensorInfo(Ft),N.disposeIntermediateTensorInfo(qt),le}};var jo=t(20273);const ki={kernelName:e.C8s,backendName:"cpu",kernelFunc:function Zo(ut){const{inputs:ht,backend:N}=ut,{indices:Q,values:$,denseShape:J,defaultValue:Et}=ht;if(1!==J.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${J.shape}`);if(2!==Q.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${Q.shape}`);if(1!==$.shape.length)throw new Error(`Values must be a vector, saw:\n        ${$.shape}`);if(0!==Et.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${Et.shape}`);const gt=N.data.get(Q.dataId).values,_t=N.data.get($.dataId).values,ft=N.data.get(J.dataId).values,dt=N.data.get(Et.dataId).values[0],[Ot,Dt,Lt,Ut,Ft]=(0,jo.y)(gt,Q.shape,Q.dtype,_t,$.dtype,ft,dt);return[N.makeTensorInfo(Dt,Q.dtype,Ot),N.makeTensorInfo([Dt[0]],$.dtype,Lt),N.makeTensorInfo([Ut.length],"bool",new Uint8Array(Ut.map(Kt=>Number(Kt)))),N.makeTensorInfo([Ft.length],Q.dtype,new Int32Array(Ft))]}};var Fi=t(35298);const Xo={kernelName:e.BoJ,backendName:"cpu",kernelFunc:function Yo(ut){const{inputs:ht,backend:N}=ut,{inputIndices:Q,inputShape:$,newShape:J}=ht;if(2!==Q.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${Q.shape}`);if(1!==$.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${$.shape}`);if(1!==J.shape.length)throw new Error(`Target shape should be a vector but received shape ${J.shape}`);const Et=Array.from(N.data.get($.dataId).values),gt=N.data.get(Q.dataId).values,_t=Array.from(N.data.get(J.dataId).values),[ft,dt,Ot]=(0,Fi.l)(gt,Q.shape,Q.dtype,Et,_t);return[N.makeTensorInfo(dt,Q.dtype,ft),N.makeTensorInfo([Ot.length],J.dtype,new Int32Array(Ot))]}};var Qo=t(19454);const jr={kernelName:e.L6G,backendName:"cpu",kernelFunc:function Wi(ut){const{inputs:ht,backend:N}=ut,{data:Q,indices:$,segmentIds:J}=ht;if(Q.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==$.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${$.shape}`);if(1!==J.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${J.shape}`);if($.shape[0]!==J.shape[0])throw new Error("segmentIds and indices should have same size.");const Et=N.data.get(Q.dataId).values,gt=N.data.get($.dataId).values,_t=N.data.get(J.dataId).values,[ft,dt]=(0,Qo.z)(Et,Q.shape,Q.dtype,gt,_t,!0);return N.makeTensorInfo(dt,Q.dtype,ft)}},gs={kernelName:e.DvZ,backendName:"cpu",kernelFunc:function kn(ut){const{inputs:ht,backend:N}=ut,{data:Q,indices:$,segmentIds:J}=ht;if(Q.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==$.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${$.shape}`);if(1!==J.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${J.shape}`);if($.shape[0]!==J.shape[0])throw new Error("segmentIds and indices should have same size.");const Et=N.data.get(Q.dataId).values,gt=N.data.get($.dataId).values,_t=N.data.get(J.dataId).values,[ft,dt]=(0,Qo.z)(Et,Q.shape,Q.dtype,gt,_t);return N.makeTensorInfo(dt,Q.dtype,ft)}},Jo={kernelName:e.jgd,backendName:"cpu",kernelFunc:function oo(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{sparseIndices:$,sparseValues:J,defaultValue:Et}=ht,{outputShape:gt}=Q,{sliceRank:_t,numUpdates:ft,sliceSize:dt,strides:Ot,outputSize:Dt}=e.C0T.calculateShapes(J,$,gt),Lt=!1,Ut=N.bufferSync($);let Ft;switch(J.dtype){case"bool":{const Kt=N.bufferSync(J),Zt=!!N.data.get(Et.dataId).values[0];Ft=(0,bs.b)(Ut,Kt,gt,Dt,dt,ft,_t,Ot,Zt,Lt);break}case"float32":{const Kt=N.bufferSync(J),Zt=N.data.get(Et.dataId).values[0];Ft=(0,bs.b)(Ut,Kt,gt,Dt,dt,ft,_t,Ot,Zt,Lt);break}case"int32":{const Kt=N.bufferSync(J),Zt=N.data.get(Et.dataId).values[0];Ft=(0,bs.b)(Ut,Kt,gt,Dt,dt,ft,_t,Ot,Zt,Lt);break}case"string":{const Kt=N.bufferSync(J),Zt=e.ZSL.decodeString(N.data.get(Et.dataId).values[0]);Ft=(0,bs.b)(Ut,Kt,gt,Dt,dt,ft,_t,Ot,Zt,Lt);break}default:throw new Error(`Unsupported type ${J.dtype}`)}return N.makeTensorInfo(gt,Ft.dtype,Ft.values)}},ta={kernelName:e.Blb,backendName:"cpu",kernelFunc:function qo(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{numOrSizeSplits:J,axis:Et}=Q,gt=e.ZSL.parseAxisParam(Et,$.shape)[0],_t=e.C0T.prepareSplitSize($,J,gt),ft=new Array($.shape.length).fill(0),dt=$.shape.slice();return _t.map(Ot=>{const Dt=[...dt];Dt[gt]=Ot;const Lt=(0,ct.di)({inputs:{x:$},backend:N,attrs:{begin:ft,size:Dt}});return ft[gt]+=Ot,Lt})}};var ea=t(94985);const bo={kernelName:e.M6A,backendName:"cpu",kernelFunc:({inputs:ut,backend:ht})=>{const{x:N}=ut,Q=ht;(0,l.C)(N,"square");const $=Q.data.get(N.dataId).values,J=new Float32Array($.length);for(let gt=0;gt<$.length;++gt){const _t=$[gt];J[gt]=_t*_t}return{dataId:Q.write(J,N.shape,N.dtype),shape:N.shape,dtype:N.dtype}}},Ui=(0,d.Z)((ut,ht)=>{const N=ut-ht;return N*N}),Vi=(0,pe.j)(e.Ddj,Ui),sn={kernelName:e.Ddj,backendName:"cpu",kernelFunc:Vi};var Ki=t(32596);const na=(0,y.v)(e.pnw,(ut,ht)=>{const N=ht;return isNaN(ut)?NaN:ut>0?1:N.alpha}),zi={kernelName:e.pnw,backendName:"cpu",kernelFunc:na};var Gi=t(2821);const Hi={kernelName:e.UcO,backendName:"cpu",kernelFunc:function $r(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{begin:J,end:Et,strides:gt,beginMask:_t,endMask:ft,ellipsisMask:dt,newAxisMask:Ot,shrinkAxisMask:Dt}=Q;(0,l.C)($,"stridedSlice");const{finalShapeSparse:Lt,finalShape:Ut,isIdentity:Ft,sliceDim0:Kt,isSimpleSlice:Zt,begin:qt,end:ee,strides:Qt}=e.Kro.sliceInfo($.shape,J,Et,gt,_t,ft,dt,Ot,Dt);let le;if(Ft)le=A({inputs:{x:$},backend:N,attrs:{shape:Ut}});else if(Kt||Zt){e.ZSL.assert($.shape.length>=1,()=>`Input must have rank at least 1, got: ${$.shape.length}`);const fe=e.Kro.computeOutShape(qt,ee,Qt),_e=(0,ct.di)({inputs:{x:$},backend:N,attrs:{begin:qt,size:fe}});le=A({inputs:{x:_e},backend:N,attrs:{shape:Ut}}),N.disposeIntermediateTensorInfo(_e)}else{const fe=N.bufferSync($),_e=(0,Gi.e)(Lt,fe,Qt,qt);le=N.makeTensorInfo(Ut,_e.dtype,_e.values)}return le}};var ji=t(48953);const _o={kernelName:e.YAb,backendName:"cpu",kernelFunc:function Zi(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{separator:$,nGramWidths:J,leftPad:Et,rightPad:gt,padWidth:_t,preserveShortSequences:ft}=Q,{data:dt,dataSplits:Ot}=ht,Dt=N.data.get(dt.dataId).values,Lt=N.data.get(Ot.dataId).values,[Ut,Ft]=(0,ji.G)(Dt,Lt,$,J,Et,gt,_t,ft);return[N.makeTensorInfo([Ut.length],"string",Ut),N.makeTensorInfo(Ot.shape,"int32",Ft)]}};var Yi=t(70065);const Xi={kernelName:e.iW0,backendName:"cpu",kernelFunc:function yo(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{skipEmpty:$}=Q,{input:J,delimiter:Et}=ht;if("string"!==J.dtype)throw new Error("Input must be of datatype string");if(1!==J.shape.length)throw new Error(`Input must be a vector, got shape: ${J.shape}`);if(0!==Et.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${Et.shape}`);const gt=N.data.get(J.dataId).values,_t=N.data.get(Et.dataId).values[0],[ft,dt,Ot]=(0,Yi.S)(gt,_t,$),Dt=dt.length;return[N.makeTensorInfo([Dt,2],"int32",ft),N.makeTensorInfo([Dt],"string",dt),N.makeTensorInfo([2],"int32",new Int32Array(Ot))]}};var xs=t(72856);const sa={kernelName:e.$jE,backendName:"cpu",kernelFunc:function Qi(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{numBuckets:$}=Q,{input:J}=ht;if("string"!==J.dtype)throw new Error("Input must be of datatype string");if($<=0)throw new Error("Number of buckets must be at least 1");const Et=N.data.get(J.dataId).values,gt=(0,xs.f)(Et,$);return N.makeTensorInfo(J.shape,"int32",gt)}},xo=(0,y.v)(e.oFs,ut=>Math.tan(ut)),Ji={kernelName:e.oFs,backendName:"cpu",kernelFunc:xo},qi=(0,y.v)(e.iuW,ut=>Math.tanh(ut)),ra={kernelName:e.iuW,backendName:"cpu",kernelFunc:qi},el={kernelName:e.X4r,backendName:"cpu",kernelFunc:function tl(ut){const{inputs:ht,backend:N}=ut,{tensor:Q,indices:$,updates:J}=ht,{sliceRank:Et,numUpdates:gt,sliceSize:_t,strides:ft,outputSize:dt}=e.C0T.calculateShapes(J,$,Q.shape),Dt=N.bufferSync($),Lt=N.bufferSync(J),Ut=N.bufferSync(Q),Ft=(0,bs.b)(Dt,Lt,Q.shape,dt,_t,gt,Et,ft,Ut,!1);return N.makeTensorInfo(Q.shape,Ft.dtype,Ft.values)}};var nl=t(8440);const rl={kernelName:e.FAs,backendName:"cpu",kernelFunc:function sl(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{reps:J}=Q;(0,l.C)($,"tile");const Et=(0,nl.D)(N.bufferSync($),J);return N.makeTensorInfo(Et.shape,Et.dtype,Et.values)}};var ol=t(29956);const il={kernelName:e.TBb,backendName:"cpu",kernelFunc:function al(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$}=ht,{k:J,sorted:Et}=Q;(0,l.C)($,"topk");const gt=N.data.get($.dataId).values,[_t,ft]=(0,ol.x)(gt,$.shape,$.dtype,J,Et);return[N.makeTensorInfo(_t.shape,_t.dtype,_t.values),N.makeTensorInfo(ft.shape,ft.dtype,ft.values)]}},ll={kernelName:e.dLy,backendName:"cpu",kernelFunc:function oa(ut){const{inputs:ht,attrs:N,backend:Q}=ut,{image:$,transforms:J}=ht,{interpolation:Et,fillMode:gt,fillValue:_t,outputShape:ft}=N,[dt,Ot,Dt,Lt]=$.shape,[Ut,Ft]=null!=ft?ft:[Ot,Dt],Kt=[dt,Ut,Ft,Lt],Zt=e.ZSL.computeStrides($.shape),qt=Zt[0],ee=Zt[1],Qt=Zt[2],le=e.ZSL.computeStrides(Kt),fe=le[0],_e=le[1],$e=le[2],Fe=e.ZSL.getTypedArrayFromDType($.dtype,e.ZSL.sizeFromShape(Kt));Fe.fill(_t);const Be=Q.data.get($.dataId).values,Ke=Q.data.get(J.dataId).values;for(let Ae=0;Ae<dt;++Ae){const we=1===J.shape[0]?Ke:Ke.subarray(8*Ae,8*Ae+8);for(let Me=0;Me<Ut;++Me)for(let Ne=0;Ne<Ft;++Ne)for(let Ve=0;Ve<Lt;++Ve){let Re;const ke=we[6]*Ne+we[7]*Me+1;if(0===ke)continue;const He=(we[3]*Ne+we[4]*Me+we[5])/ke,rn=aa((we[0]*Ne+we[1]*Me+we[2])/ke,Dt,gt),Xe=aa(He,Ot,gt);switch(Et){case"nearest":Re=pl(Be,Ot,Dt,qt,ee,Qt,Ae,Xe,rn,Ve,_t);break;case"bilinear":Re=hl(Be,Ot,Dt,qt,ee,Qt,Ae,Xe,rn,Ve,_t);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${Et}`)}Fe[Ae*fe+Me*_e+Ne*$e+Ve]=Re}return Q.makeTensorInfo(Kt,$.dtype,Fe)}return{dataId:Q.write(Fe,Kt,$.dtype),shape:$.shape,dtype:$.dtype}}};function aa(ut,ht,N){switch(N){case"reflect":return function ul(ut,ht){let N=ut;if(N<0)if(ht<=1)N=0;else{const Q=2*ht;N<Q&&(N=Q*Math.trunc(-N/Q)+N),N=N<-ht?N+Q:-N-1}else if(N>ht-1)if(ht<=1)N=0;else{const Q=2*ht;N-=Q*Math.trunc(N/Q),N>=ht&&(N=Q-N-1)}return e.ZSL.clamp(0,N,ht-1)}(ut,ht);case"wrap":return function cl(ut,ht){let N=ut;return N<0?ht<=1?N=0:N+=ht*(Math.trunc(-N/(ht-1))+1):N>ht-1&&(ht<=1?N=0:N-=ht*Math.trunc(N/(ht-1))),e.ZSL.clamp(0,N,ht-1)}(ut,ht);case"nearest":return function dl(ut,ht){return e.ZSL.clamp(0,ut,ht-1)}(ut,ht);default:return function vo(ut){return ut}(ut)}}function ao(ut,ht,N,Q,$,J,Et,gt,_t,ft,dt){return 0<=gt&&gt<ht&&0<=_t&&_t<N?ut[Et*Q+gt*$+_t*J+ft]:dt}function pl(ut,ht,N,Q,$,J,Et,gt,_t,ft,dt){return ao(ut,ht,N,Q,$,J,Et,Math.round(gt),Math.round(_t),ft,dt)}function hl(ut,ht,N,Q,$,J,Et,gt,_t,ft,dt){const Ot=Math.floor(gt),Dt=Math.floor(_t),Lt=Ot+1,Ut=Dt+1;return(Lt-gt)*((Ut-_t)*ao(ut,ht,N,Q,$,J,Et,Ot,Dt,ft,dt)+(_t-Dt)*ao(ut,ht,N,Q,$,J,Et,Ot,Ut,ft,dt))+(gt-Ot)*((Ut-_t)*ao(ut,ht,N,Q,$,J,Et,Lt,Dt,ft,dt)+(_t-Dt)*ao(ut,ht,N,Q,$,J,Et,Lt,Ut,ft,dt))}var fl=t(73033);const _l=[Y,Z.lO,at,ot,B.UK,et,St,Ht,Xt,ae,Pe,Ct,Jt,vn,hn,ts,ws,ps,$t,V,G,Tt,Mt,ce.LY,Se,We.Ml,Ue.uf,be,Ce.v,xe,Rn,Wn,_s,ms,Qs,vs,Ks,Br,Fr,zs,Wr,Js,ar,Rs,Cr,Ir,Ur,ks,Pr,Or,O,I,te,h,Le,je.RY,Ts,fs.AC,Fs,Hs.Yp,Jr,qr,to,pr.Hc,me,cn,_n,Cs,Ss,br.xp,eo.VM,f.F,Gr,un,co,Yt,Gt,u,oe.YW,he.Q,Ee,fn.Fx,zn,Ws,Ls,fo,Mr,mo,Ea,_a.l9,xa,va,Ca,Ia,Oa,Aa,Ma,Na.Nu,La,Ba,Ua,K.tJ,Va.hd,Ga,Za,Bo,Qa.AL,qa,ei,ni,Wo,So,D,ai.S3,ii,ui,Ko,zo,An.r,cr,js,b,H,k,fi,Pl,gi,hr,yi,xi,Ti,Ci.Lt,Ii,Ai,Mi,$i,j.X3,Ao,Nr,Al,ct.lv,Fa,wi,Bi,ki,Xo,jr,gs,Jo,ta,ea.Fu,bo,sn,Ki.C,zi,Hi,_o,Xi,sa,dr.Zl,Nt,Ji,ra,el,rl,il,ll,yt.W,{kernelName:e.EwU,backendName:"cpu",kernelFunc:function ml(ut){const{inputs:ht,attrs:N,backend:Q}=ut,{axis:$}=N,{x:J}=ht;(0,l.C)(J,"unique");const Et=Q.data.get(J.dataId).values,{outputValues:gt,outputShape:_t,indices:ft}=(0,fl.w)(Et,$,J.shape,J.dtype);return[Q.makeTensorInfo(_t,J.dtype,gt),Q.makeTensorInfo([ft.length],"int32",ft)]}},{kernelName:e.dXR,backendName:"cpu",kernelFunc:function ia(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{value:$}=ht;let{axis:J}=Q;J<0&&(J+=$.shape.length);const Et=$.shape.length,gt=$.shape[J],_t=new Array(Et-1);let ft=0;for(let Lt=0;Lt<Et;Lt++)Lt!==J&&(_t[ft++]=$.shape[Lt]);const dt=new Array(Et).fill(0),Ot=$.shape.slice();Ot[J]=1;const Dt=new Array(gt);for(let Lt=0;Lt<Dt.length;Lt++){dt[J]=Lt;const Ut=(0,ct.di)({inputs:{x:$},backend:N,attrs:{begin:dt,size:Ot}});Dt[Lt]=A({inputs:{x:Ut},backend:N,attrs:{shape:_t}}),N.disposeIntermediateTensorInfo(Ut)}return Dt}},{kernelName:e.pPe,backendName:"cpu",kernelFunc:function ua(ut){const{inputs:ht,backend:N,attrs:Q}=ut,{x:$,segmentIds:J}=ht,{numSegments:Et}=Q;(0,l.C)($,"unsortedSegmentSum");const ft=[],dt=[],Ot=$.shape.length-J.shape.length;let Dt=J;for(let Ut=0;Ut<Ot;++Ut){const Ft=Bn({inputs:{input:Dt},backend:N,attrs:{dim:Ut+1}});Dt=Ft,dt.push(Ft)}for(let Ut=0;Ut<Et;++Ut){const Ft=e.ZSL.createScalarValue(Ut,"int32"),Kt=N.makeTensorInfo([],"int32",Ft),Zt=(0,je.LC)({inputs:{a:Kt,b:Dt},backend:N}),qt=(0,We.wg)({inputs:{x:Zt},backend:N,attrs:{dtype:"float32"}}),ee=(0,K.lw)({inputs:{a:qt,b:$},backend:N}),Qt=st({inputs:{x:ee},backend:N,attrs:{axis:0,keepDims:!1}});ft.push(Qt),dt.push(Kt),dt.push(Zt),dt.push(qt),dt.push(ee),dt.push(Qt)}const Lt=Fo({inputs:ft,backend:N,attrs:{axis:0}});return dt.forEach(Ut=>N.disposeIntermediateTensorInfo(Ut)),Lt}},ti];for(const ut of _l)(0,e.tAK)(ut)},13375:(pt,R,t)=>{"use strict";t.d(R,{dH:()=>l,lO:()=>g});var e=t(41653),s=t(27543);function l(c){const y=new Float32Array(c.length);for(let m=0;m<c.length;++m)y[m]=Math.abs(c[m]);return y}const g={kernelName:e.ljI,backendName:"cpu",kernelFunc:c=>{const{x:y}=c.inputs,m=c.backend;(0,s.C)(y,"abs");let h=new Float32Array(e.ZSL.sizeFromShape(y.shape));return h=l(m.data.get(y.dataId).values),m.makeOutput(h,y.shape,y.dtype)}}},6936:(pt,R,t)=>{"use strict";t.d(R,{UK:()=>y,WQ:()=>c,mx:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((m,h)=>m+h),g=(0,l.B)((m,h,f,p)=>({real:m+f,imag:h+p})),c=(0,l.j)(e.OMN,E,g),y={kernelName:e.OMN,backendName:"cpu",kernelFunc:c}},40364:(pt,R,t)=>{"use strict";t.d(R,{N:()=>l,X:()=>s});var e=t(41653);function s(E,g,c,y,m){const h=e.ZSL.sizeFromShape(y),f=e.ZSL.makeZerosTypedArray(m,c);for(let p=0;p<E.length;p++){const u=E[p];if(u<0)throw new Error("Input x must be non-negative!");u>=m||(f[u]+=h>0?g[p]:1)}return f}function l(E,g,c,y=!1){const m=E.shape[0],h=E.shape[1],f=(0,e.ra8)([m,c],g.dtype);for(let p=0;p<m;p++)for(let u=0;u<h;u++){const d=E.get(p,u);if(d<0)throw new Error("Input x must be non-negative!");d>=c||f.set(y?1:g.size>0?f.get(p,d)+g.get(p,u):f.get(p,d)+1,p,d)}return f}},74291:(pt,R,t)=>{"use strict";t.d(R,{LY:()=>c,f6:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y&m),g=(0,l.j)(e.HNs,E),c={kernelName:e.HNs,backendName:"cpu",kernelFunc:g}},75148:(pt,R,t)=>{"use strict";t.d(R,{Ml:()=>h,ct:()=>y,wg:()=>m});var e=t(41653),s=t(99800),l=t(10708),E=t(46499),g=t(5029),c=t(80363);function y(f,p,u,d){if("int32"===d)return[p,"int32",Int32Array.from(f)];if("bool"===d){const C=e.ZSL.toTypedArray([0],u),[T,D]=(0,s.Z)((S,b)=>S!==b?1:0)(p,[],f,C,"bool");return[D,"bool",T]}throw new Error(`Error in Cast: failed to cast ${u} to ${d}`)}function m(f){const{inputs:p,backend:u,attrs:d}=f,{x:C}=p,{dtype:T}=d;if("complex64"===T){if("complex64"===C.dtype)return(0,g.D)({inputs:{x:C},backend:u});const H=(0,l.U)(u,C.shape,C.dtype),j=m({inputs:{x:C},backend:u,attrs:{dtype:"float32"}}),F=(0,E.f)({inputs:{real:j,imag:H},backend:u});return u.disposeIntermediateTensorInfo(H),u.disposeIntermediateTensorInfo(j),F}if("complex64"===C.dtype){const H=(0,c.x)({inputs:{input:C},backend:u}),j=m({inputs:{x:H},backend:u,attrs:{dtype:T}});return u.disposeIntermediateTensorInfo(H),j}if(!e.ZSL.hasEncodingLoss(C.dtype,T)){const H=(0,g.D)({inputs:{x:C},backend:u});return{dataId:H.dataId,shape:H.shape,dtype:T}}const D=u.data.get(C.dataId).values,[S,b,w]=y(D,C.shape,C.dtype,T);return u.makeTensorInfo(S,b,w)}const h={kernelName:e.KXH,backendName:"cpu",kernelFunc:m}},18946:(pt,R,t)=>{"use strict";t.d(R,{YG:()=>E,uf:()=>c});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.ceil(y)),g=(0,l.F)(e.QDP,E),c={kernelName:e.QDP,backendName:"cpu",kernelFunc:g}},46499:(pt,R,t)=>{"use strict";function s(E){const{inputs:g,backend:c}=E,{real:y,imag:m}=g,h=c.data.get(y.dataId).values,f=c.data.get(m.dataId).values,p=c.makeTensorInfo(y.shape,"complex64");return c.data.get(p.dataId).complexTensorInfos={real:c.makeTensorInfo(y.shape,"float32",h),imag:c.makeTensorInfo(m.shape,"float32",f)},p}t.d(R,{f:()=>s,v:()=>l});const l={kernelName:t(41653).pr3,backendName:"cpu",kernelFunc:s}},91332:(pt,R,t)=>{"use strict";t.d(R,{h:()=>s});var e=t(41653);function s(l,E,g,c){const y=e.ZSL.getArrayFromDType(g,e.ZSL.sizeFromShape(E));if(c&&"string"!==g){let m=0;l.forEach(h=>{const f=e.ZSL.sizeFromShape(h.shape);y.set(h.vals,m),m+=f})}else{let m=0;l.forEach(h=>{const f="string"===g?e.C0T.fromUint8ToStringArray(h.vals):h.vals;let p=0;for(let u=0;u<h.shape[0];++u){const d=u*E[1]+m;for(let C=0;C<h.shape[1];++C)y[d+C]=f[p++]}m+=h.shape[1]})}return y}},71007:(pt,R,t)=>{"use strict";t.d(R,{LC:()=>g,RY:()=>c,z3:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y===m?1:0),g=(0,l.j)(e.BRl,E,null,"bool"),c={kernelName:e.BRl,backendName:"cpu",kernelFunc:g}},18692:(pt,R,t)=>{"use strict";t.d(R,{AC:()=>c,oN:()=>g,sG:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.exp(y)),g=(0,l.F)(e.ox3,E,"float32"),c={kernelName:e.ox3,backendName:"cpu",kernelFunc:g}},3878:(pt,R,t)=>{"use strict";t.d(R,{Yp:()=>c,uM:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.expm1(y)),g=(0,l.F)(e.ybj,E),c={kernelName:e.ybj,backendName:"cpu",kernelFunc:g}},2017:(pt,R,t)=>{"use strict";t.d(R,{Hc:()=>c,vS:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.floor(y)),g=(0,l.F)(e.ZgB,E),c={kernelName:e.ZgB,backendName:"cpu",kernelFunc:g}},86315:(pt,R,t)=>{"use strict";t.d(R,{q:()=>s});var e=t(41653);function s(l,E,g,c,y,m,h,f,p){const u=(0,e.ra8)([c,m],g);for(let d=0;d<c;d++){const C=[];let T=0;for(let D=0;D<y;D++){const S=l[d*y+D];T+=S*h[D],C.push(S)}if(T<0||T>=p/m)throw new Error(`Invalid indices: ${C} does not index into ${f}`);for(let D=0;D<m;D++)u.values[d*m+D]=E.get(...E.indexToLoc(T*m+D))}return u}},60509:(pt,R,t)=>{"use strict";t.d(R,{G:()=>s});var e=t(41653);function s(l,E,g){const c=(0,e.ra8)(g,l.dtype);for(let y=0;y<c.size;++y){const h=c.indexToLoc(y).slice(),u=E.locToIndex([h[0],h[2]]);h[2]=E.values[u];const d=l.locToIndex(h);0<=d&&d<l.values.length&&(c.values[y]=l.values[d])}return c}},89505:(pt,R,t)=>{"use strict";t.d(R,{rq:()=>E,xp:()=>c});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y>m?1:0),g=(0,l.j)(e.XhZ,E,null,"bool"),c={kernelName:e.XhZ,backendName:"cpu",kernelFunc:g}},1885:(pt,R,t)=>{"use strict";t.d(R,{VM:()=>c,lg:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y>=m?1:0),g=(0,l.j)(e.lLS,E,null,"bool"),c={kernelName:e.lLS,backendName:"cpu",kernelFunc:g}},5029:(pt,R,t)=>{"use strict";function s(E){const{inputs:g,backend:c}=E,{x:y}=g;return c.incRef(y.dataId),{dataId:y.dataId,shape:y.shape,dtype:y.dtype}}t.d(R,{D:()=>s,F:()=>l});const l={kernelName:t(41653).lzr,backendName:"cpu",kernelFunc:s}},64730:(pt,R,t)=>{"use strict";t.d(R,{WR:()=>E,YW:()=>c});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y<m?1:0),g=(0,l.j)(e.mIA,E,null,"bool"),c={kernelName:e.mIA,backendName:"cpu",kernelFunc:g}},11040:(pt,R,t)=>{"use strict";t.d(R,{Q:()=>c,cu:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y<=m?1:0),g=(0,l.j)(e.CwD,E,null,"bool"),c={kernelName:e.CwD,backendName:"cpu",kernelFunc:g}},43905:(pt,R,t)=>{"use strict";t.d(R,{G:()=>s});var e=t(41653);function s(l,E,g){const c=(E-l)/(g-1),y=e.ZSL.makeZerosTypedArray(g,"float32");y[0]=l;for(let m=1;m<y.length;m++)y[m]=y[m-1]+c;return y}},94621:(pt,R,t)=>{"use strict";t.d(R,{Fx:()=>c,px:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.log(y)),g=(0,l.F)(e.tG8,E),c={kernelName:e.tG8,backendName:"cpu",kernelFunc:g}},33438:(pt,R,t)=>{"use strict";t.d(R,{j:()=>s});var e=t(41653);function s(l,E,g,c){const y=e.ZSL.getTypedArrayFromDType(c,e.ZSL.sizeFromShape(g));for(let m=0;m<y.length;++m){const h=m*E;let f=l[h];for(let p=0;p<E;++p){const u=l[h+p];(Number.isNaN(u)||u>f)&&(f=u)}y[m]=f}return y}},40553:(pt,R,t)=>{"use strict";t.d(R,{He:()=>E,l9:()=>c});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>Math.max(y,m)),g=(0,l.j)(e.LDN,E),c={kernelName:e.LDN,backendName:"cpu",kernelFunc:g}},32747:(pt,R,t)=>{"use strict";t.d(R,{Nu:()=>c,hE:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>Math.min(y,m)),g=(0,l.j)(e.LG0,E),c={kernelName:e.LG0,backendName:"cpu",kernelFunc:g}},92287:(pt,R,t)=>{"use strict";t.d(R,{BF:()=>E,lw:()=>c,tJ:()=>y});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((m,h)=>m*h),g=(0,l.B)((m,h,f,p)=>({real:m*f-h*p,imag:m*p+h*f})),c=(0,l.j)(e.xu7,E,g),y={kernelName:e.xu7,backendName:"cpu",kernelFunc:c}},86705:(pt,R,t)=>{"use strict";t.d(R,{Dk:()=>E,hd:()=>c});var e=t(41653),s=t(27543),l=t(92287);function E(y,m,h){const f=e.ZSL.createScalarValue(-1,h);return(0,l.BF)([],m,f,y,h)}const c={kernelName:e.l0G,backendName:"cpu",kernelFunc:function g(y){const{inputs:m,backend:h}=y,{x:f}=m;(0,s.C)(f,"neg");const p=h.data.get(f.dataId).values,[u,d]=E(p,f.shape,f.dtype);return h.makeTensorInfo(d,f.dtype,u)}}},13432:(pt,R,t)=>{"use strict";t.d(R,{AL:()=>c,cl:()=>E});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((y,m)=>y!==m?1:0),g=(0,l.j)(e.ylV,E,null,"bool"),c={kernelName:e.ylV,backendName:"cpu",kernelFunc:g}},88054:(pt,R,t)=>{"use strict";t.d(R,{S3:()=>c,_B:()=>E});var e=t(41653),s=t(27543),l=t(87599);function E(y,m,h,f){const[p,u]=e.C0T.computeOutAndReduceShapes(y,f),d=(0,e.TuY)(m,"int32"),C=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(p),d),T=e.ZSL.sizeFromShape(u);for(let D=0;D<C.length;++D){const S=D*T;let b=1;for(let w=0;w<T;++w)b*=h[S+w];C[D]=b}return{outVals:C,outShape:p,outDtype:d}}const c={kernelName:e.kdj,backendName:"cpu",kernelFunc:function g(y){const{inputs:m,backend:h,attrs:f}=y,{x:p}=m,{axis:u,keepDims:d}=f;(0,s.C)(p,"prod");const C=p.shape.length,T=e.ZSL.parseAxisParam(u,p.shape),D=e.C0T.getAxesPermutation(T,C);let S=T,b=p;const w=[];null!=D&&(b=(0,l.m)({inputs:{x:p},backend:h,attrs:{perm:D}}),w.push(b),S=e.C0T.getInnerMostAxes(S.length,C));const H=h.data.get(b.dataId).values,{outVals:j,outShape:F,outDtype:B}=E(b.shape,b.dtype,H,S);let A=F;return d&&(A=e.C0T.expandShapeToKeepDim(F,T)),w.forEach(k=>h.disposeIntermediateTensorInfo(k)),h.makeTensorInfo(A,B,j)}}},6567:(pt,R,t)=>{"use strict";t.d(R,{u:()=>h});var e=t(41653);function c(f,p){const u=f.slice(0,p);for(;u.length<p;)u.push(1);for(let d=p;d<f.length;d++)u[p-1]*=f[d];return u}function h(f,p,u,d,C,T,D,S){if(0===f.length)throw new Error("paramsNestedSplits must be non empty");if(0===p[0].length)throw new Error("Split tensors must not be scalars");if(function s(f,p,u){f.forEach((d,C)=>{if(d<0||d>=u){const T=e.ZSL.indexToLoc(C,p.length,e.ZSL.computeStrides(p)).join(",");throw new Error(`indices[${T}] = ${d} is not in [0, ${u})`)}})}(T,D,p[0][0]-1),0===d.length)throw new Error("params.rank must be nonzero");const w=d[0],{outSplits:H,valueSlices:j,numValues:F}=function E(f,p,u,d){const C=[];let T=0;const S=new Array(p.length-1+u.length).fill(null).map(()=>[0]);!function l(f,p){for(let u=0;u<f.length;++u){const d=f[u],C=u===f.length-1?p:f[u+1].length;if(0===d.length)throw new Error("Ragged splits may not be empty");if(d[0]<0)throw new Error("Ragged splits must be non-negative");if(d[d.length-1]>C)throw new Error("Ragged splits must not point past values");for(let T=1;T<d.length;++T)if(d[T-1]>d[T])throw new Error("Ragged splits must be sorted in ascending order")}}(u,d);let b=1;for(let w=0;w<p.length-1;++w){b*=p[w];const H=p[w+1];for(let j=1;j<b+1;++j)S[w].push(j*H)}for(let w=0;w<f.length;++w){let H=f[w],j=f[w]+1;for(let F=0;F<u.length;++F){const B=u[F],A=F+p.length-1;if(A>=0){const k=S[A],x=k[k.length-1]-B[H];for(let V=H;V<j;++V)S[A].push(B[V+1]+x)}H=B[H],j=B[j]}j!==H&&(C.push([H,j]),T+=j-H)}return{outSplits:S,valueSlices:C,numValues:T}}(T,D,f,w),B=function g(f){const p=[];for(let u=0;u<f.length;++u){const C=e.ZSL.getArrayFromDType("int32",f[u].length);p.push(C),f[u].forEach((T,D)=>C[D]=T)}return p}(H),A=function m(f,p,u,d,C){const T=p.slice();T[0]=C;const D=e.ZSL.getArrayFromDType(u,e.ZSL.sizeFromShape(T)),S=f.length;return function y(f,p,u,d,C,T){const D=c(p,2)[1],S=c(T,2)[1];let b=0;for(const w of u)for(let H=w[0];H<w[1];++H){for(let j=0;j<d;++j)C[b*S+j]=f[H*D+j];++b}}(f,p,d,0===S?0:S/p[0],D,T),[D,T]}(u,d,C,j,F);return[B,A[0],A[1]]}},8161:(pt,R,t)=>{"use strict";t.d(R,{_:()=>l});var e=t(41653);const s=2147483647;function l(E,g,c,y,m,h,f){if(g.length>1)throw new Error("starts must be a scalar or vector");if(m.length>1)throw new Error("limits must be a scalar or vector");if(f.length>1)throw new Error("deltas must be a scalar or vector");const p=0===g.length,u=0===m.length,d=0===f.length,C=[];p||C.push(g[0]),u||C.push(m[0]),d||C.push(f[0]);for(let H=1;H<C.length;++H)if(C[H]!==C[H-1])throw new Error("starts, limits, and deltas must have the same shape");const T=0===C.length?1:C[0],D=e.ZSL.getArrayFromDType("int32",T+1);D[0]=0;for(let H=0;H<T;++H){const j=p?E[0]:E[H],F=u?y[0]:y[H],B=d?h[0]:h[H];if(0===B)throw new Error("Requires delta != 0");let A;if(B>0&&F<j||B<0&&F>j)A=0;else if(A=Math.ceil(Math.abs((F-j)/B)),A>s)throw new Error(`Requires ((limit - start) / delta) <= ${s}`);D[H+1]=D[H]+A}const b=e.ZSL.getArrayFromDType(c,D[T]);let w=0;for(let H=0;H<T;++H){const j=D[H+1]-D[H];let F=p?E[0]:E[H];const B=d?h[0]:h[H];for(let A=0;A<j;++A)b[w++]=F,F+=B}return[D,b]}},673:(pt,R,t)=>{"use strict";t.d(R,{K:()=>c});var e=t(41653),s=e.C0T.RowPartitionType;class l{constructor(m,h,f,p,u,d,C,T,D,S){this.shape=m,this.shapeShape=h,this.values=f,this.valuesShape=p,this.valuesDType=u,this.defaultValue=d,this.defaultValueShape=C,this.rowPartitionValues=T,this.rowPartitionValuesShapes=D,this.rowPartitionTypes=e.C0T.getRowPartitionTypesHelper(S),this.raggedRank=e.C0T.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(m){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[m+1]:this.rowPartitionTypes[m]}getRowPartitionTensor(m){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[m+1]:this.rowPartitionValues[m]}getMaxWidth(m){const h=this.getRowPartitionTensor(m-1);switch(this.getRowPartitionTypeByDimension(m-1)){case s.VALUE_ROWIDS:return l.getMaxWidthValueRowID(h);case s.ROW_SPLITS:return l.getMaxWidthRowSplit(h);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(m-1)]}`)}}static getMaxWidthRowSplit(m){const h=m.length;if(0===h||1===h)return 0;let f=0;for(let p=0;p<h-1;++p){const u=m[p+1]-m[p];u>f&&(f=u)}return f}static getMaxWidthValueRowID(m){const h=m.length;if(0===h)return 0;let f=0,p=m[0],u=0;for(let d=1;d<h;++d){const C=m[d];C!==p&&(p=C,u=Math.max(d-f,u),f=d)}return Math.max(h-f,u)}tensorShapeFromTensor(m,h,f=!0){if(0===h.length){if(-1===m[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return g(m,f)}calculateOutputSize(m){const h=this.valuesShape;e.C0T.validateDefaultValueShape(this.defaultValueShape,h);const p=this.tensorShapeFromTensor(this.shape,this.shapeShape),d=e.C0T.combineRaggedTensorToTensorShapes(this.raggedRank,p,h);d[0]<0&&(d[0]=m);for(let C=1;C<=this.raggedRank;++C)d[C]<0&&(d[C]=this.getMaxWidth(C));return d}calculateFirstParentOutputIndex(m,h,f){const p=Math.min(m,f),u=[];let d=0;for(let C=0;C<p;++C,d+=h)u.push(d);for(let C=p;C<m;++C)u.push(-1);return e.ZSL.assert(u.length===m,()=>"Final length of result must be equal to firstDimension."),u}calculateOutputIndexRowSplit(m,h,f,p){const u=m.length,d=[];for(let C=0;C<u-1;++C){const T=m[C+1]-m[C];let D=Math.min(p,T),S=h[C];-1===S&&(D=0);for(let b=0;b<D;++b)d.push(S),S+=f;for(let b=0;b<T-D;++b)d.push(-1)}if(u>0&&d.length!==m[u-1])throw new Error("Invalid row split size.");return d}calculateOutputIndexValueRowID(m,h,f,p){const u=m.length,d=[];if(0===u)return[];let C=0,T=m[0];if(T>=h.length)throw new Error(`Got currentValueRowId=${T}, which is not less than ${h.length}`);let D=h[T];d.push(D);for(let S=1;S<u;++S){const b=m[S];if(b===T)D>=0&&(++C,C<p?D+=f:D=-1);else{if(C=0,T=b,b>=h.length)throw new Error(`Got nextValueRowId=${b} which is not less than ${h.length}`);D=h[b]}d.push(D)}if(d.length!==m.length)throw new Error("Invalid row ids.");return d}calculateOutputIndex(m,h,f,p){const u=this.getRowPartitionTensor(m),d=this.getRowPartitionTypeByDimension(m);switch(d){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(u,h,f,p);case s.ROW_SPLITS:if(u.length-1>h.length)throw new Error(`Row partition size is greater than output size: ${u.length-1} > ${h.length}`);return this.calculateOutputIndexRowSplit(u,h,f,p);default:throw new Error(`Unsupported partition type: ${s[d]}`)}}getFirstDimensionSize(){const m=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const h=this.rowPartitionTypes[0];switch(h){case s.FIRST_DIM_SIZE:return m[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[h]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const h=this.getFirstDimensionSize(),f=this.calculateOutputSize(h),p=new Array(this.raggedRank+1);p[p.length-1]=1;for(let T=p.length-2;T>=0;--T)p[T]=p[T+1]*f[T+1];const u=g(f,!1),d=e.ZSL.getArrayFromDType(this.valuesDType,e.ZSL.sizeFromShape(u));if(p[0]*f[0]>0){let T=this.calculateFirstParentOutputIndex(h,p[0],f[0]);for(let D=1;D<=this.raggedRank;++D)T=this.calculateOutputIndex(D-1,T,p[D],f[D]);this.setOutput(this.raggedRank,T,d,u)}return[u,d]}setOutput(m,h,f,p){if(0===f.length)return;const u=this.values,d=f;let C=p.slice();C=C.slice(m+1);const T=e.ZSL.sizeFromShape(C),D=h.length;let S=this.defaultValue;if(S.length!==T&&1!==S.length){const j=this.defaultValueShape;(0,e.DZQ)(()=>{const F=(0,e.tQQ)(S,j);S=(0,e.hOW)(F,C).dataSync()})}let b=0,w=0,H=0;for(let j=0;j<=D;++j){let F=j<D?h[j]:-1;if(F!==H){if(w<H){const B=u.subarray(b*T);E(d.subarray(w*T),B,(H-w)*T)}if(j>=D&&(F=Math.floor(f.length/T)),F>H)if(1===this.defaultValue.length)d.subarray(H*T,F*T).fill(this.defaultValue[0]),H=F;else for(;F>H;)E(d.slice(H*T),S,T),++H;F<0?(b=j+1,w=H):(b=j,w=H,H=w+1)}else++H}}}function E(y,m,h){for(let f=0;f<h;f++)y[f]=m[f]}function g(y,m){const h=[];for(let f of y){if(f<0){if(!m)throw new Error(`Dimension ${f} must be >= 0`);if(f<-1)throw new Error(`Dimension ${f} must be >= -1`);f=-1}h.push(f)}return h}function c(y,m,h,f,p,u,d,C,T,D){return new l(y,m,h,f,p,u,d,C,T,D).compute()}},6251:(pt,R,t)=>{"use strict";t.d(R,{q:()=>s});var e=t(41653);function s(l,E,g,c){if(l===E||l<E&&g<0||E<l&&g>1)return e.ZSL.makeZerosTypedArray(0,c);const f=Math.abs(Math.ceil((E-l)/g)),p=e.ZSL.makeZerosTypedArray(f,c);E<l&&1===g&&(g=-1),p[0]=l;for(let u=1;u<p.length;u++)p[u]=p[u-1]+g;return p}},80363:(pt,R,t)=>{"use strict";function s(E){const{inputs:g,backend:c}=E,{input:y}=g,m=c.data.get(y.dataId).complexTensorInfos.real,h=c.data.get(m.dataId).values;return c.makeTensorInfo(m.shape,m.dtype,h)}t.d(R,{r:()=>l,x:()=>s});const l={kernelName:t(41653).LRy,backendName:"cpu",kernelFunc:s}},36499:(pt,R,t)=>{"use strict";t.d(R,{Lt:()=>c,Zy:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>1/Math.sqrt(y)),g=(0,l.F)(e.TOR,E),c={kernelName:e.TOR,backendName:"cpu",kernelFunc:g}},94014:(pt,R,t)=>{"use strict";t.d(R,{b:()=>s});var e=t(41653);function s(l,E,g,c,y,m,h,f,p,u){const d=[c/y,y],C=l.values,T=E.values;if(0===c)return(0,e.ra8)(g,E.dtype);const D=p instanceof e.ylz?p:(0,e.ra8)(d,E.dtype);"string"==typeof p||"number"==typeof p?D.values.fill(p):"boolean"==typeof p&&D.values.fill(+p);for(let S=0;S<m;S++){const b=[];let w=0;for(let H=0;H<h;H++){const j=C[S*h+H];b.push(j),w+=j*f[H]}if(w<0||w>=c/y)throw new Error(`Invalid indices: ${b} does not index into ${g}`);for(let H=0;H<y;H++)u?D.values[w*y+H]+=T[S*y+H]:D.values[w*y+H]=0===E.rank?T[0]:T[S*y+H]}return D}},94303:(pt,R,t)=>{"use strict";t.d(R,{X3:()=>c,ry:()=>g,zv:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>1/(1+Math.exp(-y))),g=(0,l.v)(e.vI1,y=>1/(1+Math.exp(-y))),c={kernelName:e.vI1,backendName:"cpu",kernelFunc:g}},63685:(pt,R,t)=>{"use strict";t.d(R,{HS:()=>l,di:()=>E,lv:()=>g});var e=t(41653),s=t(27543);function l(c,y,m,h,f){const p=e.Kro.isSliceContinous(h,y,m),u=e.ZSL.sizeFromShape(m),d=e.ZSL.computeStrides(h);if(p){const S=e.Kro.computeFlatOffset(y,d);return"string"===f?c.slice(S,S+u):c.subarray(S,S+u)}const C="string"===f?e.C0T.fromUint8ToStringArray(c):c,T=(0,e.ra8)(h,f,C),D=(0,e.ra8)(m,f);for(let S=0;S<D.size;++S){const b=D.indexToLoc(S),w=b.map((H,j)=>H+y[j]);D.set(T.get(...w),...b)}return"string"===f?e.C0T.fromStringArrayToUint8(D.values):D.values}function E(c){const{inputs:y,backend:m,attrs:h}=c,{x:f}=y,{begin:p,size:u}=h;(0,s.C)(f,"slice");const[d,C]=e.Kro.parseSliceParams(f,p,u);e.Kro.assertParamsValid(f,d,C);const D=l(m.data.get(f.dataId).values,d,C,f.shape,f.dtype);return m.makeTensorInfo(C,f.dtype,D)}const g={kernelName:e.JiE,backendName:"cpu",kernelFunc:E}},20273:(pt,R,t)=>{"use strict";t.d(R,{y:()=>s});var e=t(41653);function s(l,E,g,c,y,m,h){const f=E[0],p=m[0],u=new Array(p),d=new Array(f),C=E[1];if(0===p){if(0!==f)throw new Error(e.C0T.getSparseFillEmptyRowsIndicesDenseShapeMismatch(f));return[e.ZSL.getArrayFromDType(g,0),[0,C],e.ZSL.getArrayFromDType(y,0),u,d]}let T=!0,D=0;const S=new Array(p).fill(0);for(let w=0;w<f;++w){const H=l[w*C];if(H<0)throw new Error(e.C0T.getSparseFillEmptyRowsNegativeIndexErrorMessage(w,H));if(H>=p)throw new Error(e.C0T.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(w,H,p));++S[H],T=T&&H>=D,D=H}let b=!0;for(let w=0;w<p;++w){const H=0===S[w];u[w]=H,b=b&&!H,S[w]=Math.max(S[w],1),w>0&&(S[w]+=S[w-1])}if(b&&T){const w=l,H=c;for(let j=0;j<f;++j)d[j]=j;return[w,[f,C],H,u,d]}{const w=S[p-1],H=e.ZSL.getArrayFromDType(g,w*C),j=e.ZSL.getArrayFromDType(y,w),F=new Array(p).fill(0);for(let B=0;B<f;++B){const A=l[B*C],x=(0===A?0:S[A-1])+F[A];F[A]++;for(let V=0;V<C;++V)H[x*C+V]=l[B*C+V];j[x]=c[B],d[B]=x}for(let B=0;B<p;++B)if(0===F[B]){const k=0===B?0:S[B-1];H[k*C+0]=B;for(let x=1;x<C;++x)H[k*C+x]=0;j[k]=h}return[H,[w,C],j,u,d]}}},35298:(pt,R,t)=>{"use strict";t.d(R,{l:()=>s});var e=t(41653);function s(l,E,g,c,y){const m=e.ZSL.sizeFromShape(c),h=E[0],f=y.length,p=[];let u=1,d=-1;for(let w=0;w<f;++w){const H=y[w];if(-1===H){if(-1!==d)throw new Error(e.C0T.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,w));d=w,p.push(1)}else{if(H<0)throw new Error(e.C0T.getSparseReshapeNegativeOutputDimErrorMessage(w,H));u*=H,p.push(H)}}if(-1!==d){if(u<=0)throw new Error(e.C0T.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const w=Math.trunc(m/u);if(u*w!==m)throw new Error(e.C0T.getSparseReshapeInputOutputMultipleErrorMessage(c,p));p[d]=w}if(e.ZSL.sizeFromShape(p)!==m)throw new Error(e.C0T.getSparseReshapeInputOutputMismatchErrorMessage(c,p));const T=c.length,D=[];if(T>0){D[T-1]=1;for(let w=T-2;w>=0;--w)D[w]=D[w+1]*c[w+1]}const S=[];if(f>0){S[f-1]=1;for(let w=f-2;w>=0;--w)S[w]=S[w+1]*p[w+1]}const b=e.ZSL.getArrayFromDType(g,h*f);for(let w=0;w<h;++w){let H=0;for(let j=0;j<T;++j)H+=l[w*T+j]*D[j];for(let j=0;j<f;++j)b[w*f+j]=Math.trunc(H/S[j]),H%=S[j]}return[b,[h,f],p]}},19454:(pt,R,t)=>{"use strict";t.d(R,{z:()=>s});var e=t(41653);function s(l,E,g,c,y,m=!1,h=0){const f=c.length,p=[E[0],l.length/E[0]],u=p[1],C=f>0?y[f-1]+1:0;if(C<0)throw new Error(e.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const T=E.slice();T[0]=C;const D=T.reduce((F,B)=>F*B,1),S=e.ZSL.getArrayFromDType(g,D);if(0===f)return C>0&&S.fill(h),[S,T];if(C<=0)throw new Error(e.C0T.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let b=0,w=1,H=0,j=y[b];for(;;){let F=0;if(w<f){if(F=y[w],j===F){++w;continue}if(j>=F)throw new Error(e.C0T.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(j<0||j>=C)throw new Error(e.C0T.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(j,C));j>H&&S.fill(h,H*u,j*u);for(let B=b;B<w;++B){const A=c[B];if(A<0||A>=p[0])throw new Error(e.C0T.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(B,c[B],p[0]));for(let k=0;k<u;k++)S[j*u+k]+=l[A*u+k]}if(m)for(let B=0;B<u;B++)S[j*u+B]/=w-b;if(b=w,++w,H=j+1,j=F,w>f)break}return H<C&&S.fill(h,H*u,C*u),[S,T]}},94985:(pt,R,t)=>{"use strict";t.d(R,{Fu:()=>c,x6:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)(y=>Math.sqrt(y)),g=(0,l.v)(e.dFH,y=>Math.sqrt(y)),c={kernelName:e.dFH,backendName:"cpu",kernelFunc:g}},32596:(pt,R,t)=>{"use strict";t.d(R,{C:()=>c,_:()=>E});var e=t(41653),s=t(20820),l=t(80345);const E=(0,s.o)((y,m)=>{const{pattern:h,replaceGlobal:f,rewrite:p}=m;return y.replace(new RegExp(h,f?"g":""),p)}),g=(0,l.F)(e.GZp,E),c={kernelName:e.GZp,backendName:"cpu",kernelFunc:g}},2821:(pt,R,t)=>{"use strict";t.d(R,{e:()=>s});var e=t(41653);function s(l,E,g,c){const y=(0,e.ra8)(l,E.dtype);for(let m=0;m<y.size;m++){const h=y.indexToLoc(m),f=new Array(h.length);for(let p=0;p<f.length;p++)f[p]=h[p]*g[p]+c[p];y.set(E.get(...f),...h)}return y}},48953:(pt,R,t)=>{"use strict";t.d(R,{G:()=>l});var e=t(41653);class s{constructor(g,c,y,m,h,f){this.separator=e.ZSL.encodeString(g),this.nGramWidths=c,this.leftPad=e.ZSL.encodeString(y),this.rightPad=e.ZSL.encodeString(m),this.padWidth=h,this.preserveShort=f}getPadWidth(g){return Math.min(this.padWidth<0?g-1:this.padWidth,g-1)}getNumNGrams(g,c){const y=this.getPadWidth(c);return Math.max(0,g+2*y-c+1)}createNGrams(g,c,y,m,h,f){for(let p=0;p<h;++p){const u=this.getPadWidth(f),d=Math.max(0,u-p),C=Math.max(0,u-(h-(p+1))),T=f-(d+C),D=c+(d>0?0:p-u);let S=0;S+=d*this.leftPad.length;for(let F=0;F<T;++F)S+=g[D+F].length;S+=C*this.rightPad.length,S+=(d+C+T-1)*this.separator.length,y[m+p]=new Uint8Array(S);const w=y[m+p];let H=0;const j=F=>F.forEach(B=>w[H++]=B);for(let F=0;F<d;++F)j(this.leftPad),j(this.separator);for(let F=0;F<T-1;++F)j(g[D+F]),j(this.separator);if(T>0){j(g[D+T-1]);for(let F=0;F<C;++F)j(this.separator),j(this.rightPad)}else{for(let F=0;F<C-1;++F)j(this.rightPad),j(this.separator);j(this.rightPad)}}}compute(g,c){const y=g.length,m=c.length;if(m>0){let u=c[0];if(0!==u)throw new Error(`First split value must be 0, got ${u}`);for(let d=1;d<m;++d){let C=c[d]>=u;if(C=C&&c[d]<=y,!C)throw new Error(`Invalid split value ${c[d]}, must be in [${u}, ${y}]`);u=c[d]}if(u!==y)throw new Error(`Last split value must be data size. Expected ${y}, got ${u}`)}const h=m-1,f=e.ZSL.getArrayFromDType("int32",m);if(0===y||0===m){const u=new Array(y);for(let d=0;d<=h;++d)f[d]=0;return[u,f]}f[0]=0;for(let u=1;u<=h;++u){const d=c[u]-c[u-1];let C=0;this.nGramWidths.forEach(T=>{C+=this.getNumNGrams(d,T)}),this.preserveShort&&d>0&&0===C&&(C=1),f[u]=f[u-1]+C}const p=new Array(f[h]);for(let u=0;u<h;++u){const d=c[u];let C=f[u];if(this.nGramWidths.forEach(T=>{const S=this.getNumNGrams(c[u+1]-c[u],T);this.createNGrams(g,d,p,C,S,T),C+=S}),this.preserveShort&&C===f[u]){const T=c[u+1]-c[u];if(0===T)continue;this.createNGrams(g,d,p,C,1,T+2*this.padWidth)}}return[p,f]}}function l(E,g,c,y,m,h,f,p){return new s(c,y,m,h,f,p).compute(E,g)}},70065:(pt,R,t)=>{"use strict";t.d(R,{S:()=>l});var e=t(41653);function s(E,g,c,y){if(!E.length)return;if(0===g.length){for(let h=0;h<E.length;++h)y.push(E.subarray(h,h+1));return}if(1===g.length){const h=g[0];let f=E.indexOf(h);for(;-1!==f;){const p=E.subarray(0,f);(!c||0!==p.length)&&y.push(p),f=(E=E.subarray(f+1)).indexOf(h)}return void((!c||0!==E.length)&&y.push(E))}let m=0;for(let h=0;h<E.length+1;h++)if(h===E.length||-1!==g.indexOf(E[h])){const f=E.subarray(m,h);(!c||0!==f.length)&&y.push(f),m=h+1}}function l(E,g,c){const y=E.length,m=[];let h=0,f=0;const p=new Array(y);for(let D=0;D<y;++D){const S=m.length;s(E[D],g,c,m);const b=m.length-S;p[D]=b,h+=b,f=Math.max(f,b)}const u=e.ZSL.getArrayFromDType("int32",2*h),d=new Array(h),C=[y,f];let T=0;for(let D=0;D<y;++D)for(let S=0;S<p[D];++S)u[2*T]=D,u[2*T+1]=S,d[T]=m[T],++T;return[u,d,C]}},72856:(pt,R,t)=>{"use strict";t.d(R,{f:()=>s});var e=t(41653);function s(l,E){const g=e.ZSL.getArrayFromDType("int32",l.length);for(let c=0;c<l.length;++c)g[c]=e.ZSL.fingerPrint64(l[c]).modulo(E).getLowBitsUnsigned();return g}},33197:(pt,R,t)=>{"use strict";t.d(R,{Zl:()=>y,dl:()=>E,jb:()=>c});var e=t(41653),s=t(99800),l=t(445);const E=(0,s.Z)((m,h)=>m-h),g=(0,l.B)((m,h,f,p)=>({real:m-f,imag:h-p})),c=(0,l.j)(e.PbM,E,g),y={kernelName:e.PbM,backendName:"cpu",kernelFunc:c}},8440:(pt,R,t)=>{"use strict";t.d(R,{D:()=>s});var e=t(41653);function s(l,E){const g=new Array(l.rank);for(let y=0;y<g.length;y++)g[y]=l.shape[y]*E[y];const c=(0,e.ra8)(g,l.dtype);for(let y=0;y<c.values.length;++y){const m=c.indexToLoc(y),h=new Array(l.rank);for(let p=0;p<h.length;p++)h[p]=m[p]%l.shape[p];const f=l.locToIndex(h);c.values[y]=l.values[f]}return c}},29956:(pt,R,t)=>{"use strict";t.d(R,{x:()=>E});var e=t(41653);const s=(g,c)=>{const y=c.value-g.value;return 0===y?g.index-c.index:y};function l(g,c,y=0,m=g.length-1){for(;m>y;){if(m-y>600){const u=m-y+1,d=c-y+1,C=Math.log(u),T=.5*Math.exp(2*C/3),D=.5*Math.sqrt(C*T*(u-T)/u)*Math.sign(d-u/2);l(g,c,Math.max(y,Math.floor(c-d*T/u+D)),Math.min(m,Math.floor(c+(u-d)*T/u+D)))}const h=g[c];let f=y,p=m;for(e.ZSL.swap(g,y,c),s(g[m],h)>0&&e.ZSL.swap(g,y,m);f<p;){for(e.ZSL.swap(g,f,p),f++,p--;s(g[f],h)<0;)f+=1;for(;s(g[p],h)>0;)p-=1}0===s(g[y],h)?e.ZSL.swap(g,y,p):(p+=1,e.ZSL.swap(g,p,m)),p<=c&&(y=p+1),c<=p&&(m=p-1)}}function E(g,c,y,m,h){const f=c[c.length-1],[p,u]=[g.length/f,f],d=e.ZSL.getTypedArrayFromDType(y,p*m),C=e.ZSL.getTypedArrayFromDType("int32",p*m);for(let D=0;D<p;D++){const S=D*u,b=g.subarray(S,S+u);let w=new Array(b.length);b.forEach((B,A)=>w[A]={value:B,index:A}),m<w.length&&(l(w,m),w=w.slice(0,m)),h&&w.sort(s);const H=D*m,j=d.subarray(H,H+m),F=C.subarray(H,H+m);for(let B=0;B<m;B++)j[B]=w[B].value,F[B]=w[B].index}const T=c.slice();return T[T.length-1]=m,[(0,e.ra8)(T,y,d),(0,e.ra8)(T,"int32",C)]}},87599:(pt,R,t)=>{"use strict";t.d(R,{W:()=>g,m:()=>E});var e=t(41653),s=t(27543),l=t(44169);function E(c){const{inputs:y,attrs:m,backend:h}=c,{x:f}=y,{perm:p}=m;(0,s.C)(f,"transpose");const d=new Array(f.shape.length);for(let S=0;S<d.length;S++)d[S]=f.shape[p[S]];const C=h.data.get(f.dataId).values,T=(0,l._)(C,f.shape,f.dtype,p,d);return{dataId:h.write(T,d,f.dtype),shape:d,dtype:f.dtype}}const g={kernelName:e.wx0,backendName:"cpu",kernelFunc:E}},44169:(pt,R,t)=>{"use strict";t.d(R,{_:()=>s});var e=t(41653);function s(l,E,g,c,y){const m=E.length,h=e.ZSL.sizeFromShape(E),f=e.ZSL.computeStrides(E),p=e.ZSL.computeStrides(y),u=e.ZSL.getTypedArrayFromDType(g,e.ZSL.sizeFromShape(y));for(let d=0;d<h;++d){const C=e.ZSL.indexToLoc(d,m,f),T=new Array(C.length);for(let S=0;S<T.length;S++)T[S]=C[c[S]];u[e.ZSL.locToIndex(T,m,p)]=l[d]}return u}},73033:(pt,R,t)=>{"use strict";t.d(R,{w:()=>s});var e=t(41653);function s(l,E,g,c){const y=e.ZSL.parseAxisParam(E,g)[0],m=[1,g[0],1];for(let S=0;S<y;S++)m[0]*=g[S];m[1]=g[y];for(let S=y+1;S<g.length;S++)m[2]*=g[S];const h=new Map,f=new Int32Array(g[y]),p=new e.ylz(m,c,l),u=[],d=1===m[0]&&1===m[2];for(let S=0;S<g[y];S++){let b;if(d)b=l[S].toString();else{const H=[];for(let j=0;j<m[0];j++)for(let F=0;F<m[2];F++)H.push(p.get(j,S,F));b=H.join(",")}const w=h.get(b);if(null!=w)f[S]=w;else{const H=h.size;h.set(b,H),f[S]=H,u.push(S)}}const C=m.slice();C[1]=h.size;const T=new e.ylz(C,c);u.forEach((S,b)=>{for(let w=0;w<m[0];w++)for(let H=0;H<m[2];H++)T.set(p.get(w,S,H),w,b,H)});const D=g.slice();return D[y]=C[1],{outputValues:T.values,outputShape:D,indices:f}}},99800:(pt,R,t)=>{"use strict";t.d(R,{Z:()=>s});var e=t(41653);function s(l){return(E,g,c,y,m)=>{const h=e.C0T.assertAndGetBroadcastShape(E,g),f=h.length,p=e.ZSL.computeStrides(h),u=e.ZSL.sizeFromShape(h),d=e.ZSL.getTypedArrayFromDType(m,u),C=E.length,T=g.length,D=e.ZSL.computeStrides(E),S=e.ZSL.computeStrides(g),b=e.C0T.getBroadcastDims(E,h),w=e.C0T.getBroadcastDims(g,h);if(b.length+w.length===0)for(let H=0;H<d.length;++H)d[H]=l(c[H%c.length],y[H%y.length]);else for(let H=0;H<d.length;++H){const j=e.ZSL.indexToLoc(H,f,p),F=j.slice(-C);b.forEach(x=>F[x]=0);const B=e.ZSL.locToIndex(F,C,D),A=j.slice(-T);w.forEach(x=>A[x]=0);const k=e.ZSL.locToIndex(A,T,S);d[H]=l(c[B],y[k])}return[d,h]}}},445:(pt,R,t)=>{"use strict";t.d(R,{B:()=>c,j:()=>g});var e=t(41653),s=t(27543),l=t(75148),E=t(46499);function g(y,m,h,f){return null==h?({inputs:p,backend:u})=>{const{a:d,b:C}=p,T=u;(0,s.C)([d,C],y);const D=T.data.get(d.dataId).values,S=T.data.get(C.dataId).values,b="string"===d.dtype?e.C0T.fromUint8ToStringArray(D):D,w="string"===d.dtype?e.C0T.fromUint8ToStringArray(S):S,H=f||d.dtype,[j,F]=m(d.shape,C.shape,b,w,H);return T.makeTensorInfo(F,H,j)}:({inputs:p,backend:u})=>{const{a:d,b:C}=p,T=u;if("complex64"===d.dtype||"complex64"===C.dtype){const D=(0,l.wg)({inputs:{x:d},backend:T,attrs:{dtype:"complex64"}}),S=T.data.get(D.dataId),w=S.complexTensorInfos.imag,H=T.data.get(S.complexTensorInfos.real.dataId).values,j=T.data.get(w.dataId).values,F=(0,l.wg)({inputs:{x:C},backend:T,attrs:{dtype:"complex64"}}),B=T.data.get(F.dataId),k=B.complexTensorInfos.imag,x=T.data.get(B.complexTensorInfos.real.dataId).values,V=T.data.get(k.dataId).values,[W,Y,Z]=h(d.shape,C.shape,H,j,x,V),it=T.makeTensorInfo(Z,"float32",W),at=T.makeTensorInfo(Z,"float32",Y),q=(0,E.f)({inputs:{real:it,imag:at},backend:T});return T.disposeIntermediateTensorInfo(D),T.disposeIntermediateTensorInfo(F),T.disposeIntermediateTensorInfo(it),T.disposeIntermediateTensorInfo(at),q}{const D=T.data.get(d.dataId).values,S=T.data.get(C.dataId).values,b=f||d.dtype,[w,H]=m(d.shape,C.shape,D,S,b);return T.makeTensorInfo(H,b,w)}}}function c(y){return(m,h,f,p,u,d)=>{const C=e.C0T.assertAndGetBroadcastShape(m,h),T=e.ZSL.sizeFromShape(C),D=C.length,S=e.ZSL.computeStrides(C),b=e.ZSL.getTypedArrayFromDType("float32",T),w=e.ZSL.getTypedArrayFromDType("float32",T),H=e.C0T.getBroadcastDims(m,C),j=e.C0T.getBroadcastDims(h,C),F=e.C0T.mergeRealAndImagArrays(f,p),B=e.C0T.mergeRealAndImagArrays(u,d),A=m.length,k=e.ZSL.computeStrides(m),x=h.length,V=e.ZSL.computeStrides(h);if(H.length+j.length===0)for(let W=0;W<b.length;W++){const Y=W%F.length,Z=W%B.length,it=y(F[2*Y],F[2*Y+1],B[2*Z],B[2*Z+1]);b[W]=it.real,w[W]=it.imag}else for(let W=0;W<b.length;W++){const Y=e.ZSL.indexToLoc(W,D,S),Z=Y.slice(-A);H.forEach(rt=>Z[rt]=0);const it=e.ZSL.locToIndex(Z,A,k),at=Y.slice(-x);j.forEach(rt=>at[rt]=0);const q=e.ZSL.locToIndex(at,x,V),ot=y(F[2*it],F[2*it+1],B[2*q],B[2*q+1]);b[W]=ot.real,w[W]=ot.imag}return[b,w,C]}}},20820:(pt,R,t)=>{"use strict";t.d(R,{o:()=>s});var e=t(41653);function s(l){return(E,g,c)=>{const y=e.ZSL.getArrayFromDType(g,E.length);for(let m=0;m<E.length;++m)y[m]=l(E[m],c);return y}}},80345:(pt,R,t)=>{"use strict";t.d(R,{F:()=>g,v:()=>E});var e=t(41653),s=t(27543),l=t(20820);function E(c,y,m){return g(c,(0,l.o)(y),m)}function g(c,y,m){return({inputs:h,attrs:f,backend:p})=>{const{x:u}=h;(0,s.C)(u,c);const d=p,C=d.data.get(u.dataId).values;let T;if("string"===u.dtype){if(!Array.isArray(C))throw new Error("String tensor's value was not an instance of Array");T=e.C0T.fromUint8ToStringArray(C)}else T=C;const D=m||u.dtype,S=y(T,D,f);return d.makeTensorInfo(u.shape,D,S)}}},10708:(pt,R,t)=>{"use strict";t.d(R,{U:()=>l});var e=t(41653),s=t(46499);function l(E,g,c="float32"){if("complex64"===c){const m=l(E,g,"float32"),h=l(E,g,"float32");return(0,s.f)({inputs:{real:m,imag:h},backend:E})}const y=e.ZSL.makeZerosTypedArray(e.ZSL.sizeFromShape(g),c);return E.makeTensorInfo(g,c,y)}},22412:(pt,R,t)=>{"use strict";t.d(R,{$p:()=>Li});var e={};t.r(e),t.d(e,{mx:()=>me.mx,XI:()=>ve.X,Nk:()=>ve.N,f6:()=>cn.f6,ct:()=>gn.ct,YG:()=>_n.YG,hH:()=>yn.h,z3:()=>Qn.z3,sG:()=>Cs.sG,uM:()=>Kn.uM,vS:()=>rs.vS,qB:()=>Ss.q,GG:()=>br.G,lg:()=>no.lg,rq:()=>eo.rq,cu:()=>Hr.cu,WR:()=>Gr.WR,GE:()=>co.G,px:()=>At.px,jC:()=>Yt.j,He:()=>kt.He,hE:()=>Gt.hE,BF:()=>oe.BF,Dk:()=>he.Dk,cl:()=>ye.cl,_B:()=>de._B,ub:()=>Ee.u,_f:()=>fn._,Ku:()=>Sn.K,qy:()=>zn.q,Zy:()=>Un.Zy,bu:()=>Hn.b,zv:()=>Ws.zv,dH:()=>re.dH,HS:()=>tr.HS,yH:()=>Ls.y,l3:()=>po.l,z9:()=>ho.z,x6:()=>fo.x6,_m:()=>us._,eW:()=>Mr.e,GK:()=>Po.G,SP:()=>mo.S,yr:()=>Oo.f,dl:()=>so.dl,Dw:()=>go.D,xT:()=>Ea.x,_X:()=>_a._,wz:()=>ya.w});var s=t(41653),l=t(10467);const E={},g={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function m(o,r){if(!(o in E)||null!=r){const a=function f(o,r){if(1!==o&&2!==o)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==r?function h(o){if(!(0,s._K2)().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&2===o)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(o):r;return n.addEventListener("webglcontextlost",a=>{a.preventDefault(),delete E[o]},!1),(0,s._K2)().getBool("SOFTWARE_WEBGL_ENABLED")&&(g.failIfMajorPerformanceCaveat=!1),1===o?n.getContext("webgl",g)||n.getContext("experimental-webgl",g):n.getContext("webgl2",g)}(o,r);if(null===a)return console.log("Could not get context for WebGL version",o),null;E[o]=a}const n=E[o];return null==n||n.isContextLost()?(delete E[o],m(o)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),E[o])}var p=function(o){return o[o.DENSE=0]="DENSE",o[o.SHARED_BATCH=1]="SHARED_BATCH",o}(p||{}),u=function(o){return o[o.RENDER=0]="RENDER",o[o.UPLOAD=1]="UPLOAD",o[o.PIXELS=2]="PIXELS",o[o.DOWNLOAD=3]="DOWNLOAD",o}(u||{}),d=function(o){return o[o.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",o[o.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",o[o.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",o[o.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",o[o.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",o}(d||{});function C(o,r){return[r,o]}function S(o){const r=s.ZSL.sizeFromShape(o),n=Math.ceil(r/4);return s.ZSL.sizeToSquarishShape(n)}function H(o,r){return[Math.max(1,Math.ceil(r/2)),Math.max(1,Math.ceil(o/2))]}function F(o,r){const n=o;let a,i,v,P,L,M,U,z,X,tt;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(a=n.R32F,i=n.R16F,v=n.RGBA16F,P=n.RGBA32F,L=n.RED,U=4,z=1,X=n.HALF_FLOAT,tt=n.FLOAT,M=n.RGBA8):(a=o.RGBA,i=o.RGBA,v=o.RGBA,P=n.RGBA,L=o.RGBA,U=4,z=4,X=null!=r?r.HALF_FLOAT_OES:null,tt=o.FLOAT,M=o.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:v,internalFormatPackedFloat:P,textureFormatFloat:L,downloadTextureFormat:M,downloadUnpackNumChannels:U,defaultNumChannels:z,textureTypeHalfFloat:X,textureTypeFloat:tt}}function B(o,r){const n=r();return(0,s._K2)().getBool("DEBUG")&&function A(o){const r=o.getError();if(r!==o.NO_ERROR)throw new Error("WebGL Error: "+function W(o,r){switch(r){case o.NO_ERROR:return"NO_ERROR";case o.INVALID_ENUM:return"INVALID_ENUM";case o.INVALID_VALUE:return"INVALID_VALUE";case o.INVALID_OPERATION:return"INVALID_OPERATION";case o.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case o.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case o.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${r}`}}(o,r))}(o),n}function V(o){return!!((0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===o||5.96e-8<Math.abs(o)&&Math.abs(o)<65504)}function Y(o,r){return an(o,()=>o.getExtension(r),'Extension "'+r+'" not supported on this browser.')}const at=/ERROR: [0-9]+:([0-9]+):/g;function q(o,r){const n=at.exec(r);if(null==n)return console.log(`Couldn't parse line number in error: ${r}`),void console.log(o);const a=+n[1],i=o.split("\n"),v=i.length.toString().length+2,P=i.map((X,tt)=>s.ZSL.rightPad((tt+1).toString(),v)+X);let L=0;for(let X=0;X<P.length;X++)L=Math.max(P[X].length,L);const M=P.slice(0,a-1),U=P.slice(a-1,a),z=P.slice(a);console.log(M.join("\n")),console.log(r.split("\n")[0]),console.log(`%c ${s.ZSL.rightPad(U[0],L)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(z.join("\n"))}function et(o,r){if(B(o,()=>o.validateProgram(r)),!1===o.getProgramParameter(r,o.VALIDATE_STATUS))throw console.log(o.getProgramInfoLog(r)),new Error("Shader program validation failed.")}function Xt(o,r,n,a,i,v,P){const L=o.getAttribLocation(r,n);return-1!==L&&(B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,a)),B(o,()=>o.vertexAttribPointer(L,i,o.FLOAT,!1,v,P)),B(o,()=>o.enableVertexAttribArray(L)),!0)}function Ie(o,r,n,a){B(o,()=>function ie(o,r,n){(function vn(o,r){const n=o.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=r+o.TEXTURE0;if(a<o.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(o,n),B(o,()=>o.activeTexture(o.TEXTURE0+n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,r))}(o,r,a)),B(o,()=>o.uniform1i(n,a))}function zt(o,r,n){B(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,n)),B(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,r,0))}function Jt(o,r){B(o,()=>o.bindFramebuffer(o.FRAMEBUFFER,r)),B(o,()=>o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,null,0))}function pe(o){const r=o.checkFramebufferStatus(o.FRAMEBUFFER);if(r!==o.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function ze(o,r){switch(r){case o.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case o.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case o.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${r}`}}(o,r))}function an(o,r,n){const a=B(o,()=>r());if(null==a)throw new Error(n);return a}function mn(o,r=2){return s.ZSL.sizeFromShape(o.slice(0,o.length-r))}function hn(o){if(0===o.length)throw Error("Cannot get rows and columns of an empty shape array.");return[o.length>1?o[o.length-2]:1,o[o.length-1]]}function $n(o){let r=[1,1,1];return 0===o.length||1===o.length&&1===o[0]||(r=[mn(o),...hn(o)]),r}function Gn(o){return o%2==0}function jn(o,r){if(o=o.slice(-2),r=r.slice(-2),s.ZSL.arraysEqual(o,r)||!o.length||!r.length||0===o[0]||0===o[1]||0===r[0]||0===r[1])return!0;if(o.length!==r.length){const n=o[o.length-1],a=r[r.length-1];if(n===a||Gn(n)&&Gn(a)&&(1===o[0]||1===r[0]))return!0}return o[1]===r[1]&&Gn(o[0])&&Gn(r[0])}let ls,ts;function $t(o,r){return null!=o.getExtension(r)}function Vt(o){try{if(null!=m(o))return!0}catch(r){return console.log("Error when getting WebGL context: ",r),!1}return!1}function vt(o){const r=F(o),n=o.createTexture();o.bindTexture(o.TEXTURE_2D,n),o.texImage2D(o.TEXTURE_2D,0,r.internalFormatFloat,1,1,0,r.textureFormatFloat,r.textureTypeFloat,null);const v=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,v),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,n,0);const P=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(n),o.deleteFramebuffer(v),P}function bt(o,r){Array.isArray(o)||(o=[o]),o.forEach(n=>{null!=n&&s.ZSL.assert("complex64"!==n.dtype,()=>`${r} does not support complex64 tensors in the WebGL backend.`)})}const Mt=(0,s._K2)();function ce(){let o,r,n,a,i,v,P,L,M,U;return 2===(0,s._K2)().getNumber("WEBGL_VERSION")?(o="#version 300 es",r="in",n="out",a="in",i="texture",v="outputColor",P="out vec4 outputColor;",L=(0,s._K2)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",M="",U="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(o="",r="attribute",n="varying",a="varying",i="texture2D",v="gl_FragColor",P="",L="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",M="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",U="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:o,attribute:r,varyingVs:n,varyingFs:a,texture2D:i,output:v,defineOutput:P,defineSpecialNaN:L,defineSpecialInf:M,defineRound:U}}function ge(o,r,n="index"){const a=s.ZSL.computeStrides(r);return a.map((i,v)=>`int ${o[v]} = ${n} / ${i}; ${v===a.length-1?`int ${o[v+1]} = ${n} - ${o[v]} * ${i}`:`index -= ${o[v]} * ${i}`};`).join("")}function Se(o,r,n="index"){const a=s.ZSL.computeStrides(r);return a.map((i,v)=>`int ${o[v]} = ${n} / outShapeStrides[${v}]; ${v===a.length-1?`int ${o[v+1]} = ${n} - ${o[v]} * outShapeStrides[${v}]`:`index -= ${o[v]} * outShapeStrides[${v}]`};`).join("")}function Ce(o){const r=s.ZSL.computeStrides(o).map(n=>n.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${r[0]} + coords.y * ${r[1]} + coords.z;\n  }\n`}Mt.registerFlag("HAS_WEBGL",()=>Mt.getNumber("WEBGL_VERSION")>0),Mt.registerFlag("WEBGL_VERSION",()=>Vt(2)?2:Vt(1)?1:0),Mt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Mt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Mt.get("WEBGL_VERSION")),Mt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Mt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Mt.registerFlag("WEBGL_PACK",()=>Mt.getBool("HAS_WEBGL")),Mt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_CLIP",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_REDUCE",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_CONV_IM2COL",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Mt.getBool("WEBGL_PACK")),Mt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function Es(o){if(null==ls){const r=m(o);ls=r.getParameter(r.MAX_TEXTURE_SIZE)}return ls}(Mt.getNumber("WEBGL_VERSION"))),Mt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function ps(o){if(null==ts){const r=m(o);ts=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ts)}(Mt.getNumber("WEBGL_VERSION"))),Mt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const o=Mt.getNumber("WEBGL_VERSION");return 0===o?0:function Vs(o){if(0===o)return 0;let r;const n=m(o);return r=$t(n,"EXT_disjoint_timer_query_webgl2")&&2===o?2:$t(n,"EXT_disjoint_timer_query")?1:0,r}(o)}),Mt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Mt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.eMq.isMobile()),Mt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function G(o){if(0===o)return!1;const r=m(o);if(1===o){if(!$t(r,"OES_texture_float"))return!1}else if(!$t(r,"EXT_color_buffer_float"))return!1;return vt(r)}(Mt.getNumber("WEBGL_VERSION"))),Mt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Mt.getBool("WEBGL_FORCE_F16_TEXTURES")&&Mt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Mt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function ct(o){if(0===o)return!1;const r=m(o);if(1!==o){if($t(r,"EXT_color_buffer_float"))return vt(r);const a="EXT_color_buffer_half_float";if($t(r,a)){const i=r.getExtension(a);return function Tt(o,r){const n=F(o,r),a=o.createTexture();o.bindTexture(o.TEXTURE_2D,a),o.texImage2D(o.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const P=o.createFramebuffer();o.bindFramebuffer(o.FRAMEBUFFER,P),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,a,0);const L=o.checkFramebufferStatus(o.FRAMEBUFFER)===o.FRAMEBUFFER_COMPLETE;return o.bindTexture(o.TEXTURE_2D,null),o.bindFramebuffer(o.FRAMEBUFFER,null),o.deleteTexture(a),o.deleteFramebuffer(P),L}(r,i)}return!1}return!(!$t(r,"OES_texture_float")||!$t(r,"WEBGL_color_buffer_float"))&&vt(r)}(Mt.getNumber("WEBGL_VERSION"))),Mt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>function It(o){return 2===o&&null!=m(o).fenceSync}(Mt.getNumber("WEBGL_VERSION"))),Mt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Mt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Mt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,o=>{if("number"!=typeof o)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${o}.`);if(o<0&&-1!==o)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${o}.`)}),Mt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>s.eMq.isMobile()?1:-1,o=>{if("number"!=typeof o)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${o}.`);if(o<0&&-1!==o)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${o}.`)}),Mt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Mt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Mt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Mt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Mt.registerFlag("WEBGL_EXP_CONV",()=>!1),Mt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Mt.getBool("IS_TEST")),Mt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Mt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Mt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),Mt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);const xe="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:nn}=s.C0T;function Ge(o,r,n){const a=[];if(o.forEach(lt=>{const xt=s.ZSL.sizeFromShape(lt.shapeInfo.logicalShape);if(lt.shapeInfo.isUniform?a.push(`uniform float ${lt.name}${xt>1?`[${xt}]`:""};`):(a.push(`uniform sampler2D ${lt.name};`),a.push(`uniform int offset${lt.name};`)),n.enableShapeUniforms){const{uniformShape:Rt}=_(n.packedInputs,lt.shapeInfo.logicalShape,lt.shapeInfo.texShape);switch(Rt.length){case 1:a.push(`uniform int ${lt.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${lt.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${lt.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${lt.name}Shape;`)}a.push(`uniform ivec2 ${lt.name}TexShape;`)}}),n.enableShapeUniforms){switch(r.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(lt=>{a.push(`uniform ${lt.type} ${lt.name}${lt.arrayIndex?`[${lt.arrayIndex}]`:""};`)});const i=a.join("\n"),v=o.map(lt=>function Vn(o,r,n=!1,a){let i="";i+=n?An(o,a):un(o,a);return o.shapeInfo.logicalShape.length<=r.logicalShape.length&&(i+=n?function Pr(o,r){const n=o.name,a=n.charAt(0).toUpperCase()+n.slice(1),i="get"+a+"AtOutCoords",v=o.shapeInfo.logicalShape.length,P=r.logicalShape.length,L=nn(o.shapeInfo.logicalShape,r.logicalShape),M=O(P),U=P-v;let z;const X=["x","y","z","w","u","v"];z=0===v?"":P<2&&L.length>=1?"coords = 0;":L.map(jt=>`coords.${X[jt+U]} = 0;`).join("\n");let tt="";tt=P<2&&v>0?"coords":o.shapeInfo.logicalShape.map((jt,Te)=>`coords.${X[Te+U]}`).join(", ");let lt="return outputValue;";const Rt=1===s.ZSL.sizeFromShape(o.shapeInfo.logicalShape),wt=1===s.ZSL.sizeFromShape(r.logicalShape);if(1!==v||Rt||wt){if(Rt&&!wt)lt=1===P?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(L.length){const jt=v-2,Te=v-1;L.indexOf(jt)>-1&&L.indexOf(Te)>-1?lt="return vec4(outputValue.x);":L.indexOf(jt)>-1?lt="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":L.indexOf(Te)>-1&&(lt="return vec4(outputValue.xx, outputValue.zz);")}}else lt="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${M} coords = getOutputCoords();\n      ${z}\n      vec4 outputValue = get${a}(${tt});\n      ${lt}\n    }\n  `}(o,r):function Or(o,r){const n=o.name,a=n.charAt(0).toUpperCase()+n.slice(1),i="get"+a+"AtOutCoords",L=o.shapeInfo.logicalShape.length,M=r.logicalShape.length;if(!o.shapeInfo.isUniform&&L===M&&null==o.shapeInfo.flatOffset&&s.ZSL.arraysEqual(o.shapeInfo.texShape,r.texShape))return`\n      float ${i}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const U=O(M),z=nn(o.shapeInfo.logicalShape,r.logicalShape),X=M-L;let tt;const lt=["x","y","z","w","u","v"];tt=0===L?"":M<2&&z.length>=1?"coords = 0;":z.map(Rt=>`coords.${lt[Rt+X]} = 0;`).join("\n");let xt="";return xt=M<2&&L>0?"coords":o.shapeInfo.logicalShape.map((Rt,Wt)=>`coords.${lt[Wt+X]}`).join(", "),`\n    float ${i}() {\n      ${U} coords = getOutputCoords();\n      ${tt}\n      return get${a}(${xt});\n    }\n  `}(o,r)),i}(lt,r,n.packedInputs,n.enableShapeUniforms)).join("\n"),P=r.texShape,L=ce(),M=function Wn(o){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${o.texture2D}(textureSampler, uv).r;\n    }\n  `}(L);let U,z,X=function hs(o){return`${o.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${o.varyingFs} vec2 resultUV;\n    ${o.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${o.defineSpecialNaN}\n    ${o.defineSpecialInf}\n    ${o.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ms}\n    ${Xs}\n    ${Qs}\n  `}(L);return r.isPacked?(U=function Rn(o,r,n){switch(o.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function Bs(o,r,n){const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,r,n);case 2:return function xr(o,r,n){const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(s.ZSL.arraysEqual(o,r))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const i=Math.ceil(o[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(o,r,n);case 3:return function or(o,r,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=Math.ceil(o[2]/2),v=i*Math.ceil(o[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${v};\n      index -= b * ${v};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(o,r,n);default:return function kr(o,r,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=Math.ceil(o[o.length-1]/2),v=i*Math.ceil(o[o.length-2]/2);let P=v,L="",M="b, r, c";for(let U=2;U<o.length-1;U++)P*=o[o.length-U-1],L=`\n      int b${U} = index / ${P};\n      index -= b${U} * ${P};\n    `+L,M=`b${U}, `+M;return`\n    ivec${o.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${L}\n\n      int b = index / ${v};\n      index -= b * ${v};\n\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec${o.length}(${M});\n    }\n  `}(o,r,n)}}(r.logicalShape,P,n.enableShapeUniforms),z=function _s(o){return`\n    void setOutput(vec4 val) {\n      ${o.output} = val;\n    }\n  `}(L)):(U=function ns(o,r,n){switch(o.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function Ks(o,r,n){return 1===r[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return resTexRC.x * ${r[1]} + resTexRC.y;\n    }\n  `}(0,r,n);case 2:return function Wr(o,r,n){return s.ZSL.arraysEqual(o,r)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `:1===o[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${r[0]}, ${r[1]}));\n        int index = resTexRC.x * ${r[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===o[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${r[0]}, ${r[1]}));\n        int index = resTexRC.x * ${r[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = index / ${o[1]};\n      int c = index - r * ${o[1]};\n      return ivec2(r, c);\n    }\n  `}(o,r,n);case 3:return function Br(o,r,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Se(["r","c","d"],o)}\n    return ivec3(r, c, d);\n  }\n`;const a=ge(["r","c","d"],o);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(o,r,n);case 4:return function Fr(o,r,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Se(["r","c","d","d2"],o)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const a=ge(["r","c","d","d2"],o);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(o,r,n);case 5:return function yr(o,r){const n=ge(["r","c","d","d2","d3"],o);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${r[0]},\n                             ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(o,r);case 6:return function zs(o,r){const n=ge(["r","c","d","d2","d3","d4"],o);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(o,r);default:throw new Error(`${o.length}-D output sampling is not yet supported`)}}(r.logicalShape,P,n.enableShapeUniforms),z=function Xn(o){return`\n    void setOutput(float val) {\n      ${o.output} = vec4(val, 0, 0, 0);\n    }\n  `}(L)),n.packedInputs&&(X+=Ps),[X,M,z,i,U,v,n.userCode].join("\n")}function un(o,r=!1){const n=o.shapeInfo.logicalShape;switch(n.length){case 0:return function vr(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(o.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[i,v]=o.shapeInfo.texShape;if(1===i&&1===v)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const P=Os(n);if(r)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${P});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[L,M]=o.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${L}, ${M}, ${P});\n      return sampleTexture(${n}, uv);\n    }\n  `}(o,r);case 1:return function Tr(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(o.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${ks(o)}\n      }\n    `;const i=o.shapeInfo.texShape,v=i[0],P=i[1];if(1===P&&1===v)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const L=Os(n);return 1===P?r?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${L}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${L}) + 0.5) / ${v}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===v?r?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${L}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${L}) + 0.5) / ${P}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:r?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${L});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${v}, ${P}, index + ${L});\n      return sampleTexture(${n}, uv);\n    }\n  `}(o,r);case 2:return function Gs(o,r){const n=o.shapeInfo.logicalShape,a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape;if(null!=v&&s.ZSL.arraysEqual(n,v))return r?`\n      float ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${v[1]}.0, ${v[0]}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const{newShape:P,keptDims:L}=s.ZSL.squeezeShape(n);if(P.length<n.length){const lt=["row","col"];return`\n      ${un(I(o,P),r)}\n      float ${i}(int row, int col) {\n        return ${i}(${K(lt,L)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ks(o)}\n      }\n    `;const U=v[0],z=v[1],X=Os(a);return 1===z?r?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${X}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${X}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${U}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===U?r?`\n      float ${i}(int row, int col) {\n        float index = dot(vec3(row, col, ${X}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${X}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${z}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:r?`\n      float ${i}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${X};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${X};\n    vec2 uv = uvFromFlat(${U}, ${z}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(o,r);case 3:return function Dr(o,r){const n=o.shapeInfo.logicalShape,a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),v=n[1]*n[2],P=n[2],{newShape:L,keptDims:M}=s.ZSL.squeezeShape(n);if(L.length<n.length){const Wt=["row","col","depth"];return`\n        ${un(I(o,L),r)}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${K(Wt,M)});\n        }\n      `}if(o.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${v}, ${P}, 1)));\n        ${ks(o)}\n      }\n    `;const z=o.shapeInfo.texShape,X=z[0],tt=z[1],lt=o.shapeInfo.flatOffset;if(tt===v&&null==lt)return r?`\n      float ${i}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${P}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${tt}.0, ${X}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(tt===P&&null==lt)return r?`\n      float ${i}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${tt}.0, ${X}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const xt=Os(a);return r?`\n    float ${i}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${xt};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${v} + col * ${P} + depth + ${xt};\n        vec2 uv = uvFromFlat(${X}, ${tt}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(o,r);case 4:return function ir(o,r){const n=o.shapeInfo.logicalShape,a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),v=n[3],P=n[2]*v,L=n[1]*P,{newShape:M,keptDims:U}=s.ZSL.squeezeShape(n);if(M.length<n.length){const Te=["row","col","depth","depth2"];return`\n      ${un(I(o,M),r)}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${K(Te,U)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${L}, ${P}, ${v}, 1)));\n        ${ks(o)}\n      }\n    `;const z=o.shapeInfo.flatOffset,X=o.shapeInfo.texShape,tt=X[0],lt=X[1],xt=`int stride2 = ${a}Shape[3];`,Rt=`int stride1 = ${a}Shape[2] * stride2;`,Wt=`int stride0 = ${a}Shape[1] * stride1;`;if(lt===L&&null==z)return r?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        ${xt}\n        ${Rt}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${P}, ${v}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${lt}.0, ${tt}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(lt===v&&null==z)return r?`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${lt}.0, ${tt}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const wt=Os(a);return r?`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${xt}\n      ${Rt}\n      ${Wt}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${wt});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${L} + col * ${P} +\n          depth * ${v} + depth2;\n      vec2 uv = uvFromFlat(${tt}, ${lt}, index + ${wt});\n      return sampleTexture(${a}, uv);\n    }\n  `}(o,r);case 5:return function Ur(o){const r=o.shapeInfo.logicalShape,n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=r[4],v=r[3]*i,P=r[2]*v,L=r[1]*P,{newShape:M,keptDims:U}=s.ZSL.squeezeShape(r);if(M.length<r.length){const Wt=["row","col","depth","depth2","depth3"];return`\n      ${un(I(o,M))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${K(Wt,U)});\n      }\n    `}if(o.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${L}, ${P}, ${v}, ${i})) +\n          depth3;\n        ${ks(o)}\n      }\n    `;const z=o.shapeInfo.flatOffset,X=o.shapeInfo.texShape,tt=X[0],lt=X[1];if(lt===L&&null==z)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${P}, ${v}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${lt}.0, ${tt}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(lt===i&&null==z)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${r[1]*r[2]*r[3]},\n               ${r[2]*r[3]}, ${r[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${lt}.0, ${tt}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${L} + col * ${P} + depth * ${v} +\n          depth2 * ${i} + depth3 + ${Os(n)};\n      vec2 uv = uvFromFlat(${tt}, ${lt}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(o);case 6:return function qs(o){const r=o.shapeInfo.logicalShape,n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:v}=s.ZSL.squeezeShape(r);if(i.length<r.length){const wt=["row","col","depth","depth2","depth3","depth4"];return`\n      ${un(I(o,i))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${K(wt,v)});\n      }\n    `}const P=r[5],L=r[4]*P,M=r[3]*L,U=r[2]*M,z=r[1]*U;if(o.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${z}, ${U}, ${M}, ${L})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${P}, 1)));\n        ${ks(o)}\n      }\n    `;const X=o.shapeInfo.flatOffset,tt=o.shapeInfo.texShape,lt=tt[0],xt=tt[1];if(xt===z&&null==X)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${U}, ${M}, ${L}, ${P})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${xt}.0, ${lt}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(xt===P&&null==X)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${r[1]*r[2]*r[3]*r[4]},\n               ${r[2]*r[3]*r[4]},\n               ${r[3]*r[4]},\n               ${r[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${xt}.0, ${lt}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${z} + col * ${U} + depth * ${M} +\n          depth2 * ${L} + depth3 * ${P} + depth4 + ${Os(n)};\n      vec2 uv = uvFromFlat(${lt}, ${xt}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(o);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function An(o,r){switch(o.shapeInfo.logicalShape.length){case 0:return function Js(o){const r=o.name;return`\n    vec4 ${"get"+r.charAt(0).toUpperCase()+r.slice(1)}() {\n      return ${ce().texture2D}(${r}, halfCR);\n    }\n  `}(o);case 1:return function ar(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=o.shapeInfo.texShape,v=ce();if(r)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${v.texture2D}(${n}, uv);\n    }\n  `;const P=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${P[0]}, ${P[1]}, index);\n      return ${v.texture2D}(${n}, uv);\n    }\n  `}(o,r);case 2:return function Rs(o,r){const n=o.shapeInfo.logicalShape,a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape,P=v[0],L=v[1],M=ce();if(null!=v&&s.ZSL.arraysEqual(n,v))return r?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${M.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${L}.0, ${P}.0);\n\n        return ${M.texture2D}(${a}, uv);\n      }\n    `;if(r)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${M.texture2D}(${a}, uv);\n    }\n  `;const U=[Math.ceil(v[0]/2),Math.ceil(v[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${U[0]}, ${U[1]}, row, col);\n      return ${M.texture2D}(${a}, uv);\n    }\n  `}(o,r);case 3:return function Cr(o,r){const n=o.shapeInfo.logicalShape,a=o.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),v=o.shapeInfo.texShape,P=[Math.ceil(v[0]/2),Math.ceil(v[1]/2)];if(1===n[0]){const lt=[1,2],Rt=["b","row","col"];return`\n        ${An(I(o,n.slice(1)),r)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${K(Rt,lt)});\n        }\n      `}const L=ce();if(r)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${L.texture2D}(${a}, uv);\n    }\n  `;const M=P[0],U=P[1],z=Math.ceil(n[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${M}, ${U}, ${z*Math.ceil(n[1]/2)}, ${z}, b, row, col);\n      return ${L.texture2D}(${a}, uv);\n    }\n  `}(o,r);default:return function Ir(o,r){const n=o.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=ce();if(r)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${n}, uv);\n    }\n  `;const v=o.shapeInfo.logicalShape,P=v.length,L=o.shapeInfo.texShape,M=[Math.ceil(L[0]/2),Math.ceil(L[1]/2)],U=M[0],z=M[1],X=Math.ceil(v[P-1]/2);let tt=X*Math.ceil(v[P-2]/2),lt="int b, int row, int col",xt=`b * ${tt} + (row / 2) * ${X} + (col / 2)`;for(let Rt=2;Rt<P-1;Rt++)lt=`int b${Rt}, `+lt,tt*=v[P-Rt-1],xt=`b${Rt} * ${tt} + `+xt;return`\n    vec4 ${a}(${lt}) {\n      int index = ${xt};\n      int texR = index / ${z};\n      int texC = index - texR * ${z};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${z}, ${U});\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(o,r)}}const ms="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xs="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qs="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ps="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Os(o){return`offset${o}`}function ks(o){const r=o.name,n=s.ZSL.sizeFromShape(o.shapeInfo.logicalShape);return n<2?`return ${r};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${r}[i];\n      }\n    }\n  `}function O(o){if(o<=1)return"int";if(2===o)return"ivec2";if(3===o)return"ivec3";if(4===o)return"ivec4";if(5===o)return"ivec5";if(6===o)return"ivec6";throw Error(`GPU for rank ${o} is not yet supported`)}function _(o,r,n){const{newShape:a,keptDims:i}=s.ZSL.squeezeShape(r),v=r.length,P=o&&3===v&&1===r[0],L=P?r.slice(1):a,M=!o&&v>1&&!s.ZSL.arraysEqual(r,n)&&a.length<v||P;return{useSqueezeShape:M,uniformShape:M?L:r,keptDims:i}}function I(o,r){const n=JSON.parse(JSON.stringify(o));return n.shapeInfo.logicalShape=r,n}function K(o,r){return r.map(n=>o[n]).join(", ")}function st(o,r,n){const a=[],i=[];let v,P,L,M=null,U=null;U=o.getUniformLocation(n,"NAN",!1),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&(M=o.getUniformLocation(n,"INFINITY",!1));const z=!1;for(const X of r.variableNames){const tt={name:X,uniform:o.getUniformLocation(n,X,z),offset:o.getUniformLocation(n,`offset${X}`,z)};r.enableShapeUniforms&&(tt.shape=o.getUniformLocation(n,`${X}Shape`,z),tt.texShape=o.getUniformLocation(n,`${X}TexShape`,z)),a.push(tt)}if(r.enableShapeUniforms&&(v=o.getUniformLocation(n,"outShape",z),L=o.getUniformLocation(n,"outShapeStrides",z),P=o.getUniformLocation(n,"outTexShape",z)),r.customUniforms)for(const X of r.customUniforms)i.push(o.getUniformLocation(n,X.name,z));return{variablesLocations:a,customUniformLocations:i,infLoc:M,nanLoc:U,outShapeLocation:v,outShapeStridesLocation:L,outTexShapeLocation:P}}function Nt(o,r){if(o.length!==r.length)throw Error(`Binary was compiled with ${o.length} inputs, but was executed with ${r.length} inputs`);o.forEach((n,a)=>{const i=n.logicalShape,v=r[a],P=v.shape;if(!s.ZSL.arraysEqual(i,P))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${P} must match`);if(n.isUniform&&v.isUniform)return;const L=n.texShape,M=v.isUniform?null:v.texData.texShape;if(!s.ZSL.arraysEqual(L,M))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${L} and ${M} must match`)})}function De(o){return(0,s._K2)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&o<=4}class Le{constructor(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ce();this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Se(["r","c","d"],r):ge(["r","c","d"],r)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class je{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=p.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ce();this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Se(["r","c","d"],r):ge(["r","c","d"],r)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class en{constructor(r){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const n=ce();this.outputShape=r,this.userCode=`\n      ${xe}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${n.output} = encode_float(x);\n      }\n    `}}class Dn{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const n=ce();this.outputShape=r,this.userCode=`\n      ${xe}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${n.output} = encode_float(x);\n      }\n    `}}const Ln={R:0,G:1,B:2,A:3};class xn{constructor(r,n=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const i=ce();this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length);let v="result";n&&(v="floor(result * 255. + 0.5)");let P="";for(let L=0;L<a.length;L++)P+=`\n          if(offset == ${L}) {\n            result = values[${Ln[a[L]]}];\n          }`;this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Ce(r)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${a.length});\n\n        flatIndex = idiv(flatIndex, ${a.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${i.texture2D}(A, uv);\n          ${P}\n        }\n        ${i.output} = vec4(${v}, 0., 0., 0.);\n      }\n    `}}class on{constructor(r,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=ce();this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length);let i="",v="result";n&&(v="floor(result * 255. + 0.5)");for(let P=0;P<=1;P++)for(let L=0;L<=1;L++){const M=2*P+L;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${L} < ${this.enableShapeUniforms?"outShape[2]":`${r[2]}`}) {\n          localCoords[2] += ${L};\n          if (localCoords[1] + ${P} < ${this.enableShapeUniforms?"outShape[1]":`${r[1]}`}) {\n            localCoords[1] += ${P};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${a.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${M}] = values[0];\n            } else if (offset == 1) {\n              result[${M}] = values[1];\n            } else if (offset == 2) {\n              result[${M}] = values[2];\n            } else {\n              result[${M}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Ce(r)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${i}\n\n          ${a.output} = ${v};\n        }\n    `}}function fs(o,r,n,a,i,v){!function Ht(o,r){const n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(o<=0||r<=0)throw new Error(`Requested texture size [${o}x${r}] is invalid.`);if(o>n||r>n)throw new Error(`Requested texture size [${o}x${r}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(r,n);const P=function se(o){return an(o,()=>o.createTexture(),"Unable to create WebGLTexture.")}(o),L=o.TEXTURE_2D;return B(o,()=>o.bindTexture(L,P)),B(o,()=>o.texParameteri(L,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE)),B(o,()=>o.texParameteri(L,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE)),B(o,()=>o.texParameteri(L,o.TEXTURE_MIN_FILTER,o.NEAREST)),B(o,()=>o.texParameteri(L,o.TEXTURE_MAG_FILTER,o.NEAREST)),1===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texImage2D(L,0,a,r,n,0,i,v,null)):B(o,()=>o.texStorage2D(L,1,a,r,n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null)),{texture:P,texShape:[n,r]}}function Bn(o){return o.internalFormatFloat}function Hs(o){return o.internalFormatHalfFloat}function ur(o){return o.downloadTextureFormat}function dr(o){return o.internalFormatPackedFloat}function Kr(o){return o.internalFormatPackedHalfFloat}class pr{constructor(r){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=(0,s._K2)().getNumber("WEBGL_VERSION");if(null!=r?(this.gl=r,function y(o,r){E[o]=r}(n,r)):this.gl=m(n),r=this.gl,2===(0,s._K2)().getNumber("WEBGL_VERSION")){const v=r;this.createVertexArray=()=>B(v,()=>v.createVertexArray()),this.bindVertexArray=P=>B(v,()=>v.bindVertexArray(P)),this.deleteVertexArray=P=>B(v,()=>v.deleteVertexArray(P)),this.getVertexArray=()=>B(v,()=>v.getParameter(v.VERTEX_ARRAY_BINDING))}else if(null!=r){const v=r.getExtension("OES_vertex_array_object");if(null==v)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>B(r,()=>v.createVertexArrayOES()),this.bindVertexArray=P=>B(r,()=>v.bindVertexArrayOES(P)),this.deleteVertexArray=P=>B(r,()=>v.deleteVertexArrayOES(P)),this.getVertexArray=()=>B(r,()=>r.getParameter(v.VERTEX_ARRAY_BINDING_OES))}let a="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s._K2)().getNumber("WEBGL_VERSION")){const P="OES_texture_half_float";if(this.textureFloatExtension=Y(this.gl,"OES_texture_float"),$t(this.gl,P))this.textureHalfFloatExtension=Y(this.gl,P);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),$t(this.gl,i))this.colorBufferHalfFloatExtension=Y(this.gl,i);else if((0,s._K2)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",$t(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else{if(!$t(this.gl,i))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(i)}this.vertexBuffer=function ss(o){return function yt(o,r){const n=an(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,n)),B(o,()=>o.bufferData(o.ARRAY_BUFFER,r,o.STATIC_DRAW)),n}(o,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function Ts(o){return function mt(o,r){const n=an(o,()=>o.createBuffer(),"Unable to create WebGLBuffer");return B(o,()=>o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,n)),B(o,()=>o.bufferData(o.ELEMENT_ARRAY_BUFFER,r,o.STATIC_DRAW)),n}(o,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function ue(o){return an(o,()=>o.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=F(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s._K2)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const r=this.gl;B(r,()=>r.finish()),B(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,null)),B(r,()=>r.deleteFramebuffer(this.framebuffer)),B(r,()=>r.bindBuffer(r.ARRAY_BUFFER,null)),B(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,null)),B(r,()=>r.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(r,n){return this.throwIfDisposed(),function Fs(o,r,n,a){const[i,v]=C(r,n);return fs(o,i,v,Bn(a),a.textureFormatFloat,o.FLOAT)}(this.gl,r,n,this.textureConfig)}createFloat16MatrixTexture(r,n){return this.throwIfDisposed(),function lr(o,r,n,a){const[i,v]=C(r,n);return fs(o,i,v,Hs(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,r,n,this.textureConfig)}createUnsignedBytesMatrixTexture(r,n){return this.throwIfDisposed(),function cr(o,r,n,a){const[i,v]=C(r,n);return fs(o,i,v,ur(a),o.RGBA,o.UNSIGNED_BYTE)}(this.gl,r,n,this.textureConfig)}uploadPixelDataToTexture(r,n){this.throwIfDisposed(),function Qr(o,r,n){B(o,()=>o.bindTexture(o.TEXTURE_2D,r)),n.data instanceof Uint8Array?2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,n.width,n.height,o.RGBA,o.UNSIGNED_BYTE,n.data)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,n.width,n.height,0,o.RGBA,o.UNSIGNED_BYTE,n.data)):2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,o.RGBA,o.UNSIGNED_BYTE,n)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,o.RGBA,o.RGBA,o.UNSIGNED_BYTE,n)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null))}(this.gl,r,n)}uploadDenseMatrixToTexture(r,n,a,i){this.throwIfDisposed(),function Xr(o,r,n,a,i,v){let P,L,M;B(o,()=>o.bindTexture(o.TEXTURE_2D,r)),i instanceof Uint8Array?(P=new Uint8Array(n*a*4),L=o.UNSIGNED_BYTE,M=o.RGBA):(P=new Float32Array(n*a*4),L=o.FLOAT,M=v.internalFormatPackedFloat),P.set(i),2===(0,s._K2)().getNumber("WEBGL_VERSION")?B(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,n,a,o.RGBA,L,P)):B(o,()=>o.texImage2D(o.TEXTURE_2D,0,M,n,a,0,o.RGBA,L,P)),B(o,()=>o.bindTexture(o.TEXTURE_2D,null))}(this.gl,r,n,a,i,this.textureConfig)}createFloat16PackedMatrixTexture(r,n){return this.throwIfDisposed(),function Yr(o,r,n,a){const[i,v]=H(r,n);return fs(o,i,v,Kr(a),o.RGBA,a.textureTypeHalfFloat)}(this.gl,r,n,this.textureConfig)}createPackedMatrixTexture(r,n){return this.throwIfDisposed(),function Vr(o,r,n,a){const[i,v]=H(r,n);return fs(o,i,v,dr(a),o.RGBA,o.FLOAT)}(this.gl,r,n,this.textureConfig)}deleteMatrixTexture(r){this.throwIfDisposed(),this.outputTexture===r&&(Jt(this.gl,this.framebuffer),this.outputTexture=null),B(this.gl,()=>this.gl.deleteTexture(r))}downloadByteEncodedFloatMatrixFromOutputTexture(r,n,a){return this.downloadMatrixDriver(r,()=>function qr(o,r,n,a){const[i,v]=C(r,n),L=new Uint8Array(function T(o,r){return o*r}(r*n,4));return B(o,()=>o.readPixels(0,0,i,v,a.downloadTextureFormat,o.UNSIGNED_BYTE,L)),new Float32Array(L.buffer)}(this.gl,n,a,this.textureConfig))}downloadPackedMatrixFromBuffer(r,n,a,i,v,P){return function zr(o,r,n,a,i,v,P,L){const M=o,U=new Float32Array(function j(o,r){const[n,a]=H(o,r);return n*a*4}(v,P));return M.bindBuffer(M.PIXEL_PACK_BUFFER,r),M.getBufferSubData(M.PIXEL_PACK_BUFFER,0,U),M.bindBuffer(M.PIXEL_PACK_BUFFER,null),U}(this.gl,r,0,0,0,v,P)}downloadFloat32MatrixFromBuffer(r,n){return function Ar(o,r,n){const a=o,i=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,r),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,i),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),i}(this.gl,r,n)}createBufferFromTexture(r,n,a){this.bindTextureToFrameBuffer(r);const i=function Jr(o,r,n){const i=o.createBuffer();B(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,i));const L=16*r*n;return B(o,()=>o.bufferData(o.PIXEL_PACK_BUFFER,L,o.STREAM_READ)),B(o,()=>o.readPixels(0,0,n,r,o.RGBA,o.FLOAT,0)),B(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,null)),i}(this.gl,n,a);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const r=this.createFence(this.gl);return this.pollFence(r)}createFence(r){let n,a;if((0,s._K2)().getBool("WEBGL_FENCE_API_ENABLED")){const i=r,v=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);r.flush(),a=()=>{const P=i.clientWaitSync(v,0,0);return P===i.ALREADY_SIGNALED||P===i.CONDITION_SATISFIED},n=v}else(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(n,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:n,isFencePassed:a}}downloadMatrixFromPackedTexture(r,n,a){return this.downloadMatrixDriver(r,()=>function to(o,r,n){const a=new Float32Array(r*n*4);return B(o,()=>o.readPixels(0,0,n,r,o.RGBA,o.FLOAT,a)),a}(this.gl,n,a))}createProgram(r){this.throwIfDisposed();const n=this.gl;null==this.vertexShader&&(this.vertexShader=function Pn(o){const r=ce();return function Z(o,r){const n=an(o,()=>o.createShader(o.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(B(o,()=>o.shaderSource(n,r)),B(o,()=>o.compileShader(n)),!1===o.getShaderParameter(n,o.COMPILE_STATUS))throw console.log(o.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(o,`${r.version}\n    precision highp float;\n    ${r.attribute} vec3 clipSpacePos;\n    ${r.attribute} vec2 uv;\n    ${r.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(n));const a=function ot(o){return an(o,()=>o.createProgram(),"Unable to create WebGLProgram.")}(n);B(n,()=>n.attachShader(a,this.vertexShader)),B(n,()=>n.attachShader(a,r)),function rt(o,r){if(B(o,()=>o.linkProgram(r)),!(0,s._K2)().get("ENGINE_COMPILE_ONLY")&&!1===o.getProgramParameter(r,o.LINK_STATUS))throw console.log(o.getProgramInfoLog(r)),new Error("Failed to link vertex and fragment shaders.")}(n,a);const i=Object.assign(a,{vao:this.createVertexArray()});return this.debug&&et(n,i),i}buildVao(r){this.setProgram(r),this.bindVertexArray(r.vao);const n=this.gl;B(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function Sr(o,r,n){B(o,()=>o.bindBuffer(o.ARRAY_BUFFER,n)),Xt(o,r,"clipSpacePos",n,3,20,0)&&Xt(o,r,"uv",n,2,20,12)}(n,r,this.vertexBuffer)}deleteProgram(r){this.throwIfDisposed(),r===this.program&&(this.program=null),null!=r&&(B(this.gl,()=>this.gl.deleteProgram(r)),this.deleteVertexArray(r.vao))}setProgram(r){this.throwIfDisposed(),this.program=r,null!=this.program&&this.debug&&et(this.gl,this.program),B(this.gl,()=>this.gl.useProgram(r))}getUniformLocation(r,n,a=!0){return this.throwIfDisposed(),a?function ne(o,r,n){return an(o,()=>o.getUniformLocation(r,n),'uniform "'+n+'" not present in program.')}(this.gl,r,n):function Pe(o,r,n){return o.getUniformLocation(r,n)}(this.gl,r,n)}getAttributeLocation(r,n){return this.throwIfDisposed(),B(this.gl,()=>this.gl.getAttribLocation(r,n))}getUniformLocationNoThrow(r,n){return this.throwIfDisposed(),this.gl.getUniformLocation(r,n)}setInputMatrixTexture(r,n,a){this.throwIfDisposed(),this.throwIfNoProgram(),Ie(this.gl,r,n,a)}setOutputMatrixTexture(r,n,a){this.setOutputMatrixTextureDriver(r,a,n)}setOutputPackedMatrixTexture(r,n,a){this.throwIfDisposed();const[i,v]=H(n,a);this.setOutputMatrixTextureDriver(r,i,v)}setOutputMatrixWriteRegion(r,n,a,i){this.setOutputMatrixWriteRegionDriver(a,r,i,n)}setOutputPackedMatrixWriteRegion(r,n,a,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&et(this.gl,this.program),pe(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const r=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}B(r,()=>r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),B(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Y(this.gl,2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const a=this.gl,i=this.getQueryTimerExtensionWebGL2(),v=a.createQuery();return a.beginQuery(i.TIME_ELAPSED_EXT,v),v}const r=this.getQueryTimerExtensionWebGL1(),n=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,n),n}endQuery(){if(2===(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const n=this.gl,a=this.getQueryTimerExtensionWebGL2();return void n.endQuery(a.TIME_ELAPSED_EXT)}const r=this.getQueryTimerExtensionWebGL1();r.endQueryEXT(r.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(r){var n=this;return(0,l.A)(function*(){return yield s.ZSL.repeatedTry(()=>n.disposed||n.isQueryAvailable(r,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),n.getQueryTime(r,(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})()}getQueryTime(r,n){if(0===n)return null;if(2===n){const a=this.gl;return a.getQueryParameter(r,a.QUERY_RESULT)/1e6}{const a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(r,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(r,n){if(0===n)return!0;if(2===n){const a=this.gl,i=this.getQueryTimerExtensionWebGL2(),v=a.getQueryParameter(r,a.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),v&&!this.disjoint}{const a=this.getQueryTimerExtensionWebGL1(),i=a.getQueryObjectEXT(r,a.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(r){return new Promise(n=>{this.addItemToPoll(()=>r.isFencePassed(),()=>n())})}pollItems(){const r=function Bt(o){let r=0;for(;r<o.length&&o[r]();++r);return r-1}(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=r;++n){const{resolveFn:a}=this.itemsToPoll[n];a()}this.itemsToPoll=this.itemsToPoll.slice(r+1)}addItemToPoll(r,n){if(this.itemsToPoll.push({isDoneFn:r,resolveFn:n}),this.itemsToPoll.length>1)return;let a;"setTimeoutCustom"in(0,s._K2)().platform&&(a=(0,s._K2)().platform.setTimeoutCustom.bind((0,s._K2)().platform)),s.ZSL.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,a)}bindTextureToFrameBuffer(r){this.throwIfDisposed(),zt(this.gl,r,this.framebuffer),this.debug&&pe(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(zt(this.gl,this.outputTexture,this.framebuffer),this.debug&&pe(this.gl)):Jt(this.gl,this.framebuffer)}downloadMatrixDriver(r,n){this.bindTextureToFrameBuffer(r);const a=n();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(r,n,a){this.throwIfDisposed();const i=this.gl;zt(i,r,this.framebuffer),this.debug&&pe(i),this.outputTexture=r,B(i,()=>i.viewport(0,0,n,a)),B(i,()=>i.scissor(0,0,n,a))}setOutputMatrixWriteRegionDriver(r,n,a,i){this.throwIfDisposed(),B(this.gl,()=>this.gl.scissor(r,n,a,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var re=t(13375),me=t(6936),ve=t(40364),cn=t(74291),gn=t(75148),_n=t(18946),yn=t(91332),Qn=t(71007),Cs=t(18692),Kn=t(3878),rs=t(2017),Ss=t(86315),br=t(60509),eo=t(89505),no=t(1885),Gr=t(64730),Hr=t(11040),co=t(43905),At=t(94621),Yt=t(33438),kt=t(40553),Gt=t(32747),oe=t(92287),he=t(86705),ye=t(13432),de=t(88054),Ee=t(6567),fn=t(8161),Sn=t(673),zn=t(6251),Un=t(36499),Hn=t(94014),Ws=t(94303),tr=t(63685),Ls=t(20273),po=t(35298),ho=t(19454),fo=t(94985),us=t(32596),Mr=t(2821),Po=t(48953),mo=t(70065),Oo=t(72856),so=t(33197),go=t(8440),Ea=t(29956),_a=t(44169),ya=t(73033);const{mx:xa,XI:$o,Nk:va,f6:Ta,ct:Ca,YG:Da,hH:Ia,z3:Pa,sG:Oa,uM:Sa,vS:Aa,qB:ba,GG:Ma,rq:Na,lg:Ra,WR:La,cu:$a,GE:wa,px:Ba,jC:ka,He:wo,hE:Fa,BF:Wa,Dk:Ua,cl:Va,_B:Ka,ub:za,_f:Ga,Ku:Ha,qy:ja,Zy:Za,bu:Ya,zv:Xa,dH:Bo,HS:Qa,yH:Ja,l3:qa,z9:ro,x6:ti,_m:ko,eW:ei,GK:Fo,SP:ni,yr:si,dl:Wo,Dw:ri,xT:oi,_X:So,wz:ai}=e;function Uo(o,r){return["x","y","z","w","u","v"].slice(0,r).map(n=>`${o}.${n}`)}function ys(o,r){return 1===r?[o]:Uo(o,r)}class li{constructor(r){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=r,this.rank=r.length,this.enableShapeUniforms=De(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=ys("rc",this.rank),a=O(this.rank),i=this.getOutOfBoundsCondition(n),v=this.getSetup(n),P=this.getOutput(n);this.userCode=`\n        void main() {\n          ${a} rc = getOutputCoords();\n\n          if(${i}) {\n            setOutput(vec4(0));\n          } else {\n            ${v}\n\n            setOutput(vec4(${P}));\n          }\n        }\n      `}}getSourceCoordsArr(r){const n=[];for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let v=`${0===a?"r":"rp1"}, ${0===i?"c":"cp1"}`;for(let P=2;P<this.rank;P++)v=`${r[r.length-1-P]},`+v;n.push(v)}return n}getOutOfBoundsCondition(r){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let a=this.rank-2;a<this.rank;a++)n+=`${r[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(n+="||");return n}getSetup(r){if(1===this.rank)return"";const n=r.slice(-2);return`\n      int r = ${n[0]};\n      int c = ${n[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(r){const n=this.getSourceCoordsArr(r);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),\n            cEdge ? 0. : getA(${n[1]}),\n            rEdge ? 0. : getA(${n[2]}),\n            rEdge || cEdge ? 0. : getA(${n[3]})`}}class Vo{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length);let a="";for(let i=0;i<4;i++){let v="thisRC = rc;";i%2==1&&(v+="thisRC.z += 1;"),i>1&&(v+="thisRC.y += 1;"),a+=`\n        ${v}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}this.userCode=`\n      ${function ui(o,r){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function Ue(o,r,n="index"){const i=function We(o,r){const n=o.length,a=o.map(v=>`${r}[${v}]`),i=new Array(n-1);i[n-2]=a[n-1];for(let v=n-3;v>=0;--v)i[v]=`(${i[v+1]} * ${a[v+1]})`;return i}(o.map((v,P)=>P),r);return i.map((v,P)=>`int ${o[P]} = ${n} / ${i[P]}; ${P===i.length-1?`int ${o[P+1]} = ${n} - ${o[P]} * ${i[P]}`:`index -= ${o[P]} * ${i[P]}`};`).join("")}(["r","c","d"],"inputShape"):ge(["r","c","d"],o)}\n      return ivec3(r, c, d);\n    }\n  `}(n,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Ce(r)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":r[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":r[2]};\n\n        ${a}\n\n        setOutput(result);\n      }\n    `}}class ci{constructor(r){this.gpgpu=r,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(r,n,a){const i=zo(n,a),v=Go(r,i,a);v in this.freeTextures||(this.freeTextures[v]=[]),v in this.usedTextures||(this.usedTextures[v]=[]);const P=Ko(r,i,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[v].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=P,this.log();const M=this.freeTextures[v].pop();return this.usedTextures[v].push(M),M}let L;return i===d.PACKED_2X2_FLOAT32?L=this.gpgpu.createPackedMatrixTexture(r[0],r[1]):i===d.PACKED_2X2_FLOAT16?L=this.gpgpu.createFloat16PackedMatrixTexture(r[0],r[1]):i===d.UNPACKED_FLOAT32?L=this.gpgpu.createFloat32MatrixTexture(r[0],r[1]):i===d.UNPACKED_FLOAT16?L=this.gpgpu.createFloat16MatrixTexture(r[0],r[1]):i===d.PACKED_4X1_UNSIGNED_BYTE&&(L=this.gpgpu.createUnsignedBytesMatrixTexture(r[0],r[1])),this.usedTextures[v].push(L),this.numUsedTextures++,this._numBytesAllocated+=P,this.log(),L}releaseTexture(r,n,a,i){if(null==this.freeTextures)return;const v=zo(a,i),P=Go(n,v,i);P in this.freeTextures||(this.freeTextures[P]=[]);const L=Ko(n,v,this.gpgpu.gl,this.gpgpu.textureConfig,i),M=(0,s._K2)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==M&&this._numBytesAllocated>M?(this.gpgpu.deleteMatrixTexture(r.texture),this._numBytesAllocated-=L):(this.freeTextures[P].push(r),this.numFreeTextures++,this._numBytesFree+=L),this.numUsedTextures--;const U=this.usedTextures[P],z=U&&U.indexOf(r);if(null==z||z<0)throw new Error("Cannot release a texture that was never provided by this texture manager");U[z]=U[U.length-1],U.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const r in this.freeTextures)this.freeTextures[r].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const r in this.usedTextures)this.usedTextures[r].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ko(o,r,n,a,i){const v=function pi(o,r){switch(o){case d.PACKED_2X2_FLOAT32:return dr(r);case d.PACKED_2X2_FLOAT16:return Kr(r);case d.UNPACKED_FLOAT32:return Bn(r);case d.UNPACKED_FLOAT16:return Hs(r);case d.PACKED_4X1_UNSIGNED_BYTE:return ur(r);default:throw new Error(`Unknown physical texture type ${o}`)}}(r,a);let P;if(i){const[M,U]=H(o[0],o[1]);P=M*U}else{const[M,U]=C(o[0],o[1]);P=M*U}const L=function di(o,r){if(r===o.R32F)return 4;if(r===o.R16F)return 2;if(r===o.RGBA32F)return 16;if(r===o.RGBA)return 16;if(r===o.RGBA16F)return 8;if(r===o.RGBA8)return 4;throw new Error(`Unknown internal format ${r}`)}(n,v);return P*L}function zo(o,r){if(o===u.UPLOAD)return d.PACKED_2X2_FLOAT32;if(o===u.RENDER||null==o)return function hi(o){return(0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?o?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:o?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(r);if(o===u.DOWNLOAD||o===u.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${o}`)}function Go(o,r,n){return`${o[0]}_${o[1]}_${r}_${n}`}class js{constructor(r,n){this.variableNames=["A"],this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${n}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const As="if (isnan(x)) return x;",fi="return x;",Ho="return abs(x);",mi="return (x >= 0.0) ? x : (exp(x) - 1.0);",gi=As+"\n  return (x < 0.0) ? 0.0 : x;\n",Ei=As+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hr="return x;",_i="return 1.0 / (1.0 + exp(-1.0 * x));",yi="return x;",xi="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",vi="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ti="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ci="return 1.0 / (1.0 + exp(-1.0 * x));";class bs{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${n}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Di{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length);const n=r.length,a=ys("rc",n),i=O(n),v=function ii(o,r){if(1===o)return"rc";let n="";for(let a=0;a<o;a++)n+=r[a],a<o-1&&(n+=",");return n}(n,a),P=a.slice(-2),L=n<=1?"rc":`vec2(${P.join(",")})`;this.userCode=`\n      void main() {\n        ${i} rc = getOutputCoords();\n        vec4 packedInput = getA(${v});\n\n        setOutput(getChannel(packedInput, ${L}));\n      }\n    `}}const Ii=s.kpo.YO,Eo={},Ai=(0,s._K2)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");let Ni=(()=>{class o extends s.uI_{nextDataId(){return o.nextDataId++}constructor(n){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s._K2)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let a;if(null!=n){if(n instanceof pr)a=n;else{const i=m((0,s._K2)().getNumber("WEBGL_VERSION"),n);a=new pr(i)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const i=m((0,s._K2)().getNumber("WEBGL_VERSION"));a=new pr(i),this.binaryCache=function Si(o){return o in Eo||(Eo[o]={}),Eo[o]}((0,s._K2)().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=a,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ci(this.gpgpu),this.numMBBeforeWarning=function Mi(){return null==(0,s._K2)().global.screen?1024:(0,s._K2)().global.screen.height*(0,s._K2)().global.screen.width*window.devicePixelRatio*600/1024/1024}(),this.texData=new s.GJx(this,(0,s.Hi9)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(n,a,i,v,P,L){const M=this.makeTensorInfo(a,i),U=this.texData.get(M.dataId);U.isPacked=!1,U.texture={texture:n,texShape:[v,P]},U.texShape=[v,P];const z=$n(a),X=new xn(z,!1,L),tt=this.runWebGLProgram(X,[M],i,[[v,P]]);return tt.shape=a,U.texture=null,this.disposeIntermediateTensorInfo(M),tt.dataId}write(n,a,i){if(((0,s._K2)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s._K2)().getBool("DEBUG"))&&this.checkNumericalProblems(n),"complex64"===i&&null!=n)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const v={id:this.nextDataId()};return this.texData.set(v,{shape:a,dtype:i,values:n,usage:u.UPLOAD,refCount:1}),v}refCount(n){return this.texData.has(n)?this.texData.get(n).refCount:0}incRef(n){this.texData.get(n).refCount++}decRef(n){this.texData.has(n)&&this.texData.get(n).refCount--}move(n,a,i,v,P){if((0,s._K2)().getBool("DEBUG")&&this.checkNumericalProblems(a),"complex64"===v)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(n,{shape:i,dtype:v,values:a,usage:u.UPLOAD,refCount:P})}disposeIntermediateTensorInfo(n){this.disposeData(n.dataId)}readSync(n){const a=this.texData.get(n),{values:i,dtype:v,complexTensorInfos:P,slice:L,shape:M,isPacked:U}=a;if(null!=L){let lt;lt=U?new bs(M,hr):new js(M,hr);const xt=this.runWebGLProgram(lt,[{dataId:n,shape:M,dtype:v}],v),Rt=this.readSync(xt.dataId);return this.disposeIntermediateTensorInfo(xt),Rt}if(null!=i)return this.convertAndCacheOnCPU(n);if("string"===v)return i;const z=null!=this.activeTimers;let X,tt;if(z&&(X=s.ZSL.now()),"complex64"===v){const lt=this.readSync(P.real.dataId),xt=this.readSync(P.imag.dataId);tt=s.C0T.mergeRealAndImagArrays(lt,xt)}else tt=this.getValuesFromTexture(n);return z&&(this.downloadWaitMs+=s.ZSL.now()-X),this.convertAndCacheOnCPU(n,tt)}read(n){var a=this;return(0,l.A)(function*(){if(a.pendingRead.has(n)){const Wt=a.pendingRead.get(n);return new Promise(wt=>Wt.push(wt))}const i=a.texData.get(n),{values:v,shape:P,slice:L,dtype:M,complexTensorInfos:U,isPacked:z}=i;if(null!=L){let Wt;Wt=z?new bs(P,hr):new js(P,hr);const wt=a.runWebGLProgram(Wt,[{dataId:n,shape:P,dtype:M}],M),jt=a.read(wt.dataId);return a.disposeIntermediateTensorInfo(wt),jt}if(null!=v)return a.convertAndCacheOnCPU(n);if((0,s._K2)().getBool("DEBUG")&&!(0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s._K2)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let tt,lt,X=null;if("complex64"!==M&&(0,s._K2)().get("WEBGL_BUFFER_SUPPORTED")){tt=a.decode(n);const Wt=a.texData.get(tt.dataId);X=a.gpgpu.createBufferFromTexture(Wt.texture.texture,...S(P))}if(a.pendingRead.set(n,[]),"complex64"!==M&&(yield a.gpgpu.createAndWaitForFence()),"complex64"===M){const Wt=yield Promise.all([a.read(U.real.dataId),a.read(U.imag.dataId)]);lt=s.C0T.mergeRealAndImagArrays(Wt[0],Wt[1])}else if(null==X)lt=a.getValuesFromTexture(n);else{const Wt=s.ZSL.sizeFromShape(P);lt=a.gpgpu.downloadFloat32MatrixFromBuffer(X,Wt)}if(null!=tt&&a.disposeIntermediateTensorInfo(tt),null!=X){const Wt=a.gpgpu.gl;B(Wt,()=>Wt.deleteBuffer(X))}const xt=a.convertAndCacheOnCPU(n,lt),Rt=a.pendingRead.get(n);return a.pendingRead.delete(n),Rt.forEach(Wt=>Wt(xt)),a.pendingDisposal.has(n)&&(a.pendingDisposal.delete(n),a.disposeData(n)&&(0,s.Hi9)().removeDataId(n,a),a.pendingDeletes--),xt})()}readToGPU(n,a={}){const i=this.texData.get(n),{values:v,shape:P,slice:L,dtype:M,isPacked:U,texture:z}=i;if("complex64"===M)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=L){let xt;xt=U?new bs(P,hr):new js(P,hr);const Rt=this.runWebGLProgram(xt,[{dataId:n,shape:P,dtype:M}],M),Wt=this.readToGPU(Rt,a);return this.disposeIntermediateTensorInfo(Rt),Wt}if(null==z)throw null!=v?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const X=this.decode(n,a.customTexShape),tt=(0,s.Hi9)().makeTensorFromTensorInfo(X),lt=this.texData.get(X.dataId);return Object.assign({tensorRef:tt},lt.texture)}bufferSync(n){const a=this.readSync(n.dataId);if("string"===n.dtype)try{const i=a.map(v=>s.ZSL.decodeString(v));return(0,s.ra8)(n.shape,n.dtype,i)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.ra8)(n.shape,n.dtype,a)}checkNumericalProblems(n){if(null!=n)for(let a=0;a<n.length;a++){const i=n[a];if(!V(i))throw(0,s._K2)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${i} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${i} cannot be represented on this device.`)}}getValuesFromTexture(n){const{shape:a,dtype:i,isPacked:v}=this.texData.get(n),P=s.ZSL.sizeFromShape(a);if((0,s._K2)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const lt=this.decode(n),xt=this.texData.get(lt.dataId),Rt=this.gpgpu.downloadMatrixFromPackedTexture(xt.texture.texture,...S(a)).subarray(0,P);return this.disposeIntermediateTensorInfo(lt),Rt}const L=(0,s._K2)().getBool("WEBGL_PACK")&&!0===v,M=L?$n(a):a,U=L?new Dn(M):new en(M),z=this.runWebGLProgram(U,[{shape:M,dtype:i,dataId:n}],"float32"),X=this.texData.get(z.dataId),tt=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(X.texture.texture,X.texShape[0],X.texShape[1]).subarray(0,P);return this.disposeIntermediateTensorInfo(z),tt}timerAvailable(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(n){var a=this;const i=this.activeTimers,v=[];let P=!1;null==this.programTimersStack?(this.programTimersStack=v,P=!0):this.activeTimers.push(v),this.activeTimers=v,n();const L=s.ZSL.flatten(this.activeTimers.map(z=>z.query)).filter(z=>null!=z),M=s.ZSL.flatten(this.activeTimers.map(z=>z.name)).filter(z=>null!=z);this.activeTimers=i,P&&(this.programTimersStack=null);const U={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(0,l.A)(function*(){if((0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const z=yield Promise.all(L);U.kernelMs=s.ZSL.sum(z),U.getExtraProfileInfo=()=>z.map((X,tt)=>({name:M[tt],ms:X})).map(X=>`${X.name}: ${X.ms}`).join(", ")}else U.kernelMs={error:"WebGL query timers are not supported in this environment."};return a.uploadWaitMs=0,a.downloadWaitMs=0,U})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.ZSL.now(),endMs:null}}endTimer(n){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),n):(n.endMs=s.ZSL.now(),n)}getQueryTime(n){var a=this;return(0,l.A)(function*(){return(0,s._K2)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?a.gpgpu.waitForQueryAndGetTime(n):n.endMs-n.startMs})()}disposeData(n,a=!1){if(this.pendingDisposal.has(n))return!1;if(!this.texData.has(n))return!0;if(a?this.texData.get(n).refCount=0:this.texData.get(n).refCount--,!a&&this.texData.get(n).refCount>0)return!1;if(this.pendingRead.has(n))return this.pendingDisposal.add(n),this.pendingDeletes++,!1;this.releaseGPUData(n);const{complexTensorInfos:i}=this.texData.get(n);return null!=i&&(this.disposeData(i.real.dataId,a),this.disposeData(i.imag.dataId,a)),this.texData.delete(n),!0}releaseGPUData(n){const{texture:a,dtype:i,texShape:v,usage:P,isPacked:L,slice:M}=this.texData.get(n),U=M&&M.origDataId||n,z=this.dataRefCount.get(U);z>1?this.dataRefCount.set(U,z-1):(this.dataRefCount.delete(U),null!=a&&(this.numBytesInGPU-=this.computeBytes(v,i),this.textureManager.releaseTexture(a,v,P,L)));const X=this.texData.get(n);X.texture=null,X.texShape=null,X.isPacked=!1,X.slice=null}getTexture(n){return this.uploadToGPU(n),this.texData.get(n).texture.texture}getDataInfo(n){return this.texData.get(n)}shouldExecuteOnCPU(n,a=Ai){return(0,s._K2)().getBool("WEBGL_CPU_FORWARD")&&n.every(i=>null==this.texData.get(i.dataId).texture&&s.ZSL.sizeFromShape(i.shape)<a)}getGPGPUContext(){return this.gpgpu}where(n){s.C0T.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const a=n.dataSync();return Ii(n.shape,a)}packedUnaryOp(n,a,i){const v=new bs(n.shape,a),P=this.compileAndRun(v,[n],i);return(0,s.Hi9)().makeTensorFromTensorInfo(P)}abs(n){if(this.shouldExecuteOnCPU([n])&&"complex64"!==n.dtype){const v=Bo(this.texData.get(n.dataId).values);return this.makeOutput(n.shape,n.dtype,v)}if((0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(n,Ho,n.dtype);const a=new js(n.shape,Ho),i=this.compileAndRun(a,[n]);return(0,s.Hi9)().makeTensorFromTensorInfo(i)}makeTensorInfo(n,a,i){let v;if("string"===a&&null!=i&&i.length>0&&s.ZSL.isString(i[0])){const P=i.map(L=>s.ZSL.encodeString(L));v=this.write(P,n,a)}else v=this.write(i,n,a);return this.texData.get(v).usage=null,{dataId:v,shape:n,dtype:a}}makeOutput(n,a,i){return(0,s.Hi9)().makeTensorFromTensorInfo(this.makeTensorInfo(n,a,i),this)}unpackTensor(n){const a=new Di(n.shape);return this.runWebGLProgram(a,[n],n.dtype)}packTensor(n){const a=new li(n.shape);return this.runWebGLProgram(a,[n],n.dtype,null,!0)}packedReshape(n,a){const i=[mn(n.shape),...hn(n.shape)],v={dtype:n.dtype,shape:i,dataId:n.dataId},P=[mn(a),...hn(a)],L=new Vo(P,i),z=this.runWebGLProgram(L,[v],n.dtype,[i],!0);return{dataId:z.dataId,shape:a,dtype:z.dtype}}decode(n,a){const i=this.texData.get(n),{isPacked:v,shape:P,dtype:L}=i;if(null!=a){const lt=s.ZSL.sizeFromShape(P);s.ZSL.assert(lt<=a[0]*a[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const M=$n(P);let U;U=v?new je(M):new Le(M);const X=[null!=a?a:S(M)];return{dtype:L,shape:P,dataId:this.runWebGLProgram(U,[{shape:M,dtype:L,dataId:n}],L,X,!0,a).dataId}}runWebGLProgram(n,a,i,v,P=!1,L){const M=this.makeTensorInfo(n.outputShape,i),U=this.texData.get(M.dataId);if(n.packedOutput&&(U.isPacked=!0),n.outPackingScheme===p.DENSE){const jt=null!=L?L:S(n.outputShape);U.texShape=jt.map(Te=>2*Te)}if(null!=n.outTexUsage&&(U.usage=n.outTexUsage),0===s.ZSL.sizeFromShape(M.shape))return U.values=s.ZSL.getTypedArrayFromDType(M.dtype,0),M;const z=[],X=a.map(jt=>{if("complex64"===jt.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let Te=this.texData.get(jt.dataId);if(null==Te.texture){if(!n.packedInputs&&s.ZSL.sizeFromShape(jt.shape)<=(0,s._K2)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:jt.shape,texData:null,isUniform:!0,uniformValues:Te.values};n.packedInputs&&(Te.isPacked=!0,Te.shape=jt.shape)}if(this.uploadToGPU(jt.dataId),!!Te.isPacked!=!!n.packedInputs)jt=Te.isPacked?this.unpackTensor(jt):this.packTensor(jt),z.push(jt),Te=this.texData.get(jt.dataId);else if(Te.isPacked&&!jn(Te.shape,jt.shape)){const Oe=jt,tn=jt.shape;jt.shape=Te.shape,jt=this.packedReshape(jt,tn),z.push(jt),Te=this.texData.get(jt.dataId),Oe.shape=tn}return{shape:jt.shape,texData:Te,isUniform:!1}});this.uploadToGPU(M.dataId);const tt={shape:M.shape,texData:U,isUniform:!1},lt=function te(o,r,n){let a="";r.concat(n).forEach(P=>{const L=null!=P.texData&&null!=P.texData.slice&&P.texData.slice.flatOffset>0;if(o.enableShapeUniforms&&!P.isUniform){const M=P.texData.texShape,{useSqueezeShape:U,uniformShape:z,keptDims:X}=_(o.packedInputs,P.shape,M);let tt="",lt="",xt="";if(1===z.length&&o.packedInputs){const tn=[Math.ceil(M[0]/2),Math.ceil(M[1]/2)];tt=`${tn[0]>1}_${tn[1]>1}`}else if(2!==z.length||o.packedInputs){if(z.length>2&&!o.packedInputs){const tn=s.ZSL.computeStrides(z);xt=`${tn[0]===M[1]}_${tn[tn.length-1]===M[1]}`}}else lt=`${z[0]>1}_${z[1]>1}`;const Rt=P.shape.length,Wt=2===z.length&&s.ZSL.arraysEqual(P.shape,M),wt=1===s.ZSL.sizeFromShape(P.shape),jt=s.C0T.getBroadcastDims(P.shape,n.shape),Te=!o.packedInputs&&Rt===n.shape.length&&s.ZSL.arraysEqual(M,n.texData.texShape);a+=`${Rt}_${Te}_${U?X:""}_${z.length}_${wt}_${jt}_${Wt}_${tt}_${lt}_${xt}_${o.packedInputs||z.length>2?"":`${M[0]>1}_${M[1]>1}`}_${L}`}else a+=`${P.shape}_${P.isUniform?"uniform":P.texData.texShape}_${L}`});let v=o.constructor.name;return v+="_"+a+"_"+o.userCode+`${(0,s._K2)().getNumber("WEBGL_VERSION")}`,v}(n,X,tt),xt=this.getAndSaveBinary(lt,()=>function nt(o,r,n,a){const i=n.map((z,X)=>{const tt={logicalShape:z.shape,texShape:z.isUniform?null:z.texData.texShape,isUniform:z.isUniform,isPacked:!z.isUniform&&z.texData.isPacked,flatOffset:null};return null!=z.texData&&null!=z.texData.slice&&z.texData.slice.flatOffset>0&&(tt.flatOffset=z.texData.slice.flatOffset),{name:r.variableNames[X],shapeInfo:tt}}),v=i.map(z=>z.shapeInfo),P={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},L=Ge(i,P,r),M=function it(o,r){const n=an(o,()=>o.createShader(o.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(B(o,()=>o.shaderSource(n,r)),B(o,()=>o.compileShader(n)),(0,s._K2)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===o.getShaderParameter(n,o.COMPILE_STATUS))throw q(r,o.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(o.gl,L),U=o.createProgram(M);return(0,s._K2)().get("ENGINE_COMPILE_ONLY")?{program:r,fragmentShader:M,source:L,webGLProgram:U,inShapeInfos:v,outShapeInfo:P,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(o.buildVao(U),Object.assign({program:r,fragmentShader:M,source:L,webGLProgram:U,inShapeInfos:v,outShapeInfo:P},st(o,r,U)))}(this.gpgpu,n,X,tt)),Rt=null!=this.activeTimers;let Wt;Rt&&(Wt=this.startTimer()),(0,s._K2)().get("ENGINE_COMPILE_ONLY")||function Pt(o,r,n,a,i){r.program.enableShapeUniforms||(Nt(r.inShapeInfos,n),Nt([r.outShapeInfo],[a]));const v=a.texData.texture,P=a.texData.texShape;a.texData.isPacked?o.setOutputPackedMatrixTexture(v.texture,P[0],P[1]):o.setOutputMatrixTexture(v.texture,P[0],P[1]),o.setProgram(r.webGLProgram),o.bindVertexArray(r.webGLProgram.vao),1===(0,s._K2)().getNumber("WEBGL_VERSION")&&null!==r.infLoc&&o.gl.uniform1f(r.infLoc,1/0),null!==r.nanLoc&&o.gl.uniform1f(r.nanLoc,NaN);for(let M=0;M<n.length;++M){const U=n[M],{uniform:z,offset:X,shape:tt,texShape:lt}=r.variablesLocations[M];if(tt){const{uniformShape:xt}=_(r.program.packedInputs,U.shape,U.texData.texShape);switch(xt.length){case 1:o.gl.uniform1iv(tt,new Int32Array(xt));break;case 2:o.gl.uniform2iv(tt,new Int32Array(xt));break;case 3:o.gl.uniform3iv(tt,new Int32Array(xt));break;case 4:o.gl.uniform4iv(tt,new Int32Array(xt))}}if(lt&&o.gl.uniform2i(lt,U.texData.texShape[0],U.texData.texShape[1]),null!=z){if(U.isUniform){if(s.ZSL.sizeFromShape(U.shape)<2)o.gl.uniform1f(z,U.uniformValues[0]);else{let xt=U.uniformValues;xt instanceof Float32Array||(xt=new Float32Array(xt)),o.gl.uniform1fv(z,xt)}continue}null!=U.texData.slice&&null!=X&&o.gl.uniform1i(X,U.texData.slice.flatOffset),o.setInputMatrixTexture(U.texData.texture.texture,z,M)}}const L=r.outShapeLocation;if(L)switch(a.shape.length){case 1:o.gl.uniform1iv(L,new Int32Array(a.shape));break;case 2:o.gl.uniform2iv(L,new Int32Array(a.shape));break;case 3:o.gl.uniform3iv(L,new Int32Array(a.shape));break;case 4:o.gl.uniform4iv(L,new Int32Array(a.shape))}if(r.outShapeStridesLocation){const M=s.ZSL.computeStrides(a.shape);switch(a.shape.length){case 2:o.gl.uniform1iv(r.outShapeStridesLocation,new Int32Array(M));break;case 3:o.gl.uniform2iv(r.outShapeStridesLocation,new Int32Array(M));break;case 4:o.gl.uniform3iv(r.outShapeStridesLocation,new Int32Array(M))}}if(r.outTexShapeLocation&&o.gl.uniform2i(r.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),r.program.customUniforms&&i)for(let M=0;M<r.program.customUniforms.length;++M){const U=r.program.customUniforms[M],z=r.customUniformLocations[M],X=i[M];if("float"===U.type)o.gl.uniform1fv(z,X);else if("vec2"===U.type)o.gl.uniform2fv(z,X);else if("vec3"===U.type)o.gl.uniform3fv(z,X);else if("vec4"===U.type)o.gl.uniform4fv(z,X);else if("int"===U.type)o.gl.uniform1iv(z,X);else if("ivec2"===U.type)o.gl.uniform2iv(z,X);else if("ivec3"===U.type)o.gl.uniform3iv(z,X);else{if("ivec4"!==U.type)throw Error(`uniform type ${U.type} is not supported yet.`);o.gl.uniform4iv(z,X)}}o.executeProgram()}(this.gpgpu,xt,X,tt,v),z.forEach(jt=>this.disposeIntermediateTensorInfo(jt)),Rt&&(Wt=this.endTimer(Wt),this.activeTimers.push({name:n.constructor.name,query:this.getQueryTime(Wt)}));const wt=(0,s._K2)().getNumber("WEBGL_FLUSH_THRESHOLD");if(wt>0){const jt=s.ZSL.now();jt-this.lastGlFlushTime>wt&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=jt)}if(!(0,s._K2)().getBool("WEBGL_LAZILY_UNPACK")&&U.isPacked&&!1===P){const jt=this.unpackTensor(M);return this.disposeIntermediateTensorInfo(M),jt}return M}compileAndRun(n,a,i,v,P=!1){return this.runWebGLProgram(n,a,i=i||a[0].dtype,v,P)}getAndSaveBinary(n,a){return n in this.binaryCache||(this.binaryCache[n]=a()),this.binaryCache[n]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,s._K2)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(a=>{this.gpgpu.deleteProgram(this.binaryCache[a].webGLProgram),delete this.binaryCache[a]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.DZQ)(()=>{if(!(0,s._K2)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const n=(0,s._K2)().getBool("DEBUG");(0,s._K2)().set("DEBUG",!1);const a=this.abs((0,s.d_2)(1e-8)).dataSync()[0];if((0,s._K2)().set("DEBUG",n),a>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(n){const a=this.texData.get(n),{shape:i,dtype:v,values:P,texture:L,usage:M,isPacked:U}=a;if(null!=L)return;const z=null!=this.activeTimers;let X;z&&(X=s.ZSL.now());let tt=a.texShape;if(null==tt&&(tt=function wn(o,r=!1){let n=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,s._K2)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&(0,s._K2)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),r&&(n*=2,a*=2,1===(o=o.map((L,M)=>M>=o.length-2?s.ZSL.nearestLargerEven(o[M]):o[M])).length&&(o=[2,o[0]])),2!==o.length&&(o=s.ZSL.squeezeShape(o).newShape);let i=s.ZSL.sizeFromShape(o),v=null;o.length<=1&&i<=n?v=[1,i]:2===o.length&&o[0]<=n&&o[1]<=n?v=o:3===o.length&&o[0]*o[1]<=n&&o[2]<=n?v=[o[0]*o[1],o[2]]:3===o.length&&o[0]<=n&&o[1]*o[2]<=n?v=[o[0],o[1]*o[2]]:4===o.length&&o[0]*o[1]*o[2]<=n&&o[3]<=n?v=[o[0]*o[1]*o[2],o[3]]:4===o.length&&o[0]<=n&&o[1]*o[2]*o[3]<=n&&(v=[o[0],o[1]*o[2]*o[3]]);const P=null!=v&&Math.max(...v)>a&&Math.min(...v)<=(r?2:1)&&Math.min(...v)>0;if(null==v||P)if(r){const L=mn(o);let M=2,U=2;o.length&&([M,U]=hn(o)),i=L*(M/2)*(U/2),v=s.ZSL.sizeToSquarishShape(i).map(z=>2*z)}else v=s.ZSL.sizeToSquarishShape(i);return v}(i,U),a.texShape=tt),null!=P){const lt=$n(i);let xt,Rt=tt[1],Wt=tt[0];const wt=P instanceof Uint8Array||P instanceof Uint8ClampedArray;(U||!wt)&&([Rt,Wt]=H(tt[0],tt[1])),xt=U?new on(lt,wt):new xn(lt,wt);const jt=wt?[Wt,Rt]:tt,Te=this.makeTensorInfo(jt,v),Oe=this.texData.get(Te.dataId);Oe.usage=wt?u.PIXELS:u.UPLOAD,Oe.texShape=jt,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(Te.dataId),Rt,Wt,P);const Cn=this.runWebGLProgram(xt,[Te],v,[[Wt,Rt]],!0),dn=this.texData.get(Cn.dataId);a.texShape=dn.texShape,a.isPacked=dn.isPacked,a.usage=dn.usage,(0,s._K2)().get("ENGINE_COMPILE_ONLY")?this.disposeData(Cn.dataId):(a.texture=dn.texture,a.values=null,this.texData.delete(Cn.dataId)),this.disposeIntermediateTensorInfo(Te),z&&(this.uploadWaitMs+=s.ZSL.now()-X)}else{const lt=this.acquireTexture(tt,M,v,U);a.texture=lt}}convertAndCacheOnCPU(n,a){const i=this.texData.get(n),{dtype:v}=i;return null!=a&&(i.values=function Ri(o,r){if("float32"===r||"complex64"===r)return o;if("int32"===r||"bool"===r){const n="int32"===r?new Int32Array(o.length):new Uint8Array(o.length);for(let a=0;a<n.length;++a)n[a]=Math.round(o[a]);return n}throw new Error(`Unknown dtype ${r}`)}(a,v)),i.values}acquireTexture(n,a,i,v){if(this.numBytesInGPU+=this.computeBytes(n,i),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const P=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${P} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(n,a,v)}computeBytes(n,a){return n[0]*n[1]*s.ZSL.bytesPerElement(a)}checkCompileCompletion(){for(const[,n]of Object.entries(this.binaryCache))this.checkCompletion_(n)}checkCompileCompletionAsync(){var n=this;return(0,l.A)(function*(){const a=[];if(n.gpgpu.parallelCompilationExtension){for(const[,i]of Object.entries(n.binaryCache))a.push(n.checkCompletionAsync_(i));return Promise.all(a)}for(const[,i]of Object.entries(n.binaryCache)){const v=new Promise(P=>{try{n.checkCompletion_(i),P(!0)}catch(L){throw L}});a.push(v)}return Promise.all(a)})()}checkCompletionAsync_(n){var a=this;return(0,l.A)(function*(){return a.gpgpu.gl.getProgramParameter(n.webGLProgram,a.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?a.checkCompletion_(n):(yield(0,s.dA1)(),a.checkCompletionAsync_(n))})()}checkCompletion_(n){if(!1===this.gpgpu.gl.getProgramParameter(n.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(n.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(n.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(q(n.source,this.gpgpu.gl.getShaderInfoLog(n.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const n of Object.values(this.binaryCache)){this.gpgpu.buildVao(n.webGLProgram);const{variablesLocations:a,customUniformLocations:i,infLoc:v,nanLoc:P,outShapeLocation:L,outShapeStridesLocation:M,outTexShapeLocation:U}=st(this.gpgpu,n.program,n.webGLProgram);n.variablesLocations=a,n.customUniformLocations=i,n.infLoc=v,n.nanLoc=P,n.outShapeLocation=L,n.outShapeStridesLocation=M,n.outTexShapeLocation=U}}createTensorFromGPUData(n,a,i){n.channels=n.channels||"RGBA";const{texture:v,height:P,width:L,channels:M}=n,U=(0,s.Hi9)().backend;if(!U.gpgpu.gl.isTexture(v))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const z=U.writeTexture(v,a,i,P,L,M);return(0,s.Hi9)().makeTensorFromDataId(z,a,i,U)}}return o.nextDataId=0,o})();const Li="4.22.0";s.eMq.isBrowser()&&(0,s.gJX)("webgl",()=>new Ni,2);const Ao="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Nr{constructor(r,n,a){this.variableNames=["A","B"],this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a),this.enableShapeUniforms=De(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${r}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Rr="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Lr{constructor(r,n,a,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a);const v=this.outputShape.length;this.enableShapeUniforms=De(v);let P="";if(i)if(0===v||1===s.ZSL.sizeFromShape(this.outputShape))P="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(P=`\n          ${O(v)} coords = getOutputCoords();\n        `,1===v)P+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const M=ys("coords",v);P+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${M[v-2]} + 1) >= outShape[${v} - 2];\n            bool nextColOutOfBounds =\n              (${M[v-1]} + 1) >= outShape[${v} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${M[v-2]} + 1) >= ${this.outputShape[v-2]};\n            bool nextColOutOfBounds =\n              (${M[v-1]} + 1) >= ${this.outputShape[v-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${r}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${P}\n\n        setOutput(result);\n      }\n    `}}function Ds(o){const{inputs:r,backend:n}=o,{x:a}=r;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const wi={kernelName:s.lzr,backendName:"webgl",kernelFunc:Ds};function fr(o){const{inputs:r,backend:n}=o,{real:a,imag:i}=r,v=n.makeTensorInfo(a.shape,"complex64"),P=n.texData.get(v.dataId),L=Ds({inputs:{x:a},backend:n}),M=Ds({inputs:{x:i},backend:n});return P.complexTensorInfos={real:L,imag:M},v}const Bi={kernelName:s.pr3,backendName:"webgl",kernelFunc:fr},jo="return (a < 0.) ? b * a : a;",Zo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Fi={kernelName:s.X0$,backendName:"webgl",kernelFunc:function ki(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{alpha:v}=a,P=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(v,"float32")),L=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Lr(Zo,i.shape,P.shape):new Nr(jo,i.shape,P.shape),M=n.runWebGLProgram(L,[i,P],"float32");return n.disposeIntermediateTensorInfo(P),M}},Yo="return (a < 0.) ? b * a : a;",Xo="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Wi={kernelName:s.Ncv,backendName:"webgl",kernelFunc:function Qo(o){const{inputs:r,backend:n}=o,{x:a,alpha:i}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Lr(Xo,a.shape,i.shape):new Nr(Yo,a.shape,i.shape);return n.runWebGLProgram(v,[a,i],"float32")}},jr="if (isnan(x)) return x;";function kn({opSnippet:o,packedOpSnippet:r,cpuKernelImpl:n,dtype:a}){return({inputs:i,backend:v})=>{const{x:P}=i,L=v,M=a||P.dtype;if(L.shouldExecuteOnCPU([P])&&null!=n){const X=L.texData.get(P.dataId),tt=n(X.values,M);return L.makeTensorInfo(P.shape,M,tt)}let z;return z=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=r?new bs(P.shape,r):new js(P.shape,o),L.runWebGLProgram(z,[P],M)}}function gs({opSnippet:o,packedOpSnippet:r,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:i,dtype:v}){return({inputs:P,backend:L})=>{const{a:M,b:U}=P,z=L;if(a&&"complex64"===M.dtype){const xt=z.texData.get(M.dataId),Rt=z.texData.get(U.dataId),[Wt,wt]=[[xt.complexTensorInfos.real,Rt.complexTensorInfos.real],[xt.complexTensorInfos.imag,Rt.complexTensorInfos.imag]].map(Te=>{const[Oe,tn]=Te,On={dataId:Oe.dataId,dtype:Oe.dtype,shape:M.shape},Cn={dataId:tn.dataId,dtype:tn.dtype,shape:U.shape},dn=new Nr(o,M.shape,U.shape);return z.runWebGLProgram(dn,[On,Cn],(0,s.TuY)(Oe.dtype,tn.dtype))}),jt=fr({inputs:{real:Wt,imag:wt},backend:z});return z.disposeIntermediateTensorInfo(Wt),z.disposeIntermediateTensorInfo(wt),jt}const X=v||(0,s.TuY)(M.dtype,U.dtype);if(("string"===M.dtype||"string"===U.dtype||z.shouldExecuteOnCPU([M,U]))&&null!=i){const xt=z.texData.get(M.dataId).values,Rt=z.texData.get(U.dataId).values,Wt="string"===M.dtype?s.C0T.fromUint8ToStringArray(xt):xt,wt="string"===M.dtype?s.C0T.fromUint8ToStringArray(Rt):Rt,[jt,Te]=i(M.shape,U.shape,Wt,wt,X),Oe=z.makeTensorInfo(Te,X);return z.texData.get(Oe.dataId).values=jt,Oe}let lt;return lt=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=r?new Lr(r,M.shape,U.shape,n):new Nr(o,M.shape,U.shape),z.runWebGLProgram(lt,[M,U],X)}}function oo(o,r=!1){if("linear"===o)return r?yi:fi;if("relu"===o)return r?vi:gi;if("elu"===o)return r?xi:mi;if("relu6"===o)return r?Ti:Ei;if("prelu"===o)return r?Xo:Yo;if("leakyrelu"===o)return r?Zo:jo;if("sigmoid"===o)return r?Ci:_i;throw new Error(`Activation ${o} has not been implemented for the WebGL backend.`)}class Jo{constructor(r,n,a,i=!1,v=!1,P=!1,L=null,M=!1,U=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=De(this.outputShape.length);const X=Math.ceil((i?r[1]:r[2])/2),tt=i?"i * 2, rc.y":"rc.y, i * 2",lt=v?"rc.z, i * 2":"i * 2, rc.z",xt=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],Rt=v?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let Wt="",wt="";L&&(Wt=M?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${L}\n        }`:U?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${L}\n        }`:`vec4 activation(vec4 x) {\n          ${L}\n        }`,wt="result = activation(result);");const jt=P?"result += getBiasAtOutCoords();":"";P&&this.variableNames.push("bias"),M&&this.variableNames.push("preluActivationWeights"),U&&this.variableNames.push("leakyreluAlpha");let Te="rc.x",Oe="rc.x";r[0]<n[0]?Te=`imod(rc.x, ${r[0]})`:n[0]<r[0]&&(Oe=`imod(rc.x, ${n[0]})`),this.userCode=`\n      ${Wt}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${X}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${Te};\n        int batchB = ${Oe};\n        for (int i = 0; i < ${X}; i++) {\n          vec4 a = getMatrixA(batchA, ${tt});\n          vec4 b = getMatrixB(batchB, ${lt});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${xt[0]} * ${Rt[0]});\n          result += (${xt[1]} * ${Rt[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${jt}\n\n        ${wt}\n\n        setOutput(result);\n      }\n    `}}const qo={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class ta{constructor(r,n,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.C0T.assertAndGetBroadcastShape(n,a),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${r}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ea="return a * b;";function bo(o){const{inputs:r,backend:n}=o,{a,b:i}=r,v=s.C0T.upcastType(a.dtype,i.dtype);if("complex64"===a.dtype){const L=n.texData.get(a.dataId),M=n.texData.get(i.dataId),U=new ta(qo.REAL,a.shape,i.shape),z=new ta(qo.IMAG,a.shape,i.shape),X=[{dataId:L.complexTensorInfos.real.dataId,dtype:L.complexTensorInfos.real.dtype,shape:a.shape},{dataId:L.complexTensorInfos.imag.dataId,dtype:L.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:M.complexTensorInfos.real.dataId,dtype:M.complexTensorInfos.real.dtype,shape:i.shape},{dataId:M.complexTensorInfos.imag.dataId,dtype:M.complexTensorInfos.imag.dtype,shape:i.shape}],tt=n.runWebGLProgram(U,X,"float32"),lt=n.runWebGLProgram(z,X,"float32"),xt=fr({inputs:{real:tt,imag:lt},backend:n});return n.disposeIntermediateTensorInfo(tt),n.disposeIntermediateTensorInfo(lt),xt}if(n.shouldExecuteOnCPU([a,i])){const L=n.texData.get(a.dataId),M=n.texData.get(i.dataId),[U,z]=Wa(a.shape,i.shape,L.values,M.values,v),X=n.makeTensorInfo(z,v);return n.texData.get(X.dataId).values=U,X}let P;return P=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Lr(ea,a.shape,i.shape):new Nr(ea,a.shape,i.shape),n.runWebGLProgram(P,[a,i],v)}const Ui={kernelName:s.xu7,backendName:"webgl",kernelFunc:bo};function sn(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{shape:v}=a,P=n,L=s.ZSL.sizeFromShape(i.shape),M=s.ZSL.inferFromImplicitShape(v,L),U=s.ZSL.sizeFromShape(M);s.ZSL.assert(L===U,()=>`The new shape (${M}) has ${U} elements and the old shape (${i.shape}) has ${L} elements. The new shape and old shape must have the same number of elements.`);const z=P.texData.get(i.dataId);return!z.isPacked||jn(i.shape,M)||null!==z.texture&&jn(z.shape,M)?(P.incRef(i.dataId),{dataId:i.dataId,shape:M,dtype:i.dtype}):function Vi(o,r,n){const a=[mn(o.shape),...hn(o.shape)],i={dtype:o.dtype,shape:a,dataId:o.dataId},v=[mn(r),...hn(r)],P=new Vo(v,a),U=n.runWebGLProgram(P,[i],o.dtype,[a],!0);return{dataId:U.dataId,shape:r,dtype:U.dtype}}(i,M,P)}const Ki={kernelName:s.R23,backendName:"webgl",kernelFunc:sn};class na{constructor(r,n){this.variableNames=["x"];const{windowSize:a,batchSize:i,inSize:v,outSize:P}=r;this.outputShape=[i,P];const L=4*Math.floor(a/4),M=a%4;let U="sumValue += dot(values, ones);";if(null!=n){const X=1/n;U=`sumValue += dot(values * ${s.ZSL.isInt(X)?X.toPrecision(2):X}, ones);`}let z="";v%a>0&&(z=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${z}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${L}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${U}\n        }\n\n        int inIdx = inOffset + ${L};\n        if (${1===M}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${U}\n        } else if (${2===M}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${U}\n        } else if (${3===M}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${U}\n        }\n        setOutput(sumValue);\n      }\n    `}}class zi{constructor(r,n){this.variableNames=["x"];const{windowSize:a,batchSize:i,inSize:v,outSize:P}=r;this.outputShape=[i,P];let L="0.0",M="";"prod"===n?L="1.0":"min"===n?(L="1.0 / 1e-20",M="min"):"max"===n&&(L="-1.0 / 1e-20",M="max");let U=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===n?U="sumValue":"prod"===n?U="prodValue":"all"===n?U="allValue":"any"===n&&(U="anyValue");const z=4*Math.floor(a/4),X=a%4;let tt=`\n      if (${"sum"===n}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===n}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${M}(values, minMaxValue);\n        if (${"min"===n} || ${"max"===n}) {\n          minMaxValue = ${M}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,lt="vec4";"all"===n?(L="1.0",tt="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",lt="bvec4"):"any"===n&&(L="0.0",tt="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",lt="bvec4");let xt="";v%a>0&&(xt=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${L};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${xt}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        vec4 minMaxValue = vec4(${L});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${z}; i += 4) {\n          int inIdx = inOffset + i;\n          ${lt} values = ${lt}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${tt}\n        }\n\n        int inIdx = inOffset + ${z};\n        if (${1===X}) {\n          ${lt} values = ${lt}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${tt}\n        } else if (${2===X}) {\n          ${lt} values = ${lt}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${tt}\n        } else if (${3===X}) {\n          ${lt} values = ${lt}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${tt}\n        }\n        setOutput(${U});\n      }\n    `}}function $r(o,r,n,a){const i=function Gi(o){const r=[];for(;0===r.length||1!==r[r.length-1].outSize;){const n=r.length?r[r.length-1].outSize:o[1],a=s.C0T.computeOptimalWindowSize(n);r.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return r}(o.shape);let v=o;for(let P=0;P<i.length;P++){const{inSize:L,windowSize:M,outSize:U}=i[P];let z,X;z="mean"===n?0===P?new na({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:U},L):new na({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:U}):new zi({windowSize:M,inSize:L,batchSize:o.shape[0],outSize:U},n),X=v,v=a.runWebGLProgram(z,[v],r),X.dataId!==o.dataId&&a.disposeIntermediateTensorInfo(X)}return v}class Hi{constructor(r,n){this.variableNames=["A"];const a=new Array(r.length);for(let P=0;P<a.length;P++)a[P]=r[n[P]];this.outputShape=a,this.rank=a.length;const i=O(this.rank),v=function ji(o){const r=o.length;if(r>6)throw Error(`Transpose for rank ${r} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(r);for(let i=0;i<o.length;i++)a[o[i]]=n[i];return a.join()}(n);this.userCode=`\n    void main() {\n      ${i} resRC = getOutputCoords();\n      setOutput(getA(${v}));\n    }\n    `}}class Zi{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const a=new Array(r.length);for(let z=0;z<a.length;z++)a[z]=r[n[z]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=O(this.rank),v=Uo("rc",this.rank),P=new Array(this.rank);for(let z=0;z<n.length;z++)P[n[z]]=v[z];const L=`vec2(${P.slice(-2).join()})`,M=`++${v[this.rank-1]} < ${a[this.rank-1]}`,U=`getChannel(getA(${P.join()}), ${L})`;this.userCode=`\n    void main() {\n      ${i} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${U};\n      if(${M}) {\n        result[1] = ${U};\n      }\n      --${v[this.rank-1]};\n      if(++${v[this.rank-2]} < ${a[this.rank-2]}) {\n        result[2] = ${U};\n        if(${M}) {\n          result[3] = ${U};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function _o(o,r,n){const a=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Zi(o.shape,r):new Hi(o.shape,r);return n.runWebGLProgram(a,[o],o.dtype)}function yo(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,keepDims:P}=a;return function Yi(o,r,n,a){const v=o.shape.length,P=s.ZSL.parseAxisParam(r,o.shape);let L=P;const M=s.C0T.getAxesPermutation(L,v),U=null!=M;let z=o;U&&(z=_o(o,M,a),L=s.C0T.getInnerMostAxes(L.length,v)),s.C0T.assertAxesAreInnerMostDims("sum",L,v);const[X,tt]=s.C0T.computeOutAndReduceShapes(z.shape,L);let lt=X;n&&(lt=s.C0T.expandShapeToKeepDim(X,P));const xt=s.ZSL.sizeFromShape(tt),wt=sn({inputs:{x:z},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/xt,xt]},backend:a}),Te=$r(wt,(0,s.chL)(o.dtype),"sum",a),Oe=sn({inputs:{x:Te},attrs:{shape:lt},backend:a});return a.disposeIntermediateTensorInfo(wt),a.disposeIntermediateTensorInfo(Te),U&&a.disposeIntermediateTensorInfo(z),Oe}(i,v,P,n)}const Xi={kernelName:s.WuN,backendName:"webgl",kernelFunc:yo};function xs(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{perm:v}=a,P=n,M=new Array(i.shape.length);for(let z=0;z<M.length;z++)M[z]=i.shape[v[z]];let U;if(P.shouldExecuteOnCPU([i])){const X=P.texData.get(i.dataId).values,tt=So(X,i.shape,i.dtype,v,M);U=P.makeTensorInfo(M,i.dtype),P.texData.get(U.dataId).values=tt}else U=_o(i,v,P);return U}const Qi={kernelName:s.wx0,backendName:"webgl",kernelFunc:xs},sa=1e3;function xo({a:o,b:r,transposeA:n,transposeB:a,backend:i,bias:v=null,preluActivationWeights:P=null,leakyreluAlpha:L=0,activation:M=null}){const U=o.shape.length,z=r.shape.length,X=n?o.shape[U-2]:o.shape[U-1],tt=a?r.shape[z-1]:r.shape[z-2],lt=n?o.shape[U-1]:o.shape[U-2],xt=a?r.shape[z-2]:r.shape[z-1],Rt=o.shape.slice(0,-2),Wt=r.shape.slice(0,-2),wt=s.ZSL.sizeFromShape(Rt),jt=s.ZSL.sizeFromShape(Wt),Oe=s.ZEY.assertAndGetBroadcastShape(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([lt,xt]);s.ZSL.assert(X===tt,()=>`Error in matMul: inner shapes (${X}) and (${tt}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${n} and transposeB=${a} must match.`);const tn=n?[wt,X,lt]:[wt,lt,X],On=a?[jt,xt,tt]:[jt,tt,xt],Cn=sn({inputs:{x:o},backend:i,attrs:{shape:tn}}),dn=sn({inputs:{x:r},backend:i,attrs:{shape:On}}),Fn=[Cn,dn],Mn=Math.max(wt,jt),cs=n?Cn.shape[1]:Cn.shape[2],ds=null!=v,_r=null!=P,$s="leakyrelu"===M,Us=null!=M?oo(M,!0):null;let rr;if((1===lt||1===xt)&&cs>sa&&!1===(ds||_r||$s||null!=Us)){let Zr=Cn,Do=dn;n&&(Zr=xs({inputs:{x:Cn},backend:i,attrs:{perm:[0,2,1]}}),Fn.push(Zr)),a&&(Do=xs({inputs:{x:dn},backend:i,attrs:{perm:[0,2,1]}}),Fn.push(Do));const ga=1===xt;let Dl=Zr;1!==xt&&(Dl=sn({inputs:{x:Zr},backend:i,attrs:{shape:[Mn,cs,1]}}),Fn.push(Dl));const cm=1===xt?2:1;let Il=Do;ga&&(Il=sn({inputs:{x:Do},backend:i,attrs:{shape:[Mn,1,cs]}}),Fn.push(Il));const ou=bo({inputs:{a:Dl,b:Il},backend:i});rr=yo({inputs:{x:ou},backend:i,attrs:{axis:cm,keepDims:!0}}),Fn.push(ou)}else{const Zr=(0,s.TuY)(o.dtype,r.dtype),Do=new Jo(tn,On,[Mn,lt,xt],n,a,ds,Us,_r,$s),Io=[Cn,dn];if(null!=v&&Io.push(v),_r&&Io.push(P),$s){const ga=i.makeTensorInfo([],"float32",s.ZSL.createScalarValue(L,"float32"));Io.push(ga),Fn.push(ga)}rr=i.runWebGLProgram(Do,Io,Zr)}const Is=sn({inputs:{x:rr},backend:i,attrs:{shape:Oe}});Fn.push(rr);for(const Zr of Fn)i.disposeIntermediateTensorInfo(Zr);return Is}const qi={kernelName:s.Dr,backendName:"webgl",kernelFunc:function Ji(o){const{inputs:r,backend:n,attrs:a}=o,{a:i,b:v,bias:P,preluActivationWeights:L}=r,{transposeA:M,transposeB:U,activation:z,leakyreluAlpha:X}=a;return xo({a:i,b:v,transposeA:M,transposeB:U,backend:n,bias:P,preluActivationWeights:L,leakyreluAlpha:X,activation:z})}},ra="return abs(x);",el={kernelName:s.ljI,backendName:"webgl",kernelFunc:function tl(o){const{inputs:r,backend:n}=o,{x:a}=r;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const v=n.texData.get(a.dataId),P=Bo(v.values);return n.makeTensorInfo(a.shape,a.dtype,P)}let i;return i=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bs(a.shape,ra):new js(a.shape,ra),n.runWebGLProgram(i,[a],a.dtype)}},sl=kn({opSnippet:As+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),rl={kernelName:s.Vvy,backendName:"webgl",kernelFunc:sl},al=kn({opSnippet:As+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),il={kernelName:s.PH8,backendName:"webgl",kernelFunc:al},oa="return a + b;",ll=gs({opSnippet:oa,packedOpSnippet:oa,supportsComplex:!0,cpuKernelImpl:xa}),aa={kernelName:s.OMN,backendName:"webgl",kernelFunc:ll};class ul{constructor(r,n){this.outputShape=[],this.outputShape=r,this.variableNames=n.map((v,P)=>`T${P}`);const a=[];this.variableNames.forEach(v=>{a.push(`float v${v} = get${v}AtOutCoords();`)});const i=this.variableNames.map(v=>`v${v}`).join(" + ");this.userCode=`\n      void main() {\n        ${a.join("\n        ")}\n\n        float result = ${i};\n        setOutput(result);\n      }\n    `}}class cl{constructor(r,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.variableNames=n.map((v,P)=>`T${P}`);const a=[];this.variableNames.forEach(v=>{a.push(`vec4 v${v} = get${v}AtOutCoords();`)});const i=this.variableNames.map(v=>`v${v}`).join(" + ");this.userCode=`\n      void main() {\n        ${a.join("\n        ")}\n\n        vec4 result = ${i};\n        setOutput(result);\n      }\n    `}}const dl={kernelName:s.EkD,backendName:"webgl",kernelFunc:function vo(o){const{inputs:r,backend:n}=o,a=r;if(1===a.length)return Ds({inputs:{x:a[0]},backend:n});if(a.length>(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const M=Math.floor(a.length/2),U=vo({inputs:a.slice(0,M),backend:n}),z=vo({inputs:a.slice(M),backend:n});return vo({inputs:[U,z],backend:n})}const i=a.map(M=>M.dtype).reduce((M,U)=>(0,s.TuY)(M,U)),v=a.map(M=>M.shape),L=(0,s._K2)().getBool("WEBGL_PACK")?new cl(a[0].shape,v):new ul(a[0].shape,v);return n.runWebGLProgram(L,a,i)}},pl={kernelName:s.u8Z,backendName:"webgl",kernelFunc:function ao(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,keepDims:P}=a,L=i.shape.length,M=s.ZSL.parseAxisParam(v,i.shape);let U=M;const z=s.C0T.getAxesPermutation(U,L);let X=i;null!=z&&(X=xs({inputs:{x:i},backend:n,attrs:{perm:z}}),U=s.C0T.getInnerMostAxes(U.length,L)),s.C0T.assertAxesAreInnerMostDims("all",U,L);const[tt,lt]=s.C0T.computeOutAndReduceShapes(X.shape,U),Rt=sn({inputs:{x:X},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(lt)]}}),Wt=$r(Rt,Rt.dtype,"all",n);let wt;return wt=sn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(tt,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:tt}}),n.disposeIntermediateTensorInfo(Rt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(X),wt}},fl={kernelName:s.FSt,backendName:"webgl",kernelFunc:function hl(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,keepDims:P}=a,L=i.shape.length,M=s.ZSL.parseAxisParam(v,i.shape);let U=M;const z=s.C0T.getAxesPermutation(U,L);let X=i;null!=z&&(X=xs({inputs:{x:i},backend:n,attrs:{perm:z}}),U=s.C0T.getInnerMostAxes(U.length,L)),s.C0T.assertAxesAreInnerMostDims("any",U,L);const[tt,lt]=s.C0T.computeOutAndReduceShapes(X.shape,U),Rt=sn({inputs:{x:X},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(lt)]}}),Wt=$r(Rt,Rt.dtype,"any",n);let wt;return wt=sn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(tt,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:tt}}),n.disposeIntermediateTensorInfo(Rt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(X),wt}};class ml{constructor(r,n,a){this.variableNames=["A"];const{windowSize:i,batchSize:v,outSize:P}=r;a||this.variableNames.push("bestIndicesA"),this.outputShape=[v,P],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${i};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${i}; i++) {\n          int inIdx = ${a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===n?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class gl{constructor(r,n,a,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.ZSL.assert(r.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);const P=Math.ceil(r[r.length-1]/n);this.outputShape=r.slice(0,-1),P>1&&this.outputShape.push(P),i||this.variableNames.push("bestIndicesA");const L=this.outputShape,M=L.length,U=O(M),z=ys("coords",M);let X,tt;if(1===P){tt=M+1;const dn=O(tt);X=`\n        ${dn} sourceLocR = ${dn}(${z.join()}, 0);\n        ++${z[M-1]};\n        ${dn} sourceLocG = ${dn}(${z.join()}, 0);\n        ++${z[M-2]};\n        ${dn} sourceLocA = ${dn}(${z.join()}, 0);\n        --${z[M-1]};\n        ${dn} sourceLocB = ${dn}(${z.join()}, 0);\n        --${z[M-2]};`}else tt=M,X=`\n        ${U} sourceLocR = coords;\n        ++${z[M-1]};\n        ${U} sourceLocG = coords;\n        ++${z[M-2]};\n        ${U} sourceLocA = coords;\n        --${z[M-1]};\n        ${U} sourceLocB = coords;\n        --${z[M-2]};`;const lt=["x","y","z","w","u","v"].slice(0,tt),xt="."+lt[tt-1],Rt=lt.map(dn=>"int "+dn),Wt=ys("sourceLocR",tt-1).concat("inIdx.r"),wt=ys("sourceLocG",tt-1).concat("inIdx.g"),jt=ys("sourceLocB",tt-1).concat("inIdx.b"),Te=ys("sourceLocA",tt-1).concat("inIdx.a"),Oe="max"===a?"greaterThan":"lessThan",tn=i?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${Wt.join()}),\n                             getBestIndicesAChannel(${wt.join()}),\n                             getBestIndicesAChannel(${jt.join()}),\n                             getBestIndicesAChannel(${Te.join()})));`,On=`vec4(\n            getAChannel(${Wt.join()}),\n            hasNextCol ? getAChannel(${wt.join()}) : 0.,\n            hasNextRow ? getAChannel(${jt.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${Te.join()}) : 0.)`,Cn=i?"":`\n      float getBestIndicesAChannel(${Rt.join()}) {\n        return getChannel(getBestIndicesA(${lt.join()}),\n                                          vec2(${lt.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${Rt.join()}) {\n        return getChannel(getA(${lt.join()}),\n                               vec2(${lt.slice(-2).join()}));\n      }\n      ${Cn}\n      void main() {\n        ${U} coords = getOutputCoords();\n        bool hasNextCol = ${z[M-1]} < ${L[M-1]-1};\n        bool hasNextRow = ${z[M-2]} < ${L[M-2]-1};\n        ${X}\n        ivec4 srcIdx = ivec4(sourceLocR${xt}, sourceLocG${xt},\n          sourceLocB${xt}, sourceLocA${xt}) * ${n};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${On};\n\n        for (int i = 0; i < ${n}; i++) {\n          inIdx = srcIdx;\n          ${tn}\n          vec4 candidate = ${On};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${Oe}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function ia(o,r,n,a=null){let i=r.shape[0],v=r.shape[1];null!=a&&(i=a.shape[0],v=a.shape[1]);const P=s.C0T.computeOptimalWindowSize(v),L={windowSize:P,inSize:v,batchSize:i,outSize:Math.ceil(v/P)},M=new ml(L,n,null==a),U=[r];null!=a&&U.push(a);const z=o.runWebGLProgram(M,U,"int32");if(1===z.shape[1])return z;const X=ia(o,r,n,z);return o.disposeIntermediateTensorInfo(z),X}function la(o,r,n,a=null){const i=null!=a?a.shape:r.shape,P=s.C0T.computeOptimalWindowSize(i[i.length-1]),L=new gl(i,P,n,null==a),U=o.runWebGLProgram(L,null==a?[r]:[r,a],"int32");if(U.shape.length===r.shape.length){const z=la(o,r,n,U);return o.disposeIntermediateTensorInfo(U),z}return U}function ua(o,r,n,a){const i=[n];if(s.C0T.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),i,r.shape.length),!(0,s._K2)().getBool("WEBGL_PACK_REDUCE")||r.shape.length<=2){const v=[],P=o.texData.get(r.dataId);let M=r;null!==P&&P.isPacked&&(M=o.unpackTensor(r),v.push(M));const[U,z]=s.C0T.computeOutAndReduceShapes(M.shape,i),X=s.ZSL.sizeFromShape(z),tt=sn({inputs:{x:M},backend:o,attrs:{shape:[-1,X]}});v.push(tt);const lt=ia(o,tt,a);v.push(lt);const xt=sn({inputs:{x:lt},backend:o,attrs:{shape:U}});return v.forEach(Rt=>o.disposeIntermediateTensorInfo(Rt)),xt}return la(o,r,a)}const _l={kernelName:s.Jp_,backendName:"webgl",kernelFunc:function El(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v}=a;let P=s.ZSL.parseAxisParam(v,i.shape);const L=s.C0T.getAxesPermutation(P,i.shape.length);let M=i;const U=[];null!=L&&(M=xs({inputs:{x:i},backend:n,attrs:{perm:L}}),U.push(M),P=s.C0T.getInnerMostAxes(P.length,M.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMax",[P[0]],M.shape.length);const z=ua(n,M,P[0],"max");return U.forEach(X=>n.disposeIntermediateTensorInfo(X)),z}},ht={kernelName:s.p_m,backendName:"webgl",kernelFunc:function ut(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v}=a;let P=s.ZSL.parseAxisParam(v,i.shape);const L=s.C0T.getAxesPermutation(P,i.shape.length);let M=i;const U=[];null!=L&&(M=xs({inputs:{x:i},backend:n,attrs:{perm:L}}),U.push(M),P=s.C0T.getInnerMostAxes(P.length,M.shape.length)),s.C0T.assertAxesAreInnerMostDims("argMin",[P[0]],M.shape.length);const z=ua(n,M,P[0],"min");return U.forEach(X=>n.disposeIntermediateTensorInfo(X)),z}},Q=kn({opSnippet:As+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$={kernelName:s.QKF,backendName:"webgl",kernelFunc:Q},Et=kn({opSnippet:As+"return log(x + sqrt(x * x + 1.0));"}),gt={kernelName:s.epO,backendName:"webgl",kernelFunc:Et},ft=kn({opSnippet:As+"\n  return atan(x);\n"}),dt={kernelName:s.TyE,backendName:"webgl",kernelFunc:ft},Lt=gs({opSnippet:Ao+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Rr+"\n  return result;\n"}),Ut={kernelName:s.lxb,backendName:"webgl",kernelFunc:Lt},Kt=kn({opSnippet:As+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Zt={kernelName:s.zP9,backendName:"webgl",kernelFunc:Kt};class qt{constructor(r,n,a,i=!1,v=!1){if(this.variableNames=["x"],"avg"===n&&a)throw new Error("Cannot compute positions for average pool.");const P=r.filterWidth,L=r.strideHeight,M=r.strideWidth,U=r.dilationHeight,z=r.dilationWidth,X=r.effectiveFilterHeight,tt=r.effectiveFilterWidth,lt=r.padInfo.top,xt=r.padInfo.left;this.outputShape=r.outShape;const Rt="avg"===n;let jt="0.0";if(Rt||(jt="-1.0 / 1e-20"),a)return void(this.userCode=`\n        const ivec2 strides = ivec2(${L}, ${M});\n        const ivec2 pads = ivec2(${lt}, ${xt});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${X};\n              wR += ${U}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${tt};\n                wC += ${z}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${i?v?`((batch  * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + d`:`(xR * ${r.inWidth} + xC) * ${r.inChannels} + d`:`wR * ${tt} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let Oe=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===n&&(Oe="avgValue / max(count, 1.0)");const tn=4*Math.floor(P/4),On=P%4,Cn=`\n      if (${Rt}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${L}, ${M});\n      const ivec2 pads = ivec2(${lt}, ${xt});\n      const float initializationValue = ${jt};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${r.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${jt});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${X};\n            wR += ${U}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${r.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${tn}; wC += 4) {\n            int xC = xCCorner + wC * ${z};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              getValue(batch, xR, xC + 2 * ${z}, d),\n              getValue(batch, xR, xC + 3 * ${z}, d)\n            );\n\n            ${Cn}\n          }\n\n          int xC = xCCorner + ${tn};\n          if (${1===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${Cn}\n          } else if (${2===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${Cn}\n          } else if (${3===On}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${z}, d),\n              getValue(batch, xR, xC + 2 * ${z}, d),\n              initializationValue\n            );\n\n            ${Cn}\n          }\n        }\n        setOutput(${Oe});\n      }\n    `}}class ee{constructor(r,n,a,i=!1,v=!1){if(this.variableNames=["x"],"avg"===n&&a)throw new Error("Cannot compute positions for average pool.");const P=r.filterWidth,L=r.strideDepth,M=r.strideHeight,U=r.strideWidth,z=r.dilationDepth,X=r.dilationHeight,tt=r.dilationWidth,lt=r.effectiveFilterDepth,xt=r.effectiveFilterHeight,Rt=r.effectiveFilterWidth,Wt=r.padInfo.front,wt=r.padInfo.top,jt=r.padInfo.left;this.outputShape=r.outShape;const Te="avg"===n;let Oe="0.0";if(Te||(Oe="-1.0 / 1e-20"),a)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${L}, ${M}, ${U});\n        const ivec3 pads = ivec3(${Wt}, ${wt}, ${jt});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${lt};\n              wD += ${z}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${r.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${xt};\n                wR += ${X}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${r.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${Rt};\n                  wC += ${tt}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${r.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${i?v?`(((batch * ${r.inDepth} + xD) * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + ch`:`((xD * ${r.inHeight} + xR) * ${r.inWidth} + xC) * ${r.inChannels} + ch`:`wD * ${xt} * ${Rt} +\n                      wR * ${Rt} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let On=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===n&&(On="avgValue / max(count, 1.0)");const Cn=4*Math.floor(P/4),dn=P%4,Fn=`\n      if (${Te}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${L}, ${M}, ${U});\n      const ivec3 pads = ivec3(${Wt}, ${wt}, ${jt});\n      const float initializationValue = ${Oe};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${r.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${Oe});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${lt};\n            wD += ${z}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${r.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${xt};\n            wR += ${X}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${Cn}; wC += 4) {\n              int xC = xCCorner + wC * ${tt};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${tt}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${tt}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${tt}, ch)\n              );\n\n              ${Fn}\n            }\n\n            int xC = xCCorner + ${Cn};\n            if (${1===dn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${Fn}\n            } else if (${2===dn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${tt}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${Fn}\n            } else if (${3===dn}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${tt}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${tt}, ch),\n                initializationValue\n              );\n\n              ${Fn}\n            }\n          }\n        }\n        setOutput(${On});\n      }\n    `}}const le={kernelName:s.ho8,backendName:"webgl",kernelFunc:function Qt(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r;bt(i,"avgPool");const{filterSize:v,strides:P,pad:L,dimRoundingMode:M}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${P} and dilations '1'`);const z=s.C0T.computePool2DInfo(i.shape,v,P,1,L,M);if(1===z.filterWidth&&1===z.filterHeight&&s.ZSL.arraysEqual(z.inShape,z.outShape))return Ds({inputs:{x:i},backend:n});const X=new qt(z,"avg",!1);return n.runWebGLProgram(X,[i],"float32")}},_e={kernelName:s.cS,backendName:"webgl",kernelFunc:function fe(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{filterSize:v,strides:P,pad:L,dimRoundingMode:M,dataFormat:U}=a,X=s.C0T.computePool3DInfo(i.shape,v,P,[1,1,1],L,M,U),tt=new ee(X,"avg",!1);return n.runWebGLProgram(tt,[i],"float32")}};class $e{constructor(r){this.variableNames=["dy"],this.outputShape=r.inShape;const M=r.effectiveFilterHeight,U=r.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${M-1-r.padInfo.top}, ${U-1-r.padInfo.left});\n      const float avgMultiplier = float(${1/(r.filterHeight*r.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${M};\n            wR += ${r.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${U};\n            wC+= ${r.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fe{constructor(r){this.variableNames=["dy"],this.outputShape=r.inShape;const X=r.effectiveFilterDepth,tt=r.effectiveFilterHeight,lt=r.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${X-1-r.padInfo.front}, ${tt-1-r.padInfo.top}, ${lt-1-r.padInfo.left});\n      const float avgMultiplier = float(${1/(r.filterDepth*r.filterHeight*r.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${X};\n            wD += ${r.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${r.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${r.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${tt};\n              wR += ${r.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${lt};\n                wC += ${r.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ke={kernelName:s.wwC,backendName:"webgl",kernelFunc:function Be(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,input:v}=r,P=v,{filterSize:L,strides:M,pad:U,dimRoundingMode:z}=a,tt=s.C0T.computePool3DInfo(P.shape,L,M,[1,1,1],U,z),lt=new Fe(tt);return n.runWebGLProgram(lt,[i],P.dtype)}},Ae={kernelName:s.VCH,backendName:"webgl",kernelFunc:function Ze(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,input:v}=r,P=v;bt([i,v],"avgPoolGrad");const{filterSize:L,strides:M,pad:U}=a,z=s.C0T.computePool2DInfo(P.shape,L,M,1,U),X=new $e(z);return n.runWebGLProgram(X,[i],P.dtype)}},Me={kernelName:s.jAQ,backendName:"webgl",kernelFunc:function we(o){const{inputs:r,backend:n,attrs:a}=o,{a:i,b:v}=r,{transposeA:P,transposeB:L}=a;return xo({a:i,b:v,transposeA:P,transposeB:L,backend:n})}};class Ne{constructor(r,n,a,i,v,P){this.outputShape=[],this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(r,n),s.C0T.assertAndGetBroadcastShape(r,a);let L="0.0";null!=i&&(s.C0T.assertAndGetBroadcastShape(r,i),this.variableNames.push("offset"),L="getOffsetAtOutCoords()");let M="1.0";null!=v&&(s.C0T.assertAndGetBroadcastShape(r,v),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${L};\n        float scale = ${M};\n        float inv = scale * inversesqrt(variance + float(${P}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ve{constructor(r,n,a,i,v,P){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.C0T.assertAndGetBroadcastShape(r,n),s.C0T.assertAndGetBroadcastShape(r,a);let L="vec4(0.0)";null!=i&&(s.C0T.assertAndGetBroadcastShape(r,i),this.variableNames.push("offset"),L="getOffsetAtOutCoords()");let M="vec4(1.0)";null!=v&&(s.C0T.assertAndGetBroadcastShape(r,v),this.variableNames.push("scale"),M="getScaleAtOutCoords()"),this.outputShape=r,this.userCode=`\n      void main() {\n        vec4 offset = ${L};\n        vec4 scale = ${M};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${P}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ke={kernelName:s.i5R,backendName:"webgl",kernelFunc:({inputs:o,backend:r,attrs:n})=>{const{x:a,mean:i,variance:v,offset:P,scale:L}=o;s.ZSL.assert(i.shape.length===v.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.ZSL.assert(null==P||i.shape.length===P.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.ZSL.assert(null==L||i.shape.length===L.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:M}=n;null==M&&(M=.001);const U=[a,i,v];let z=null;null!=P&&(z=P.shape,U.push(P));let X=null;null!=L&&(X=L.shape,U.push(L));const tt=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Ve(a.shape,i.shape,v.shape,z,X,M):new Ne(a.shape,i.shape,v.shape,z,X,M);return r.runWebGLProgram(tt,U,U[0].dtype)}};class Ye{constructor(r){this.variableNames=["source"],this.outputShape=r,this.rank=r.length;const n=O(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const a=function rn(o){if(1===o)return"sourceLoc";if(o<=6)return He.slice(0,o).map(r=>"sourceLoc."+r).join(",");throw Error(`Slicing for rank ${o} is not yet supported`)}(this.rank);let i;i=`\n        ${n} sourceLoc;\n        ${n} coords = getOutputCoords();\n        ${r.map((P,L)=>`sourceLoc.${He[L]} = start[${L}] + coords.${He[L]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${i}\n        setOutput(getSource(${a}));\n      }\n    `}}const He=["x","y","z","w","u","v"];class Xe{constructor(r){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.rank=r.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=O(this.rank),a=ys("coords",this.rank),i=ys("sourceLoc",this.rank),v=1===this.rank?"sourceLoc":`vec2(${i.slice(-2).join()})`,P=`getChannel(getSource(${i.join()}), ${v})`,L=`\n      result.x = ${P};\n      if (++${a[this.rank-1]} < ${r[this.rank-1]}) {\n        ++${i[this.rank-1]};\n        result.y = ${P};\n        --${i[this.rank-1]};\n      }\n    `,M=1===this.rank?"":`\n      --${a[this.rank-1]};\n      if (++${a[this.rank-2]} < ${r[this.rank-2]}) {\n        ++${i[this.rank-2]};\n        result.z = ${P};\n        if (++${a[this.rank-1]} < ${r[this.rank-1]}) {\n          ++${i[this.rank-1]};\n          result.w = ${P};\n        }\n      }\n    `,U=this.rank<=4?`sourceLoc = coords +\n            ${n}(${r.map((z,X)=>`start[${X}]`).join()});`:r.map((z,X)=>`${i[X]} = ${a[X]} + start[${X}];`).join("\n");this.userCode=`\n      void main() {\n        ${n} coords = getOutputCoords();\n        ${n} sourceLoc;\n        ${U}\n        vec4 result = vec4(0.);\n        ${L}\n        ${M}\n        setOutput(result);\n      }\n    `}}function Qe(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{begin:v,size:P}=a,[L,M]=s.Kro.parseSliceParams(i,v,P);if(s.Kro.assertParamsValid(i,L,M),0===s.ZSL.sizeFromShape(M))return n.makeTensorInfo(M,i.dtype,[]);if(n.shouldExecuteOnCPU([i])||"string"===i.dtype){const X=n.texData.get(i.dataId),tt=Qa(X.values,L,M,i.shape,i.dtype);return n.makeTensorInfo(M,i.dtype,tt)}const{isPacked:U}=n.texData.get(i.dataId),z=s.Kro.isSliceContinous(i.shape,L,M);if(U||!z){const X=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xe(M):new Ye(M);return n.runWebGLProgram(X,[i],i.dtype,[L])}return n.uploadToGPU(i.dataId),function ln(o,r,n,a){const i=a.texData.get(o.dataId),v=a.makeTensorInfo(n,o.dtype),P=a.texData.get(v.dataId);Object.assign(P,i),P.refCount=1,P.shape=n,P.dtype=o.dtype;let L=s.Kro.computeFlatOffset(r,s.ZSL.computeStrides(o.shape));i.slice&&(L+=i.slice.flatOffset),P.slice={flatOffset:L,origDataId:i.slice&&i.slice.origDataId||o.dataId};const M=a.dataRefCount.get(P.slice.origDataId)||1;return a.dataRefCount.set(P.slice.origDataId,M+1),v}(i,L,M,n)}const pn={kernelName:s.JiE,backendName:"webgl",kernelFunc:Qe},In={kernelName:s.Ik2,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{blockShape:v,crops:P}=a;s.ZSL.assert(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const L=v.reduce((jt,Te)=>jt*Te),M=s.C0T.getReshaped(i.shape,v,L),U=s.C0T.getPermuted(M.length,v.length),z=s.C0T.getReshapedPermuted(i.shape,v,L),X=s.C0T.getSliceBeginCoords(P,v.length),tt=s.C0T.getSliceSize(z,P,v.length),lt=[],xt=sn({inputs:{x:i},backend:n,attrs:{shape:M}}),Rt=xs({inputs:{x:xt},backend:n,attrs:{perm:U}}),Wt=sn({inputs:{x:Rt},backend:n,attrs:{shape:z}}),wt=Qe({inputs:{x:Wt},backend:n,attrs:{begin:X,size:tt}});return lt.push(xt),lt.push(Rt),lt.push(Wt),lt.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),wt}},bn={kernelName:s.N4F,backendName:"webgl",kernelFunc:function Tn(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,weights:v}=r,{size:P}=a,L=n.readSync(i.dataId),M=n.readSync(v.dataId),U=$o(L,M,v.dtype,v.shape,P);return n.makeTensorInfo([P],v.dtype,U)}},os={kernelName:s.HNs,backendName:"webgl",kernelFunc:function Jn(o){const{inputs:r,backend:n}=o,{a,b:i}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),P=(0,s._K2)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,i])||1===P){const M=n.texData.get(a.dataId).values,U=n.texData.get(i.dataId).values,[z,X]=Ta(a.shape,i.shape,M,U,a.dtype),tt=n.makeTensorInfo(X,a.dtype);return n.texData.get(tt.dataId).values=z,tt}let L;return L=v?new Lr("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,i.shape,!1):new Nr("\n  return float(int(a.r) & int(b.r));\n",a.shape,i.shape),n.runWebGLProgram(L,[a,i],a.dtype)}},Yn={kernelName:s.vj7,backendName:"webgl",kernelFunc:function qn(o){const{inputs:r,backend:n}=o,{s0:a,s1:i}=r,v=n.readSync(a.dataId),P=n.readSync(i.dataId),L=s.C0T.assertAndGetBroadcastShape(Array.from(v),Array.from(P));return n.makeTensorInfo([L.length],"int32",Int32Array.from(L))}},es=gs({opSnippet:"return float(a != b);",cpuKernelImpl:Va,dtype:"bool"}),er={kernelName:s.ylV,backendName:"webgl",kernelFunc:es};function is(o){const{inputs:r,backend:n}=o,{input:a}=r;return Ds({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const mr={kernelName:s.LRy,backendName:"webgl",kernelFunc:is},nr={kernelName:s.KXH,backendName:"webgl",kernelFunc:function Ns(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{dtype:v}=a;if("complex64"===v){if("complex64"===i.dtype)return Ds({inputs:{x:i},backend:n});const P=s.Ul9(i.shape),L=Ns({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),M=fr({inputs:{real:L,imag:P},backend:n});return P.dispose(),n.disposeIntermediateTensorInfo(L),M}if("complex64"===i.dtype){const P=is({inputs:{input:i},backend:n}),L=Ns({inputs:{x:P},backend:n,attrs:{dtype:v}});return n.disposeIntermediateTensorInfo(P),L}if(!s.ZSL.hasEncodingLoss(i.dtype,v)){const P=Ds({inputs:{x:i},backend:n});return{dataId:P.dataId,shape:P.shape,dtype:v}}if(n.shouldExecuteOnCPU([i])){const P=n.texData.get(i.dataId).values,[L,M,U]=Ca(P,i.shape,i.dtype,v);return n.makeTensorInfo(L,M,U)}if("int32"===v)return function wr(o,r){const n=new js(o.shape,"return float(int(x));"),a=r.runWebGLProgram(n,[o],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,n);if("bool"===v){const P=n.makeTensorInfo([],"bool",s.ZSL.getTypedArrayFromDType("bool",1)),M=es({inputs:{a:i,b:P},backend:n});return n.disposeIntermediateTensorInfo(P),M}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${v}`)}},sr="return ceil(x);",gr=kn({opSnippet:sr,packedOpSnippet:sr,cpuKernelImpl:Da}),Er={kernelName:s.QDP,backendName:"webgl",kernelFunc:gr};class lo{constructor(r){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=r,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Mo{constructor(r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=r,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const yl={kernelName:s.vaV,backendName:"webgl",kernelFunc:function No(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{clipValueMin:v,clipValueMax:P}=a;let L;return L=(0,s._K2)().getBool("WEBGL_PACK_CLIP")?new Mo(i.shape):new lo(i.shape),n.runWebGLProgram(L,[i],i.dtype,[[v],[P]])}};class To{constructor(r){this.variableNames=["real","imag"],this.outputShape=r,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function ca(o,r){return{dataId:r.dataId,dtype:r.dtype,shape:o.shape}}const iu={kernelName:s.$zE,backendName:"webgl",kernelFunc:function xl(o){const{inputs:r,backend:n}=o,{x:a}=r,i=n.texData.get(a.dataId),v=new To(a.shape),P=[ca(a,i.complexTensorInfos.real),ca(a,i.complexTensorInfos.imag)];return n.runWebGLProgram(v,P,P[0].dtype)}};class lu{constructor(r){this.outputShape=[],this.outputShape=s.C0T.computeOutShape(r,1),this.variableNames=r.map((P,L)=>`T${L}`);const n=new Array(r.length-1);n[0]=r[0][1];for(let P=1;P<n.length;P++)n[P]=n[P-1]+r[P][1];const a=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let P=1;P<n.length;P++)a.push(`else if (yC < ${n[P]}) setOutput(getT${P}(yR, yC-${n[P-1]}));`);a.push(`else setOutput(getT${n.length}(yR, yC-${n[n.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${a.join("\n        ")}\n      }\n    `}}class uu{constructor(r,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.C0T.computeOutShape(r,n);const a=this.outputShape,i=a.length,v=O(i),P=ys("coords",i),L=["x","y","z","w","u","v"].slice(0,i);this.variableNames=r.map((Rt,Wt)=>`T${Wt}`);const M=new Array(r.length-1);M[0]=r[0][n];for(let Rt=1;Rt<M.length;Rt++)M[Rt]=M[Rt-1]+r[Rt][n];const U=L[n],z=L.slice(-2),X=L.join();let tt=`if (${U} < ${M[0]}) {\n        return getChannel(\n            getT0(${X}), vec2(${z.join()}));\n        }`;for(let Rt=1;Rt<M.length;Rt++){const Wt=M[Rt-1];tt+=`\n        if (${U} < ${M[Rt]}  && ${U} >= ${M[Rt-1]}) {\n          return getChannel(\n            getT${Rt}(${da(L,U,Wt)}),\n            vec2(${da(z,U,Wt)}));\n        }`}const xt=M[M.length-1];tt+=`\n        return getChannel(\n          getT${M.length}(${da(L,U,xt)}),\n          vec2(${da(z,U,xt)}));`,this.userCode=`\n      float getValue(${L.map(Rt=>"int "+Rt)}) {\n        ${tt}\n      }\n\n      void main() {\n        ${v} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${P}), 0., 0., 0.);\n\n        ${P[i-1]} = ${P[i-1]} + 1;\n        if (${P[i-1]} < ${a[i-1]}) {\n          result.g = getValue(${P});\n        }\n\n        ${P[i-2]} = ${P[i-2]} + 1;\n        if (${P[i-2]} < ${a[i-2]}) {\n          result.a = getValue(${P});\n        }\n\n        ${P[i-1]} = ${P[i-1]} - 1;\n        if (${P[i-2]} < ${a[i-2]} &&\n            ${P[i-1]} < ${a[i-1]}) {\n          result.b = getValue(${P});\n        }\n        setOutput(result);\n      }\n    `}}function da(o,r,n){const a=o.indexOf(r);return o.map((v,P)=>P===a?`${v} - ${n}`:v).join()}function pa(o){const{inputs:r,backend:n}=o,{input:a}=r;return Ds({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const cu={kernelName:s.dv8,backendName:"webgl",kernelFunc:pa};function Ro(o,r,n){const a=o[0].dtype;if("complex64"===a){const lt=o.map(jt=>is({inputs:{input:jt},backend:n})),xt=o.map(jt=>pa({inputs:{input:jt},backend:n})),Rt=Ro(lt,r,n),Wt=Ro(xt,r,n),wt=fr({inputs:{real:Rt,imag:Wt},backend:n});return lt.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),xt.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),n.disposeIntermediateTensorInfo(Rt),n.disposeIntermediateTensorInfo(Wt),wt}let i=n.shouldExecuteOnCPU(o);if("string"===a&&(i=!0),i){const lt=o.map(Oe=>{const On=[-1,s.ZSL.sizeFromShape(Oe.shape.slice(r))];return sn({inputs:{x:Oe},backend:n,attrs:{shape:On}})}),xt=lt.map(Oe=>({vals:n.readSync(Oe.dataId),shape:Oe.shape})),Rt=s.C0T.computeOutShape(lt.map(Oe=>Oe.shape),1),wt=Ia(xt,Rt,a,1===lt[0].shape[0]),jt=s.C0T.computeOutShape(o.map(Oe=>Oe.shape),r),Te=n.makeTensorInfo(jt,a,wt);return lt.forEach(Oe=>n.disposeIntermediateTensorInfo(Oe)),Te}const v=o.filter(lt=>s.ZSL.sizeFromShape(lt.shape)>0),P=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&v[0].shape.length>1;if(1===v.length){const lt=P?new js(o[0].shape,hr):new bs(o[0].shape,hr);return n.runWebGLProgram(lt,o,a)}const L=(0,s._K2)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(v.length>L){const lt=[];for(let Rt=0;Rt<v.length;Rt+=L){const Wt=v.slice(Rt,Rt+L);lt.push(Ro(Wt,r,n))}const xt=Ro(lt,r,n);for(const Rt of lt)n.disposeIntermediateTensorInfo(Rt);return xt}if(P){const lt=new uu(v.map(xt=>xt.shape),r);return n.runWebGLProgram(lt,v,a)}const{tensors2D:M,outShape:U}=function du(o,r,n){const a=s.C0T.computeOutShape(o.map(v=>v.shape),r);return{tensors2D:o.map(v=>sn({inputs:{x:v},attrs:{shape:[-1,s.ZSL.sizeFromShape(v.shape.slice(r))]},backend:n})),outShape:a}}(v,r,n),z=new lu(M.map(lt=>lt.shape)),X=n.runWebGLProgram(z,M,a);M.forEach(lt=>n.disposeIntermediateTensorInfo(lt));const tt=sn({inputs:{x:X},attrs:{shape:U},backend:n});return n.disposeIntermediateTensorInfo(X),tt}function bl(o){const{inputs:r,backend:n,attrs:a}=o,{axis:i}=a,v=s.ZSL.parseAxisParam(i,r[0].shape)[0],P=r.map(U=>U.shape);s.C0T.assertParamsConsistent(P,v);const L=s.C0T.computeOutShape(r.map(U=>U.shape),v);if(0===s.ZSL.sizeFromShape(L))return n.makeTensorInfo(L,r[0].dtype,[]);const M=r.filter(U=>s.ZSL.sizeFromShape(U.shape)>0);return 1===M.length?Ds({inputs:{x:M[0]},backend:n}):Ro(M,v,n)}const pu={kernelName:s.$dB,backendName:"webgl",kernelFunc:bl};class Ml{constructor(r,n=!1,a=null,i=!1,v=!1){this.variableNames=["x","W"],this.outputShape=r.outShape;const P=r.padInfo.top,L=r.padInfo.left,M=r.strideHeight,U=r.strideWidth,z=r.dilationHeight,X=r.dilationWidth,tt=r.filterHeight,lt=r.filterWidth,xt=4*Math.floor(r.inChannels/4),Rt=r.inChannels%4,Wt="channelsLast"===r.dataFormat,wt=Wt?1:2,jt=Wt?2:3,Te=Wt?3:1;let Oe="",tn="";a&&(Oe=i?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`\n          float activation(float x) {\n            ${a}\n          }\n        `,tn="result = activation(result);");const On=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${Oe}\n\n      const ivec2 strides = ivec2(${M}, ${U});\n      const ivec2 pads = ivec2(${P}, ${L});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${Te}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${wt}], coords[${jt}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${tt}; wR++) {\n          int xR = xRCorner + wR * ${z};\n\n          if (xR < 0 || xR >= ${r.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${lt}; wC++) {\n            int xC = xCCorner + wC * ${X};\n\n            if (xC < 0 || xC >= ${r.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${xt}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${Wt}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===Rt}) {\n\n              if (${Wt}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${xt}) *\n                    getW(wR, wC, ${xt}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${xt}, xR, xC) *\n                    getW(wR, wC, ${xt}, d2);\n              }\n\n            } else if (${2===Rt}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${xt}, d2),\n                getW(wR, wC, ${xt} + 1, d2)\n              );\n\n              if (${Wt}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${xt}),\n                  getX(batch, xR, xC, ${xt} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${xt}, xR, xC),\n                  getX(batch, ${xt} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===Rt}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${xt}, d2),\n                getW(wR, wC, ${xt} + 1, d2),\n                getW(wR, wC, ${xt} + 2, d2)\n              );\n\n              if (${Wt}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${xt}),\n                  getX(batch, xR, xC, ${xt} + 1),\n                  getX(batch, xR, xC, ${xt} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${xt}, xR, xC),\n                  getX(batch, ${xt} + 1, xR, xC),\n                  getX(batch, ${xt} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${On}\n        ${tn}\n        setOutput(result);\n      }\n    `}}class hu{constructor(r){this.variableNames=["x","W"],this.outputShape=r.outShape;const n=r.padInfo.front,a=r.padInfo.top,i=r.padInfo.left,v=r.strideDepth,P=r.strideHeight,L=r.strideWidth,M=r.dilationDepth,U=r.dilationHeight,z=r.dilationWidth,X=r.filterDepth,tt=r.filterHeight,lt=r.filterWidth,xt=4*Math.floor(r.inChannels/4),Rt=r.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${v}, ${P}, ${L});\n      const ivec3 pads = ivec3(${n}, ${a}, ${i});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${X}; wF++) {\n          int xF = xFCorner + wF * ${M};\n\n          if (xF < 0 || xF >= ${r.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${tt}; wR++) {\n            int xR = xRCorner + wR * ${U};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${lt}; wC++) {\n              int xC = xCCorner + wC * ${z};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${xt}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===Rt}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${xt}) *\n                  getW(wF, wR, wC, ${xt}, d2);\n              } else if (${2===Rt}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${xt}),\n                  getX(batch, xF, xR, xC, ${xt} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${xt}, d2),\n                  getW(wF, wR, wC, ${xt} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===Rt}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${xt}),\n                  getX(batch, xF, xR, xC, ${xt} + 1),\n                  getX(batch, xF, xR, xC, ${xt} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${xt}, d2),\n                  getW(wF, wR, wC, ${xt} + 1, d2),\n                  getW(wF, wR, wC, ${xt} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nl{constructor(r,n=!1,a=null,i=!1,v=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=De(this.outputShape.length);const P=r.padInfo.left,L=r.strideWidth,M=r.dilationWidth,U=r.filterHeight,z=r.filterWidth,X=z;let tt="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let Wt=0;Wt<z;Wt++)tt+=`\n           vec4 xTexelC${2*Wt};\n           int xTexelC${2*Wt}Ready;\n           vec4 xTexelC${2*Wt+1};\n           int xTexelC${2*Wt+1}Ready;\n           vec4 xC${Wt};`;tt+=`\n     for (int r = 0; r < ${U}; r++) {\n      for (int d1 = 0; d1 < ${r.inChannels}; d1 += 2) {\n       `;for(let Wt=0;Wt<z;Wt++)tt+=`\n           xTexelC${2*Wt} = vec4(0.0);\n           xTexelC${2*Wt}Ready = 0;\n           xTexelC${2*Wt+1} = vec4(0.0);\n           xTexelC${2*Wt+1}Ready = 0;\n           xC${Wt} = vec4(0.0);`;tt+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let Wt=0;Wt<(X+1)/2;Wt++){const wt=2*Wt;if(tt+=`\n           xC = xCCorner + ${wt*M};\n           `,1===L){if(wt<z&&(P%2==1?(tt+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${wt}Ready == 0) {\n                   xTexelC${wt} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${wt}.zw = vec2(0.0);\n                   }\n                   xTexelC${wt}Ready = 1;\n                 }\n               `,tt+=1===M&&wt>0?`\n                 xC${wt} = vec4(xTexelC${wt-2}.zw, xTexelC${wt}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${wt} = vec4(previous.zw, xTexelC${wt}.xy);\n                   } else {\n                     xC${wt} = vec4(0.0, 0.0, xTexelC${wt}.xy);\n                   }\n                   `):tt+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${wt}Ready == 0) {\n                   xTexelC${wt} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${wt}.zw = vec2(0.0);\n                   }\n                   xTexelC${wt}Ready = 1;\n                 }\n\n                 xC${wt} = xTexelC${wt};\n                 `,wt+1<z)){const jt=P%2==0?s.ZSL.nearestLargerEven(M):M;M%2==0&&P%2==1||M%2!=0&&P%2!=1?(tt+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${jt};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${wt+1}Ready == 0) {\n                     xTexelC${wt+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${wt+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${wt+1}Ready = 1;\n                   }\n                   `,tt+=M>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${wt+1} = vec4(previous.zw, xTexelC${wt+1}.xy);\n                     } else {\n                      xC${wt+1} = vec4(0.0, 0.0, xTexelC${wt+1}.xy);\n                     }\n                     `:`\n                     xC${wt+1} = vec4(xTexelC${wt}.zw, xTexelC${wt+1}.xy);\n                     `):tt+=1===jt?`\n                     xC${wt+1} = xTexelC${wt};\n                     `:`\n                     xCOffset = xC + ${jt};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${wt+1}Ready == 0) {\n                       xTexelC${wt+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${wt+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${wt+1}Ready = 1;\n                     }\n\n                     xC${wt+1} = xTexelC${wt+1};\n                     `}}else wt<z&&(P%2==1?(tt+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${wt}Ready == 0) {\n                   xTexelC${wt} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${wt}.zw = vec2(0.0);\n                   }\n                   xTexelC${wt}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${wt+1}Ready == 0) {\n                   xTexelC${wt+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${wt+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${wt+1}Ready = 1;\n                 }\n\n                 xC${wt} = vec4(xTexelC${wt}.zw, xTexelC${wt+1}.zw);\n               `,wt+1<z&&(tt+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${wt+1} = vec4(xTexelC${wt+1}.xy, final.xy);\n                 `)):(tt+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${wt}Ready == 0) {\n                   xTexelC${wt} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${wt}.zw = vec2(0.0);\n                   }\n                   xTexelC${wt}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${wt+1}Ready == 0) {\n                   xTexelC${wt+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${wt+1}.zw = vec2(0.);\n                   }\n                   xTexelC${wt+1}Ready = 1;\n                 }\n\n                 xC${wt} = vec4(\n                   xTexelC${wt}.xy, xTexelC${wt+1}.xy);\n               `,wt+1<z&&(tt+=`\n                   xC${wt+1} = vec4(xTexelC${wt}.zw, xTexelC${wt+1}.zw);\n                 `)));wt<z&&(tt+=`\n             wTexel = getW(r, ${wt}, d1, d2);\n             dotProd += xC${wt}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${r.inChannels}) {\n               dotProd += xC${wt}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,wt+1<z&&(tt+=`\n               wTexel = getW(r, ${wt+1}, d1, d2);\n               dotProd += xC${wt+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${r.inChannels}) {\n                 dotProd += xC${wt+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}tt+="\n     }\n   ",tt+="\n     }\n   ",tt+="\n     }\n   ";let lt="",xt="";a&&(lt=i?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${a}\n         }`:v?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${a}\n         }`:`vec4 activation(vec4 x) {\n           ${a}\n         }`,xt="result = activation(result);");const Rt=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${lt}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${tt}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${Rt}\n         ${xt}\n         setOutput(result);\n       }\n     `}}class fu{constructor(r,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=r,this.enableShapeUniforms=De(this.outputShape.length);const{dataFormat:a}=n,i=ce(),v="channelsLast"===a,P=v?1:2,L=v?2:3,M=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${r[2]} && pos < ${r[1]}) {`;let U="";for(let z=0;z<=1;z++)for(let X=0;X<=1;X++)U+=`\n          blockIndex = rc.z + ${X};\n          pos = rc.y + ${z};\n\n          ${M}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${P}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${L}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${v}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*z+X}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*z+X}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${U}\n\n        ${i.output} = result;\n      }\n    `}}function ha(o,r){const n=o.length;return n>=3?r?[...o.slice(0,-3),o[n-3]*o[n-2],o[n-1]]:[...o.slice(0,-3),o[n-3],o[n-2]*o[n-1]]:!r&&1===n&&o[0]>1?[o[0],1]:null}function Rl({x:o,filter:r,convInfo:n,backend:a,bias:i=null,preluActivationWeights:v=null,leakyreluAlpha:P=0,activation:L=null}){const M=o.shape,U=a.texData.get(o.dataId),z=n.inChannels,X=M[0]*M[1]*M[2],tt=n.outChannels,lt="channelsLast"===n.dataFormat;let Wt;const wt=[];if(null!=v){const Oe=ha(v.shape,lt);null!=Oe&&(v=sn({inputs:{x:v},backend:a,attrs:{shape:Oe}}),wt.push(v))}if(null!=i){const Oe=ha(i.shape,lt);null!=Oe&&(i=sn({inputs:{x:i},backend:a,attrs:{shape:Oe}}),wt.push(i))}if((1!==X&&1!==tt||!(z>sa))&&U.isPacked&&lt&&null!=U.texture&&M[2]%2!=0&&s.ZSL.arraysEqual(U.shape.slice(-3),M.slice(-3))){const tn={dataId:o.dataId,shape:[1,M[0]*M[1]*(M[2]+1),n.inChannels],dtype:o.dtype},On=U.shape;U.shape=U.shape.slice(),U.shape[U.shape.length-2]++,s.ZSL.assert(jn(U.shape,tn.shape),()=>`packed reshape ${U.shape} to ${tn.shape} isn't free`);const Cn=sn({inputs:{x:r},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});wt.push(Cn);const dn=xo({a:tn,b:Cn,backend:a,transposeA:!1,transposeB:!1,bias:i,activation:L,preluActivationWeights:v,leakyreluAlpha:P}),Fn=a.texData.get(dn.dataId);s.ZSL.assert(Fn.isPacked,()=>"batchMatMul result is expected to be packed"),U.shape=On,Fn.shape=n.outShape,Wt=Ds({inputs:{x:dn},backend:a}),Wt.shape=n.outShape,wt.push(dn)}else{const Oe=n.outHeight*n.outWidth,tn=sn({inputs:{x:o},backend:a,attrs:{shape:lt?[n.batchSize,Oe,n.inChannels]:[n.batchSize,n.inChannels,Oe]}}),On=sn({inputs:{x:r},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),Cn=xo({a:lt?tn:On,b:lt?On:tn,transposeA:!lt,transposeB:!1,backend:a,bias:i,activation:L,preluActivationWeights:v,leakyreluAlpha:P});Wt=sn({inputs:{x:Cn},backend:a,attrs:{shape:n.outShape}}),wt.push(tn),wt.push(On),wt.push(Cn)}for(const Oe of wt)a.disposeIntermediateTensorInfo(Oe);return Wt}function Ll({x:o,filter:r,convInfo:n,backend:a,bias:i=null,preluActivationWeights:v=null,leakyreluAlpha:P=0,activation:L=null}){const{filterWidth:M,filterHeight:U,inChannels:z,outWidth:X,outHeight:tt,dataFormat:lt}=n,xt="channelsLast"===lt,Rt=M*U*z,Wt=tt*X,wt=[n.batchSize,Rt,Wt],Oe=[];if(null!=v){const Is=ha(v.shape,xt);null!=Is&&(v=sn({inputs:{x:v},backend:a,attrs:{shape:Is}}),Oe.push(v))}if(null!=i){const Is=ha(i.shape,xt);null!=Is&&(i=sn({inputs:{x:i},backend:a,attrs:{shape:Is}}),Oe.push(i))}const tn=sn({inputs:{x:r},backend:a,attrs:{shape:[1,Rt,s.ZSL.sizeFromShape(r.shape)/Rt]}});Oe.push(tn);const On=new fu(wt,n),dn=a.runWebGLProgram(On,[o],"float32",[o.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),Fn=sn({inputs:{x:dn},backend:a,attrs:{shape:wt}});Oe.push(dn),Oe.push(Fn);const Mn=null!=i,cs=null!=v,ds="leakyrelu"===L,_r=L?oo(L,!0):null,$s=new Jo(xt?Fn.shape:tn.shape,xt?tn.shape:Fn.shape,xt?[n.batchSize,Wt,n.outChannels]:[n.batchSize,n.outChannels,Wt],!0,!1,Mn,_r,cs,ds),Us=xt?[Fn,tn]:[tn,Fn];if(i&&Us.push(i),cs&&Us.push(v),ds){const Is=a.makeTensorInfo([],"float32",s.ZSL.createScalarValue(P,"float32"));Us.push(Is),Oe.push(Is)}const Zs=a.runWebGLProgram($s,Us,"float32"),rr=sn({inputs:{x:Zs},backend:a,attrs:{shape:n.outShape}});Oe.push(Zs);for(const Is of Oe)a.disposeIntermediateTensorInfo(Is);return rr}const gu={kernelName:s.p2J,backendName:"webgl",kernelFunc:function mu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v}=r,{strides:P,pad:L,dataFormat:M,dilations:U,dimRoundingMode:z}=a,X=s.C0T.convertConv2DDataFormat(M),tt=s.C0T.computeConv2DInfo(i.shape,v.shape,P,U,L,z,!1,X);let lt;if(1!==tt.filterHeight||1!==tt.filterWidth||1!==tt.dilationHeight||1!==tt.dilationWidth||1!==tt.strideHeight||1!==tt.strideWidth||"SAME"!==tt.padInfo.type&&"VALID"!==tt.padInfo.type)if(tt.strideWidth<=2&&"channelsLast"===X&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const Rt=new Nl(tt);lt=n.runWebGLProgram(Rt,[i,v],"float32",[[tt.padInfo.top,tt.padInfo.left],[tt.strideHeight,tt.strideWidth],[tt.dilationHeight,tt.dilationWidth],[tt.inHeight,tt.inWidth]])}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))lt=Ll({x:i,filter:v,convInfo:tt,backend:n});else{const Rt=new Ml(tt);lt=n.runWebGLProgram(Rt,[i,v],"float32")}else lt=Rl({x:i,filter:v,convInfo:tt,backend:n});const xt=sn({inputs:{x:lt},backend:n,attrs:{shape:tt.outShape}});return n.disposeIntermediateTensorInfo(lt),xt}};class Eu{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yR = 0; yR < ${r.outHeight}; yR++) {\n            int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${r.outWidth}; yC++) {\n              int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===r.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _u{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterHeight,a=r.filterWidth,P="channelsLast"===r.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${P?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${P?1:2}], coords[${P?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${a} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${r.outChannels}; d2++) {\n\n              if (${P}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yu{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yF = 0; yF < ${r.outDepth}; yF++) {\n            int xF = wF + yF * ${r.strideDepth} - ${r.padInfo.front};\n\n            if (xF < 0 || xF >= ${r.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${r.outHeight}; yR++) {\n              int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n              if (xR < 0 || xR >= ${r.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${r.outWidth}; yC++) {\n                int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n                if (xC < 0 || xC >= ${r.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xu{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterDepth,a=r.filterHeight,i=r.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${n-1-r.padInfo.front}, ${a-1-r.padInfo.top}, ${i-1-r.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${n}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${r.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${n} - 1 - wF;\n\n          for (int wR = 0; wR < ${a}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${a} - 1 - wR;\n\n            for (int wC = 0; wC < ${i}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${i} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${r.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Tu={kernelName:s.rFm,backendName:"webgl",kernelFunc:function vu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,dy:v}=r,{strides:P,pad:L,dataFormat:M,dimRoundingMode:U,filterShape:z}=a,X=s.C0T.convertConv2DDataFormat(M),tt=s.C0T.computeConv2DInfo(i.shape,z,P,1,L,U,!1,X),lt=new Eu(tt);return n.runWebGLProgram(lt,[i,v],"float32")}};class Cu{constructor(r){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=r.inShape,this.enableShapeUniforms=De(this.outputShape.length);const n=r.filterHeight,a=r.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int wCPerm = ${a} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${r.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${r.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${r.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Iu={kernelName:s.jfg,backendName:"webgl",kernelFunc:function Du(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,filter:v}=r,{inputShape:P,strides:L,pad:M,dataFormat:U,dimRoundingMode:z}=a,X=s.C0T.convertConv2DDataFormat(U),tt=s.C0T.computeConv2DInfo(P,v.shape,L,1,M,z,!1,X);if((0,s._K2)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===X){const lt=[[tt.strideHeight,tt.strideWidth]],xt=new Cu(tt);return n.runWebGLProgram(xt,[i,v],"float32",lt)}{const lt=new _u(tt);return n.runWebGLProgram(lt,[i,v],"float32")}}},Ou={kernelName:s.A1h,backendName:"webgl",kernelFunc:function Pu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v}=r,{strides:P,pad:L,dilations:M}=a,U=s.C0T.computeConv3DInfo(i.shape,v.shape,P,M,L),z=new hu(U);return n.runWebGLProgram(z,[i,v],"float32")}},Au={kernelName:s.iGz,backendName:"webgl",kernelFunc:function Su(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,dy:v}=r,{strides:P,pad:L,filterShape:M}=a,U=s.C0T.computeConv3DInfo(i.shape,M,P,1,L),z=new yu(U);return n.runWebGLProgram(z,[i,v],"float32")}},Mu={kernelName:s.gC7,backendName:"webgl",kernelFunc:function bu(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,filter:v}=r,{pad:P,strides:L,inputShape:M}=a,U=s.C0T.computeConv3DInfo(M,v.shape,L,1,P),z=new xu(U);return n.runWebGLProgram(z,[i,v],"float32")}},Lu=kn({opSnippet:jr+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Rr}\n  return result;\n`}),$u={kernelName:s.Mn0,backendName:"webgl",kernelFunc:Lu},wu=kn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Bu={kernelName:s.MnK,backendName:"webgl",kernelFunc:wu};class ku{constructor(r,n,a,i,v){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[P,L,M,U]=r,[z]=n,[X,tt]=a;this.outputShape=[z,X,tt,U];const lt="bilinear"===i?1:0,[xt,Rt]=[L-1+".0",M-1+".0"],[Wt,wt,jt]=X>1?[""+(L-1)/(X-1),"(y2-y1) * height_ratio",`y1*${xt} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${xt}`],[Te,Oe,tn]=tt>1?[""+(M-1)/(tt-1),"(x2-x1) * width_ratio",`x1*${Rt} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${Rt}`];this.userCode=`\n      const float height_ratio = float(${Wt});\n      const float width_ratio = float(${Te});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${P}) {\n          return;\n        }\n\n        float height_scale = ${wt};\n        float width_scale = ${Oe};\n\n        float in_y = ${jt};\n        if( in_y < 0.0 || in_y > ${xt} ) {\n          setOutput(float(${v}));\n          return;\n        }\n        float in_x = ${tn};\n        if( in_x < 0.0 || in_x > ${Rt} ) {\n          setOutput(float(${v}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${lt} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Wu={kernelName:s.MRQ,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{image:i,boxes:v,boxInd:P}=r,{cropSize:L,method:M,extrapolationValue:U}=a,z=new ku(i.shape,v.shape,L,M,U);return n.runWebGLProgram(z,[i,v,P],"float32")}};var fa=function(o){return o.Prod="*",o.Sum="+",o}(fa||{});class $l{constructor(r,n,a,i){this.op=r,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const v=this.outputShape.length,L=a?this.op===fa.Prod?"1.0":"0.0":`getX(${wl(v,"coords",this.op)})`,M=this.outputShape[this.outputShape.length-1];let U="",z="";a?(U=i?"end != "+(M-1):"end != 0",z=i?"end + 1":"end - 1"):(U=i?`end + pow2 < ${M}`:"end >= pow2",z=i?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${O(v)} coords = getOutputCoords();\n        int end = ${Bl(v,"coords",this.op)};\n        float val = ${L};\n        int pow2 = int(pow(2.0, index));\n        if (${U}) {\n          int idx = ${z};\n          ${Bl(v,"coords",this.op)} = idx;\n          val ${this.op}= getX(${wl(v,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function wl(o,r,n){if(1===o)return`${r}`;if(2===o)return`${r}.x, ${r}.y`;if(3===o)return`${r}.x, ${r}.y, ${r}.z`;if(4===o)return`${r}.x, ${r}.y, ${r}.z, ${r}.w`;throw new Error(`Cumulative ${n} for rank ${o} is not yet supported`)}function Bl(o,r,n){if(1===o)return`${r}`;if(2===o)return`${r}.y`;if(3===o)return`${r}.z`;if(4===o)return`${r}.w`;throw new Error(`Cumulative ${n} for rank ${o} is not yet supported`)}function kl(o,r,n,a,i,v){const P=r.shape.length,L=s.C0T.getAxesPermutation([a],P);let M=r;null!=L&&(M=xs({inputs:{x:r},backend:n,attrs:{perm:L}}));const U=s.C0T.getInnerMostAxes(1,P)[0];if(U!==P-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const z=M.shape[U];let X=Ds({inputs:{x:M},backend:n});for(let tt=0;tt<=Math.ceil(Math.log2(z))-1;tt++){const lt=new $l(o,M.shape,!1,v),Rt=X;X=n.runWebGLProgram(lt,[X],X.dtype,[[tt]]),n.disposeIntermediateTensorInfo(Rt)}if(i){const tt=new $l(o,M.shape,i,v),lt=X;X=n.runWebGLProgram(tt,[X],X.dtype),n.disposeIntermediateTensorInfo(lt)}if(null!=L){const lt=xs({inputs:{x:X},backend:n,attrs:{perm:s.C0T.getUndoAxesPermutation(L)}});return n.disposeIntermediateTensorInfo(X),n.disposeIntermediateTensorInfo(M),lt}return X}const Vu={kernelName:s.jj_,backendName:"webgl",kernelFunc:function Uu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,exclusive:P,reverse:L}=a;return kl(fa.Prod,i,n,v,P,L)}},zu={kernelName:s.nY8,backendName:"webgl",kernelFunc:function Ku(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,exclusive:P,reverse:L}=a;return kl(fa.Sum,i,n,v,P,L)}},Hu={kernelName:s.wNW,backendName:"webgl",kernelFunc:function Gu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,weights:v}=r,{size:P,binaryOutput:L}=a;if(1===i.shape.length){const M=n.readSync(i.dataId),U=n.readSync(v.dataId),z=$o(M,U,v.dtype,v.shape,P);return n.makeTensorInfo([P],v.dtype,z)}if(2===i.shape.length){const M=n.bufferSync(i),U=n.bufferSync(v),z=va(M,U,P,L);return n.makeTensorInfo(z.shape,v.dtype,z.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class ju{constructor(r,n,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=r,this.blockSize=n,this.dataFormat=a,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${n};\n      int offset_h = imod(h, ${n});\n      int in_w = w / ${n};\n      int offset_w = imod(w, ${n});\n      int offset_d = (offset_h * ${n} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Yu={kernelName:s.TMz,backendName:"webgl",kernelFunc:function Zu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{blockSize:v,dataFormat:P}=a,L=i.shape[0],X=("NHWC"===P?i.shape[1]:i.shape[2])*v,tt=("NHWC"===P?i.shape[2]:i.shape[3])*v,lt=("NHWC"===P?i.shape[3]:i.shape[1])/(v*v),Rt=new ju("NHWC"===P?[L,X,tt,lt]:[L,lt,X,tt],v,P);return n.runWebGLProgram(Rt,[i],i.dtype)}};class Fl{constructor(r,n=!1,a=null,i=!1,v=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=De(this.outputShape.length);const P=r.filterHeight,L=r.filterWidth,M=r.outChannels/r.inChannels;let U="",z="";a&&(U=i?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`\n          float activation(float x) {\n            ${a}\n          }\n        `,z="result = activation(result);");const X=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${U}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${M};\n        int q = d2 - d1 * ${M};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${P}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${L}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${X}\n        ${z}\n        setOutput(result);\n      }\n    `}}class Wl{constructor(r,n=!1,a=null,i=!1,v=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=r.outShape,this.enableShapeUniforms=De(this.outputShape.length);const P=r.outChannels/r.inChannels,L=r.padInfo.left,M=r.strideWidth,U=r.dilationWidth,z=r.filterHeight,X=r.filterWidth,tt=X;let lt="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let wt=0;wt<X;wt++)lt+=`\n          vec4 xTexelC${2*wt};\n          int xTexelC${2*wt}Ready;\n          vec4 xTexelC${2*wt+1};\n          int xTexelC${2*wt+1}Ready;\n          vec4 xC${wt};`;lt+=`\n    for (int r = 0; r < ${z}; r++) {\n      `;for(let wt=0;wt<X;wt++)lt+=`\n          xTexelC${2*wt} = vec4(0.0);\n          xTexelC${2*wt}Ready = 0;\n          xTexelC${2*wt+1} = vec4(0.0);\n          xTexelC${2*wt+1}Ready = 0;\n          xC${wt} = vec4(0.0);`;lt+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let wt=0;wt<(tt+1)/2;wt++){const jt=2*wt;if(lt+=`\n          xC = xCCorner + ${jt*U};\n          `,1===M){if(jt<X&&(L%2==1?(lt+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n              `,lt+=1===U&&jt>0?`\n                xC${jt} = vec4(xTexelC${jt-2}.zw, xTexelC${jt}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${jt} = vec4(previous.zw, xTexelC${jt}.xy);\n                  } else {\n                    xC${jt} = vec4(0.0, 0.0, xTexelC${jt}.xy);\n                  }\n                  `):lt+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                xC${jt} = xTexelC${jt};\n                `,jt+1<X)){const Te=L%2==0?s.ZSL.nearestLargerEven(U):U;U%2==0&&L%2==1||U%2!=0&&L%2!=1?(lt+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${Te};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                    xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${jt+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${jt+1}Ready = 1;\n                  }\n                  `,lt+=U>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${jt+1} = vec4(previous.zw, xTexelC${jt+1}.xy);\n                    } else {\n                     xC${jt+1} = vec4(0.0, 0.0, xTexelC${jt+1}.xy);\n                    }\n                    `:`\n                    xC${jt+1} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.xy);\n                    `):lt+=1===Te?`\n                    xC${jt+1} = xTexelC${jt};\n                    `:`\n                    xCOffset = xC + ${Te};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                      xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${jt+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${jt+1}Ready = 1;\n                    }\n\n                    xC${jt+1} = xTexelC${jt+1};\n                    `}}else jt<X&&(L%2==1?(lt+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                  xTexelC${jt+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${jt+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt+1}Ready = 1;\n                }\n\n                xC${jt} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.zw);\n              `,jt+1<X&&(lt+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${jt+1} = vec4(xTexelC${jt+1}.xy, final.xy);\n                `)):(lt+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${jt}Ready == 0) {\n                  xTexelC${jt} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${jt}.zw = vec2(0.0);\n                  }\n                  xTexelC${jt}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${jt+1}Ready == 0) {\n                  xTexelC${jt+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${jt+1}.zw = vec2(0.);\n                  }\n                  xTexelC${jt+1}Ready = 1;\n                }\n\n                xC${jt} = vec4(\n                  xTexelC${jt}.xy, xTexelC${jt+1}.xy);\n              `,jt+1<X&&(lt+=`\n                  xC${jt+1} = vec4(xTexelC${jt}.zw, xTexelC${jt+1}.zw);\n                `)));jt<X&&(lt+=`\n            wTexel = getW(r, ${jt}, d1, q);\n            dotProd += xC${jt} * vec4(wTexel.xz, wTexel.xz);\n          `,jt+1<X&&(lt+=`\n              wTexel = getW(r, ${jt+1}, d1, q);\n              dotProd += xC${jt+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}lt+="\n    }\n  ",lt+="\n      }\n    ";let xt="",Rt="";a&&(xt=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:v?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,Rt="result = activation(result);");const Wt=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),v&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${xt}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${P};\n        int q = d2 - d1 * ${P};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${lt}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${Wt}\n        ${Rt}\n        setOutput(result);\n      }\n    `}}const Qu={kernelName:s.tGH,backendName:"webgl",kernelFunc:function Xu(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v}=r,{strides:P,pad:L,dilations:M,dimRoundingMode:U}=a;let z=M;null==z&&(z=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,z),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${P} and dilations '${z}'`);const X=s.C0T.computeConv2DInfo(i.shape,v.shape,P,z,L,U,!0);let tt;return tt=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&X.strideWidth<=2&&X.outChannels/X.inChannels==1?new Wl(X):new Fl(X),n.runWebGLProgram(tt,[i,v],"float32",[[X.padInfo.top,X.padInfo.left],[X.strideHeight,X.strideWidth],[X.dilationHeight,X.dilationWidth],[X.inHeight,X.inWidth]])}};class Ju{constructor(r){this.variableNames=["x","dy"],this.outputShape=r.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${r.outChannels/r.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${r.batchSize}; b++) {\n          for (int yR = 0; yR < ${r.outHeight}; yR++) {\n            int xR = wR + yR * ${r.strideHeight} - ${r.padInfo.top};\n\n            if (xR < 0 || xR >= ${r.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${r.outWidth}; yC++) {\n              int xC = wC + yC * ${r.strideWidth} - ${r.padInfo.left};\n\n              if (xC < 0 || xC >= ${r.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qu{constructor(r){this.variableNames=["dy","W"],this.outputShape=r.inShape;const n=r.filterHeight,a=r.filterWidth,M=r.outChannels/r.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${n-1-r.padInfo.top}, ${a-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${n}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${n} - 1 - wR;\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${a} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${M}; dm++) {\n              int d2 = d1 * ${M} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ec={kernelName:s.X$8,backendName:"webgl",kernelFunc:function tc(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,dy:v}=r,{strides:P,dilations:L,pad:M,dimRoundingMode:U,filterShape:z}=a,X=s.C0T.computeConv2DInfo(i.shape,z,P,L,M,U,!0),tt=new Ju(X);return n.runWebGLProgram(tt,[i,v],"float32")}},sc={kernelName:s.nVu,backendName:"webgl",kernelFunc:function nc(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,filter:v}=r,{strides:P,dilations:L,pad:M,dimRoundingMode:U,inputShape:z}=a,X=s.C0T.computeConv2DInfo(z,v.shape,P,L,M,U,!0),tt=new qu(X);return n.runWebGLProgram(tt,[i,v],"float32")}};class rc{constructor(r){this.variableNames=["X"],this.outputShape=[r,r],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ac={kernelName:s.ORI,backendName:"webgl",kernelFunc:function oc(o){const{inputs:r,backend:n}=o,{x:a}=r,i=[...a.shape,...a.shape],v=s.ZSL.sizeFromShape(a.shape),P=sn({inputs:{x:a},backend:n,attrs:{shape:[v]}}),L=new rc(v),M=n.runWebGLProgram(L,[P],P.dtype),U=sn({inputs:{x:M},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(M),U}};class ic{constructor(r){this.variableNames=["x","W"],this.outputShape=r.outShape;const{inHeight:n,inWidth:a,padInfo:i,strideHeight:v,strideWidth:P,filterHeight:L,filterWidth:M,dilationHeight:U,dilationWidth:z}=r,{top:X,left:tt}=i;this.userCode=`\n      const ivec2 strides = ivec2(${v}, ${P});\n      const ivec2 pads = ivec2(${X}, ${tt});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${L}; h++) {\n          int hIn = hBeg + h * ${U};\n\n          if (hIn >= 0 && hIn < ${n}) {\n            for (int w = 0; w < ${M}; w++) {\n              int wIn = wBeg + w * ${z};\n\n              if (wIn >= 0 && wIn < ${a}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const uc={kernelName:s.jxD,backendName:"webgl",kernelFunc:function lc(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v}=r,{strides:P,pad:L,dilations:M}=a,U=s.C0T.computeDilation2DInfo(i.shape,v.shape,P,L,"NHWC",M);let z;const X=new ic(U);z=n.runWebGLProgram(X,[i,v],"float32");const tt=sn({inputs:{x:z},backend:n,attrs:{shape:U.outShape}});return n.disposeIntermediateTensorInfo(z),tt}},dc={kernelName:s.Qgm,backendName:"webgl",kernelFunc:function cc(o){const{inputs:r,backend:n,attrs:a}=o,{equation:i}=a,v=r,{allDims:P,summedDims:L,idDims:M}=s.C0T.decodeEinsumEquation(i,v.length);s.C0T.checkEinsumDimSizes(P.length,M,v);const{path:U,steps:z}=s.C0T.getEinsumComputePath(L,M),X=z.length;let tt=null,lt=P.length;const xt=[];for(let Rt=0;Rt<X;++Rt){for(const Wt of z[Rt]){const{permutationIndices:wt,expandDims:jt}=s.C0T.getEinsumPermutation(lt,M[Wt]);let Te;s.C0T.isIdentityPermutation(wt)?Te=v[Wt]:(Te=xs({inputs:{x:v[Wt]},backend:n,attrs:{perm:wt}}),xt.push(Te));const Oe=Te.shape.slice();for(let tn=0;tn<jt.length;++tn)Oe.splice(jt[tn],0,1);s.ZSL.arraysEqual(Te.shape,Oe)||(Te=sn({inputs:{x:Te},backend:n,attrs:{shape:Oe}}),xt.push(Te)),null===tt?tt=Te:(tt=bo({inputs:{a:Te,b:tt},backend:n}),xt.push(tt))}Rt<X-1&&(U[Rt]>=0&&(tt=yo({inputs:{x:tt},backend:n,attrs:{axis:U[Rt]-(P.length-lt),keepDims:!1}}),xt.push(tt)),lt--)}for(const Rt of xt)Rt!==tt&&n.disposeIntermediateTensorInfo(Rt);return tt}},pc=kn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),hc={kernelName:s.Pah,backendName:"webgl",kernelFunc:pc},Ec={kernelName:s.rsH,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n}=o,{dy:a,y:i}=r,v=(0,s._K2)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Lr("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,i.shape):new Nr("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,i.shape);return n.runWebGLProgram(v,[a,i],a.dtype)}},_c=gs({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Pa}),yc={kernelName:s.BRl,backendName:"webgl",kernelFunc:_c},vc=kn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.C0T.ERF_P};\n  float a1 = ${s.C0T.ERF_A1};\n  float a2 = ${s.C0T.ERF_A2};\n  float a3 = ${s.C0T.ERF_A3};\n  float a4 = ${s.C0T.ERF_A4};\n  float a5 = ${s.C0T.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Tc={kernelName:s._s9,backendName:"webgl",kernelFunc:vc},Ul=kn({opSnippet:jr+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Oa,dtype:"float32"}),Dc={kernelName:s.ox3,backendName:"webgl",kernelFunc:Ul};function vl(o){const{inputs:r,attrs:n,backend:a}=o,{dim:i}=n,{input:v}=r,P=v.shape.length,L=v.shape.slice();let M=i;return i<0&&(s.ZSL.assert(-(P+1)<=i,()=>`Axis must be in the interval [${-(P+1)}, ${P}]`),M=P+i+1),L.splice(M,0,1),sn({inputs:{x:v},backend:a,attrs:{shape:L}})}const Ic={kernelName:s.ybN,backendName:"webgl",kernelFunc:vl},Vl="return exp(x) - 1.0;",Pc=kn({opSnippet:Vl,packedOpSnippet:Vl,cpuKernelImpl:Sa}),Oc={kernelName:s.ybj,backendName:"webgl",kernelFunc:Pc};class Kl{constructor(r,n,a){this.variableNames=["real","imag"];const i=n[1];this.outputShape=n;const v=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,P=a?`${i}.0`:"1.0";let L;if("real"===r)L="return real * expR - imag * expI;";else{if("imag"!==r)throw new Error(`FFT component must be either "real" or "imag", got ${r}.`);L="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${v};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${L}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${i});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${i}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${P};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function zl(o,r,n){const a=n.texData.get(o.dataId),i=s.ZSL.sizeFromShape(o.shape),v=o.shape[o.shape.length-1],L=sn({inputs:{x:o},backend:n,attrs:{shape:[i/v,v]}}),M=L.shape,U=new Kl("real",M,r),z=new Kl("imag",M,r),X=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:M},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:M}],tt=n.runWebGLProgram(U,X,"float32"),lt=n.runWebGLProgram(z,X,"float32"),xt=fr({inputs:{real:tt,imag:lt},backend:n});n.disposeIntermediateTensorInfo(tt),n.disposeIntermediateTensorInfo(lt);const Rt=sn({inputs:{x:xt},backend:n,attrs:{shape:o.shape}});return n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(xt),Rt}const Ac={kernelName:s.rGP,backendName:"webgl",kernelFunc:function Sc(o){const{inputs:r,backend:n}=o,{input:a}=r;return zl(a,!1,n)}};class bc{constructor(r,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=r,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Lo(o){const{backend:r,attrs:n}=o,{shape:a,value:i}=n;let{dtype:v}=n;if(v=v||s.ZSL.inferDtype(i),"string"===v){const P=s.ZSL.getArrayFromDType(v,s.ZSL.sizeFromShape(a));return P.fill(i),r.makeTensorInfo(a,v,P)}{const P=new bc(a,i);return r.runWebGLProgram(P,[],v,[[i]])}}const Mc={kernelName:s.SQl,backendName:"webgl",kernelFunc:Lo};class Nc{constructor(r){this.variableNames=["Image"],this.outputShape=[];const n=r[2];this.outputShape=r,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${n} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${n}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Rc={kernelName:s.BxF,backendName:"webgl",kernelFunc:({inputs:o,backend:r})=>{const{image:n}=o,a=r,i=new Nc(n.shape);return a.runWebGLProgram(i,[n],n.dtype)}},Gl="return floor(x);",Lc=kn({opSnippet:Gl,packedOpSnippet:Gl,cpuKernelImpl:Aa}),$c={kernelName:s.ZgB,backendName:"webgl",kernelFunc:Lc},wc=gs({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Bc={kernelName:s.ElG,backendName:"webgl",kernelFunc:wc};class kc{constructor(r){this.variableNames=["A"];const n=ce(),[a,i]=r;this.outputShape=r,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${a}.0);\n\n        vec4 values = ${n.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Fc{constructor(r){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=ce(),[a,i]=r;this.outputShape=r,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${i}.0, ${a}.0);\n            vec4 values = ${n.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${n.output} = result;\n      }\n    `}}const Wc={kernelName:s.awo,backendName:"webgl",kernelFunc:function Uc(o){const{inputs:r,backend:n,attrs:a}=o;let{pixels:i}=r;const{numChannels:v}=a,P=typeof HTMLVideoElement<"u"&&i instanceof HTMLVideoElement,L=typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement,[M,U]=P?[i.videoWidth,i.videoHeight]:[i.width,i.height],z=[U,M],X=[U,M,v];if(L||P){const Rt=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Co||Rt!==Tl)&&(Tl=Rt,Co=document.createElement("canvas").getContext("2d",{willReadFrequently:Tl})),Co.canvas.width=M,Co.canvas.height=U,Co.drawImage(i,0,0,M,U),i=Co.canvas}const tt=n.makeTensorInfo(z,"int32");n.texData.get(tt.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(tt.dataId),i);const lt=(0,s._K2)().getBool("WEBGL_PACK")?new Fc(X):new kc(X),xt=n.runWebGLProgram(lt,[tt],"int32");return n.disposeData(tt.dataId),xt}};let Co,Tl=(0,s._K2)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Kc={kernelName:s.aAr,backendName:"webgl",kernelFunc:function Vc(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v,bias:P,preluActivationWeights:L}=r,{strides:M,pad:U,dataFormat:z,dilations:X,dimRoundingMode:tt,activation:lt,leakyreluAlpha:xt}=a,Rt=s.C0T.convertConv2DDataFormat(z),Wt=s.C0T.computeConv2DInfo(i.shape,v.shape,M,X,U,tt,!1,Rt);let wt;const jt=[],Te=null!=P,Oe=null!=L,tn="leakyrelu"===lt,On=()=>{const dn=[i,v],Fn=(Mn,cs)=>{if("NCHW"===cs&&1===Mn.shape.length&&1!==Mn.shape[0]){const ds=sn({inputs:{x:Mn},backend:n,attrs:{shape:[Mn.shape[0],1,1]}});return jt.push(ds),ds}return Mn};if(Te&&dn.push(Fn(P,z)),Oe&&dn.push(Fn(L,z)),tn){const Mn=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(xt,"float32"));dn.push(Mn),jt.push(Mn)}return dn};if(1!==Wt.filterHeight||1!==Wt.filterWidth||1!==Wt.dilationHeight||1!==Wt.dilationWidth||1!==Wt.strideHeight||1!==Wt.strideWidth||"SAME"!==Wt.padInfo.type&&"VALID"!==Wt.padInfo.type)if(Wt.strideWidth<=2&&"channelsLast"===Rt&&(0,s._K2)().getBool("WEBGL_EXP_CONV")){const dn=lt?oo(lt,!0):null,Fn=new Nl(Wt,Te,dn,Oe,tn),Mn=[[Wt.padInfo.top,Wt.padInfo.left],[Wt.strideHeight,Wt.strideWidth],[Wt.dilationHeight,Wt.dilationWidth],[Wt.inHeight,Wt.inWidth]],cs=On();wt=n.runWebGLProgram(Fn,cs,"float32",Mn)}else if((0,s._K2)().getBool("WEBGL_CONV_IM2COL"))wt=Ll({x:i,filter:v,convInfo:Wt,backend:n,bias:P,activation:lt,preluActivationWeights:L,leakyreluAlpha:xt});else{const dn=lt?oo(lt,!1):null,Fn=new Ml(Wt,Te,dn,Oe,tn),Mn=On();wt=n.runWebGLProgram(Fn,Mn,"float32")}else wt=Rl({x:i,filter:v,convInfo:Wt,backend:n,bias:P,activation:lt,preluActivationWeights:L,leakyreluAlpha:xt});const Cn=sn({inputs:{x:wt},backend:n,attrs:{shape:Wt.outShape}});return jt.push(wt),jt.forEach(dn=>n.disposeIntermediateTensorInfo(dn)),Cn}},Gc={kernelName:s.T7M,backendName:"webgl",kernelFunc:function zc(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,filter:v,bias:P,preluActivationWeights:L}=r,{strides:M,pad:U,dilations:z,dimRoundingMode:X,activation:tt,leakyreluAlpha:lt}=a,xt=[];let Rt=z;null==Rt&&(Rt=[1,1]),s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(M,Rt),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${M} and dilations '${Rt}'`);const Wt=s.C0T.computeConv2DInfo(i.shape,v.shape,M,Rt,U,X,!0),wt=(0,s._K2)().getBool("WEBGL_PACK_DEPTHWISECONV")&&Wt.strideWidth<=2&&Wt.outChannels/Wt.inChannels==1,jt=tt?oo(tt,wt):null,Te=[i,v],Oe=null!=P,tn=null!=L,On="leakyrelu"===tt;if(Oe&&Te.push(P),tn&&Te.push(L),On){const Mn=n.makeTensorInfo([],"float32",s.ZSL.createScalarValue(lt,"float32"));Te.push(Mn),xt.push(Mn)}let Cn;Cn=wt?new Wl(Wt,Oe,jt,tn,On):new Fl(Wt,Oe,jt,tn,On);const Fn=n.runWebGLProgram(Cn,Te,"float32",[[Wt.padInfo.top,Wt.padInfo.left],[Wt.strideHeight,Wt.strideWidth],[Wt.dilationHeight,Wt.dilationWidth],[Wt.inHeight,Wt.inWidth]]);return xt.forEach(Mn=>n.disposeIntermediateTensorInfo(Mn)),Fn}};class Hc{constructor(r,n,a,i){this.sliceDim=r,this.strides=n,this.paramsShape=i,this.variableNames=["x","indices"],this.outputShape=a;const v=O(a.length);let P="\n    int index;";for(let L=0;L<this.sliceDim;L++)P+=`\n          index = round(getIndices(coords[0], ${L}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[L]};\n          flattenIndex += index * ${this.strides[L]};`;this.userCode=`\n         void main() {\n          ${v} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${P}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Zc={kernelName:s.O4G,backendName:"webgl",kernelFunc:function jc(o){const{inputs:r,backend:n}=o,{params:a,indices:i}=r,v=i.shape,P=v[v.length-1],L=s.ZSL.sizeFromShape(a.shape),[M,U,z,X]=s.C0T.prepareAndValidate(a,i),tt=sn({inputs:{x:i},backend:n,attrs:{shape:[U,P]}}),lt=sn({inputs:{x:a},backend:n,attrs:{shape:[s.ZSL.sizeFromShape(a.shape)/z,z]}});if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const wt=n.readSync(i.dataId),jt=n.bufferSync(a),Te=ba(wt,jt,a.dtype,U,P,z,X,a.shape,L);return n.makeTensorInfo(M,a.dtype,Te.values)}const xt=new Hc(P,X,[U,z],a.shape),Rt=n.runWebGLProgram(xt,[lt,tt],lt.dtype),Wt=sn({inputs:{x:Rt},backend:n,attrs:{shape:M}});return n.disposeIntermediateTensorInfo(tt),n.disposeIntermediateTensorInfo(lt),n.disposeIntermediateTensorInfo(Rt),Wt}};class Yc{constructor(r,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const a=O(this.rank),i=function Xc(o){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let i=0;i<o.length;i++)a.push(2===i?"index":`${n[i]}`);return a.join()}(r);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${r[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${i}));\n      }\n    `}}function Hl(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,indices:v}=r,{axis:P,batchDims:L}=a,M=s.ZSL.parseAxisParam(P,i.shape)[0];if((0,s._K2)().get("DEBUG")){const jt=n.readSync(v.dataId),Te=i.shape[M];for(let Oe=0;Oe<jt.length;++Oe){const tn=jt[Oe];s.ZSL.assert(tn<=Te-1&&tn>=0,()=>`GatherV2: the index value ${tn} is not in [0, ${Te-1}]`)}}const U=s.C0T.segment_util.collectGatherOpShapeInfo(i,v,M,L),z=s.ZSL.sizeFromShape(v.shape),X=[],tt=sn({inputs:{x:i},backend:n,attrs:{shape:[U.batchSize,U.outerSize,U.dimSize,U.sliceSize]}}),lt=sn({inputs:{x:v},backend:n,attrs:{shape:[U.batchSize,z/U.batchSize]}});X.push(tt),X.push(lt);const xt=[U.batchSize,U.outerSize,z/U.batchSize,U.sliceSize];if(n.shouldExecuteOnCPU([i,v])||"string"===i.dtype){const jt=n.bufferSync(lt),Te=n.bufferSync(tt),Oe=Ma(Te,jt,xt);return X.forEach(tn=>n.disposeIntermediateTensorInfo(tn)),n.makeTensorInfo(U.outputShape,Oe.dtype,Oe.values)}const Rt=new Yc(tt.shape,xt),Wt=n.runWebGLProgram(Rt,[tt,lt],tt.dtype);X.push(Wt);const wt=sn({inputs:{x:Wt},backend:n,attrs:{shape:U.outputShape}});return X.forEach(jt=>n.disposeIntermediateTensorInfo(jt)),wt}const Qc={kernelName:s.mxL,backendName:"webgl",kernelFunc:Hl},Jc=gs({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Na,dtype:"bool"}),qc={kernelName:s.XhZ,backendName:"webgl",kernelFunc:Jc},td=gs({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ra}),ed={kernelName:s.lLS,backendName:"webgl",kernelFunc:td},sd={kernelName:s.OAQ,backendName:"webgl",kernelFunc:function nd(o){const{inputs:r,backend:n}=o,{input:a}=r;return zl(a,!0,n)}},rd=kn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),od={kernelName:s.gIW,backendName:"webgl",kernelFunc:rd},ad=kn({opSnippet:"return float(isinf(x));",dtype:"bool"}),id={kernelName:s.E3$,backendName:"webgl",kernelFunc:ad},ld=kn({opSnippet:"return float(isnan(x));",dtype:"bool"}),ud={kernelName:s.iPs,backendName:"webgl",kernelFunc:ld},cd=gs({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:La,dtype:"bool"}),dd={kernelName:s.mIA,backendName:"webgl",kernelFunc:cd},pd=gs({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$a,dtype:"bool"}),hd={kernelName:s.CwD,backendName:"webgl",kernelFunc:pd},md={kernelName:s.mnI,backendName:"webgl",kernelFunc:function fd(o){const{backend:r,attrs:n}=o,{start:a,stop:i,num:v}=n,P=wa(a,i,v);return r.makeTensorInfo([P.length],"float32",P)}},Ed=kn({opSnippet:jr+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ba}),_d={kernelName:s.tG8,backendName:"webgl",kernelFunc:Ed},xd=kn({opSnippet:jr+"\n  return log(1.0 + x);\n"}),vd={kernelName:s.Cg$,backendName:"webgl",kernelFunc:xd},Td=gs({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Cd={kernelName:s.RUm,backendName:"webgl",kernelFunc:Td},Dd=kn({opSnippet:"return float(!(x >= 1.0));"}),Id={kernelName:s.nZd,backendName:"webgl",kernelFunc:Dd},Pd=gs({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Od={kernelName:s.LXA,backendName:"webgl",kernelFunc:Pd};class Sd{constructor(r,n,a,i,v){this.variableNames=["x"],this.outputShape=[];const P=n,L=r[3]-1;let M;this.outputShape=r;const U=`float(${a}) + float(${i}) * sum`;M=.5===v?`inversesqrt(${U})`:1===v?`1.0/(${U})`:`exp(log(${U}) * float(-${v}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${P}; j <= ${P}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${L}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${M};\n        setOutput(val);\n      }\n    `}}class Ad{constructor(r,n,a,i,v){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const P=n,L=r[3]-1;let M;this.outputShape=r;const U=`float(${a}) + float(${i}) * sum`;M=.5===v?`inversesqrt(${U})`:1===v?`1.0/(${U})`:`exp(log(${U}) * float(-${v}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${P};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${P}; j <= ${P}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${L}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${M};\n        setOutput(result);\n      }\n    `}}const Md={kernelName:s.jM4,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{depthRadius:v,bias:P,alpha:L,beta:M}=a,U=(0,s._K2)().getBool("WEBGL_PACK_NORMALIZATION")?new Ad(i.shape,v,P,L,M):new Sd(i.shape,v,P,L,M);return n.runWebGLProgram(U,[i],i.dtype)}};class Nd{constructor(r,n,a,i,v){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=r,this.depth=r[3],this.depthRadius=n,this.bias=a,this.alpha=i,this.beta=v,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${n})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${n} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${i}) * norm + float(${a});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${i})\n                * float(${v})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${v});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ld={kernelName:s.ToN,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:i,y:v,dy:P}=r,{depthRadius:L,bias:M,alpha:U,beta:z}=a,X=new Nd(i.shape,L,M,U,z);return n.runWebGLProgram(X,[i,v,P],i.dtype)}};function jl(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{reductionIndices:v,keepDims:P}=a,L=i.shape.length,M=s.ZSL.parseAxisParam(v,i.shape);let U=M;const z=s.C0T.getAxesPermutation(U,L),X=null!=z,tt=n.shouldExecuteOnCPU([i]);let lt=i;if(X){if(tt){const Te=n.texData.get(lt.dataId).values,Oe=new Array(L);for(let Cn=0;Cn<Oe.length;Cn++)Oe[Cn]=i.shape[z[Cn]];const tn=So(Te,i.shape,i.dtype,z,Oe);lt=n.makeTensorInfo(Oe,i.dtype),n.texData.get(lt.dataId).values=tn}else lt=_o(i,z,n);U=s.C0T.getInnerMostAxes(U.length,L)}s.C0T.assertAxesAreInnerMostDims("max",U,L);const[xt,Rt]=s.C0T.computeOutAndReduceShapes(lt.shape,U);let wt,Wt=xt;if(P&&(Wt=s.C0T.expandShapeToKeepDim(xt,M)),tt){const Te=n.texData.get(lt.dataId).values,Oe=ka(Te,s.ZSL.sizeFromShape(Rt),Wt,i.dtype);wt=n.makeTensorInfo(Wt,i.dtype),n.texData.get(wt.dataId).values=Oe}else wt=function $d(o,r,n,a){const i=s.ZSL.sizeFromShape(r),L=sn({inputs:{x:o},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/i,i]},backend:a}),M=$r(L,o.dtype,"max",a),U=sn({inputs:{x:M},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(M),U}(lt,Rt,Wt,n);return X&&n.disposeIntermediateTensorInfo(lt),wt}const wd={kernelName:s.VAI,backendName:"webgl",kernelFunc:jl},Fd=gs({opSnippet:Ao+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Rr+"\n  return result;\n",cpuKernelImpl:wo}),Wd={kernelName:s.LDN,backendName:"webgl",kernelFunc:Fd},Vd={kernelName:s.t3d,backendName:"webgl",kernelFunc:function Ud(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r;bt(i,"maxPool");const{filterSize:v,strides:P,pad:L,dimRoundingMode:M}=a;s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(P,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${P} and dilations '1'`);const z=s.C0T.computePool2DInfo(i.shape,v,P,1,L,M);if(1===z.filterWidth&&1===z.filterHeight&&s.ZSL.arraysEqual(z.inShape,z.outShape))return Ds({inputs:{x:i},backend:n});const X=new qt(z,"max",!1);return n.runWebGLProgram(X,[i],i.dtype)}},zd={kernelName:s.ySp,backendName:"webgl",kernelFunc:function Kd(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{filterSize:v,strides:P,pad:L,dataFormat:M,dimRoundingMode:U}=a,X=s.C0T.computePool3DInfo(i.shape,v,P,[1,1,1],L,U,M),tt=new ee(X,"max",!1);return n.runWebGLProgram(tt,[i],i.dtype)}};class Gd{constructor(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;const v=r.effectiveFilterHeight,P=r.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${v-1-r.padInfo.top}, ${P-1-r.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${v};\n          wR += ${r.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${r.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${P}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${v*P-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${P} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hd{constructor(r){this.variableNames=["dy","maxPos"],this.outputShape=r.inShape;const M=r.effectiveFilterDepth,U=r.effectiveFilterHeight,z=r.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${M-1-r.padInfo.front}, ${U-1-r.padInfo.top}, ${z-1-r.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${M};\n           wD += ${r.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${r.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${r.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${U};\n              wR += ${r.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${r.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${r.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${z};\n                wC += ${r.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${r.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${r.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${M*U*z-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${U} * ${z} +\n                  wR * ${z} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Zd={kernelName:s.cHb,backendName:"webgl",kernelFunc:function jd(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,input:v}=r,P=v,{filterSize:L,strides:M,pad:U,dimRoundingMode:z}=a,tt=s.C0T.computePool3DInfo(P.shape,L,M,[1,1,1],U,z),lt=new ee(tt,"max",!0),xt=n.runWebGLProgram(lt,[P],P.dtype),Rt=new Hd(tt),Wt=n.runWebGLProgram(Rt,[i,xt],P.dtype);return n.disposeIntermediateTensorInfo(xt),Wt}},Xd={kernelName:s.RXX,backendName:"webgl",kernelFunc:function Yd(o){const{inputs:r,backend:n,attrs:a}=o,{dy:i,input:v,output:P}=r,L=v;bt([v,P],"maxPoolGrad");const{filterSize:M,strides:U,pad:z,dimRoundingMode:X}=a,tt=s.C0T.computePool2DInfo(L.shape,M,U,1,z,X),xt=new qt(tt,"max",!0),Rt=n.runWebGLProgram(xt,[L],L.dtype),Wt=new Gd(tt),wt=n.runWebGLProgram(Wt,[i,Rt],L.dtype);return n.disposeIntermediateTensorInfo(Rt),wt}},Jd={kernelName:s.TL8,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{x:a}=o,{filterSize:i,strides:v,pad:P,includeBatchInIndex:L}=r,M=n;s.ZSL.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const U=[1,1];s.ZSL.assert(s.C0T.eitherStridesOrDilationsAreOne(v,U),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${v} and dilations '${U}'`);const z=s.C0T.computePool2DInfo(a.shape,i,v,U,P),[X,tt]=function Qd(o,r,n,a){let i=new qt(n,"max",!1);const v=a.runWebGLProgram(i,[o],"float32");return i=new qt(n,"max",!0,!0,r),[v,a.runWebGLProgram(i,[o],"float32")]}(a,L,z,M);return[X,tt]}},tp={kernelName:s.g5A,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{x:a}=o,{keepDims:i,axis:v}=r,P=n,L=a.shape.length,M=s.ZSL.parseAxisParam(v,a.shape);let U=M;const z=s.C0T.getAxesPermutation(U,L),X=null!=z,tt=P.shouldExecuteOnCPU([a]),lt=[];let xt=a;if(X){if(tt){const Oe=P.texData.get(xt.dataId).values,tn=new Array(L);for(let dn=0;dn<tn.length;dn++)tn[dn]=a.shape[z[dn]];const On=So(Oe,a.shape,a.dtype,z,tn);xt=P.makeTensorInfo(tn,a.dtype),P.texData.get(xt.dataId).values=On}else xt=_o(a,z,P);lt.push(xt),U=s.C0T.getInnerMostAxes(U.length,L)}s.C0T.assertAxesAreInnerMostDims("sum",U,L);const[Rt,Wt]=s.C0T.computeOutAndReduceShapes(xt.shape,U);let wt=Rt;i&&(wt=s.C0T.expandShapeToKeepDim(Rt,M));const jt=function qd(o,r,n,a){const i=s.ZSL.sizeFromShape(r),L=sn({inputs:{x:o},attrs:{shape:[s.ZSL.sizeFromShape(o.shape)/i,i]},backend:a}),M=$r(L,"float32","mean",a),U=sn({inputs:{x:M},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(M),U}(xt,Wt,wt,P);for(const Te of lt)P.disposeIntermediateTensorInfo(Te);return jt}},np={kernelName:s.lNG,backendName:"webgl",kernelFunc:function ep(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,keepDims:P}=a,L=i.shape.length,M=s.ZSL.parseAxisParam(v,i.shape);let U=M;const z=s.C0T.getAxesPermutation(U,L);let X=i;null!=z&&(X=xs({inputs:{x:i},backend:n,attrs:{perm:z}}),U=s.C0T.getInnerMostAxes(U.length,i.shape.length)),s.C0T.assertAxesAreInnerMostDims("min",U,L);const[tt,lt]=s.C0T.computeOutAndReduceShapes(X.shape,U),Rt=sn({inputs:{x:X},backend:n,attrs:{shape:[-1,s.ZSL.sizeFromShape(lt)]}}),Wt=$r(Rt,Rt.dtype,"min",n);let wt;return wt=sn(P?{inputs:{x:Wt},backend:n,attrs:{shape:s.C0T.expandShapeToKeepDim(tt,M)}}:{inputs:{x:Wt},backend:n,attrs:{shape:tt}}),n.disposeIntermediateTensorInfo(Rt),n.disposeIntermediateTensorInfo(Wt),null!=z&&n.disposeIntermediateTensorInfo(X),wt}},op=gs({opSnippet:Ao+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Rr+"\n  return result;\n",cpuKernelImpl:Fa}),ap={kernelName:s.LG0,backendName:"webgl",kernelFunc:op};class ip{constructor(r,n,a){this.variableNames=["x"],this.outputShape=n.map((z,X)=>z[0]+r[X]+z[1]);const i=r.length,v=O(i),P=n.map(z=>z[0]).join(","),L=n.map((z,X)=>z[0]+r[X]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),U="reflect"===a?0:1;this.userCode=1!==i?`\n      ${v} start = ${v}(${P});\n      ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outC = getOutputCoords();\n        for (int i = 0; i < ${i}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${U};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${U};\n          }\n        }\n        ${v} coords = outC - start;\n        setOutput(getX(${M}));\n      }\n    `:`\n        int start = ${P};\n        int end = ${L};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${U};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${U};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class lp{constructor(r,n,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((xt,Rt)=>xt[0]+r[Rt]+xt[1]);const i=r.length,v=O(i),P=n.map(xt=>xt[0]).join(","),L=n.map((xt,Rt)=>xt[0]+r[Rt]).join(","),M=ys("rc",i),U=ys("source",i),z=`${M[i-1]} < ${this.outputShape[i-1]}`,X=1===i?"source":`vec2(${U.slice(-2).join()})`,tt="reflect"===a?0:1;let lt="";if(1===i){const xt=`\n        ${v} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${tt};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${tt};\n        }\n        source -= start;\n      `;lt=`\n        ${v} rc = outputLoc;\n        ${xt}\n        result[0] = getChannel(getX(${U.join()}), ${X});\n        ${M[i-1]} += 1;\n        if(${z}) {\n          ${xt}\n          result[1] = getChannel(getX(${U.join()}), ${X});\n        }\n      `}else{const xt=`\n        ${v} source = rc;\n        ${v} lt = ${v}(lessThan(source, start));\n        ${v} gte = ${v}(greaterThanEqual(source, end));\n        ${v} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${tt}) +\n                gte * ((end - 1) * 2 - source + ${tt});\n        source -= start;\n      `;lt=`\n        ${v} rc = outputLoc;\n        ${xt}\n        result[0] = getChannel(getX(${U.join()}), ${X});\n        ${M[i-1]} += 1;\n        if(${z}) {\n          ${xt}\n          result[1] = getChannel(getX(${U.join()}), ${X});\n        }\n        rc = outputLoc;\n        ${M[i-2]} += 1;\n        if(${M[i-2]} < ${this.outputShape[i-2]}) {\n          ${xt}\n          result[2] = getChannel(getX(${U.join()}), ${X});\n          ${M[i-1]} += 1;\n          if(${z}) {\n            ${xt}\n            result[3] = getChannel(getX(${U.join()}), ${X});\n          }\n        }\n      `}this.userCode=`\n      const ${v} start = ${v}(${P});\n      const ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${lt}\n        setOutput(result);\n      }\n    `}}const cp={kernelName:s.x7F,backendName:"webgl",kernelFunc:({inputs:o,backend:r,attrs:n})=>{const{x:a}=o,{paddings:i,mode:v}=n,P=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lp(a.shape,i,v):new ip(a.shape,i,v);return r.runWebGLProgram(P,[a],a.dtype)}},hp=gs({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Rr+"\n  return result;\n"}),fp={kernelName:s.BLA,backendName:"webgl",kernelFunc:hp};class mp{constructor(r,n,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[r,a],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${n-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${n-1}));\n      }\n    `}}const Zl=gs({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),gp={kernelName:s.sDr,backendName:"webgl",kernelFunc:Zl},Yl="return a - b;",Xl=gs({opSnippet:Yl,packedOpSnippet:Yl,supportsComplex:!0,cpuKernelImpl:Wo}),Ep={kernelName:s.PbM,backendName:"webgl",kernelFunc:Xl};function Ql(o){const{inputs:r,backend:n,attrs:a}=o,{logits:i}=r,{dim:v}=a,P=s.ZSL.parseAxisParam([v],i.shape),L=jl({inputs:{x:i},backend:n,attrs:{reductionIndices:P,keepDims:!1}}),M=s.C0T.expandShapeToKeepDim(L.shape,P),U=sn({inputs:{x:L},backend:n,attrs:{shape:M}}),z=Xl({inputs:{a:i,b:U},backend:n}),X=Ul({inputs:{x:z},backend:n}),tt=yo({inputs:{x:X},backend:n,attrs:{axis:P,keepDims:!1}}),lt=sn({inputs:{x:tt},backend:n,attrs:{shape:M}}),xt=Zl({inputs:{a:X,b:lt},backend:n});return n.disposeIntermediateTensorInfo(L),n.disposeIntermediateTensorInfo(U),n.disposeIntermediateTensorInfo(z),n.disposeIntermediateTensorInfo(X),n.disposeIntermediateTensorInfo(tt),n.disposeIntermediateTensorInfo(lt),xt}const _p={kernelName:s.rFG,backendName:"webgl",kernelFunc:Ql},xp={kernelName:s.WT3,backendName:"webgl",kernelFunc:function yp(o){const{inputs:r,backend:n,attrs:a}=o,{logits:i}=r,{numSamples:v,seed:P,normalized:L}=a,M=L?i:Ql({inputs:{logits:i},backend:n,attrs:{dim:i.shape.length-1}}),X=new mp(M.shape[0],M.shape[1],v),lt=n.runWebGLProgram(X,[M],"int32",[[P]]);return L||n.disposeIntermediateTensorInfo(M),lt}},vp=As+"\n  return -x;\n",Dp={kernelName:s.l0G,backendName:"webgl",kernelFunc:function Cp(o){const{inputs:r,backend:n}=o,{x:a}=r;if(n.shouldExecuteOnCPU([a])){const v=n.texData.get(a.dataId),[P,L]=Ua(v.values,a.shape,a.dtype);return n.makeTensorInfo(L,a.dtype,P)}let i;return i=(0,s._K2)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new bs(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new js(a.shape,vp),n.runWebGLProgram(i,[a],a.dtype)}},Ip=s.kpo.c7,Op={kernelName:s.SDM,backendName:"webgl",kernelFunc:function Pp(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:i,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M}=a,U=n.readSync(i.dataId),z=n.readSync(v.dataId),{selectedIndices:X}=Ip(U,z,P,L,M);return n.makeTensorInfo([X.length],"int32",new Int32Array(X))}},Sp=s.kpo.ZS,bp={kernelName:s.Zl4,backendName:"webgl",kernelFunc:function Ap(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:i,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M,padToMaxOutputSize:U}=a,z=n.readSync(i.dataId),X=n.readSync(v.dataId),{selectedIndices:tt,validOutputs:lt}=Sp(z,X,P,L,M,U);return[n.makeTensorInfo([tt.length],"int32",new Int32Array(tt)),n.makeTensorInfo([],"int32",new Int32Array([lt]))]}},Mp=s.kpo.ut,Rp={kernelName:s.e0f,backendName:"webgl",kernelFunc:function Np(o){s.C0T.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:r,backend:n,attrs:a}=o,{boxes:i,scores:v}=r,{maxOutputSize:P,iouThreshold:L,scoreThreshold:M,softNmsSigma:U}=a,z=n.readSync(i.dataId),X=n.readSync(v.dataId),tt=P,lt=L,xt=M,Rt=U,{selectedIndices:Wt,selectedScores:wt}=Mp(z,X,tt,lt,xt,Rt);return[n.makeTensorInfo([Wt.length],"int32",new Int32Array(Wt)),n.makeTensorInfo([wt.length],"float32",new Float32Array(wt))]}};class Lp{constructor(r,n,a,i){this.variableNames=["indices"],this.outputShape=[r,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${i}), float(${a}),\n                      float(index == coords.y)));\n      }\n    `}}const wp={kernelName:s.urI,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{indices:i}=r,{dtype:v,depth:P,onValue:L,offValue:M}=a,U=s.ZSL.sizeFromShape(i.shape),z=new Lp(U,P,L,M),X=sn({inputs:{x:i},backend:n,attrs:{shape:[U]}}),tt=n.runWebGLProgram(z,[X],v);n.disposeIntermediateTensorInfo(X);const xt=sn({inputs:{x:tt},backend:n,attrs:{shape:[...i.shape,P]}});return n.disposeIntermediateTensorInfo(tt),xt}};function ma(o){const{inputs:r,backend:n}=o,{x:a}=r;if("complex64"===a.dtype){const i=is({inputs:{input:a},backend:n}),v=ma({inputs:{x:i},backend:n}),P=pa({inputs:{input:a},backend:n}),L=ma({inputs:{x:P},backend:n}),M=fr({inputs:{real:v,imag:L},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(L),M}return Lo({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Bp={kernelName:s.xJ3,backendName:"webgl",kernelFunc:ma},kp={kernelName:s.LWX,backendName:"webgl",kernelFunc:function Jl(o){const{inputs:r,backend:n}=o,{x:a}=r;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const i=is({inputs:{input:a},backend:n}),v=Jl({inputs:{x:i},backend:n}),P=pa({inputs:{input:a},backend:n}),L=ma({inputs:{x:P},backend:n}),M=fr({inputs:{real:v,imag:L},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(P),n.disposeIntermediateTensorInfo(L),M}return Lo({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}},Wp={kernelName:s.mM$,backendName:"webgl",kernelFunc:function Fp(o){const{inputs:r,backend:n,attrs:a}=o,{axis:i}=a;if(1===r.length)return vl({inputs:{input:r[0]},backend:n,attrs:{dim:i}});const v=r[0].shape,P=r[0].dtype;r.forEach(z=>{s.ZSL.assertShapesMatch(v,z.shape,"All tensors passed to stack must have matching shapes"),s.ZSL.assert(P===z.dtype,()=>"All tensors passed to stack must have matching dtypes")});const L=[],U=bl({inputs:r.map(z=>{const X=vl({inputs:{input:z},backend:n,attrs:{dim:i}});return L.push(X),X}),backend:n,attrs:{axis:i}});return L.forEach(z=>n.disposeIntermediateTensorInfo(z)),U}};class Up{constructor(r,n,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((U,z)=>U[0]+r[z]+U[1]);const i=r.length,v=O(i),P=n.map(U=>U[0]).join(","),L=n.map((U,z)=>U[0]+r[z]).join(","),M=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);this.userCode=1!==i?`\n      ${v} start = ${v}(${P});\n      ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${v} coords = outC - start;\n          setOutput(getX(${M}));\n        }\n      }\n    `:`\n        int start = ${P};\n        int end = ${L};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Vp{constructor(r,n,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((Rt,Wt)=>Rt[0]+r[Wt]+Rt[1]);const i=r.length,v=O(i),P=n.map(Rt=>Rt[0]).join(","),L=n.map((Rt,Wt)=>Rt[0]+r[Wt]).join(","),M=ys("rc",i),U=ys("source",i),z=`${M[i-1]} < ${this.outputShape[i-1]}`,X=1===i?"source":`vec2(${U.slice(-2).join()})`,tt=[`${v} rc = outputLoc;`,`${M[i-1]} += 1;\n       if(${z}) {\n      `,1===i?"":`}\n       rc = outputLoc;\n       ${M[i-2]} += 1;\n       if(${M[i-2]} < ${this.outputShape[i-2]}) {`,1===i?"":`  ${M[i-1]} += 1;\n         if(${z}) {`],lt=1===i?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let xt="";for(let Rt=0,Wt=1===i?2:4;Rt<Wt;Rt++)xt+=`\n        ${tt[Rt]}\n        if (${lt}) {\n          result[${Rt}] = float(value);\n        } else {\n          ${v} source = rc - start;\n          result[${Rt}] = getChannel(getX(${U.join()}), ${X});\n        }\n      `;xt+=1===i?"} ":"}}",this.userCode=`\n      const ${v} start = ${v}(${P});\n      const ${v} end = ${v}(${L});\n\n      void main() {\n        ${v} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${xt}\n        setOutput(result);\n      }\n    `}}const ql=o=>{const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{paddings:v,constantValue:P}=a;if(0===s.ZSL.sizeFromShape(i.shape))return Lo({backend:n,attrs:{shape:v.map((z,X)=>z[0]+i.shape[X]+z[1]),value:P,dtype:i.dtype}});const L=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vp(i.shape,v,P):new Up(i.shape,v,P);return n.runWebGLProgram(L,[i],i.dtype,[[P]])},Kp={kernelName:s.ODT,backendName:"webgl",kernelFunc:ql},Hp=gs({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Rr+"\n  return result;\n"}),jp={kernelName:s.pyJ,backendName:"webgl",kernelFunc:Hp},Yp={kernelName:s.kdj,backendName:"webgl",kernelFunc:function Zp(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{axis:v,keepDims:P}=a,L=i.shape.length,M=[],U=s.ZSL.parseAxisParam(v,i.shape);let z=U;const X=s.C0T.getAxesPermutation(z,L);let lt,tt=i;if(null!=X&&(tt=xs({inputs:{x:i},backend:n,attrs:{perm:X}}),z=s.C0T.getInnerMostAxes(z.length,L),M.push(tt)),s.C0T.assertAxesAreInnerMostDims("prod",z,L),n.shouldExecuteOnCPU([tt])){const xt=n.texData.get(tt.dataId).values,{outVals:Rt,outShape:Wt,outDtype:wt}=Ka(tt.shape,tt.dtype,xt,z);lt=n.makeTensorInfo(Wt,wt,Rt)}else{const[xt,Rt]=s.C0T.computeOutAndReduceShapes(tt.shape,z),Wt=s.ZSL.sizeFromShape(Rt),wt=sn({inputs:{x:tt},backend:n,attrs:{shape:[-1,Wt]}}),Te=$r(wt,(0,s.chL)(i.dtype),"prod",n);lt=sn({inputs:{x:Te},backend:n,attrs:{shape:xt}}),M.push(wt),M.push(Te)}if(P){M.push(lt);const xt=s.C0T.expandShapeToKeepDim(lt.shape,U);lt=sn({inputs:{x:lt},backend:n,attrs:{shape:xt}})}return M.forEach(xt=>n.disposeIntermediateTensorInfo(xt)),lt}},Qp={kernelName:s.oJ2,backendName:"webgl",kernelFunc:function Xp(o){const{inputs:r,backend:n,attrs:a}=o,{paramsNestedSplits:i,paramsDenseValues:v,indices:P}=r,{outputRaggedRank:L}=a,M=i.map(wt=>n.readSync(wt.dataId)),U=i.map(wt=>wt.shape),z=n.readSync(v.dataId),X=n.readSync(P.dataId),[tt,lt,xt]=za(M,U,z,v.shape,v.dtype,X,P.shape,L),Rt=tt.map(wt=>n.makeTensorInfo([wt.length],"int32",wt)),Wt=n.makeTensorInfo(xt,v.dtype,lt);return Rt.concat([Wt])}},qp={kernelName:s.CQC,backendName:"webgl",kernelFunc:function Jp(o){const{inputs:r,backend:n}=o,{starts:a,limits:i,deltas:v}=r,P=n.readSync(a.dataId),L=n.readSync(i.dataId),M=n.readSync(v.dataId),[U,z]=Ga(P,a.shape,a.dtype,L,i.shape,M,v.shape);return[n.makeTensorInfo([U.length],"int32",U),n.makeTensorInfo([z.length],a.dtype,z)]}},eh={kernelName:s.mH5,backendName:"webgl",kernelFunc:function th(o){const{inputs:r,backend:n,attrs:a}=o,{shape:i,values:v,defaultValue:P,rowPartitionTensors:L}=r,{rowPartitionTypes:M}=a,U=n.readSync(i.dataId),z=n.readSync(v.dataId),X=n.readSync(P.dataId),tt=L.map(Wt=>n.readSync(Wt.dataId)),lt=L.map(Wt=>Wt.shape),[xt,Rt]=Ha(U,i.shape,z,v.shape,v.dtype,X,P.shape,tt,lt,M);return n.makeTensorInfo(xt,v.dtype,Rt)}},tu=o=>{const{backend:r,attrs:n}=o,{start:a,stop:i,step:v,dtype:P}=n,L=ja(a,i,v,P);return r.makeTensorInfo([L.length],P,L)},nh={kernelName:s.Q6t,backendName:"webgl",kernelFunc:tu},sh=kn({opSnippet:"return 1.0 / x;"}),rh={kernelName:s.huO,backendName:"webgl",kernelFunc:sh},ah=kn({opSnippet:As+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ih={kernelName:s.fUj,backendName:"webgl",kernelFunc:ah},uh=kn({opSnippet:As+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ch={kernelName:s.P_L,backendName:"webgl",kernelFunc:uh};class dh{constructor(r,n,a,i,v){this.variableNames=["A"],this.outputShape=[];const[P,L,M,U]=r;this.outputShape=[P,n,a,U];const z=[i&&n>1?L-1:L,i&&a>1?M-1:M],X=[i&&n>1?n-1:n,i&&a>1?a-1:a];let tt;tt=v?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${z[0]/X[0]},\n          ${z[1]/X[1]});\n      const vec2 inputShapeRC = vec2(${L}.0, ${M}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${tt};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class ph{constructor(r,n,a,i,v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[P,L,M,U]=r;this.outputShape=[P,n,a,U];const z=[i&&n>1?L-1:L,i&&a>1?M-1:M],X=[i&&n>1?n-1:n,i&&a>1?a-1:a];let tt;tt=v?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${z[0]/X[0]},\n          ${z[1]/X[1]},\n          ${z[1]/X[1]});\n      const vec3 inputShapeRC = vec3(${L}.0, ${M}.0,\n                                     ${M}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${tt};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${U-1};\n        bool hasNextRow = coords.z < ${a-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const fh={kernelName:s.hgw,backendName:"webgl",kernelFunc:function hh(o){const{inputs:r,backend:n,attrs:a}=o,{images:i}=r,{alignCorners:v,halfPixelCenters:P,size:L}=a,[M,U]=L,z=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ph(i.shape,M,U,v,P):new dh(i.shape,M,U,v,P);return n.runWebGLProgram(z,[i],"float32")}};class mh{constructor(r,n,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,i,v]=n,[,P,L]=r,M=[a&&P>1?i-1:i,a&&L>1?v-1:v],U=[a&&P>1?P-1:P,a&&L>1?L-1:L],z=M[0]/U[0],X=M[1]/U[1],tt=1/z,lt=1/X,xt=2*Math.ceil(tt)+2,Rt=2*Math.ceil(lt)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${z});\n        const float widthScale = float(${X});\n\n        const float invHeightScale = float(${tt});\n        const float invWidthScale = float(${lt});\n\n        const int winHeight = int(${xt});\n        const int winWidth = int(${Rt});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${P}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${L}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${v-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Eh={kernelName:s.FCQ,backendName:"webgl",kernelFunc:function gh(o){const{inputs:r,backend:n,attrs:a}=o,{images:i,dy:v}=r,{alignCorners:P}=a,L=new mh(v.shape,i.shape,P);return n.runWebGLProgram(L,[v],v.dtype)}};class _h{constructor(r,n,a,i,v){this.variableNames=["A"],this.outputShape=[];const[P,L,M,U]=r;this.outputShape=[P,n,a,U];const z=[i&&n>1?L-1:L,i&&a>1?M-1:M],X=[i&&n>1?n-1:n,i&&a>1?a-1:a];let lt;lt=v?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${z[0]/X[0]},\n          ${z[1]/X[1]});\n      const vec2 inputShapeRC = vec2(${L}.0, ${M}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${lt};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${i?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class yh{constructor(r,n,a,i,v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[P,L,M,U]=r;this.outputShape=[P,n,a,U];const z=[i&&n>1?L-1:L,i&&a>1?M-1:M],X=[i&&n>1?n-1:n,i&&a>1?a-1:a];let lt;lt=v?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${z[0]/X[0]},\n          ${z[1]/X[1]},\n          ${z[1]/X[1]});\n      const vec3 inputShapeRC = vec3(${L}.0, ${M}.0,\n                                     ${M}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${lt};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${i?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${U-1};\n        bool hasNextRow = coords.z < ${a-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const vh={kernelName:s.jOE,backendName:"webgl",kernelFunc:function xh(o){const{inputs:r,backend:n,attrs:a}=o,{images:i}=r,{alignCorners:v,halfPixelCenters:P,size:L}=a,[M,U]=L,z=(0,s._K2)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yh(i.shape,M,U,v,P):new _h(i.shape,M,U,v,P);return n.runWebGLProgram(z,[i],i.dtype)}};class Th{constructor(r,n,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,i,v]=n,[,P,L]=r,M=[a&&P>1?i-1:i,a&&L>1?v-1:v],U=[a&&P>1?P-1:P,a&&L>1?L-1:L],z=M[0]/U[0],X=M[1]/U[1],tt=1/z,lt=1/X,xt=2*Math.ceil(tt)+2,Rt=2*Math.ceil(lt)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${z});\n        const float widthScale = float(${X});\n\n        const float invHeightScale = float(${tt});\n        const float invWidthScale = float(${lt});\n\n        const int winHeight = int(${xt});\n        const int winWidth = int(${Rt});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${P}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${L}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${M[0]}) *\n                (float(dyR) / float(${U[0]}));\n\n            float sourceFracCol =\n                float(${M[1]}) *\n                  (float(dyC) / float(${U[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${i}) - 1),\n                ${a} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${v}) - 1),\n                ${a} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Dh={kernelName:s.XQy,backendName:"webgl",kernelFunc:function Ch(o){const{inputs:r,backend:n,attrs:a}=o,{images:i,dy:v}=r,{alignCorners:P}=a,L=new Th(v.shape,i.shape,P);return n.runWebGLProgram(L,[v],v.dtype)}};class Ih{constructor(r,n){this.variableNames=["x"];const a=r.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=r,1===a)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${r[0]} - coord - 1));\n        }\n      `);const v=r.map((L,M)=>(L=>-1!==n.indexOf(L)&&1!==r[L]?`${r[L]} - coords[${L}] - 1`:`coords[${L}]`)(M)).join(","),P=O(a);this.userCode=`\n      void main() {\n        ${P} coords = getOutputCoords();\n        setOutput(getX(${v}));\n      }\n    `}}class Ph{constructor(r,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const a=r.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=r;const i=ys("rc",a),v=`${i[a-1]} + 1 < ${this.outputShape[a-1]}`,P=`${i[a-2]} + 1 < ${this.outputShape[a-2]}`,L=O(a);function tt(xt){const Rt=r.map((jt,Te)=>function lt(xt,Rt){return-1!==n.indexOf(xt)&&1!==r[xt]?`${r[xt]} - ${Rt[xt]} - 1`:`${Rt[xt]}`}(Te,xt));return`getChannel(getX(${Rt.join(",")}), vec2(${Rt.slice(-2).join(",")}))`}this.userCode=1===a?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${r[0]} - rc - 1),\n            ${r[0]} - rc - 1);\n          if(${v}){\n              result.g = getChannel(getX(${r[0]} - (rc  + 1) - 1),\n                ${r[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${L} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function M(xt){return tt(xt)}(i.slice())};\n          if(${v}){\n            result.g = ${function U(xt){return xt[a-1]="("+xt[a-1]+" + 1)",tt(xt)}(i.slice())};\n          }\n          if(${P}) {\n            result.b = ${function z(xt){return xt[a-2]="("+xt[a-2]+" + 1)",tt(xt)}(i.slice())};\n            if(${v}) {\n              result.a = ${function X(xt){return xt[a-1]="("+xt[a-1]+" + 1)",xt[a-2]="("+xt[a-2]+" + 1)",tt(xt)}(i.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Sh={kernelName:s.D7i,backendName:"webgl",kernelFunc:function Oh(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{dims:v}=a,P=i.shape.length,L=s.ZSL.parseAxisParam(v,i.shape);if(0===P)return Ds({inputs:{x:i},backend:n});const M=(0,s._K2)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ph(i.shape,L):new Ih(i.shape,L);return n.runWebGLProgram(M,[i],i.dtype)}};class Ah{constructor(r,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const a=r[1],i=r[2];this.outputShape=r;let v="";v="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${v}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const bh={kernelName:s.BK4,backendName:"webgl",kernelFunc:({inputs:o,attrs:r,backend:n})=>{const{image:a}=o,{radians:i,fillValue:v,center:P}=r,L=n,M=new Ah(a.shape,v),[U,z]=s.C0T.getImageCenter(P,a.shape[1],a.shape[2]),X=[[U,z,Math.sin(i),Math.cos(i)]];return L.runWebGLProgram(M,[a],a.dtype,X)}},Mh=kn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Nh={kernelName:s.hVg,backendName:"webgl",kernelFunc:Mh},Rh=kn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Za}),Lh={kernelName:s.TOR,backendName:"webgl",kernelFunc:Rh};class Cl{constructor(r,n,a,i,v,P,L=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=P;const U=O(v.length),z=O(P.length);let X="";1===a?X="i":2===a&&(X="i, j");let lt="";1===i?lt="i":2===i&&(lt="i, coords[1]");let Rt="";M&&(Rt="coords[0], coords[1]"),this.userCode=`\n        ${U} strides = ${U}(${v});\n\n        void main() {\n          ${z} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${r}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${n}; j++) {\n              int index = round(getIndices(${X}));\n              flattenedIndex += index * ${n>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${lt});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(${Rt}), sum, float(found)));\n        }\n      `}}class $h{constructor(r,n,a,i,v,P,L=!0,M=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=P;const U=O(v.length),z=O(P.length);let X="";1===a?X="i":2===a&&(X="i, j");let lt="";1===i?lt="i":2===i&&(lt="i, coords[1]");let Rt="";M&&(Rt="coords[0], coords[1]"),this.userCode=`\n        ${U} strides = ${U}(${v});\n\n        void main() {\n          ${z} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${r}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${n}; j+=2) {\n              ivec4 index = round(getIndices(${X}));\n              flattenedIndex += index.xz * ${n>1?"strides[j]":"strides"};\n              if (j + 1 < ${n}) {\n                flattenedIndex += index.yw * ${n>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = getUpdates(${lt});\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(getDefaultValue(${Rt}), sum, found));\n        }\n      `}}const Bh={kernelName:s.pJc,backendName:"webgl",kernelFunc:function wh(o){const{inputs:r,backend:n,attrs:a}=o,{indices:i,updates:v}=r,{shape:P}=a,{sliceRank:L,numUpdates:M,sliceSize:U,strides:z,outputSize:X}=s.C0T.calculateShapes(v,i,P),tt=[X/U,U];if(0===X)return n.makeTensorInfo(P,i.dtype);const lt=sn({inputs:{x:i},backend:n,attrs:{shape:[M,L]}}),xt=sn({inputs:{x:v},backend:n,attrs:{shape:[M,U]}}),Rt=n.makeTensorInfo([],"float32",new Float32Array([0]));let Wt;Wt=(0,s._K2)().getBool("WEBGL_PACK")?new $h(M,L,lt.shape.length,xt.shape.length,z,tt):new Cl(M,L,lt.shape.length,xt.shape.length,z,tt);const wt=n.runWebGLProgram(Wt,[xt,lt,Rt],xt.dtype),jt=sn({inputs:{x:wt},backend:n,attrs:{shape:P}});return n.disposeIntermediateTensorInfo(lt),n.disposeIntermediateTensorInfo(xt),n.disposeIntermediateTensorInfo(wt),n.disposeIntermediateTensorInfo(Rt),jt}};class kh{constructor(r,n,a,i){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[r,a];const P=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,L=2===(0,s._K2)().getNumber("WEBGL_VERSION")?"while (left < right) {":P;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${L}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===i?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Wh={kernelName:s.uWl,backendName:"webgl",kernelFunc:function Fh(o){const{inputs:r,backend:n,attrs:a}=o,{sortedSequence:i,values:v}=r,{side:P}=a,L=new kh(i.shape[0],i.shape[1],v.shape[1],P);return n.runWebGLProgram(L,[i,v],"int32",[[i.shape[1]]])}};class Uh{constructor(r,n,a){let i,v;if(this.variableNames=["c","a","b"],this.outputShape=n,a>4)throw Error(`Where for rank ${a} is not yet supported`);if(1===a)v="resRC",i="resRC";else{const L=["resRC.x","resRC.y","resRC.z","resRC.w"],M=[],U=[];for(let z=0;z<n.length;z++)U.push(`${L[z]}`),z<r&&M.push(`${L[z]}`);i=M.join(),v=U.join()}const P=O(a);this.userCode=`\n      void main() {\n        ${P} resRC = getOutputCoords();\n        float cVal = getC(${i});\n        if (cVal >= 1.0) {\n          setOutput(getA(${v}));\n        } else {\n          setOutput(getB(${v}));\n        }\n      }\n    `}}const Kh={kernelName:s.l6P,backendName:"webgl",kernelFunc:function Vh(o){const{inputs:r,backend:n}=o,{condition:a,t:i,e:v}=r,P=new Uh(a.shape.length,i.shape,i.shape.length);return n.runWebGLProgram(P,[a,i,v],(0,s.TuY)(i.dtype,v.dtype))}},Gh=kn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.C0T.SELU_SCALEALPHA};\n  float scale = ${s.C0T.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Hh={kernelName:s.u$b,backendName:"webgl",kernelFunc:Gh},Zh=kn({opSnippet:jr+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Xa}),Yh={kernelName:s.vI1,backendName:"webgl",kernelFunc:Zh},Xh=kn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Qh={kernelName:s.YVe,backendName:"webgl",kernelFunc:Xh},tf=kn({opSnippet:jr+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Rr}\n  return result;\n`}),ef={kernelName:s.hql,backendName:"webgl",kernelFunc:tf},nf=kn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),sf={kernelName:s.J3C,backendName:"webgl",kernelFunc:nf},rf=kn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),of={kernelName:s.Fin,backendName:"webgl",kernelFunc:rf},lf={kernelName:s.A8B,backendName:"webgl",kernelFunc:o=>{const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{blockShape:v,paddings:P}=a;s.ZSL.assert(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const L=v.reduce((wt,jt)=>wt*jt),M=[[0,0]];M.push(...P);for(let wt=1+v.length;wt<i.shape.length;++wt)M.push([0,0]);const U=[],z=ql({inputs:{x:i},backend:n,attrs:{paddings:M,constantValue:0}}),X=s.C0T.getReshaped(z.shape,v,L,!1),tt=s.C0T.getPermuted(X.length,v.length,!1),lt=s.C0T.getReshapedPermuted(z.shape,v,L,!1),xt=sn({inputs:{x:z},backend:n,attrs:{shape:X}}),Rt=xs({inputs:{x:xt},backend:n,attrs:{perm:tt}}),Wt=sn({inputs:{x:Rt},backend:n,attrs:{shape:lt}});return U.push(z),U.push(xt),U.push(Rt),U.forEach(wt=>n.disposeIntermediateTensorInfo(wt)),Wt}},cf={kernelName:s.C8s,backendName:"webgl",kernelFunc:function uf(o){const{inputs:r,backend:n}=o,{indices:a,values:i,denseShape:v,defaultValue:P}=r;if(1!==v.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${v.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==P.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${P.shape}`);const L=n.readSync(a.dataId),M=n.readSync(i.dataId),U=n.readSync(v.dataId),z=n.readSync(P.dataId)[0],[X,tt,lt,xt,Rt]=Ja(L,a.shape,a.dtype,M,i.dtype,U,z);return[n.makeTensorInfo(tt,a.dtype,X),n.makeTensorInfo([tt[0]],i.dtype,lt),n.makeTensorInfo([xt.length],"bool",new Uint8Array(xt.map(Wt=>Number(Wt)))),n.makeTensorInfo([Rt.length],a.dtype,new Int32Array(Rt))]}},pf={kernelName:s.BoJ,backendName:"webgl",kernelFunc:function df(o){const{inputs:r,backend:n}=o,{inputIndices:a,inputShape:i,newShape:v}=r;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==v.shape.length)throw new Error(`Target shape should be a vector but received shape ${v.shape}`);const P=Array.from(n.readSync(i.dataId)),L=n.readSync(a.dataId),M=Array.from(n.readSync(v.dataId)),[U,z,X]=qa(L,a.shape,a.dtype,P,M);return[n.makeTensorInfo(z,a.dtype,U),n.makeTensorInfo([X.length],v.dtype,new Int32Array(X))]}},ff={kernelName:s.L6G,backendName:"webgl",kernelFunc:function hf(o){const{inputs:r,backend:n}=o,{data:a,indices:i,segmentIds:v}=r;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==v.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${v.shape}`);const P=n.readSync(a.dataId),L=n.readSync(i.dataId),M=n.readSync(v.dataId),[U,z]=ro(P,a.shape,a.dtype,L,M,!0);return n.makeTensorInfo(z,a.dtype,U)}},gf={kernelName:s.DvZ,backendName:"webgl",kernelFunc:function mf(o){const{inputs:r,backend:n}=o,{data:a,indices:i,segmentIds:v}=r;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==v.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${v.shape}`);const P=n.readSync(a.dataId),L=n.readSync(i.dataId),M=n.readSync(v.dataId),[U,z]=ro(P,a.shape,a.dtype,L,M);return n.makeTensorInfo(z,a.dtype,U)}},_f={kernelName:s.jgd,backendName:"webgl",kernelFunc:function Ef(o){const{inputs:r,backend:n,attrs:a}=o,{sparseIndices:i,sparseValues:v,defaultValue:P}=r,{outputShape:L}=a,{sliceRank:M,numUpdates:U,sliceSize:z,strides:X,outputSize:tt}=s.C0T.calculateShapes(v,i,L);if("string"===v.dtype){const wt=n.bufferSync(i),jt=n.bufferSync(v),Te=s.ZSL.decodeString(n.readSync(P.dataId)[0]),Oe=Ya(wt,jt,L,tt,z,U,M,X,Te,!1);return n.makeTensorInfo(L,Oe.dtype,Oe.values)}const xt=new Cl(U,M,i.shape.length,v.shape.length,X,[tt,1],!1),Rt=n.runWebGLProgram(xt,[v,i,P],v.dtype),Wt=sn({inputs:{x:Rt},backend:n,attrs:{shape:L}});return n.disposeIntermediateTensorInfo(Rt),Wt}},xf={kernelName:s.Blb,backendName:"webgl",kernelFunc:function yf(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{numOrSizeSplits:v,axis:P}=a,L=s.ZSL.parseAxisParam(P,i.shape)[0],M=s.C0T.prepareSplitSize(i,v,L),z=new Array(i.shape.length).fill(0),X=i.shape.slice();return M.map(tt=>{const lt=[...X];lt[L]=tt;const xt=Qe({inputs:{x:i},backend:n,attrs:{begin:z,size:lt}});return z[L]+=tt,xt})}},eu="return sqrt(x);",vf=kn({opSnippet:eu,packedOpSnippet:eu,cpuKernelImpl:ti}),Tf={kernelName:s.dFH,backendName:"webgl",kernelFunc:vf},Cf=kn({opSnippet:"return x * x;"}),Df={kernelName:s.M6A,backendName:"webgl",kernelFunc:Cf},nu="return (a - b) * (a - b);",If=gs({opSnippet:nu,packedOpSnippet:nu}),Pf={kernelName:s.Ddj,backendName:"webgl",kernelFunc:If},Sf={kernelName:s.GZp,backendName:"webgl",kernelFunc:function Of(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r;if("string"!==i.dtype)throw new Error("Input must be of datatype string");const v=n.readSync(i.dataId),P=s.C0T.fromUint8ToStringArray(v),L=ko(P,"string",a);return n.makeTensorInfo(i.shape,"string",L)}},bf={kernelName:s.pnw,backendName:"webgl",kernelFunc:function Af({inputs:o,attrs:r,backend:n}){const{x:a}=o,v=new js(a.shape,As+`\n    return x > 0.0 ? 1.0 : float(${r.alpha});\n  `);return n.runWebGLProgram(v,[a],a.dtype)}};class Mf{constructor(r,n,a){this.variableNames=["x"],this.outputShape=a;const i=a.length,v=O(a.length),P=O(a.length);let L="";if(1===i)L="coords * strides + begin";else{let M=0;L=a.map((U,z)=>(M++,1===a.length?`coords * strides[${z}] + begin[${z}]`:`coords[${M-1}] * strides[${z}] + begin[${z}]`)).join(",")}this.userCode=`\n      ${v} begin = ${v}(${r});\n      ${v} strides = ${v}(${n});\n\n      void main() {\n        ${P} coords = getOutputCoords();\n        setOutput(getX(${L}));\n      }\n    `}}const Rf={kernelName:s.UcO,backendName:"webgl",kernelFunc:function Nf(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{begin:v,end:P,strides:L,beginMask:M,endMask:U,ellipsisMask:z,newAxisMask:X,shrinkAxisMask:tt}=a,{finalShapeSparse:lt,finalShape:xt,isIdentity:Rt,sliceDim0:Wt,isSimpleSlice:wt,begin:jt,end:Te,strides:Oe}=s.Kro.sliceInfo(i.shape,v,P,L,M,U,z,X,tt);let tn;if(Rt)tn=sn({inputs:{x:i},backend:n,attrs:{shape:xt}});else if(Wt||wt){s.ZSL.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);const Cn=s.Kro.computeOutShape(jt,Te,Oe),dn=Qe({inputs:{x:i},backend:n,attrs:{begin:jt,size:Cn}});tn=sn({inputs:{x:dn},backend:n,attrs:{shape:xt}}),n.disposeIntermediateTensorInfo(dn)}else if(n.shouldExecuteOnCPU([i])){const dn=n.readSync(i.dataId),Fn=(0,s.ra8)(i.shape,i.dtype,dn),Mn=ei(lt,Fn,Oe,jt);tn=n.makeTensorInfo(xt,i.dtype,Mn.values)}else{const dn=new Mf(jt,Oe,lt);tn=n.runWebGLProgram(dn,[i],i.dtype)}const On=sn({inputs:{x:tn},backend:n,attrs:{shape:xt}});return n.disposeIntermediateTensorInfo(tn),On}},$f={kernelName:s.YAb,backendName:"webgl",kernelFunc:function Lf(o){const{inputs:r,backend:n,attrs:a}=o,{separator:i,nGramWidths:v,leftPad:P,rightPad:L,padWidth:M,preserveShortSequences:U}=a,{data:z,dataSplits:X}=r,tt=n.readSync(z.dataId),lt=n.readSync(X.dataId),[xt,Rt]=Fo(tt,lt,i,v,P,L,M,U);return[n.makeTensorInfo([xt.length],"string",xt),n.makeTensorInfo(X.shape,"int32",Rt)]}},Bf={kernelName:s.iW0,backendName:"webgl",kernelFunc:function wf(o){const{inputs:r,backend:n,attrs:a}=o,{skipEmpty:i}=a,{input:v,delimiter:P}=r;if("string"!==v.dtype)throw new Error("Input must be of datatype string");if(1!==v.shape.length)throw new Error(`Input must be a vector, got shape: ${v.shape}`);if(0!==P.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${P.shape}`);const L=n.readSync(v.dataId),M=n.readSync(P.dataId)[0],[U,z,X]=ni(L,M,i),tt=z.length;return[n.makeTensorInfo([tt,2],"int32",U),n.makeTensorInfo([tt],"string",z),n.makeTensorInfo([2],"int32",new Int32Array(X))]}},Ff={kernelName:s.$jE,backendName:"webgl",kernelFunc:function kf(o){const{inputs:r,backend:n,attrs:a}=o,{numBuckets:i}=a,{input:v}=r;if("string"!==v.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const P=n.readSync(v.dataId),L=si(P,i);return n.makeTensorInfo(v.shape,"int32",L)}},Wf=kn({opSnippet:"return tan(x);"}),Uf={kernelName:s.oFs,backendName:"webgl",kernelFunc:Wf},Vf=kn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Kf={kernelName:s.iuW,backendName:"webgl",kernelFunc:Vf},Gf={kernelName:s.X4r,backendName:"webgl",kernelFunc:function zf(o){const{inputs:r,backend:n}=o,{tensor:i,indices:v,updates:P}=r,{sliceRank:L,numUpdates:M,sliceSize:U,strides:z,outputSize:X}=s.C0T.calculateShapes(P,v,i.shape),tt=[X/U,U];if(0===X)return n.makeTensorInfo(i.shape,v.dtype);const lt=sn({inputs:{x:v},backend:n,attrs:{shape:[M,L]}}),xt=sn({inputs:{x:P},backend:n,attrs:{shape:[M,U]}}),Rt=sn({inputs:{x:i},backend:n,attrs:{shape:tt}}),Wt=new Cl(M,L,lt.shape.length,xt.shape.length,z,tt,!1,!0),wt=n.runWebGLProgram(Wt,[xt,lt,Rt],Rt.dtype),jt=sn({inputs:{x:wt},backend:n,attrs:{shape:i.shape}});return n.disposeIntermediateTensorInfo(lt),n.disposeIntermediateTensorInfo(xt),n.disposeIntermediateTensorInfo(Rt),n.disposeIntermediateTensorInfo(wt),jt}};class Hf{constructor(r,n){this.variableNames=["A"];const a=new Array(r.length);for(let P=0;P<a.length;P++)a[P]=r[P]*n[P];this.outputShape=a,this.rank=a.length;const i=O(this.rank),v=function jf(o){const r=o.length;if(r>5)throw Error(`Tile for rank ${r} is not yet supported`);if(1===r)return`imod(resRC, ${o[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let i=0;i<o.length;i++)a.push(`imod(${n[i]}, ${o[i]})`);return a.join()}(r);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        setOutput(getA(${v}));\n      }\n    `}}function su(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{reps:v}=a;if("string"===i.dtype||i.shape.length>5){const M=n.readSync(i.dataId),U="string"===i.dtype?M.map(tt=>s.ZSL.decodeString(tt)):M,z=(0,s.ra8)(i.shape,i.dtype,U),X=ri(z,v);return n.makeTensorInfo(X.shape,X.dtype,X.values)}const P=new Hf(i.shape,v);return n.runWebGLProgram(P,[i],i.dtype)}const Zf={kernelName:s.FAs,backendName:"webgl",kernelFunc:su};class Yf{constructor(r){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=r,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Xf{constructor(r){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=r,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function uo(o,r){null!==r&&o.disposeIntermediateTensorInfo(r)}function ru(o){let r=1;for(;r<o;)r*=2;return r}const Jf={kernelName:s.TBb,backendName:"webgl",kernelFunc:function Qf(o){const{inputs:r,backend:n,attrs:a}=o,{x:i}=r,{k:v,sorted:P}=a,L=(0,s._K2)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),M=(0,s._K2)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),U=i.shape,z=U[U.length-1];if(n.shouldExecuteOnCPU([i])||z<L||v>M){const Mn=n.readSync(i.dataId),[cs,ds]=oi(Mn,U,i.dtype,v,P);return[n.makeTensorInfo(cs.shape,cs.dtype,cs.values),n.makeTensorInfo(ds.shape,ds.dtype,ds.values)]}if(0===v)return U[U.length-1]=0,[n.makeTensorInfo(U,i.dtype,[]),n.makeTensorInfo(U,"int32",[])];if(1===z)return[i,Lo({attrs:{shape:U,dtype:"int32",value:0},backend:n})];const X=n.texData.get(i.dataId),tt=null!==X&&X.isPacked,lt=tt?n.unpackTensor(i):i,Rt=s.ZSL.sizeFromShape(U)/z,Wt=sn({inputs:{x:lt},attrs:{shape:[Rt,z]},backend:n});tt&&uo(n,lt);const wt=ru(v),jt=ru(z);let Te=null;const Oe=()=>null===Te?[Wt,Wt]:[Wt,Te],tn=(Mn,cs,ds)=>{const _r=Oe(),$s=new Yf(ds),rr=Te;Te=n.runWebGLProgram($s,_r,"int32",[[z],[null===Te?1:0],[Number.NEGATIVE_INFINITY],[Mn],[cs]]),uo(n,rr)};for(let Mn=1;Mn<wt;Mn*=2){const cs=2*Mn;for(let ds=Mn;ds>=1;ds/=2)tn(cs,ds,[Rt,jt])}for(let Mn=jt;Mn>wt;Mn/=2){const cs=Oe(),ds=new Xf([Rt,Mn/2]),Us=Te;Te=n.runWebGLProgram(ds,cs,"int32",[[z],[null===Te?1:0],[wt]]),uo(n,Us);const Zs=wt/2,rr=2*Zs;for(let Is=Zs;Is>=1;Is/=2)tn(rr,Is,Te.shape)}let On=Te;Te=Qe({inputs:{x:Te},backend:n,attrs:{begin:0,size:[Rt,v]}}),uo(n,On);let Cn=Hl({inputs:{x:Wt,indices:Te},backend:n,attrs:{axis:1,batchDims:1}});uo(n,Wt);const dn=U.slice(0,-1);dn.push(v),On=Te,Te=sn({inputs:{x:Te},attrs:{shape:dn},backend:n}),uo(n,On);const Fn=Cn;return Cn=sn({inputs:{x:Cn},attrs:{shape:dn},backend:n}),uo(n,Fn),[Cn,Te]}};class qf{constructor(r,n,a,i,v,P){this.variableNames=["Image","Transforms"],this.outputShape=P;const L="nearest"===a?1:2;let M;switch(i){case"constant":default:M=1;break;case"reflect":M=2;break;case"wrap":M=3;break;case"nearest":M=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${M} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${M} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${M} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${r} && 0 <= coordX && coordX < ${n}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${v});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${v});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${n}));\n                float mapY = mapCoord(inY, float(${r}));\n\n                if (${L} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const em={kernelName:s.dLy,backendName:"webgl",kernelFunc:function tm(o){const{inputs:r,backend:n,attrs:a}=o,{image:i,transforms:v}=r,{interpolation:P,fillMode:L,fillValue:M,outputShape:U}=a,[z,X,tt,lt]=i.shape,[xt,Rt]=null!=U?U:[X,tt],wt=new qf(X,tt,P,L,M,[z,xt,Rt,lt]);return n.runWebGLProgram(wt,[i,v],"float32")}},sm={kernelName:s.EwU,backendName:"webgl",kernelFunc:function nm(o){const{inputs:r,attrs:n,backend:a}=o,{axis:i}=n,{x:v}=r;bt(v,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const P=a.readSync(v.dataId),{outputValues:L,outputShape:M,indices:U}=ai(P,i,v.shape,v.dtype);return[a.makeTensorInfo(M,v.dtype,L),a.makeTensorInfo([U.length],"int32",U)]}},om={kernelName:s.dXR,backendName:"webgl",kernelFunc:function rm(o){const{inputs:r,backend:n,attrs:a}=o,{value:i}=r;let{axis:v}=a;v<0&&(v+=i.shape.length);const P=i,L=P.shape.length,M=i.shape[v],U=new Array(L-1);let z=0;for(let Rt=0;Rt<L;Rt++)Rt!==v&&(U[z++]=P.shape[Rt]);const X=[],tt=new Array(L).fill(0),lt=P.shape.slice();lt[v]=1;const xt=new Array(M);for(let Rt=0;Rt<xt.length;Rt++){tt[v]=Rt;const Wt=Qe({inputs:{x:P},backend:n,attrs:{begin:tt,size:lt}}),wt=sn({inputs:{x:Wt},backend:n,attrs:{shape:U}});xt[Rt]=wt,X.push(Wt)}return X.forEach(Rt=>n.disposeIntermediateTensorInfo(Rt)),xt}};class am{constructor(r,n){this.variableNames=["x","segmentIds"];const a=r.windowSize,i=r.batchSize,v=r.inSize,P=r.numSegments,L=P*Math.ceil(v/a);this.outputShape=[i,L];const z=4*Math.floor(a/4),X=a%4,tt="\n        sumValue += dot(values, segFilter);\n    ";let lt="";v%a>0&&(lt=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return initializationValue;\n        }\n      `);let xt="";v%a>0&&(xt=`\n        if (inIdx < 0 || inIdx >= ${v}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${lt}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${xt}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${P})) * float(${a}));\n        int currentSeg = int(mod(float(outIdx), float(${P})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${z}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${tt}\n        }\n\n        int inIdx = inOffset + ${z};\n        if (${1===X}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${tt}\n        } else if (${2===X}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${tt}\n        } else if (${3===X}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${tt}\n        }\n        setOutput(sumValue);\n      }\n    `}}const um=[qi,el,rl,il,aa,dl,pl,fl,_l,ht,$,gt,dt,Ut,Zt,le,_e,Ke,Ae,Me,ke,In,bn,os,Yn,nr,Er,yl,Bi,iu,pu,gu,Tu,Iu,Ou,Au,Mu,$u,Bu,Wu,Vu,zu,Hu,Yu,Qu,ec,sc,ac,uc,dc,hc,Ec,yc,Tc,Dc,Ic,Oc,Ac,Mc,Rc,$c,Bc,Wc,Kc,Gc,Zc,Qc,qc,ed,wi,sd,cu,od,id,ud,Fi,dd,hd,md,_d,vd,Cd,Id,Od,Md,Ld,wd,Wd,Vd,zd,Zd,Xd,Jd,tp,np,ap,cp,fp,xp,Ui,Dp,Op,bp,Rp,er,wp,kp,Wp,Kp,jp,Wi,Yp,Qp,qp,eh,nh,mr,gp,rh,ih,ch,Ki,fh,Eh,vh,Dh,Sh,bh,Nh,Lh,Bh,Wh,Kh,Hh,Yh,Qh,ef,sf,pn,_p,of,lf,cf,pf,ff,gf,_f,xf,Tf,Df,Pf,Sf,bf,Rf,$f,Bf,Ff,Ep,Xi,Uf,Kf,Gf,Zf,Jf,em,Qi,sm,om,{kernelName:s.pPe,backendName:"webgl",kernelFunc:function im(o){const{inputs:r,backend:n,attrs:a}=o,{x:i,segmentIds:v}=r,{numSegments:P}=a,L=i.shape.length,M=[];let U=0;const z=s.C0T.getAxesPermutation([U],L);let X=i;null!=z&&(X=xs({inputs:{x:i},backend:n,attrs:{perm:z}}),M.push(X),U=s.C0T.getInnerMostAxes(1,L)[0]);const tt=s.C0T.segment_util.computeOutShape(X.shape,U,P),lt=s.ZSL.sizeFromShape([X.shape[U]]),xt=sn({inputs:{x:X},backend:n,attrs:{shape:[-1,lt]}});M.push(xt);const Rt=(0,s.chL)(i.dtype),Wt=(Oe,tn,On,Cn,dn)=>{const Fn=Oe.shape[0],Mn=Oe.shape[1],cs=s.C0T.segment_util.segOpComputeOptimalWindowSize(Mn,dn),_r=new am({windowSize:cs,inSize:Mn,batchSize:Fn,numSegments:dn},tn),$s=n.compileAndRun(_r,[Oe,On],Cn);if(M.push($s),$s.shape[1]===dn)return $s;const Us=tu({backend:n,attrs:{start:0,stop:dn,step:1,dtype:"float32"}}),Zs=su({inputs:{x:Us},backend:n,attrs:{reps:[Mn/cs]}});return M.push(Us),M.push(Zs),Wt($s,tn,Zs,Cn,dn)},jt=sn({inputs:{x:Wt(xt,"unsortedSegmentSum",v,Rt,P)},backend:n,attrs:{shape:tt}});let Te=jt;if(null!=z){M.push(jt);const Oe=s.C0T.getUndoAxesPermutation(z);Te=xs({inputs:{x:Te},backend:n,attrs:{perm:Oe}})}return M.forEach(Oe=>n.disposeIntermediateTensorInfo(Oe)),Te}},Bp];for(const o of um)(0,s.tAK)(o)},30744:(pt,R,t)=>{"use strict";var E;t.d(R,{uW:()=>Or}),(0,t(41653)._K2)().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,O=>{O&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(O){let _;var I;(I=_=O.CheckpointFormatVersion||(O.CheckpointFormatVersion={}))[I.LEGACY=0]="LEGACY",I[I.V1=1]="V1",I[I.V2=2]="V2"}(E||(E={})),Error,t(43517);const Or="4.22.0"},86614:(pt,R,t)=>{"use strict";t.d(R,{GJ:()=>l,uI:()=>E});class l{constructor(y,m){this.backend=y,this.dataMover=m,this.data=new WeakMap,this.dataIdsCount=0}get(y){return this.data.has(y)||this.dataMover.moveData(this.backend,y),this.data.get(y)}set(y,m){this.dataIdsCount++,this.data.set(y,m)}has(y){return this.data.has(y)}delete(y){return this.dataIdsCount--,this.data.delete(y)}numDataIds(){return this.dataIdsCount}}class E{refCount(y){return g("refCount")}incRef(y){return g("incRef")}timerAvailable(){return!0}time(y){return g("time")}read(y){return g("read")}readSync(y){return g("readSync")}readToGPU(y,m){return g("readToGPU")}numDataIds(){return g("numDataIds")}disposeData(y,m){return g("disposeData")}write(y,m,h){return g("write")}move(y,m,h,f,p){return g("move")}createTensorFromGPUData(y,m,h){return g("createTensorFromGPUData")}memory(){return g("memory")}floatPrecision(){return g("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return g("dispose")}}function g(c){throw new Error(`'${c}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},90928:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{ERF_A1:()=>Y,ERF_A2:()=>Z,ERF_A3:()=>it,ERF_A4:()=>at,ERF_A5:()=>q,ERF_P:()=>W,PARALLELIZE_THRESHOLD:()=>T,RowPartitionType:()=>f,SELU_SCALE:()=>V.X,SELU_SCALEALPHA:()=>V.j,applyActivation:()=>h.f2,assertAndGetBroadcastShape:()=>E.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>l.WC,assertParamsConsistent:()=>c,assignToTypedArray:()=>se,axesAreInnerMostDims:()=>l.WH,calculateShapes:()=>x.calculateShapes,checkEinsumDimSizes:()=>Ct,checkPadOnDimRoundingMode:()=>m.s_,combineLocations:()=>l.aF,combineRaggedTensorToTensorShapes:()=>p,complexWithEvenIndex:()=>yt,complexWithOddIndex:()=>mt,computeConv2DInfo:()=>m.uf,computeConv3DInfo:()=>m.p$,computeDefaultPad:()=>m.G8,computeDilation2DInfo:()=>m.YQ,computeOptimalWindowSize:()=>D,computeOutAndReduceShapes:()=>l.lb,computeOutShape:()=>y,computePool2DInfo:()=>m.E6,computePool3DInfo:()=>m.l5,convertConv2DDataFormat:()=>m.$Q,decodeEinsumEquation:()=>Pe,eitherStridesOrDilationsAreOne:()=>m.G0,expandShapeToKeepDim:()=>l.SM,exponent:()=>ue,exponents:()=>Ht,fromStringArrayToUint8:()=>Vt,fromUint8ToStringArray:()=>$t,getAxesPermutation:()=>l.Em,getBroadcastDims:()=>E.getBroadcastDims,getComplexWithIndex:()=>St,getEinsumComputePath:()=>zt,getEinsumPermutation:()=>Ie,getFusedBiasGradient:()=>h.Do,getFusedDyActivation:()=>h.XB,getImageCenter:()=>w,getInnerMostAxes:()=>l.fK,getPermuted:()=>j,getRaggedRank:()=>d,getReductionAxes:()=>E.getReductionAxes,getReshaped:()=>H,getReshapedPermuted:()=>F,getRowPartitionTypesHelper:()=>u,getSliceBeginCoords:()=>B,getSliceSize:()=>A,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>an,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>vn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>mn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>wn,getSparseReshapeInputOutputMismatchErrorMessage:()=>jn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Gn,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>hn,getSparseReshapeNegativeOutputDimErrorMessage:()=>$n,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>ws,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ls,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ts,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Es,getUndoAxesPermutation:()=>l.gx,isIdentityPermutation:()=>Jt,log:()=>ot.R,mergeRealAndImagArrays:()=>rt,prepareAndValidate:()=>k.prepareAndValidate,prepareSplitSize:()=>ze,segment_util:()=>e,shouldFuse:()=>h.zE,slice_util:()=>S,splitRealAndImagArrays:()=>et,stridesOrDilationsArePositive:()=>m.qk,tupleValuesAreOne:()=>m.Dh,upcastType:()=>b.Tu,validateDefaultValueShape:()=>C,validateInput:()=>x.validateInput,validateUpdateShape:()=>x.validateUpdateShape,warn:()=>ot.i});var e={};t.r(e),t.d(e,{collectGatherOpShapeInfo:()=>Vs,computeOutShape:()=>ps,segOpComputeOptimalWindowSize:()=>Ys});var s=t(21710),l=t(94963),E=t(9269),g=t(26674);function c(G,ct){const vt=G[0].length;G.forEach((It,bt)=>{g.vA(It.length===vt,()=>`Error in concat${vt}D: rank of tensors[${bt}] must be the same as the rank of the rest (${vt})`)}),g.vA(ct>=0&&ct<vt,()=>`Error in concat${vt}D: axis must be between 0 and ${vt-1}.`);const Tt=G[0];G.forEach((It,bt)=>{for(let Mt=0;Mt<vt;Mt++)g.vA(Mt===ct||It[Mt]===Tt[Mt],()=>`Error in concat${vt}D: Shape of tensors[${bt}] (${It}) does not match the shape of the rest (${Tt}) along the non-concatenated axis ${bt}.`)})}function y(G,ct){const vt=G[0].slice();for(let Tt=1;Tt<G.length;Tt++)vt[ct]+=G[Tt][ct];return vt}var m=t(29458),h=t(14145),f=function(G){return G[G.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",G[G.VALUE_ROWIDS=1]="VALUE_ROWIDS",G[G.ROW_LENGTHS=2]="ROW_LENGTHS",G[G.ROW_SPLITS=3]="ROW_SPLITS",G[G.ROW_LIMITS=4]="ROW_LIMITS",G[G.ROW_STARTS=5]="ROW_STARTS",G}(f||{});function p(G,ct,vt){let Tt=new Array;if(null==vt&&null==ct)return Tt;if(null==ct)for(;Tt.length<G+vt.length;)Tt.push(-1);else Tt=ct.slice();if(null==vt)return Tt;if(G+vt.length!==Tt.length)throw new Error(`rt input.shape and shape=${ct} are incompatible: rt input.rank = ${G+vt.length}, but shape.rank = ${Tt.length}`);for(let It=1;It<vt.length;++It){const bt=vt[It],Mt=Tt[Tt.length-vt.length+It],ce=Tt[Mt];if(bt>=0)if(ce>=0){if(ce!==bt)throw new Error(`rt input.shape and shape=${ct} are incompatible: rt input.shape[${It+G}] = ${bt} but shape[${It+G}] = ${ce}`)}else Tt[Mt]=bt}return Tt}function u(G){const ct={FIRST_DIM_SIZE:f.FIRST_DIM_SIZE,VALUE_ROWIDS:f.VALUE_ROWIDS,ROW_LENGTHS:f.ROW_LENGTHS,ROW_SPLITS:f.ROW_SPLITS,ROW_LIMITS:f.ROW_LIMITS,ROW_STARTS:f.ROW_STARTS},vt=[];for(const Tt of G){if(!(Tt in ct))break;vt.push(ct[Tt])}return vt}function d(G){return 0===G.length?0:G[0]===f.FIRST_DIM_SIZE?G.length-1:G.length}function C(G,ct){if(null==G||null==ct)return;const vt=G.length,Tt=ct.length;if(vt>=Tt)throw new Error(`defaultValue.shape=${G} and ragged tensor flatValues.shape=${ct}, are incompatible: defaultValue.rank = ${vt} must be less than ragged tensor input flatValues.rank = ${Tt})`);for(let It=0;It<Math.min(vt,Tt-1);++It){const bt=G[It],Mt=ct[It+1];if(bt>=0&&Mt>=0&&1!==bt&&bt!==Mt)throw new Error(`defaultValue.shape=${G}, and ragged tensor input flatValues.shape=${ct} are incompatible: defaultValue.shape[${It-G.length}] = ${bt} but ragged tensor input.flatValues.shape[${It-G.length}] = ${Mt}`)}}const T=30;function D(G){return G<=T?G:(0,g.lK)(G,Math.floor(Math.sqrt(G)))}var S=t(1986),b=t(82891);function w(G,ct,vt){return[vt*("number"==typeof G?G:G[0]),ct*("number"==typeof G?G:G[1])]}function H(G,ct,vt,Tt=!0){let It=[];if(Tt)It=It.concat(ct.slice(0)),It.push(G[0]/vt),It=It.concat(G.slice(1));else{It=It.concat(G[0]);const bt=ct.length;for(let Mt=0;Mt<bt;++Mt)It=It.concat([G[Mt+1]/ct[Mt],ct[Mt]]);It=It.concat(G.slice(bt+1))}return It}function j(G,ct,vt=!0){const Tt=[];if(vt){Tt.push(ct);for(let It=ct+1;It<G;++It)It<=2*ct?(Tt.push(It),Tt.push(It-(ct+1))):Tt.push(It)}else{const It=[],bt=[];for(let Mt=1;Mt<G;++Mt)Mt>=2*ct+1||Mt%2==1?bt.push(Mt):It.push(Mt);Tt.push(...It),Tt.push(0),Tt.push(...bt)}return Tt}function F(G,ct,vt,Tt=!0){const It=[];It.push(Tt?G[0]/vt:G[0]*vt);for(let bt=1;bt<G.length;++bt)It.push(bt<=ct.length?Tt?ct[bt-1]*G[bt]:G[bt]/ct[bt-1]:G[bt]);return It}function B(G,ct){const vt=[0];for(let Tt=0;Tt<ct;++Tt)vt.push(G[Tt][0]);return vt}function A(G,ct,vt){const Tt=G.slice(0,1);for(let It=0;It<vt;++It)Tt.push(G[It+1]-ct[It][0]-ct[It][1]);return Tt}var k=t(14146),x=t(17731),V=t(62597);const W=.3275911,Y=.254829592,Z=-.284496736,it=1.421413741,at=-1.453152027,q=1.061405429;var ot=t(64140);function rt(G,ct){if(G.length!==ct.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${G.length}, imag: ${ct.length}.`);const vt=new Float32Array(2*G.length);for(let Tt=0;Tt<vt.length;Tt+=2)vt[Tt]=G[Tt/2],vt[Tt+1]=ct[Tt/2];return vt}function et(G){const ct=new Float32Array(G.length/2),vt=new Float32Array(G.length/2);for(let Tt=0;Tt<G.length;Tt+=2)ct[Tt/2]=G[Tt],vt[Tt/2]=G[Tt+1];return{real:ct,imag:vt}}function yt(G){const ct=Math.ceil(G.length/4),vt=new Float32Array(ct),Tt=new Float32Array(ct);for(let It=0;It<G.length;It+=4)vt[Math.floor(It/4)]=G[It],Tt[Math.floor(It/4)]=G[It+1];return{real:vt,imag:Tt}}function mt(G){const ct=Math.floor(G.length/4),vt=new Float32Array(ct),Tt=new Float32Array(ct);for(let It=2;It<G.length;It+=4)vt[Math.floor(It/4)]=G[It],Tt[Math.floor(It/4)]=G[It+1];return{real:vt,imag:Tt}}function St(G,ct){return{real:G[2*ct],imag:G[2*ct+1]}}function se(G,ct,vt,Tt){G[2*Tt]=ct,G[2*Tt+1]=vt}function Ht(G,ct){const vt=new Float32Array(G/2),Tt=new Float32Array(G/2);for(let It=0;It<Math.ceil(G/2);It++){const bt=(ct?2:-2)*Math.PI*(It/G);vt[It]=Math.cos(bt),Tt[It]=Math.sin(bt)}return{real:vt,imag:Tt}}function ue(G,ct,vt){const Tt=(vt?2:-2)*Math.PI*(G/ct);return{real:Math.cos(Tt),imag:Math.sin(Tt)}}const Xt="->",ie=/->/g,ae=",",ne="...";function Pe(G,ct){const vt=((G=G.replace(/\s/g,"")).length-G.replace(ie,"").length)/Xt.length;if(vt<1)throw new Error("Equations without an arrow are not supported.");if(vt>1)throw new Error(`Equation must contain exactly one arrow ("${Xt}").`);const[Tt,It]=G.split(Xt);(0,g.vA)(-1===Tt.indexOf(ne),()=>`The ellipsis notation ("${ne}") is not supported yet.`);const bt=Tt.split(ae),Mt=bt.length;if(ct!==Mt)throw new Error(`Expected ${Mt} input tensors, received ${ct}`);if(Mt>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const ce=[];for(let Je=0;Je<It.length;++Je){const be=It[Je];if(!bt.some(Ce=>-1!==Ce.indexOf(be)))throw new Error(`Output subscripts contain the label ${be} not present in the input subscripts.`);-1===ce.indexOf(be)&&ce.push(be)}for(let Je=0;Je<Tt.length;++Je){const be=Tt[Je];-1===ce.indexOf(be)&&be!==ae&&ce.push(be)}const ge=new Array(bt.length);for(let Je=0;Je<Mt;++Je){if(new Set(bt[Je].split("")).size!==bt[Je].length)throw new Error(`Found duplicate axes in input component ${bt[Je]}. Support for duplicate axes in input is not implemented yet.`);ge[Je]=[];for(let be=0;be<bt[Je].length;++be)ge[Je].push(ce.indexOf(bt[Je][be]))}const Se=ce.length,Ue=[];for(let Je=It.length;Je<Se;++Je)Ue.push(Je);return{allDims:ce,summedDims:Ue,idDims:ge}}function Ie(G,ct){let vt=new Array(G);vt.fill(-1);for(let It=0;It<ct.length;++It)vt[ct[It]]=It;const Tt=[];for(let It=0;It<G;++It)-1===vt[It]&&Tt.push(It);return vt=vt.filter(It=>-1!==It),{permutationIndices:vt,expandDims:Tt}}function Ct(G,ct,vt){const Tt=new Array(G);for(let It=0;It<vt.length;++It){const bt=vt[It].shape;for(let Mt=0;Mt<ct[It].length;++Mt)void 0===Tt[ct[It][Mt]]?Tt[ct[It][Mt]]=bt[Mt]:(0,g.vA)(Tt[ct[It][Mt]]===bt[Mt],()=>`Expected dimension ${Tt[ct[It][Mt]]} at axis ${Mt} of input shaped ${JSON.stringify(bt)}, but got dimension ${bt[Mt]}`)}}function zt(G,ct){const vt=G,Tt=[];let It=0;0===G.length&&vt.push(-1),It=G.length+1;for(let Mt=0;Mt<It;++Mt)Tt.push([]);const bt=[];for(let Mt=0;Mt<vt.length;++Mt){const ge=pe(ct,vt[Mt]);for(const Se of ge)-1===bt.indexOf(Se)&&(Tt[Mt].push(Se),bt.push(Se))}return{path:vt,steps:Tt}}function Jt(G){return G.every((ct,vt)=>ct===vt)}function pe(G,ct){const vt=[];for(let Tt=0;Tt<G.length;++Tt)(0===G[Tt].length||-1!==G[Tt].indexOf(ct)||-1===ct)&&vt.push(Tt);return vt}function ze(G,ct,vt=0){let Tt=[];if("number"==typeof ct)(0,g.vA)(G.shape[vt]%ct==0,()=>"Number of splits must evenly divide the axis."),Tt=new Array(ct).fill(G.shape[vt]/ct);else{const It=ct.reduce((Mt,ce)=>(-1===ce&&(Mt+=1),Mt),0);(0,g.vA)(It<=1,()=>"There should be only one negative value in split array.");const bt=ct.indexOf(-1);if(-1!==bt){const Mt=ct.reduce((ce,ge)=>ge>0?ce+ge:ce);ct[bt]=G.shape[vt]-Mt}(0,g.vA)(G.shape[vt]===ct.reduce((Mt,ce)=>Mt+ce),()=>"The sum of sizes must match the size of the axis dimension."),Tt=ct}return Tt}function an(G){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${G}`}function vn(G,ct){return`indices(${G}, 0) is invalid: ${ct} < 0`}function mn(G,ct,vt){return`indices(${G}, 0) is invalid: ${ct} >= ${vt}`}function hn(G,ct){return`only one output dimension may be -1, not both ${G} and ${ct}`}function $n(G,ct){return`size ${G} must be non-negative, not ${ct}`}function wn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Gn(G,ct){return`Input to reshape is a SparseTensor with ${(0,g.Ze)(G)}\n  dense values, but the requested shape requires a multiple of ${(0,g.Ze)(ct)}. inputShape=${G} outputShape= ${ct}`}function jn(G,ct){return`Input to reshape is a tensor with ${(0,g.Ze)(G)} dense values, but the requested shape has ${(0,g.Ze)(ct)}. inputShape=${G} outputShape=${ct}`}function ls(){return"segment ids must be >= 0"}function ts(){return"segment ids are not increasing"}function Es(G,ct){return`Segment id ${G} out of range [0, ${ct}), possibly because segmentIds input is not sorted.`}function ws(G,ct,vt){return`Bad: indices[${G}] == ${ct} out of range [0, ${vt})`}function Ys(G,ct){let Tt,vt=!1;for(G<=T?(Tt=G,vt=!0):Tt=(0,g.lK)(G,Math.floor(Math.sqrt(G)));!vt;)Tt>ct||Tt===G?vt=!0:Tt=(0,g.lK)(G,Tt+1);return Tt}function ps(G,ct,vt){const Tt=[],It=G.length;for(let bt=0;bt<It;bt++)Tt.push(bt!==ct?G[bt]:vt);return Tt}function Vs(G,ct,vt,Tt){const It=ct.shape.length,bt=G.shape.length;if(0!==Tt&&(Tt<-It||Tt>It))throw new Error(`Expect batchDims in the range of [-${It}, ${It}], but got ${Tt}`);if(Tt<0&&(Tt+=It),Tt>bt)throw new Error(`batchDims (${Tt}) must be less than rank(x) (\n    ${bt}).`);if(vt<Tt)throw new Error(`batchDims (${Tt}) must be less than or equal to axis (${vt}).`);for(let Ue=0;Ue<Tt;++Ue)if(G.shape[Ue]!==ct.shape[Ue])throw new Error(`x.shape[${Ue}]: ${G.shape[Ue]} should be equal to indices.shape[${Ue}]: ${ct.shape[Ue]}.`);const Mt=G.shape[vt],ce=[];let ge=1,Se=1,We=1;for(let Ue=0;Ue<Tt;++Ue)ce.push(G.shape[Ue]),ge*=G.shape[Ue];for(let Ue=Tt;Ue<vt;Ue++)ce.push(G.shape[Ue]),Se*=G.shape[Ue];for(let Ue=Tt;Ue<It;Ue++)ce.push(ct.shape[Ue]);for(let Ue=vt+1;Ue<bt;Ue++)ce.push(G.shape[Ue]),We*=G.shape[Ue];return{batchSize:ge,sliceSize:We,outerSize:Se,dimSize:Mt,outputShape:ce}}function $t(G){try{return G.map(ct=>(0,s.decodeString)(ct))}catch(ct){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${ct}`)}}function Vt(G){return G.map(ct=>(0,s.encodeString)(ct))}},89191:(pt,R,t)=>{"use strict";t.d(R,{c7:()=>e.c7,ZS:()=>e.ZS,ut:()=>e.ut,YO:()=>l});var e=t(64857),s=t(75987);function l(E,g){const c=[];for(let h=0;h<g.length;h++)g[h]&&c.push(h);const y=(0,s.r)(E,"int32"),m=(0,s.r)([c.length,E.length],"int32");for(let h=0;h<c.length;h++){const f=y.indexToLoc(c[h]);m.values.set(f,h*E.length)}return m.toTensor()}},64857:(pt,R,t)=>{"use strict";function e(u,d,C){const T=function s(u,d,C){return function E(u,d,C){let T=0,D=u.length,S=0,b=!1;for(;T<D;){S=T+(D-T>>>1);const w=C(d,u[S]);w>0?T=S+1:(D=S,b=!w)}return b?T:-T-1}(u,d,C||l)}(u,d,C);u.splice(T<0?-(T+1):T,0,d)}function l(u,d){return u>d?1:u<d?-1:0}function g(u,d,C,T,D){return m(u,d,C,T,D,0)}function c(u,d,C,T,D,S){return m(u,d,C,T,D,0,!1,S,!0)}function y(u,d,C,T,D,S){return m(u,d,C,T,D,S,!0)}function m(u,d,C,T,D,S,b=!1,w=!1,H=!1){const j=[];for(let W=0;W<d.length;W++)d[W]>D&&j.push({score:d[W],boxIndex:W,suppressBeginIndex:0});j.sort(p);const F=S>0?-.5/S:0,B=[],A=[];for(;B.length<C&&j.length>0;){const W=j.pop(),{score:Y,boxIndex:Z,suppressBeginIndex:it}=W;if(Y<D)break;let at=!1;for(let q=B.length-1;q>=it;--q){const ot=h(u,Z,B[q]);if(ot>=T){at=!0;break}if(W.score=W.score*f(T,F,ot),W.score<=D)break}W.suppressBeginIndex=B.length,at||(W.score===Y?(B.push(Z),A.push(W.score)):W.score>D&&e(j,W,p))}const k=B.length,x=C-k;w&&x>0&&(B.push(...new Array(x).fill(0)),A.push(...new Array(x).fill(0)));const V={selectedIndices:B};return b&&(V.selectedScores=A),H&&(V.validOutputs=k),V}function h(u,d,C){const T=u.subarray(4*d,4*d+4),D=u.subarray(4*C,4*C+4),S=Math.min(T[0],T[2]),b=Math.min(T[1],T[3]),w=Math.max(T[0],T[2]),H=Math.max(T[1],T[3]),j=Math.min(D[0],D[2]),F=Math.min(D[1],D[3]),B=Math.max(D[0],D[2]),A=Math.max(D[1],D[3]),k=(w-S)*(H-b),x=(B-j)*(A-F);if(k<=0||x<=0)return 0;const V=Math.max(S,j),W=Math.max(b,F),Y=Math.min(w,B),Z=Math.min(H,A),it=Math.max(Y-V,0)*Math.max(Z-W,0);return it/(k+x-it)}function f(u,d,C){const T=Math.exp(d*C*C);return C<=u?T:0}function p(u,d){return u.score-d.score||u.score===d.score&&d.boxIndex-u.boxIndex}t.d(R,{c7:()=>g,ZS:()=>c,ut:()=>y})},80225:(pt,R,t)=>{"use strict";var e=t(611),l=(t(70177),t(25271)),E=t(93819),g=t(60366),c=t(22782),y=t(33319);class m{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(F,B){return fetch(F,B)}now(){return performance.now()}encode(F,B){if("utf-8"!==B&&"utf8"!==B)throw new Error(`Browser's encoder only supports utf-8, but got ${B}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(F)}decode(F,B){return new TextDecoder(B).decode(F)}setTimeoutCustom(F,B){typeof window>"u"||!(0,l._K)().getBool("USE_SETTIMEOUTCUSTOM")?setTimeout(F,B):(this.functionRefs.push(F),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},B),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",A=>{A.source===window&&A.data.name===this.messageName&&(A.stopPropagation(),(0,this.functionRefs[A.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0)))}isTypedArray(F){return(0,y.Y)(F)}}if((0,l._K)().get("IS_BROWSER")){(0,l._K)().setPlatform("browser",new m);try{c.dy.registerManager(g.ZT.URL_SCHEME,new g.Cd)}catch{}try{c.dy.registerManager(E.mn.URL_SCHEME,new E.lQ)}catch{}}let f;(0,l._K)().get("IS_NODE")&&!(0,l._K)().get("IS_BROWSER")&&(0,l._K)().setPlatform("node",new class C{constructor(){this.util=t(18590),this.textEncoder=new this.util.TextEncoder}fetch(F,B){return null!=(0,l._K)().global.fetch?(0,l._K)().global.fetch(F,B):(null==f&&(f=t(85817)),f(F,B))}now(){const F=process.hrtime();return 1e3*F[0]+F[1]/1e6}encode(F,B){if("utf-8"!==B&&"utf8"!==B)throw new Error(`Node built-in encoder only supports utf-8, but got ${B}`);return this.textEncoder.encode(F)}decode(F,B){return 0===F.length?"":new this.util.TextDecoder(B).decode(F)}isTypedArray(F){return this.util.types.isFloat32Array(F)||this.util.types.isInt32Array(F)||this.util.types.isUint8Array(F)||this.util.types.isUint8ClampedArray(F)}});var T=t(75987),D=t(92290),S=t(61548),w=t(73444);(0,e.Ye)(),(0,w.Q5)({buffer:T.r,cast:D.w,clone:S.o,print:function b(j,F=!1){console.log(j.toString(F))}})},9173:(pt,R,t)=>{"use strict";t.d(R,{d:()=>s});const e=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:l=>l();function s(){return new Promise(l=>e(()=>l()))}},6757:(pt,R,t)=>{"use strict";let s;function l(c){s=c}function E(c){if(void 0!==s)return s;if(c||function e(){return typeof navigator<"u"&&null!=navigator}()){if(c||(c=navigator),"ReactNative"===c.product)return!0;const y=c.userAgent||c.vendor||(typeof window<"u"?window.opera:"");return y?/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(y)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(y.substr(0,4)):c.userAgentData&&c.userAgentData.mobile}return!1}function g(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}t.r(R),t.d(R,{isBrowser:()=>g,isMobile:()=>E,mockIsMobile:()=>l})},611:(pt,R,t)=>{"use strict";t.d(R,{T2:()=>F,Ye:()=>j});var e=t(10467),s=t(86614),l=t(25271),E=t(73366),g=t(30162),c=t(56203),y=t(64140),m=t(21710),h=t(26674);class f{constructor(k,x){this.backendTimer=k,this.logger=x,null==x&&(this.logger=new u)}profileKernel(k,x,V){let W;const Y=()=>{W=V()};let Z;const it=m.now();if(this.backendTimer.timerAvailable())Z=this.backendTimer.time(Y);else{Y();for(const q of W)q.dataSync();Z=Promise.resolve({kernelMs:m.now()-it})}if((0,l._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let q=0;q<W.length;q++){const ot=W[q];ot.data().then(rt=>{p(rt,ot.dtype,k)})}return{kernelName:k,outputs:W,inputs:x,timeMs:Z.then(q=>q.kernelMs),extraInfo:Z.then(q=>null!=q.getExtraProfileInfo?q.getExtraProfileInfo():"")}}logKernelProfile(k){const{kernelName:x,outputs:V,timeMs:W,inputs:Y,extraInfo:Z}=k;V.forEach(it=>{Promise.all([it.data(),W,Z]).then(at=>{this.logger.logKernelProfile(x,it,at[0],at[1],Y,at[2])})})}}function p(A,k,x){if("float32"!==k)return!1;for(let V=0;V<A.length;V++){const W=A[V];if(isNaN(W)||!isFinite(W))return console.warn(`Found ${W} in the result of '${x}'`),!0}return!1}class u{logKernelProfile(k,x,V,W,Y,Z){const it="number"==typeof W?h.av(`${W}ms`,9):W.error,at=h.av(k,25),q=x.rank,ot=x.size,rt=h.av(x.shape.toString(),14);let et="";for(const yt in Y){const mt=Y[yt];if(null!=mt){const St=mt.shape||x.shape,se=St.length;et+=`${yt}: ${se}D ${se>0?St:""} `}}console.log(`%c${at}\t%c${it}\t%c${q}D ${rt}\t%c${ot}\t%c${et}\t%c${Z}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var T=t(73444),D=t(14548);function S(A){return null!=A.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(k=>k.name)))}}}dispose(){for(const k in this.registeredVariables)this.registeredVariables[k].dispose()}}let w=(()=>{class A{constructor(x){this.ENV=x,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}ready(){var x=this;return(0,e.A)(function*(){if(null!=x.pendingBackendInit)return x.pendingBackendInit.then(()=>{});if(null!=x.backendInstance)return;const V=x.getSortedBackends();for(let W=0;W<V.length;W++){const Y=V[W];if(yield x.initializeBackend(Y).success)return void(yield x.setBackend(Y))}throw new Error("Could not initialize any backends, all backend initializations failed.")})()}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:x,asyncInit:V}=this.initializeBackendsAndReturnBest();if(V)throw new Error(`The highest priority backend '${x}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(x)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(x){if(!(x in this.registry)){if(!(x in this.registryFactory))return null;{const{asyncInit:V}=this.initializeBackend(x);if(V)return null}}return this.registry[x]}findBackendFactory(x){return x in this.registryFactory?this.registryFactory[x].factory:null}registerBackend(x,V,W=1){return x in this.registryFactory?(y.i(`${x} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[x]={factory:V,priority:W},!0)}setBackend(x){var V=this;return(0,e.A)(function*(){if(null==V.registryFactory[x])throw new Error(`Backend name '${x}' not found in registry`);if(V.backendName=x,null==V.registry[x]){V.backendInstance=null;const{success:W,asyncInit:Y}=V.initializeBackend(x);if(!(Y?yield W:W))return!1}return V.backendInstance=V.registry[x],V.setupRegisteredKernels(),V.profiler=new f(V.backendInstance),!0})()}setupRegisteredKernels(){(0,c.Op)(this.backendName).forEach(V=>{null!=V.setupFunc&&V.setupFunc(this.backendInstance)})}disposeRegisteredKernels(x){(0,c.Op)(x).forEach(W=>{null!=W.disposeFunc&&W.disposeFunc(this.registry[x])})}initializeBackend(x){const V=this.registryFactory[x];if(null==V)throw new Error(`Cannot initialize backend ${x}, no registration found.`);try{const W=V.factory();if(!W||W instanceof s.uI||"function"!=typeof W.then)return this.registry[x]=W,{success:!0,asyncInit:!1};{const Y=++this.pendingBackendInitId,Z=W.then(it=>!(Y<this.pendingBackendInitId||(this.registry[x]=it,this.pendingBackendInit=null,0))).catch(it=>(Y<this.pendingBackendInitId||(this.pendingBackendInit=null,y.i(`Initialization of backend ${x} failed`),y.i(it.stack||it.message)),!1));return this.pendingBackendInit=Z,{success:Z,asyncInit:!0}}}catch(W){return y.i(`Initialization of backend ${x} failed`),y.i(W.stack||W.message),{success:!1,asyncInit:!1}}}removeBackend(x){if(!(x in this.registryFactory))throw new Error(`${x} backend not found in registry`);this.backendName===x&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,x in this.registry&&(this.disposeRegisteredKernels(x),this.registry[x].dispose(),delete this.registry[x]),delete this.registryFactory[x],this.backendName===x&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((x,V)=>this.registryFactory[V].priority-this.registryFactory[x].priority)}initializeBackendsAndReturnBest(){const x=this.getSortedBackends();for(let V=0;V<x.length;V++){const W=x[V],{success:Y,asyncInit:Z}=this.initializeBackend(W);if(Z||Y)return{name:W,asyncInit:Z}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(x,V){const W=this.state.tensorInfo.get(V),Y=W.backend,Z=this.readSync(V),it=Y.refCount(V);Y.disposeData(V,!0),W.backend=x,x.move(V,Z,W.shape,W.dtype,it),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(x,V){let Y,W=null;if(null==V){if("function"!=typeof x)throw new Error("Please provide a function to tidy()");V=x}else{if("string"!=typeof x&&!(x instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof V)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");W=x}return this.scopedRun(()=>this.startScope(W),()=>this.endScope(Y),()=>(Y=V(),Y instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Y))}scopedRun(x,V,W){x();try{const Y=W();return V(),Y}catch(Y){throw V(),Y}}nextTensorId(){return A.nextTensorId++}nextVariableId(){return A.nextVariableId++}clone(x){const V=F.runKernel(g.lzr,{x});return this.addTapeNode(this.state.activeScope.name,{x},[V],it=>({x:()=>F.runKernel(g.KXH,{x:it},{dtype:"float32"})}),[],{}),V}runKernel(x,V,W){if(null==(0,c._5)(x,this.backendName))throw new Error(`Kernel '${x}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:x,inputs:V,attrs:W})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(x,V,W){const Y=this.backend.numDataIds();let Z=0;W.forEach(q=>{Z+="complex64"===q.dtype?3:1});const at=Y-V-Z-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(at>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${at} data ids) after running '${x}'`)}runKernelFunc(x){let V,W=[];const Y=this.isTapeOn(),Z=this.state.numBytes,it=this.state.numTensors;let at,q;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const ot=S(x)?x.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(S(x)){const{kernelName:St,inputs:se,attrs:Ht}=x,ue=(0,c._5)(St,this.backendName);h.vA(null!=ue,()=>`Cannot find registered kernel '${St}' for backend '${this.backendName}'`),at=()=>{const Xt=this.backend.numDataIds();q=ue.kernelFunc({inputs:se,attrs:Ht,backend:this.backend});const ie=Array.isArray(q)?q:[q];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(St,Xt,ie);const ae=ie.map(ne=>null!=ne.rank?ne:this.makeTensorFromTensorInfo(ne));if(Y){const ne=this.getTensorsForGradient(St,se,ae);W=this.saveTensorsForBackwardMode(ne)}return ae}}else{const{forwardFunc:St}=x,se=Ht=>{Y&&(W=Ht.map(ue=>this.keep(this.clone(ue))))};at=()=>{const Ht=this.backend.numDataIds();q=this.tidy(()=>St(this.backend,se));const ue=Array.isArray(q)?q:[q];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(ot,Ht,ue),ue}}const{inputs:rt,attrs:et}=x,yt=S(x)?null:x.backwardsFunc;let mt;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(mt=this.profiler.profileKernel(ot,rt,()=>at()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(mt),V=mt.outputs):V=at()}),Y&&this.addTapeNode(ot,rt,V,yt,W,et),this.state.profiling&&this.state.activeProfile.kernels.push({name:ot,bytesAdded:this.state.numBytes-Z,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-it,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(rt).map(St=>null!=rt[St]?rt[St].shape:null),outputShapes:V.map(St=>St.shape),kernelTimeMs:mt.timeMs,extraInfo:mt.extraInfo}),Array.isArray(q)?V:V[0]}saveTensorsForBackwardMode(x){return x.map(W=>this.keep(this.clone(W)))}getTensorsForGradient(x,V,W){const Y=(0,c.vQ)(x);if(null!=Y){const Z=Y.inputsToSave||[],it=Y.outputsToSave||[];let at;Y.saveAllInputs?(h.vA(Array.isArray(V),()=>"saveAllInputs is true, expected inputs to be an array."),at=Object.keys(V).map(ot=>V[ot])):at=Z.map(ot=>V[ot]);const q=W.filter((ot,rt)=>it[rt]);return at.concat(q)}return[]}makeTensor(x,V,W,Y){if(null==x)throw new Error("Values passed to engine.makeTensor() are null");Y=Y||this.backend;let Z=x;"string"===(W=W||"float32")&&h.Kg(x[0])&&(Z=x.map(q=>m.encodeString(q)));const it=Y.write(Z,V,W),at=new T.qY(V,W,it,this.nextTensorId());if(this.trackTensor(at,Y),"string"===W){const q=this.state.tensorInfo.get(it),ot=(0,h.SL)(Z);this.state.numBytes+=ot-q.bytes,q.bytes=ot}return at}makeTensorFromDataId(x,V,W,Y){return this.makeTensorFromTensorInfo({dataId:x,shape:V,dtype:W=W||"float32"},Y)}makeTensorFromTensorInfo(x,V){const{dataId:W,shape:Y,dtype:Z}=x,it=new T.qY(Y,Z,W,this.nextTensorId());return this.trackTensor(it,V),it}makeVariable(x,V=!0,W,Y){W=W||this.nextVariableId().toString(),null!=Y&&Y!==x.dtype&&(x=x.cast(Y));const Z=new T.rT(x,V,W,this.nextTensorId());if(null!=this.state.registeredVariables[Z.name])throw new Error(`Variable with name ${Z.name} was already registered`);return this.state.registeredVariables[Z.name]=Z,this.incRef(Z,this.backend),Z}trackTensor(x,V){this.state.numTensors++,"string"===x.dtype&&this.state.numStringTensors++;let W=0;"complex64"!==x.dtype&&"string"!==x.dtype&&(W=x.size*h.jv(x.dtype)),this.state.numBytes+=W,this.state.tensorInfo.has(x.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(x.dataId,{backend:V||this.backend,dtype:x.dtype,shape:x.shape,bytes:W})),x instanceof T.rT||this.track(x)}incRef(x,V){this.trackTensor(x,V),this.backend.incRef(x.dataId)}removeDataId(x,V){this.state.tensorInfo.has(x)&&this.state.tensorInfo.get(x).backend===V&&(this.state.tensorInfo.delete(x),this.state.numDataBuffers--)}disposeTensor(x){if(!this.state.tensorInfo.has(x.dataId))return;const V=this.state.tensorInfo.get(x.dataId);if(this.state.numTensors--,"string"===x.dtype&&(this.state.numStringTensors--,this.state.numBytes-=V.bytes),"complex64"!==x.dtype&&"string"!==x.dtype){const W=x.size*h.jv(x.dtype);this.state.numBytes-=W}V.backend.disposeData(x.dataId)&&this.removeDataId(x.dataId,V.backend)}disposeVariables(){for(const x in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[x])}disposeVariable(x){this.disposeTensor(x),null!=this.state.registeredVariables[x.name]&&delete this.state.registeredVariables[x.name]}memory(){const x=this.backend.memory();return x.numTensors=this.state.numTensors,x.numDataBuffers=this.state.numDataBuffers,x.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(x.unreliable=!0,null==x.reasons&&(x.reasons=[]),x.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),x}profile(x){var V=this;return(0,e.A)(function*(){V.state.profiling=!0;const W=V.state.numBytes,Y=V.state.numTensors;V.state.activeProfile.kernels=[],V.state.activeProfile.result=yield x(),V.state.profiling=!1,V.state.activeProfile.peakBytes=Math.max(...V.state.activeProfile.kernels.map(Z=>Z.totalBytesSnapshot)),V.state.activeProfile.newBytes=V.state.numBytes-W,V.state.activeProfile.newTensors=V.state.numTensors-Y;for(const Z of V.state.activeProfile.kernels)Z.kernelTimeMs=yield Z.kernelTimeMs,Z.extraInfo=yield Z.extraInfo;return V.state.activeProfile})()}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(x,V,W,Y,Z,it){const at={id:this.state.nextTapeNodeId++,kernelName:x,inputs:V,outputs:W,saved:Z},q=(0,c.vQ)(x);null!=q&&(Y=q.gradFunc),null!=Y&&(at.gradient=ot=>(ot=ot.map((rt,et)=>{if(null==rt){const yt=W[et],mt=h.Ty(yt.size,yt.dtype);return this.makeTensor(mt,yt.shape,yt.dtype)}return rt}),Y(ot.length>1?ot:ot[0],Z,it))),this.state.activeTape.push(at)}keep(x){return x.kept=!0,x}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(x){const V={track:[],name:"unnamed scope",id:this.state.nextScopeId++};x&&(V.name=x),this.state.scopeStack.push(V),this.state.activeScope=V}endScope(x){const V=(0,D.getTensorsInContainer)(x),W=new Set(V.map(Z=>Z.id));for(let Z=0;Z<this.state.activeScope.track.length;Z++){const it=this.state.activeScope.track[Z];!it.kept&&!W.has(it.id)&&it.dispose()}const Y=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],V.forEach(Z=>{!Z.kept&&Z.scopeId===Y.id&&this.track(Z)})}gradients(x,V,W,Y=!1){if(h.vA(V.length>0,()=>"gradients() received an empty list of xs."),null!=W&&"float32"!==W.dtype)throw new Error(`dy must have 'float32' dtype, but has '${W.dtype}'`);const Z=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",x));h.vA(Z instanceof T.qY,()=>"The result y returned by f() must be a tensor.");const it=function d(A,k,x){const V={},W={};for(let at=0;at<k.length;at++)V[k[at].id]=!0;for(let at=0;at<A.length;at++){const q=A[at],ot=q.inputs;for(const rt in ot){const et=ot[rt];let yt=!1;for(let mt=0;mt<k.length;mt++)if(V[et.id]){q.outputs.forEach(St=>V[St.id]=!0),yt=!0,W[q.id]=!0;break}if(yt)break}}const Y={};Y[x.id]=!0;const Z={};for(let at=A.length-1;at>=0;at--){const q=A[at],ot=q.inputs;for(let rt=0;rt<q.outputs.length;rt++)if(Y[q.outputs[rt].id]){for(const et in ot)Y[ot[et].id]=!0,Z[q.id]=!0;break}}const it=[];for(let at=0;at<A.length;at++){const q=A[at];if(W[q.id]&&Z[q.id]){const ot={};for(const et in q.inputs){const yt=q.inputs[et];V[yt.id]&&(ot[et]=yt)}const rt=Object.assign({},q);rt.inputs=ot,rt.outputs=q.outputs,it.push(rt)}}return it}(this.state.activeTape,V,Z);if(!Y&&0===it.length&&V.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const at={};at[Z.id]=null==W?function H(A){const k=(0,h.FZ)((0,h.Ze)(A),"float32");return F.makeTensor(k,A,"float32")}(Z.shape):W,function C(A,k,x,V){for(let W=k.length-1;W>=0;W--){const Y=k[W],Z=[];if(Y.outputs.forEach(at=>{const q=A[at.id];Z.push(null!=q?q:null)}),null==Y.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${Y.kernelName}.`);const it=Y.gradient(Z);for(const at in Y.inputs){if(!(at in it))throw new Error(`Cannot backprop through input ${at}. Available gradients found: ${Object.keys(it)}.`);const q=x(()=>it[at]());if("float32"!==q.dtype)throw new Error(`Error in gradient for op ${Y.kernelName}. The gradient of input ${at} must have 'float32' dtype, but has '${q.dtype}'`);const ot=Y.inputs[at];if(!h.r1(q.shape,ot.shape))throw new Error(`Error in gradient for op ${Y.kernelName}. The gradient of input '${at}' has shape '${q.shape}', which does not match the shape of the input '${ot.shape}'`);if(null==A[ot.id])A[ot.id]=q;else{const rt=A[ot.id];A[ot.id]=V(rt,q),rt.dispose()}}}}(at,it,ot=>this.tidy(ot),B);const q=V.map(ot=>at[ot.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(ot=>{for(const rt of ot.saved)rt.dispose()}),this.state.activeTape=null),{value:Z,grads:q}})}customGrad(x){return h.vA(h.Tn(x),()=>"The f passed in customGrad(f) must be a function."),(...V)=>{let W;h.vA(V.every(at=>at instanceof T.qY),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const Y={};return V.forEach((at,q)=>{Y[q]=at}),this.runKernelFunc({forwardFunc:(at,q)=>(W=x(...V,q),h.vA(W.value instanceof T.qY,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),h.vA(h.Tn(W.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),W.value),backwardsFunc:(at,q)=>{const ot=W.gradFunc(at,q),rt=Array.isArray(ot)?ot:[ot];h.vA(rt.length===V.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),h.vA(rt.every(yt=>yt instanceof T.qY),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const et={};return rt.forEach((yt,mt)=>{et[mt]=()=>yt}),et},inputs:Y})}}readSync(x){return this.state.tensorInfo.get(x).backend.readSync(x)}read(x){return this.state.tensorInfo.get(x).backend.read(x)}readToGPU(x,V){return this.state.tensorInfo.get(x).backend.readToGPU(x,V)}time(x){var V=this;return(0,e.A)(function*(){const W=(0,m.now)(),Y=yield V.backend.time(x);return Y.wallMs=(0,m.now)()-W,Y})()}track(x){return null!=this.state.activeScope&&(x.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(x)),x}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const x in this.registry)this.disposeRegisteredKernels(x),this.registry[x].dispose(),delete this.registry[x];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return A.nextTensorId=0,A.nextVariableId=0,A})();function j(){const A=(0,E.L)();if(null==A._tfengine){const k=new l.OH(A);A._tfengine=new w(k)}return(0,l.tj)(A._tfengine.ENV),(0,T.qP)(()=>A._tfengine),A._tfengine}const F=j();function B(A,k){return F.runKernel(g.OMN,{a:A,b:k})}},25271:(pt,R,t)=>{"use strict";t.d(R,{OH:()=>E,_K:()=>m,tj:()=>f});var e=t(10467),s=t(26674);const l="tfjsflags";class E{constructor(u){this.global=u,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=g,this.populateURLFlags()}setPlatform(u,d){null!=this.platform&&(m().getBool("IS_TEST")||m().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${u}.`)),this.platformName=u,this.platform=d}registerFlag(u,d,C){if(this.flagRegistry[u]={evaluationFn:d,setHook:C},null!=this.urlFlags[u]){const T=this.urlFlags[u];m().getBool("IS_TEST")||m().getBool("PROD")||console.warn(`Setting feature override from URL ${u}: ${T}.`),this.set(u,T)}}getAsync(u){var d=this;return(0,e.A)(function*(){return u in d.flags||(d.flags[u]=yield d.evaluateFlag(u)),d.flags[u]})()}get(u){if(u in this.flags)return this.flags[u];const d=this.evaluateFlag(u);if((0,s.yL)(d))throw new Error(`Flag ${u} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[u]=d,this.flags[u]}getNumber(u){return this.get(u)}getBool(u){return this.get(u)}getString(u){return this.get(u)}getFlags(){return this.flags}get features(){return this.flags}set(u,d){if(null==this.flagRegistry[u])throw new Error(`Cannot set flag ${u} as it has not been registered.`);this.flags[u]=d,null!=this.flagRegistry[u].setHook&&this.flagRegistry[u].setHook(d)}evaluateFlag(u){if(null==this.flagRegistry[u])throw new Error(`Cannot evaluate flag '${u}': no evaluation function found.`);return this.flagRegistry[u].evaluationFn()}setFlags(u){this.flags=Object.assign({},u)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const u=this.getQueryParams(this.global.location.search);l in u&&u[l].split(",").forEach(C=>{const[T,D]=C.split(":");this.urlFlags[T]=function y(p,u){const d=u.toLowerCase();return"true"===d||"false"===d?"true"===d:""+ +d===d?+d:u}(0,D)})}}function g(p){const u={};return p.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(d,...C)=>(function c(p,u,d){p[decodeURIComponent(u)]=decodeURIComponent(d||"")}(u,C[0],C[1]),C.join("="))),u}function m(){return h}let h=null;function f(p){h=p}},70177:(pt,R,t)=>{"use strict";t(611);var s=t(6757);const E=(0,t(25271)._K)();E.registerFlag("DEBUG",()=>!1,g=>{g&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),E.registerFlag("IS_BROWSER",()=>s.isBrowser()),E.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),E.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),E.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),E.registerFlag("PROD",()=>!1),E.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>E.getBool("DEBUG")),E.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),E.registerFlag("IS_TEST",()=>!1),E.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>E.getBool("DEBUG")),E.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),E.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),E.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)},73366:(pt,R,t)=>{"use strict";let e;function s(){if(null==e){let g;if(typeof window<"u")g=window;else if(typeof global<"u")g=global;else if(typeof process<"u")g=process;else{if(!(typeof self<"u"))throw new Error("Could not find a global object");g=self}e=g}return e}function E(g,c){const y=function l(){const g=s();return null==g._tfGlobals&&(g._tfGlobals=new Map),g._tfGlobals}();if(y.has(g))return y.get(g);{const m=c();return y.set(g,m),y.get(g)}}t.d(R,{L:()=>s,m:()=>E})},22047:(pt,R,t)=>{"use strict";t.d(R,{_X:()=>h,y7:()=>m});var e=t(611),s=t(73444),l=t(26674);function m(p,u){l.vA(l.Tn(p),()=>"The f passed in variableGrads(f) must be a function"),l.vA(null==u||Array.isArray(u)&&u.every(H=>H instanceof s.rT),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const d=null!=u;if(!d){u=[];for(const H in e.T2.registeredVariables)u.push(e.T2.registeredVariables[H])}const C=d?u.filter(H=>!H.trainable):null,T=u.length;u=u.filter(H=>H.trainable),l.vA(u.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${T} variables is trainable.`);const{value:S,grads:b}=e.T2.gradients(p,u,null,!0);l.vA(b.some(H=>null!=H),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),l.vA(0===S.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${S.rank} tensor`);const w={};return u.forEach((H,j)=>{null!=b[j]&&(w[H.name]=b[j])}),null!=C&&C.forEach(H=>w[H.name]=null),{value:S,grads:w}}function h(p){return e.T2.customGrad(p)}},59611:(pt,R,t)=>{"use strict";t.d(R,{D:()=>s});var e=t(21710);class s{static join(g){return new s(g).slice()}constructor(g){if(this.shards=[],this.previousShardIndex=0,null==g||(g instanceof Array||(g=[g]),0===(g=g.map(y=>e.isTypedArray(y)?y.buffer:y)).length))return;this.bufferUniformSize=g[0].byteLength;let c=0;for(let y=0;y<g.length;y++){const m=g[y];y!==g.length-1&&m.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const h=c+m.byteLength;this.shards.push({buffer:m,start:c,end:h}),c=h}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(g=0,c=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(g=isNaN(Number(g))?0:g,c=isNaN(Number(c))?0:c,g=Math.max(0,g),(c=Math.min(this.byteLength,c))<=g)return new ArrayBuffer(0);const y=this.findShardForByte(g);if(-1===y)throw new Error(`Could not find start shard for byte ${g}`);const h=new ArrayBuffer(c-g),f=new Uint8Array(h);let p=0;for(let u=y;u<this.shards.length;u++){const d=this.shards[u],T=g+p-d.start,D=p,b=Math.min(c,d.end)-d.start,w=new Uint8Array(d.buffer,T,b-T);if(f.set(w,D),p+=w.length,c<d.end)break}return h}findShardForByte(g){if(0===this.shards.length||g<0||g>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(g/this.bufferUniformSize),this.previousShardIndex;function c(m){return g<m.start?-1:g>=m.end?1:0}if(0===c(this.shards[this.previousShardIndex]))return this.previousShardIndex;const y=function l(E,g){let c=0,y=E.length;for(;c<=y;){const m=Math.floor((y-c)/2)+c,h=g(E[m]);if(0===h)return m;h<0?y=m:c=m+1}return-1}(this.shards,c);return-1===y?-1:(this.previousShardIndex=y,this.previousShardIndex)}}},93819:(pt,R,t)=>{"use strict";t.d(R,{lQ:()=>w,mn:()=>T});var e=t(10467),l=(t(70177),t(25271)),E=t(43517),g=t(80190),c=t(59611);const y="tensorflowjs",h="models_store",f="model_info_store";function d(){if(!(0,l._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const H=typeof window>"u"?self:window,j=H.indexedDB||H.mozIndexedDB||H.webkitIndexedDB||H.msIndexedDB||H.shimIndexedDB;if(null==j)throw new Error("The current browser does not appear to support IndexedDB.");return j}function C(H){const j=H.result;j.createObjectStore(h,{keyPath:"modelPath"}),j.createObjectStore(f,{keyPath:"modelPath"})}let T=(()=>{class H{constructor(F){if(this.indexedDB=d(),null==F||!F)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=F}save(F){var B=this;return(0,e.A)(function*(){if(F.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return B.databaseAction(B.modelPath,F)})()}load(){var F=this;return(0,e.A)(function*(){return F.databaseAction(F.modelPath)})()}databaseAction(F,B){return new Promise((A,k)=>{const x=this.indexedDB.open(y,1);x.onupgradeneeded=()=>C(x),x.onsuccess=()=>{const V=x.result;if(null==B){const W=V.transaction(h,"readonly"),Z=W.objectStore(h).get(this.modelPath);Z.onsuccess=()=>{if(null==Z.result)return V.close(),k(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));A(Z.result.modelArtifacts)},Z.onerror=it=>(V.close(),k(Z.error)),W.oncomplete=()=>V.close()}else{B.weightData=c.D.join(B.weightData);const W=(0,E.oR)(B),Y=V.transaction(f,"readwrite");let it,at,Z=Y.objectStore(f);try{it=Z.put({modelPath:this.modelPath,modelArtifactsInfo:W})}catch(q){return k(q)}it.onsuccess=()=>{at=V.transaction(h,"readwrite");const q=at.objectStore(h);let ot;try{ot=q.put({modelPath:this.modelPath,modelArtifacts:B,modelArtifactsInfo:W})}catch(rt){return k(rt)}ot.onsuccess=()=>A({modelArtifactsInfo:W}),ot.onerror=rt=>{Z=Y.objectStore(f);const et=Z.delete(this.modelPath);et.onsuccess=()=>(V.close(),k(ot.error)),et.onerror=yt=>(V.close(),k(ot.error))}},it.onerror=q=>(V.close(),k(it.error)),Y.oncomplete=()=>{null==at?V.close():at.oncomplete=()=>V.close()}}},x.onerror=V=>k(x.error)})}}return H.URL_SCHEME="indexeddb://",H})();const D=H=>(0,l._K)().getBool("IS_BROWSER")&&!Array.isArray(H)&&H.startsWith(T.URL_SCHEME)?function S(H){return new T(H)}(H.slice(T.URL_SCHEME.length)):null;g.bM.registerSaveRouter(D),g.bM.registerLoadRouter(D);class w{constructor(){this.indexedDB=d()}listModels(){var j=this;return(0,e.A)(function*(){return new Promise((F,B)=>{const A=j.indexedDB.open(y,1);A.onupgradeneeded=()=>C(A),A.onsuccess=()=>{const k=A.result,x=k.transaction(f,"readonly"),W=x.objectStore(f).getAll();W.onsuccess=()=>{const Y={};for(const Z of W.result)Y[Z.modelPath]=Z.modelArtifactsInfo;F(Y)},W.onerror=Y=>(k.close(),B(W.error)),x.oncomplete=()=>k.close()},A.onerror=k=>B(A.error)})})()}removeModel(j){var F=this;return(0,e.A)(function*(){return j=function b(H){return H.startsWith(T.URL_SCHEME)?H.slice(T.URL_SCHEME.length):H}(j),new Promise((B,A)=>{const k=F.indexedDB.open(y,1);k.onupgradeneeded=()=>C(k),k.onsuccess=()=>{const x=k.result,V=x.transaction(f,"readwrite"),W=V.objectStore(f),Y=W.get(j);let Z;Y.onsuccess=()=>{if(null==Y.result)return x.close(),A(new Error(`Cannot find model with path '${j}' in IndexedDB.`));{const it=W.delete(j),at=()=>{Z=x.transaction(h,"readwrite");const ot=Z.objectStore(h).delete(j);ot.onsuccess=()=>B(Y.result.modelArtifactsInfo),ot.onerror=rt=>A(Y.error)};it.onsuccess=at,it.onerror=q=>(at(),x.close(),A(Y.error))}},Y.onerror=it=>(x.close(),A(Y.error)),V.oncomplete=()=>{null==Z?x.close():Z.oncomplete=()=>x.close()}},k.onerror=x=>A(k.error)})})()}}},3821:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{CompositeArrayBuffer:()=>m.D,browserFiles:()=>S,browserHTTPRequest:()=>ot,concatenateArrayBuffers:()=>c.AQ,copyModel:()=>ue.xk,decodeWeights:()=>c.CY,decodeWeightsStream:()=>c.s5,encodeWeights:()=>c.aG,fromMemory:()=>mt,fromMemorySync:()=>St,getLoadHandlers:()=>y.C9,getModelArtifactsForJSON:()=>c.Ej,getModelArtifactsForJSONSync:()=>c.Rl,getModelArtifactsInfoForJSON:()=>c.oR,getSaveHandlers:()=>y.x3,getWeightSpecs:()=>c.Xf,http:()=>q,isHTTPScheme:()=>it,listModels:()=>ue.D,loadWeights:()=>A,moveModel:()=>ue.Vo,registerLoadRouter:()=>y.R4,registerSaveRouter:()=>y.Yd,removeModel:()=>ue.az,weightsLoaderFactory:()=>x,withSaveHandler:()=>se,withSaveHandlerSync:()=>Ht}),t(93819),t(60366);var l=t(10467),g=(t(70177),t(25271)),c=t(43517),y=t(80190),m=t(59611);function u(Xt){return new Promise(ie=>setTimeout(ie)).then(Xt)}let d=(()=>{class Xt{constructor(ae){if(!(0,g._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");ae.startsWith(Xt.URL_SCHEME)&&(ae=ae.slice(Xt.URL_SCHEME.length)),(null==ae||0===ae.length)&&(ae="model"),this.modelJsonFileName=ae+".json",this.weightDataFileName=ae+".weights.bin"}save(ae){var ne=this;return(0,l.A)(function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const Pe=m.D.join(ae.weightData),Ie=window.URL.createObjectURL(new Blob([Pe],{type:"application/octet-stream"}));if(ae.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const zt=(0,c.zV)(ae,[{paths:["./"+ne.weightDataFileName],weights:ae.weightSpecs}]),Jt=window.URL.createObjectURL(new Blob([JSON.stringify(zt)],{type:"application/json"})),pe=null==ne.modelJsonAnchor?document.createElement("a"):ne.modelJsonAnchor;if(pe.download=ne.modelJsonFileName,pe.href=Jt,yield u(()=>pe.dispatchEvent(new MouseEvent("click"))),null!=ae.weightData){const ze=null==ne.weightDataAnchor?document.createElement("a"):ne.weightDataAnchor;ze.download=ne.weightDataFileName,ze.href=Ie,yield u(()=>ze.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,c.oR)(ae)}}})()}}return Xt.URL_SCHEME="downloads://",Xt})();class C{constructor(ie){if(null==ie||ie.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${ie}`);this.jsonFile=ie[0],this.weightsFiles=ie.slice(1)}load(){var ie=this;return(0,l.A)(function*(){return new Promise((ae,ne)=>{const Pe=new FileReader;Pe.onload=Ie=>{const Ct=JSON.parse(Ie.target.result),zt=Ct.modelTopology;if(null==zt)return void ne(new Error(`modelTopology field is missing from file ${ie.jsonFile.name}`));if(null==Ct.weightsManifest)return void ne(new Error(`weightManifest field is missing from file ${ie.jsonFile.name}`));if(0===ie.weightsFiles.length)return void ae({modelTopology:zt});const pe=(0,c.Ej)(Ct,ze=>ie.loadWeights(ze));ae(pe)},Pe.onerror=Ie=>ne(`Failed to read model topology and weights manifest JSON from file '${ie.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),Pe.readAsText(ie.jsonFile)})})()}loadWeights(ie){const ae=[],ne=[];for(const Ct of ie)ae.push(...Ct.weights),ne.push(...Ct.paths);const Pe=this.checkManifestAndWeightFiles(ie),Ie=ne.map(Ct=>this.loadWeightsFile(Ct,Pe[Ct]));return Promise.all(Ie).then(Ct=>[ae,Ct])}loadWeightsFile(ie,ae){return new Promise((ne,Pe)=>{const Ie=new FileReader;Ie.onload=Ct=>{ne(Ct.target.result)},Ie.onerror=Ct=>Pe(`Failed to weights data from file of path '${ie}'.`),Ie.readAsArrayBuffer(ae)})}checkManifestAndWeightFiles(ie){const ae=[],ne=this.weightsFiles.map(Ie=>(0,c.P8)(Ie.name)),Pe={};for(const Ie of ie)Ie.paths.forEach(Ct=>{const zt=(0,c.P8)(Ct);if(-1!==ae.indexOf(zt))throw new Error(`Duplicate file basename found in weights manifest: '${zt}'`);if(ae.push(zt),-1===ne.indexOf(zt))throw new Error(`Weight file with basename '${zt}' is not provided.`);Pe[Ct]=this.weightsFiles[ne.indexOf(zt)]});if(ae.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${ae.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return Pe}}function S(Xt){return new C(Xt)}y.bM.registerSaveRouter(Xt=>(0,g._K)().getBool("IS_BROWSER")&&!Array.isArray(Xt)&&Xt.startsWith(d.URL_SCHEME)?function D(Xt="model"){return new d(Xt)}(Xt.slice(d.URL_SCHEME.length)):null);var b=t(26674);function w(Xt,ie,ae,ne){(function Ct(Jt){(0,b.vA)(null!=Jt&&Array.isArray(Jt)&&Jt.length>0,()=>"promises must be a none empty array")})(Xt),function zt(Jt,pe){(0,b.vA)(Jt>=0&&Jt<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${Jt}`),(0,b.vA)(pe>=0&&pe<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${pe}`),(0,b.vA)(pe>=Jt,()=>`startFraction must be no more than endFraction, but got startFraction ${Jt} and endFraction ${pe}`)}(ae=null==ae?0:ae,ne=null==ne?1:ne);let Pe=0;return Promise.all(Xt.map(Jt=>(Jt.then(pe=>{const ze=ae+ ++Pe/Xt.length*(ne-ae);return ie(ze),pe}),Jt)))}var H=t(57362);function j(Xt,ie){return F.apply(this,arguments)}function F(){return(F=(0,l.A)(function*(Xt,ie){null==ie&&(ie={});const ae=null==ie.fetchFunc?(0,g._K)().platform.fetch:ie.fetchFunc,ne=Xt.map(an=>ae(an,ie.requestInit,{isBinary:!0})),zt=(null==ie.onProgress?yield Promise.all(ne):yield w(ne,ie.onProgress,0,.5)).map(an=>an.arrayBuffer());return null==ie.onProgress?yield Promise.all(zt):yield w(zt,ie.onProgress,.5,1)})).apply(this,arguments)}function A(Xt){return k.apply(this,arguments)}function k(){return(k=(0,l.A)(function*(Xt,ie="",ae,ne){return x(Ct=>j(Ct,{requestInit:ne}))(Xt,ie,ae)})).apply(this,arguments)}function x(Xt){return function(){var ie=(0,l.A)(function*(ae,ne="",Pe){const Ie=ae.map(()=>!1),Ct={},zt=null!=Pe?Pe.map(()=>!1):[],Jt=[];if(ae.forEach((hn,$n)=>{let wn=0;hn.weights.forEach(Gn=>{const ls=H.i["quantization"in Gn?Gn.quantization.dtype:Gn.dtype]*b.Ze(Gn.shape),ts=()=>{Ie[$n]=!0,null==Ct[$n]&&(Ct[$n]=[]),Ct[$n].push({manifestEntry:Gn,groupOffset:wn,sizeBytes:ls})};null!=Pe?Pe.forEach((Es,ws)=>{Es===Gn.name&&(ts(),zt[ws]=!0)}):ts(),Jt.push(Gn.name),wn+=ls})}),!zt.every(hn=>hn)){const hn=Pe.filter(($n,wn)=>!zt[wn]);throw new Error(`Could not find weights in manifest with names: ${hn.join(", ")}. \nManifest JSON has weights with names: ${Jt.join(", ")}.`)}const pe=Ie.reduce((hn,$n,wn)=>($n&&hn.push(wn),hn),[]),ze=[];pe.forEach(hn=>{ae[hn].paths.forEach($n=>{const wn=ne+(ne.endsWith("/")?"":"/")+$n;ze.push(wn)})});const an=yield Xt(ze),vn={};let mn=0;return pe.forEach(hn=>{const $n=ae[hn].paths.length,wn=new m.D(an.slice(mn,mn+$n));Ct[hn].forEach(jn=>{const ls=wn.slice(jn.groupOffset,jn.groupOffset+jn.sizeBytes),ts=(0,c.CY)(ls,[jn.manifestEntry]);for(const Es in ts)vn[Es]=ts[Es]}),mn+=$n}),vn});return function(ae){return ie.apply(this,arguments)}}()}let Y=(()=>{class Xt{constructor(ae,ne){if(this.DEFAULT_METHOD="POST",null==ne&&(ne={}),this.weightPathPrefix=ne.weightPathPrefix,this.weightUrlConverter=ne.weightUrlConverter,null!=ne.fetchFunc?((0,b.vA)("function"==typeof ne.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=ne.fetchFunc):this.fetch=(0,g._K)().platform.fetch,(0,b.vA)(null!=ae&&ae.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(ae)&&(0,b.vA)(2===ae.length,()=>`URL paths for http must have a length of 2, (actual length is ${ae.length}).`),this.path=ae,null!=ne.requestInit&&null!=ne.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=ne.requestInit||{},this.loadOptions=ne}save(ae){var ne=this;return(0,l.A)(function*(){if(ae.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const Pe=Object.assign({method:ne.DEFAULT_METHOD},ne.requestInit);Pe.body=new FormData;const Ct=(0,c.zV)(ae,[{paths:["./model.weights.bin"],weights:ae.weightSpecs}]);if(Pe.body.append("model.json",new Blob([JSON.stringify(Ct)],{type:"application/json"}),"model.json"),null!=ae.weightData){const Jt=m.D.join(ae.weightData);Pe.body.append("model.weights.bin",new Blob([Jt],{type:"application/octet-stream"}),"model.weights.bin")}const zt=yield ne.fetch(ne.path,Pe);if(zt.ok)return{modelArtifactsInfo:(0,c.oR)(ae),responses:[zt]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${zt.status}.`)})()}loadModelJSON(){var ae=this;return(0,l.A)(function*(){const ne=yield ae.fetch(ae.path,ae.requestInit);if(!ne.ok)throw new Error(`Request to ${ae.path} failed with status code ${ne.status}. Please verify this URL points to the model JSON of the model to load.`);let Pe;try{Pe=yield ne.json()}catch{let Jt=`Failed to parse model JSON of response from ${ae.path}.`;throw ae.path.endsWith(".pb")?Jt+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":Jt+=" Please make sure the server is serving valid JSON for this request.",new Error(Jt)}if(null==Pe.modelTopology&&null==Pe.weightsManifest)throw new Error(`The JSON from HTTP path ${ae.path} contains neither model topology or manifest for weights.`);return Pe})()}load(){var ae=this;return(0,l.A)(function*(){if(ae.loadOptions.streamWeights)return ae.loadStream();const ne=yield ae.loadModelJSON();return(0,c.Ej)(ne,Pe=>ae.loadWeights(Pe))})()}loadStream(){var ae=this;return(0,l.A)(function*(){const ne=yield ae.loadModelJSON(),Pe=yield ae.getWeightUrls(ne.weightsManifest),Ie=(0,c.Xf)(ne.weightsManifest);return Object.assign(Object.assign({},ne),{weightSpecs:Ie,getWeightStream:()=>function B(Xt,ie){var ae;const ne=null==ie.fetchFunc?(0,g._K)().platform.fetch:ie.fetchFunc;let Ie,Pe=0;return null===(ae=ie.onProgress)||void 0===ae||ae.call(ie,0),new ReadableStream({pull:(Ct=(0,l.A)(function*(zt){for(var Jt;Pe<Xt.length;){Ie||(Ie=(yield ne(Xt[Pe],ie.requestInit,{isBinary:!0})).body.getReader());const{done:pe,value:ze}=yield Ie.read();if(!pe)return void zt.enqueue(ze);Pe++,Ie=void 0,null===(Jt=ie.onProgress)||void 0===Jt||Jt.call(ie,Pe/Xt.length)}zt.close()}),function(Jt){return Ct.apply(this,arguments)})});var Ct}(Pe,ae.loadOptions)})})()}getWeightUrls(ae){var ne=this;return(0,l.A)(function*(){const Pe=Array.isArray(ne.path)?ne.path[1]:ne.path,[Ie,Ct]=function Z(Xt){const ie=Xt.lastIndexOf("/"),ae=Xt.lastIndexOf("?");return[Xt.substring(0,ie)+"/",ae>ie?Xt.substring(ae):""]}(Pe),zt=ne.weightPathPrefix||Ie,Jt=[],pe=[];for(const ze of ae)for(const an of ze.paths)null!=ne.weightUrlConverter?pe.push(ne.weightUrlConverter(an)):Jt.push(zt+an+Ct);return ne.weightUrlConverter&&Jt.push(...yield Promise.all(pe)),Jt})()}loadWeights(ae){var ne=this;return(0,l.A)(function*(){const Pe=yield ne.getWeightUrls(ae);return[(0,c.Xf)(ae),yield j(Pe,ne.loadOptions)]})()}}return Xt.URL_SCHEME_REGEX=/^https?:\/\//,Xt})();function it(Xt){return null!=Xt.match(Y.URL_SCHEME_REGEX)}const at=(Xt,ie)=>{if(typeof fetch>"u"&&(null==ie||null==ie.fetchFunc))return null;{let ae=!0;if(ae=Array.isArray(Xt)?Xt.every(ne=>it(ne)):it(Xt),ae)return q(Xt,ie)}return null};function q(Xt,ie){return new Y(Xt,ie)}function ot(Xt,ie){return q(Xt,ie)}y.bM.registerSaveRouter(at),y.bM.registerLoadRouter(at);class rt{constructor(ie){this.modelArtifacts=ie}load(){return this.modelArtifacts}}class et{constructor(ie){this.saveHandler=ie}save(ie){return this.saveHandler(ie)}}class yt{constructor(ie){ie.load&&(this.load=()=>Promise.resolve(ie.load())),ie.save&&(this.save=ae=>Promise.resolve(ie.save(ae)))}}function mt(Xt,ie,ae,ne){return new yt(St(...arguments))}function St(Xt,ie,ae,ne){return 1===arguments.length?null!=Xt.modelTopology||null!=Xt.weightSpecs?new rt(Xt):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:Xt})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:Xt,weightSpecs:ie,weightData:ae,trainingConfig:ne}))}function se(Xt){return new et(Xt)}function Ht(Xt){return new et(Xt)}var ue=t(22782)},43517:(pt,R,t)=>{"use strict";t.d(R,{AQ:()=>x,CY:()=>u,Ej:()=>Z,P8:()=>V,Rl:()=>Y,Xf:()=>q,aG:()=>f,jf:()=>k,l3:()=>A,oR:()=>at,s5:()=>w,zV:()=>W});var e=t(10467),s=t(55349),l=t(74544),E=t(26674),g=t(57362),c=t(59611),y=t(47054),m=t(25271);const h=4;function f(mt,St){return p.apply(this,arguments)}function p(){return p=(0,e.A)(function*(mt,St){const se=[],Ht=[],ue=Array.isArray(mt)?mt.map(ie=>ie.name):Object.keys(mt);for(let ie=0;ie<ue.length;++ie){const ae=ue[ie],ne=Array.isArray(mt)?mt[ie].tensor:mt[ae];if("float32"!==ne.dtype&&"int32"!==ne.dtype&&"bool"!==ne.dtype&&"string"!==ne.dtype&&"complex64"!==ne.dtype)throw new Error(`Unsupported dtype in weight '${ae}': ${ne.dtype}`);const Pe={name:ae,shape:ne.shape,dtype:ne.dtype};if("string"===ne.dtype){const Ie=new Promise(function(){var Ct=(0,e.A)(function*(zt){const Jt=yield ne.bytes(),pe=Jt.reduce((vn,mn)=>vn+mn.length,0)+h*Jt.length,ze=new Uint8Array(pe);let an=0;for(let vn=0;vn<Jt.length;vn++){const mn=Jt[vn],hn=new Uint8Array(new Uint32Array([mn.length]).buffer);ze.set(hn,an),an+=h,ze.set(mn,an),an+=mn.length}zt(ze)});return function(zt){return Ct.apply(this,arguments)}}());Ht.push(Ie)}else Ht.push(ne.data());null!=St&&(Pe.group=St),se.push(Pe)}return{data:j(yield Promise.all(Ht)),specs:se}}),p.apply(this,arguments)}function u(mt,St){const se=new c.D(mt),Ht={};let ue=0;for(const Xt of St){const ie=d(Xt,(ae,ne)=>se.slice(ue+ae,ue+ne));Ht[Xt.name]=D(Xt,se.slice(ue,ue+ie)),ue+=ie}return Ht}function d(mt,St){const se=(0,E.Ze)(mt.shape);let Ht;if("quantization"in mt)Ht=g.i[mt.quantization.dtype];else{if("string"===mt.dtype){let ue=0;for(let Xt=0;Xt<se;Xt++)ue+=h+new Uint32Array(St(ue,ue+h))[0];return ue}Ht=g.i[mt.dtype]}return se*Ht}function C(mt,St){return T.apply(this,arguments)}function T(){return(T=(0,e.A)(function*(mt,St){const se=(0,E.Ze)(mt.shape);let Ht;if("quantization"in mt)Ht=g.i[mt.quantization.dtype];else{if("string"===mt.dtype){let ue=0;for(let Xt=0;Xt<se;Xt++)ue+=h+new Uint32Array(yield St(ue,ue+h))[0];return ue}Ht=g.i[mt.dtype]}return se*Ht})).apply(this,arguments)}function D(mt,St){const se=mt.name,Ht=mt.dtype,ue=mt.shape,Xt=(0,E.Ze)(ue);let ie,ae=0;if("quantization"in mt){const ne=mt.quantization;if("uint8"===ne.dtype||"uint16"===ne.dtype){if(!("min"in ne)||!("scale"in ne))throw new Error(`Weight ${mt.name} with quantization ${ne.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==ne.dtype)throw new Error(`Weight ${mt.name} has unknown quantization dtype ${ne.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==Ht)throw new Error(`Weight ${mt.name} is quantized with ${ne.dtype} which only supports weights of type float32 not ${Ht}.`)}const Pe=g.i[ne.dtype],Ie="uint8"===ne.dtype?new Uint8Array(St):new Uint16Array(St);if("float32"===Ht)if("uint8"===ne.dtype||"uint16"===ne.dtype){ie=new Float32Array(Ie.length);for(let Ct=0;Ct<Ie.length;Ct++)ie[Ct]=Ie[Ct]*ne.scale+ne.min}else{if("float16"!==ne.dtype)throw new Error(`Unsupported quantization type ${ne.dtype} for weight type float32.`);ie=function yt(){const mt=function ot(){const mt=se=>{let Ht=se<<13,ue=0;for(;!(8388608&Ht);)ue-=8388608,Ht<<=1;return Ht&=-8388609,ue+=947912704,Ht|ue},St=new Uint32Array(2048);St[0]=0;for(let se=1;se<1024;se++)St[se]=mt(se);for(let se=1024;se<2048;se++)St[se]=939524096+(se-1024<<13);return St}(),St=function rt(){const mt=new Uint32Array(64);mt[0]=0,mt[31]=1199570944,mt[32]=2147483648,mt[63]=3347054592;for(let St=1;St<31;St++)mt[St]=St<<23;for(let St=33;St<63;St++)mt[St]=2147483648+(St-32<<23);return mt}(),se=function et(){const mt=new Uint32Array(64);for(let St=0;St<64;St++)mt[St]=1024;return mt[0]=mt[32]=0,mt}();return Ht=>{const ue=new ArrayBuffer(4*Ht.length),Xt=new Uint32Array(ue);for(let ie=0;ie<Ht.length;ie++){const ae=Ht[ie];Xt[ie]=mt[se[ae>>10]+(1023&ae)]+St[ae>>10]}return new Float32Array(ue)}}()(Ie)}else{if("int32"!==Ht)throw new Error(`Unsupported dtype in weight '${se}': ${Ht}`);if("uint8"!==ne.dtype&&"uint16"!==ne.dtype)throw new Error(`Unsupported quantization type ${ne.dtype} for weight type int32.`);ie=new Int32Array(Ie.length);for(let Ct=0;Ct<Ie.length;Ct++)ie[Ct]=Math.round(Ie[Ct]*ne.scale+ne.min)}ae+=Xt*Pe}else if("string"===Ht){const ne=(0,E.Ze)(mt.shape);ie=[];for(let Pe=0;Pe<ne;Pe++){const Ie=new Uint32Array(St.slice(ae,ae+h))[0];ae+=h;const Ct=new Uint8Array(St.slice(ae,ae+Ie));ie.push(Ct),ae+=Ie}}else{const ne=g.i[Ht];if("float32"===Ht)ie=new Float32Array(St);else if("int32"===Ht)ie=new Int32Array(St);else{if("bool"!==Ht){if("complex64"===Ht){ie=new Float32Array(St);const Pe=new Float32Array(ie.length/2),Ie=new Float32Array(ie.length/2);for(let pe=0;pe<Pe.length;pe++)Pe[pe]=ie[2*pe],Ie[pe]=ie[2*pe+1];const Ct=(0,l.O)(Pe,ue,"float32"),zt=(0,l.O)(Ie,ue,"float32"),Jt=(0,s.f)(Ct,zt);return Ct.dispose(),zt.dispose(),Jt}throw new Error(`Unsupported dtype in weight '${se}': ${Ht}`)}ie=new Uint8Array(St)}ae+=Xt*ne}return(0,l.O)(ie,ue,Ht)}function S(mt,St,se){return b.apply(this,arguments)}function b(){return(b=(0,e.A)(function*(mt,St,se){let Ht=new Uint8Array(St);for(;Ht.byteLength<se;){const{done:ue,value:Xt}=yield mt.read();if(ue&&null==Xt)throw new Error(`Reader is done but ${se-Ht.byteLength} bytes are still expected`);const ie=new Uint8Array(Ht.length+Xt.byteLength);ie.set(Ht,0),ie.set(new Uint8Array(Xt),Ht.length),Ht=ie}return Ht.buffer})).apply(this,arguments)}function w(mt,St){return H.apply(this,arguments)}function H(){return H=(0,e.A)(function*(mt,St){const se={},Ht=mt.getReader();let ue=new ArrayBuffer(0);for(const Xt of St){const ie=yield C(Xt,function(){var Pe=(0,e.A)(function*(Ie,Ct){return ue=yield S(Ht,ue,Ct),ue.slice(Ie,Ct)});return function(Ie,Ct){return Pe.apply(this,arguments)}}());ue=yield S(Ht,ue,ie);const ae=ue.slice(0,ie);ue=ue.slice(ie);const ne=D(Xt,ae);if(se[Xt.name]=ne,"webgpu"===(0,y.jz)()){const Pe=(0,y.Hs)();"uploadToGPU"in Pe&&(0,E.Ze)(ne.shape)>=(0,m._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&Pe.uploadToGPU(ne.dataId)}}return se}),H.apply(this,arguments)}function j(mt){if(null===mt)throw new Error(`Invalid input value: ${JSON.stringify(mt)}`);let St=0;const se=[];mt.forEach(Xt=>{if(St+=Xt.byteLength,se.push(Xt.byteLength===Xt.buffer.byteLength?Xt:new Xt.constructor(Xt)),!(Xt instanceof Float32Array||Xt instanceof Int32Array||Xt instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${Xt.constructor.name}`)});const Ht=new Uint8Array(St);let ue=0;return se.forEach(Xt=>{Ht.set(new Uint8Array(Xt.buffer),ue),ue+=Xt.byteLength}),Ht.buffer}const F=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function B(mt){return F?Buffer.byteLength(mt,"utf8"):new Blob([mt]).size}function A(mt){if(F)return Buffer.from(mt).toString("base64");const St=new Uint8Array(mt);let se="";for(let Ht=0,ue=St.length;Ht<ue;Ht++)se+=String.fromCharCode(St[Ht]);return btoa(se)}function k(mt){if(F){const Ht=Buffer.from(mt,"base64");return Ht.buffer.slice(Ht.byteOffset,Ht.byteOffset+Ht.byteLength)}const St=atob(mt),se=new Uint8Array(St.length);for(let Ht=0;Ht<St.length;++Ht)se.set([St.charCodeAt(Ht)],Ht);return se.buffer}function x(mt){return c.D.join(mt)}function V(mt){for(mt=mt.trim();mt.endsWith("/");)mt=mt.slice(0,mt.length-1);const se=mt.split("/");return se[se.length-1]}function W(mt,St){const se={modelTopology:mt.modelTopology,format:mt.format,generatedBy:mt.generatedBy,convertedBy:mt.convertedBy,weightsManifest:St};return null!=mt.signature&&(se.signature=mt.signature),null!=mt.userDefinedMetadata&&(se.userDefinedMetadata=mt.userDefinedMetadata),null!=mt.modelInitializer&&(se.modelInitializer=mt.modelInitializer),null!=mt.initializerSignature&&(se.initializerSignature=mt.initializerSignature),null!=mt.trainingConfig&&(se.trainingConfig=mt.trainingConfig),se}function Y(mt,St,se){const Ht={modelTopology:mt.modelTopology,format:mt.format,generatedBy:mt.generatedBy,convertedBy:mt.convertedBy};if(null!=mt.trainingConfig&&(Ht.trainingConfig=mt.trainingConfig),null!=mt.weightsManifest){if(!St)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!se)throw new Error("modelJSON has weightsManifest but weightData is null");Ht.weightSpecs=St,Ht.weightData=se}return null!=mt.signature&&(Ht.signature=mt.signature),null!=mt.userDefinedMetadata&&(Ht.userDefinedMetadata=mt.userDefinedMetadata),null!=mt.modelInitializer&&(Ht.modelInitializer=mt.modelInitializer),null!=mt.initializerSignature&&(Ht.initializerSignature=mt.initializerSignature),Ht}function Z(mt,St){return it.apply(this,arguments)}function it(){return(it=(0,e.A)(function*(mt,St){let se,Ht;return null!=mt.weightsManifest&&([se,Ht]=yield St(mt.weightsManifest)),Y(mt,se,Ht)})).apply(this,arguments)}function at(mt){if(mt.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==mt.modelTopology?0:B(JSON.stringify(mt.modelTopology)),weightSpecsBytes:null==mt.weightSpecs?0:B(JSON.stringify(mt.weightSpecs)),weightDataBytes:null==mt.weightData?0:new c.D(mt.weightData).byteLength}}function q(mt){const St=[];for(const se of mt)St.push(...se.weights);return St}},60366:(pt,R,t)=>{"use strict";t.d(R,{Cd:()=>B,ZT:()=>H});var e=t(10467),l=(t(70177),t(25271)),E=t(26674),g=t(43517),c=t(59611),y=t(80190);const m="/",h="tensorflowjs_models",f="info",p="model_topology",u="weight_specs",d="weight_data",C="model_metadata";function D(A){return{info:[h,A,f].join(m),topology:[h,A,p].join(m),weightSpecs:[h,A,u].join(m),weightData:[h,A,d].join(m),modelMetadata:[h,A,C].join(m)}}function S(A){for(const k of Object.values(A))window.localStorage.removeItem(k)}function b(A){const k=A.split(m);if(k.length<3)throw new Error(`Invalid key format: ${A}`);return k.slice(1,k.length-1).join(m)}let H=(()=>{class A{constructor(x){if(!(0,l._K)().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==x||!x)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=x,this.keys=D(this.modelPath)}save(x){var V=this;return(0,e.A)(function*(){if(x.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const W=JSON.stringify(x.modelTopology),Y=JSON.stringify(x.weightSpecs),Z=(0,g.oR)(x),it=c.D.join(x.weightData);try{return V.LS.setItem(V.keys.info,JSON.stringify(Z)),V.LS.setItem(V.keys.topology,W),V.LS.setItem(V.keys.weightSpecs,Y),V.LS.setItem(V.keys.weightData,(0,g.l3)(it)),V.LS.setItem(V.keys.modelMetadata,JSON.stringify({format:x.format,generatedBy:x.generatedBy,convertedBy:x.convertedBy,signature:null!=x.signature?x.signature:void 0,userDefinedMetadata:null!=x.userDefinedMetadata?x.userDefinedMetadata:void 0,modelInitializer:null!=x.modelInitializer?x.modelInitializer:void 0,initializerSignature:null!=x.initializerSignature?x.initializerSignature:void 0,trainingConfig:null!=x.trainingConfig?x.trainingConfig:void 0})),{modelArtifactsInfo:Z}}catch{throw S(V.keys),new Error(`Failed to save model '${V.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${Z.modelTopologyBytes}, weightSpecsBytes=${Z.weightSpecsBytes}, weightDataBytes=${Z.weightDataBytes}.`)}}})()}load(){var x=this;return(0,e.A)(function*(){const V=JSON.parse(x.LS.getItem(x.keys.info));if(null==V)throw new Error(`In local storage, there is no model with name '${x.modelPath}'`);if("JSON"!==V.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const W={},Y=JSON.parse(x.LS.getItem(x.keys.topology));if(null==Y)throw new Error(`In local storage, the topology of model '${x.modelPath}' is missing.`);W.modelTopology=Y;const Z=JSON.parse(x.LS.getItem(x.keys.weightSpecs));if(null==Z)throw new Error(`In local storage, the weight specs of model '${x.modelPath}' are missing.`);W.weightSpecs=Z;const it=x.LS.getItem(x.keys.modelMetadata);if(null!=it){const q=JSON.parse(it);W.format=q.format,W.generatedBy=q.generatedBy,W.convertedBy=q.convertedBy,null!=q.signature&&(W.signature=q.signature),null!=q.userDefinedMetadata&&(W.userDefinedMetadata=q.userDefinedMetadata),null!=q.modelInitializer&&(W.modelInitializer=q.modelInitializer),null!=q.initializerSignature&&(W.initializerSignature=q.initializerSignature),null!=q.trainingConfig&&(W.trainingConfig=q.trainingConfig)}const at=x.LS.getItem(x.keys.weightData);if(null==at)throw new Error(`In local storage, the binary weight values of model '${x.modelPath}' are missing.`);return W.weightData=(0,g.jf)(at),W})()}}return A.URL_SCHEME="localstorage://",A})();const j=A=>(0,l._K)().getBool("IS_BROWSER")&&!Array.isArray(A)&&A.startsWith(H.URL_SCHEME)?function F(A){return new H(A)}(A.slice(H.URL_SCHEME.length)):null;y.bM.registerSaveRouter(j),y.bM.registerLoadRouter(j);class B{constructor(){(0,E.vA)((0,l._K)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,E.vA)(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){var k=this;return(0,e.A)(function*(){const x={},V=h+m,W=m+f;for(let Y=0;Y<k.LS.length;++Y){const Z=k.LS.key(Y);Z.startsWith(V)&&Z.endsWith(W)&&(x[b(Z)]=JSON.parse(k.LS.getItem(Z)))}return x})()}removeModel(k){var x=this;return(0,e.A)(function*(){const V=D(k=function w(A){return A.startsWith(H.URL_SCHEME)?A.slice(H.URL_SCHEME.length):A}(k));if(null==x.LS.getItem(V.info))throw new Error(`Cannot find model at path '${k}'`);const W=JSON.parse(x.LS.getItem(V.info));return S(V),W})()}}},22782:(pt,R,t)=>{"use strict";t.d(R,{D:()=>h,Vo:()=>T,az:()=>p,dy:()=>g,xk:()=>d});var e=t(10467),s=t(26674),l=t(80190);const E="://";class g{constructor(){this.managers={}}static getInstance(){return null==g.instance&&(g.instance=new g),g.instance}static registerManager(b,w){(0,s.vA)(null!=b,()=>"scheme must not be undefined or null."),b.endsWith(E)&&(b=b.slice(0,b.indexOf(E))),(0,s.vA)(b.length>0,()=>"scheme must not be an empty string.");const H=g.getInstance();(0,s.vA)(null==H.managers[b],()=>`A model store manager is already registered for scheme '${b}'.`),H.managers[b]=w}static getManager(b){const w=g.getInstance().managers[b];if(null==w)throw new Error(`Cannot find model manager for scheme '${b}'`);return w}static getSchemes(){return Object.keys(g.getInstance().managers)}}function c(S){if(-1===S.indexOf(E))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${g.getSchemes().join(",")}`);return{scheme:S.split(E)[0],path:S.split(E)[1]}}function y(S,b){return m.apply(this,arguments)}function m(){return(m=(0,e.A)(function*(S,b,w=!1){(0,s.vA)(S!==b,()=>`Old path and new path are the same: '${S}'`);const H=l.bM.getLoadHandlers(S);(0,s.vA)(H.length>0,()=>`Copying failed because no load handler is found for source URL ${S}.`),(0,s.vA)(H.length<2,()=>`Copying failed because more than one (${H.length}) load handlers for source URL ${S}.`);const j=H[0],F=l.bM.getSaveHandlers(b);(0,s.vA)(F.length>0,()=>`Copying failed because no save handler is found for destination URL ${b}.`),(0,s.vA)(F.length<2,()=>`Copying failed because more than one (${H.length}) save handlers for destination URL ${b}.`);const B=F[0],A=c(S).scheme,k=c(S).path,x=A===c(S).scheme,V=yield j.load();w&&x&&(yield g.getManager(A).removeModel(k));const W=yield B.save(V);return w&&!x&&(yield g.getManager(A).removeModel(k)),W.modelArtifactsInfo})).apply(this,arguments)}function h(){return f.apply(this,arguments)}function f(){return(f=(0,e.A)(function*(){const S=g.getSchemes(),b={};for(const w of S){const H=yield g.getManager(w).listModels();for(const j in H)b[w+E+j]=H[j]}return b})).apply(this,arguments)}function p(S){return u.apply(this,arguments)}function u(){return(u=(0,e.A)(function*(S){const b=c(S);return g.getManager(b.scheme).removeModel(b.path)})).apply(this,arguments)}function d(S,b){return C.apply(this,arguments)}function C(){return(C=(0,e.A)(function*(S,b){return y(S,b,!1)})).apply(this,arguments)}function T(S,b){return D.apply(this,arguments)}function D(){return(D=(0,e.A)(function*(S,b){return y(S,b,!0)})).apply(this,arguments)}},80190:(pt,R,t)=>{"use strict";t.d(R,{C9:()=>g,R4:()=>l,Yd:()=>s,bM:()=>e,x3:()=>E});class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(y){e.getInstance().saveRouters.push(y)}static registerLoadRouter(y){e.getInstance().loadRouters.push(y)}static getSaveHandlers(y){return e.getHandlers(y,"save")}static getLoadHandlers(y,m){return e.getHandlers(y,"load",m)}static getHandlers(y,m,h){const f=[];return("load"===m?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(u=>{const d=u(y,h);null!==d&&f.push(d)}),f}}const s=c=>e.registerSaveRouter(c),l=c=>e.registerLoadRouter(c),E=c=>e.getSaveHandlers(c),g=(c,y)=>e.getLoadHandlers(c,y)},57362:(pt,R,t)=>{"use strict";t.d(R,{i:()=>e});const e={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},56203:(pt,R,t)=>{"use strict";t.d(R,{Op:()=>m,_5:()=>c,kr:()=>f,tA:()=>h,vQ:()=>y});var e=t(25271),s=t(73366),l=t(64140);const E=(0,s.m)("kernelRegistry",()=>new Map),g=(0,s.m)("gradRegistry",()=>new Map);function c(T,D){const S=C(T,D);return E.get(S)}function y(T){return g.get(T)}function m(T){const D=E.entries(),S=[];for(;;){const{done:b,value:w}=D.next();if(b)break;const[H,j]=w,[F]=H.split("_");F===T&&S.push(j)}return S}function h(T){const{kernelName:D,backendName:S}=T,b=C(D,S);E.has(b)&&l.i(`The kernel '${D}' for backend '${S}' is already registered`),E.set(b,T)}function f(T){const{kernelName:D}=T;g.has(D)&&(0,e._K)().getBool("DEBUG")&&l.i(`Overriding the gradient for '${D}'`),g.set(D,T)}function C(T,D){return`${D}_${T}`}},64140:(pt,R,t)=>{"use strict";t.d(R,{R:()=>l,i:()=>s});var e=t(25271);function s(...E){(0,e._K)().getBool("IS_TEST")||(0,e._K)().getBool("PROD")||console.warn(...E)}function l(...E){(0,e._K)().getBool("IS_TEST")||(0,e._K)().getBool("PROD")||console.log(...E)}},72009:(pt,R,t)=>{"use strict";t.d(R,{t:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({abs_:function g(y){const m=(0,l.YT)(y,"x","abs");return e.T2.runKernel("complex64"===m.dtype?s.$zE:s.ljI,{x:m})}})},83034:(pt,R,t)=>{"use strict";t.d(R,{W:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({add_:function c(m,h){let f=(0,E.YT)(m,"a","add"),p=(0,E.YT)(h,"b","add");return[f,p]=(0,l.makeTypesMatch)(f,p),e.T2.runKernel(s.OMN,{a:f,b:p})}})},56682:(pt,R,t)=>{"use strict";t.d(R,{Q:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({all_:function g(y,m=null,h=!1){const p={x:(0,l.YT)(y,"x","all","bool")};return e.T2.runKernel(s.u8Z,p,{axis:m,keepDims:h})}})},37547:(pt,R,t)=>{"use strict";t.d(R,{b:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({any_:function g(y,m=null,h=!1){const p={x:(0,l.YT)(y,"x","any","bool")};return e.T2.runKernel(s.FSt,p,{axis:m,keepDims:h})}})},71084:(pt,R,t)=>{"use strict";t.d(R,{F:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({argMax_:function g(y,m=0){const f={x:(0,l.YT)(y,"x","argMax")};return e.T2.runKernel(s.Jp_,f,{axis:m})}})},37434:(pt,R,t)=>{"use strict";t.d(R,{$:()=>f});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(92290),c=t(29458),y=t(87844),m=t(94399);const f=(0,y.op)({avgPool_:function h(p,u,d,C,T){const D=(0,l.YT)(p,"x","avgPool","float32");E.vA(c.G0(d,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${d} and dilations '1'`);let b=D,w=!1;3===D.rank&&(w=!0,b=(0,m.t)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),E.vA(4===b.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${b.rank}.`),c.s_("avgPool",C,T);let F=e.T2.runKernel(s.ho8,{x:b},{filterSize:u,strides:d,pad:C,dimRoundingMode:T});return F=(0,g.w)(F,D.dtype),w?(0,m.t)(F,[F.shape[1],F.shape[2],F.shape[3]]):F}})},36806:(pt,R,t)=>{"use strict";t.d(R,{s:()=>f});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(92290),c=t(29458),y=t(87844),m=t(94399);const f=(0,y.op)({avgPool3d_:function h(p,u,d,C,T,D="NDHWC"){const S=(0,l.YT)(p,"x","avgPool3d","float32");let b=S,w=!1;4===S.rank&&(w=!0,b=(0,m.t)(S,[1,S.shape[0],S.shape[1],S.shape[2],S.shape[3]])),E.vA(5===b.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${b.rank}.`),E.vA("NDHWC"===D,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${D}`),E.vA("number"==typeof d&&d>0||Array.isArray(d)&&d[0]>0&&d[1]>0&&d[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${d}'`),(0,c.s_)("avgPool3d",C,T);let F=e.T2.runKernel(s.cS,{x:b},{filterSize:u,strides:d,pad:C,dimRoundingMode:T,dataFormat:D});return F=(0,g.w)(F,b.dtype),w?(0,m.t)(F,[F.shape[1],F.shape[2],F.shape[3],F.shape[4]]):F}})},94963:(pt,R,t)=>{"use strict";t.d(R,{Em:()=>y,SM:()=>g,WC:()=>c,WH:()=>s,aF:()=>l,fK:()=>h,gx:()=>m,lb:()=>E});var e=t(26674);function s(f,p){for(let u=0;u<f.length;++u)if(f[f.length-u-1]!==p-1-u)return!1;return!0}function l(f,p,u){const d=f.length+p.length,C=[];let T=0,D=0;for(let S=0;S<d;S++)-1===u.indexOf(S)?C.push(f[T++]):C.push(p[D++]);return C}function E(f,p){const u=[],d=f.length;for(let T=0;T<d;T++)-1===p.indexOf(T)&&u.push(f[T]);return[u,p.map(T=>f[T])]}function g(f,p){return l(f,p.map(d=>1),p)}function c(f,p,u){e.vA(s(p,u),()=>`${f} supports only inner-most axes for now. Got axes ${p} and rank-${u} input.`)}function y(f,p){if(s(f,p))return null;const u=[];for(let d=0;d<p;++d)-1===f.indexOf(d)&&u.push(d);return f.forEach(d=>u.push(d)),u}function m(f){return f.map((p,u)=>[u,p]).sort((p,u)=>p[1]-u[1]).map(p=>p[0])}function h(f,p){const u=[];for(let d=p-f;d<p;++d)u.push(d);return u}},69229:(pt,R,t)=>{"use strict";t.d(R,{G:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({batchToSpaceND_:function c(m,h,f){const p=(0,l.YT)(m,"x","batchToSpaceND"),u=h.reduce((T,D)=>T*D);return E.vA(p.rank>=1+h.length,()=>`input rank is ${p.rank} but should be > than blockShape.length ${h.length}`),E.vA(f.length===h.length,()=>`crops.length is ${f.length} but should be equal to blockShape.length  ${h.length}`),E.vA(p.shape[0]%u==0,()=>`input tensor batch is ${p.shape[0]} but is not divisible by the product of the elements of blockShape ${h.join(" * ")} === ${u}`),e.T2.runKernel(s.Ik2,{x:p},{blockShape:h,crops:f})}})},60571:(pt,R,t)=>{"use strict";t.d(R,{$:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(94399);function c(f){let p;return p=0===f.rank||1===f.rank?(0,g.t)(f,[1,1,1,f.size]):2===f.rank?(0,g.t)(f,[1,1,f.shape[0],f.shape[1]]):3===f.rank?(0,g.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]]):f,p}const h=(0,t(87844).op)({batchNorm_:function m(f,p,u,d,C,T){null==T&&(T=.001);const D=(0,l.YT)(f,"x","batchNorm"),S=(0,l.YT)(p,"mean","batchNorm"),b=(0,l.YT)(u,"variance","batchNorm");let w,H;null!=C&&(w=(0,l.YT)(C,"scale","batchNorm")),null!=d&&(H=(0,l.YT)(d,"offset","batchNorm")),E.vA(S.rank===b.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E.vA(null==H||S.rank===H.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E.vA(null==w||S.rank===w.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const F={x:c(D),scale:w,offset:H,mean:S,variance:b},A=e.T2.runKernel(s.i5R,F,{varianceEpsilon:T});return(0,g.t)(A,D.shape)}})},44353:(pt,R,t)=>{"use strict";t.d(R,{B:()=>c});var e=t(17636),s=t(26674),l=t(60571);const c=(0,t(87844).op)({batchNorm2d_:function g(y,m,h,f,p,u){const d=(0,e.YT)(y,"x","batchNorm"),C=(0,e.YT)(m,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(2===d.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${d.rank}.`),s.vA(2===C.rank||1===C.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${C.rank}.`),s.vA(2===T.rank||1===T.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(2===D.rank||1===D.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(2===S.rank||1===S.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${S.rank}.`),(0,l.$)(d,C,T,S,D,u)}})},46884:(pt,R,t)=>{"use strict";t.d(R,{k:()=>c});var e=t(17636),s=t(26674),l=t(60571);const c=(0,t(87844).op)({batchNorm3d_:function g(y,m,h,f,p,u){const d=(0,e.YT)(y,"x","batchNorm"),C=(0,e.YT)(m,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(3===d.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${d.rank}.`),s.vA(3===C.rank||1===C.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${C.rank}.`),s.vA(3===T.rank||1===T.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(3===D.rank||1===D.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(3===S.rank||1===S.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${S.rank}.`),(0,l.$)(d,C,T,S,D,u)}})},77807:(pt,R,t)=>{"use strict";t.d(R,{T:()=>c});var e=t(17636),s=t(26674),l=t(60571);const c=(0,t(87844).op)({batchNorm4d_:function g(y,m,h,f,p,u){const d=(0,e.YT)(y,"x","batchNorm"),C=(0,e.YT)(m,"mean","batchNorm"),T=(0,e.YT)(h,"variance","batchNorm");let D,S;return null!=p&&(D=(0,e.YT)(p,"scale","batchNorm")),null!=f&&(S=(0,e.YT)(f,"offset","batchNorm")),s.vA(4===d.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${d.rank}.`),s.vA(4===C.rank||1===C.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${C.rank}.`),s.vA(4===T.rank||1===T.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${T.rank}.`),null!=D&&s.vA(4===D.rank||1===D.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${D.rank}.`),null!=S&&s.vA(4===S.rank||1===S.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${S.rank}.`),(0,l.$)(d,C,T,S,D,u)}})},3752:(pt,R,t)=>{"use strict";t.d(R,{h:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(61548),c=t(87844),y=t(94399);const h=(0,c.op)({broadcastTo_:function m(f,p){let u=(0,l.YT)(f,"broadcastTo","x");const d=u.shape;if((0,E.SA)(p),p.length<u.rank)throw new Error(`broadcastTo(): shape.length=${p.length} < input.rank=${u.rank}.`);if(p.length>u.rank){const w=u.shape.slice();for(;w.length<p.length;)w.unshift(1);u=(0,y.t)(u,w)}const C=u.shape,T=Array.from(p);for(let w=p.length-1;w>=0;w--)if(C[w]===p[w])T[w]=1;else if(1!==u.shape[w])throw new Error(`broadcastTo(): [${d}] cannot be broadcast to [${p}].`);return 0===T.map((w,H)=>w>1?H:-1).filter(w=>w>=0).length?(0,g.o)(u):e.T2.runKernel(s.FAs,{x:u},{reps:T})}})},9269:(pt,R,t)=>{"use strict";function e(E,g){const c=E.length,y=[];for(let m=0;m<c;m++){const h=c-1-m;(g[g.length-1-m]||1)>1&&1===(E[h]||1)&&y.unshift(h)}return y}function s(E,g){const c=[];for(let y=0;y<g.length;y++){const m=E[E.length-y-1],h=g.length-y-1;(null==m||1===m&&g[h]>1)&&c.unshift(h)}return c}function l(E,g){const c=Math.max(E.length,g.length),y=new Array(c);for(let m=0;m<c;m++){let h=E[E.length-m-1];null==h&&(h=1);let f=g[g.length-m-1];if(null==f&&(f=1),1===h)y[c-m-1]=f;else if(1===f)y[c-m-1]=h;else{if(h!==f)throw Error(`Operands could not be broadcast together with shapes ${E} and ${g}.`);y[c-m-1]=h}}return y}t.r(R),t.d(R,{assertAndGetBroadcastShape:()=>l,getBroadcastDims:()=>e,getReductionAxes:()=>s})},25905:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{draw:()=>A,fromPixels:()=>k,fromPixelsAsync:()=>b,toPixels:()=>F});var e=t(10467),s=t(611),l=t(25271),E=t(30162),g=t(56203),c=t(73444),y=t(17636),m=t(92290),h=t(87844),f=t(86691);let p,u=!1;function d(x,V=3){if(V>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==x)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let W=!1,Y=!1,Z=!1,it=!1,at=!1,q=!1;if(x.data instanceof Uint8Array)W=!0;else if(typeof ImageData<"u"&&x instanceof ImageData)Y=!0;else if(typeof HTMLVideoElement<"u"&&x instanceof HTMLVideoElement)Z=!0;else if(typeof HTMLImageElement<"u"&&x instanceof HTMLImageElement)it=!0;else if(null!=x.getContext)at=!0;else{if(!(typeof ImageBitmap<"u"&&x instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${x.constructor.name}`);q=!0}if(null!=(0,g._5)(E.awo,s.T2.backendName))return s.T2.runKernel(E.awo,{pixels:x},{numChannels:V});const[rt,et]=Z?[x.videoWidth,x.videoHeight]:[x.width,x.height];let yt,mt;if(at)yt=x.getContext("2d").getImageData(0,0,rt,et).data;else if(Y||W)yt=x.data;else if(it||Z||q){if(null==p)if(typeof document>"u"){if(!(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u"))throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");p=new OffscreenCanvas(1,1).getContext("2d")}else p=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});p.canvas.width=rt,p.canvas.height=et,p.drawImage(x,0,0,rt,et),yt=p.getImageData(0,0,rt,et).data}if(4===V)mt=new Int32Array(yt);else{const se=rt*et;mt=new Int32Array(se*V);for(let Ht=0;Ht<se;Ht++)for(let ue=0;ue<V;++ue)mt[Ht*V+ue]=yt[4*Ht+ue]}return(0,f.$)(mt,[et,rt,V],"int32")}function b(x){return w.apply(this,arguments)}function w(){return(w=(0,e.A)(function*(x,V=3){let W=null;if((0,l._K)().getBool("WRAP_TO_IMAGEBITMAP")&&function S(x){return function T(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}()&&!(x instanceof ImageBitmap)&&function D(x){return null!=x&&0!==x.width&&0!==x.height}(x)&&!function C(x){return null!=x&&x.data instanceof Uint8Array}(x)}(x)){let Y;try{Y=yield createImageBitmap(x,{premultiplyAlpha:"none"})}catch{Y=null}W=null!=Y&&Y.width===x.width&&Y.height===x.height?Y:x}else W=x;return d(W,V)})).apply(this,arguments)}function H(x){if(2!==x.rank&&3!==x.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${x.rank}.`);const V=2===x.rank?1:x.shape[2];if(V>4||2===V)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${V}`);if("float32"!==x.dtype&&"int32"!==x.dtype)throw new Error(`Unsupported type for toPixels: ${x.dtype}. Please use float32 or int32 tensors.`)}function F(x,V){return B.apply(this,arguments)}function B(){return(B=(0,e.A)(function*(x,V){let W=(0,y.YT)(x,"img","toPixels");if(!(x instanceof c.qY)){const rt=W;W=(0,m.w)(rt,"int32"),rt.dispose()}H(W);const[Y,Z]=W.shape.slice(0,2),it=2===W.rank?1:W.shape[2],at=yield W.data(),q="float32"===W.dtype?255:1,ot=new Uint8ClampedArray(Z*Y*4);for(let rt=0;rt<Y*Z;++rt){const et=[0,0,0,255];for(let mt=0;mt<it;mt++){const St=at[rt*it+mt];if("float32"===W.dtype){if(St<0||St>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${St}.`)}else if("int32"===W.dtype&&(St<0||St>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${St}.`);1===it?(et[0]=St*q,et[1]=St*q,et[2]=St*q):et[mt]=St*q}const yt=4*rt;ot[yt+0]=Math.round(et[0]),ot[yt+1]=Math.round(et[1]),ot[yt+2]=Math.round(et[2]),ot[yt+3]=Math.round(et[3])}if(null!=V){u||null!=(0,g._5)(E.XmO,s.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),u=!0),V.width=Z,V.height=Y;const rt=V.getContext("2d"),et=new ImageData(ot,Z,Y);rt.putImageData(et,0,0)}return W!==x&&W.dispose(),ot})).apply(this,arguments)}function A(x,V,W){let Y=(0,y.YT)(x,"img","draw");if(!(x instanceof c.qY)){const at=Y;Y=(0,m.w)(at,"int32"),at.dispose()}H(Y),function j(x){const V=(null==x?void 0:x.alpha)||1;if(V>1||V<0)throw new Error(`Alpha value ${V} is suppoed to be in range [0 - 1].`)}(null==W?void 0:W.imageOptions),s.T2.runKernel(E.XmO,{image:Y},{canvas:V,options:W})}const k=(0,h.op)({fromPixels_:d})},75987:(pt,R,t)=>{"use strict";t.d(R,{r:()=>l});var e=t(73444),s=t(26674);function l(E,g="float32",c){return g=g||"float32",s.SA(E),new e.yl(E,g,c)}},92290:(pt,R,t)=>{"use strict";t.d(R,{w:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({cast_:function c(m,h){const f=(0,l.YT)(m,"x","cast");if(!E.xn(h))throw new Error(`Failed to cast to unknown dtype ${h}`);if("string"===h&&"string"!==f.dtype||"string"!==h&&"string"===f.dtype)throw new Error("Only strings can be casted to strings");return e.T2.runKernel(s.KXH,{x:f},{dtype:h})}})},70581:(pt,R,t)=>{"use strict";t.d(R,{z:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(7684);const m=(0,t(87844).op)({clipByValue_:function y(h,f,p){const u=(0,l.YT)(h,"x","clipByValue");return E.vA(f<=p,()=>`Error in clip: min (${f}) must be less than or equal to max (${p}).`),f===p?(0,g.G)(u.shape,f,u.dtype):e.T2.runKernel(s.vaV,{x:u},{clipValueMin:f,clipValueMax:p})}})},61548:(pt,R,t)=>{"use strict";t.d(R,{o:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({clone_:function g(y){const h={x:(0,l.YT)(y,"x","clone","string_or_numeric")};return e.T2.runKernel(s.lzr,h)}})},55349:(pt,R,t)=>{"use strict";t.d(R,{f:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({complex_:function c(m,h){const f=(0,l.YT)(m,"real","complex"),p=(0,l.YT)(h,"imag","complex");return E.O3(f.shape,p.shape,`real and imag shapes, ${f.shape} and ${p.shape}, must match in call to tf.complex().`),e.T2.runKernel(s.pr3,{real:f,imag:p})}})},35213:(pt,R,t)=>{"use strict";t.d(R,{x:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(61548);const m=(0,t(87844).op)({concat_:function y(h,f=0){(0,E.vA)(h.length>=1,()=>"Pass at least one tensor to concat");const p=(0,l.j1)(h,"tensors","concat","string_or_numeric");return"complex64"===p[0].dtype&&p.forEach(C=>{if("complex64"!==C.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${C.dtype}. `)}),1===p.length?(0,g.o)(p[0]):e.T2.runKernel(s.$dB,p,{axis:f})}})},35317:(pt,R,t)=>{"use strict";t.d(R,{I:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat1d_:function l(g){return(0,e.x)(g,0)}})},74810:(pt,R,t)=>{"use strict";t.d(R,{R:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat2d_:function l(g,c){return(0,e.x)(g,c)}})},36183:(pt,R,t)=>{"use strict";t.d(R,{O:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat3d_:function l(g,c){return(0,e.x)(g,c)}})},18380:(pt,R,t)=>{"use strict";t.d(R,{P:()=>E});var e=t(35213);const E=(0,t(87844).op)({concat4d_:function l(g,c){return(0,e.x)(g,c)}})},53054:(pt,R,t)=>{"use strict";t.d(R,{k:()=>m});var e=t(17636),s=t(26674),l=t(12809),E=t(29458),g=t(87844),c=t(94399);const m=(0,g.op)({conv1d_:function y(h,f,p,u,d="NWC",C=1,T){const D=(0,e.YT)(h,"x","conv1d"),S=(0,e.YT)(f,"filter","conv1d");let b=D,w=!1;2===D.rank&&(w=!0,b=(0,c.t)(D,[1,D.shape[0],D.shape[1]])),s.vA(3===b.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${b.rank}.`),s.vA(3===S.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${S.rank}.`),E.s_("conv1d",u,T),s.vA(b.shape[2]===S.shape[1],()=>`Error in conv1d: depth of input (${b.shape[2]}) must match input depth for filter ${S.shape[1]}.`),s.vA(E.G0(p,C),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${p} and dilation '${C}'`),s.vA(E.qk(C),()=>"Error in conv1D: Dilated rates should be larger than 0."),s.vA(E.qk(p),()=>"Error in conv1D: Stride should be larger than 0."),s.vA("NWC"===d,()=>`Error in conv1d: got dataFormat of ${d} but only NWC is currently supported.`);const H=(0,c.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]]),j=(0,c.t)(b,[b.shape[0],1,b.shape[1],b.shape[2]]),k=(0,l.X)(j,H,[1,p],u,"NHWC",[1,C],T);return(0,c.t)(k,w?[k.shape[2],k.shape[3]]:[k.shape[0],k.shape[2],k.shape[3]])}})},12809:(pt,R,t)=>{"use strict";t.d(R,{X:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(29458),c=t(87844),y=t(94399);const h=(0,c.op)({conv2d_:function m(f,p,u,d,C="NHWC",T=[1,1],D){const S=(0,l.YT)(f,"x","conv2d","float32"),b=(0,l.YT)(p,"filter","conv2d","float32");let w=S,H=!1;3===S.rank&&(H=!0,w=(0,y.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),E.vA(4===w.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${w.rank}.`),E.vA(4===b.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${b.rank}.`),g.s_("conv2d",d,D);const j="NHWC"===C?w.shape[3]:w.shape[1];E.vA(j===b.shape[2],()=>`Error in conv2d: depth of input (${j}) must match input depth for filter ${b.shape[2]}.`),E.vA(g.G0(u,T),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E.vA(g.qk(T),()=>"Error in conv2D: Dilated rates should be larger than 0."),E.vA(g.qk(u),()=>"Error in conv2D: Strides should be larger than 0.");const A=e.T2.runKernel(s.p2J,{x:w,filter:b},{strides:u,pad:d,dataFormat:C,dilations:T,dimRoundingMode:D});return H?(0,y.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},70511:(pt,R,t)=>{"use strict";t.d(R,{H:()=>m});var e=t(611),s=t(30162),l=t(26674),E=t(29458),g=t(87844),c=t(94399);const m=(0,g.op)({conv2DBackpropFilter_:function y(h,f,p,u,d,C="NHWC",T){let D=h;3===h.rank&&(D=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]));let S=f;3===S.rank&&(S=(0,c.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),l.vA(4===D.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${D.shape}.`),l.vA(4===S.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${S.shape}.`),l.vA(4===p.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${p}.`);const b="NHWC"===C?D.shape[3]:D.shape[1],w="NHWC"===C?S.shape[3]:S.shape[1];return l.vA(b===p[2],()=>`Error in conv2dDerFilter: depth of input ${b}) must match input depth in filter (${p[2]}.`),l.vA(w===p[3],()=>`Error in conv2dDerFilter: depth of dy (${w}) must match output depth for filter (${p[3]}).`),E.s_("conv2dDerFilter",d,T),e.T2.runKernel(s.rFm,{x:D,dy:S},{strides:u,pad:d,dataFormat:C,dimRoundingMode:T,filterShape:p})}})},73725:(pt,R,t)=>{"use strict";t.d(R,{v:()=>m});var e=t(611),s=t(30162),l=t(26674),E=t(29458),g=t(87844),c=t(94399);const m=(0,g.op)({conv2DBackpropInput_:function y(h,f,p,u,d,C="NHWC",T){l.vA(h.length===f.rank,()=>`Length of inShape (${h.length}) and rank of dy (${f.rank}) must match`);let D=h,S=f,b=!1;3===f.rank&&(b=!0,S=(0,c.t)(f,[1,f.shape[0],f.shape[1],f.shape[2]]),D=[1,h[0],h[1],h[2]]),l.vA(4===D.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${D.length}.`),l.vA(4===S.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${S.rank}`),l.vA(4===p.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${p.rank}`);const w="NHWC"===C?D[3]:D[1],H="NHWC"===C?S.shape[3]:S.shape[1];l.vA(w===p.shape[2],()=>`Error in conv2dDerInput: depth of input (${w}) must match input depth for filter ${p.shape[2]}.`),l.vA(H===p.shape[3],()=>`Error in conv2dDerInput: depth of output (${H}) must match output depth for filter ${p.shape[3]}.`),E.s_("conv2dDerInput",d,T);const B=e.T2.runKernel(s.jfg,{dy:S,filter:p},{strides:u,pad:d,dataFormat:C,dimRoundingMode:T,inputShape:D});return b?(0,c.t)(B,[B.shape[1],B.shape[2],B.shape[3]]):B}})},83521:(pt,R,t)=>{"use strict";t.d(R,{w:()=>g});var e=t(17636),s=t(73725);const g=(0,t(87844).op)({conv2dTranspose_:function E(c,y,m,h,f,p){const u=(0,e.YT)(c,"x","conv2dTranspose"),d=(0,e.YT)(y,"filter","conv2dTranspose");return(0,s.v)(m,u,d,h,f,"NHWC",p)}})},37740:(pt,R,t)=>{"use strict";t.d(R,{I:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(29458),c=t(87844),y=t(94399);const h=(0,c.op)({conv3d_:function m(f,p,u,d,C="NDHWC",T=[1,1,1]){const D=(0,l.YT)(f,"x","conv3d"),S=(0,l.YT)(p,"filter","conv3d");let b=D,w=!1;4===D.rank&&(w=!0,b=(0,y.t)(D,[1,D.shape[0],D.shape[1],D.shape[2],D.shape[3]])),E.vA(5===b.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${b.rank}.`),E.vA(5===S.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${S.rank}.`),E.vA(b.shape[4]===S.shape[3],()=>`Error in conv3d: depth of input (${b.shape[4]}) must match input depth for filter ${S.shape[3]}.`),E.vA((0,g.G0)(u,T),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${u} and dilations '${T}'`),E.vA("NDHWC"===C,()=>`Error in conv3d: got dataFormat of ${C} but only NDHWC is currently supported.`),E.vA((0,g.qk)(T),()=>"Error in conv3D: Dilated rates should be larger than 0."),E.vA((0,g.qk)(u),()=>"Error in conv3D: Strides should be larger than 0.");const F=e.T2.runKernel(s.A1h,{x:b,filter:S},{strides:u,pad:d,dataFormat:C,dilations:T});return w?(0,y.t)(F,[F.shape[1],F.shape[2],F.shape[3],F.shape[4]]):F}})},87482:(pt,R,t)=>{"use strict";t.d(R,{c:()=>y});var e=t(611),s=t(30162),l=t(26674),E=t(87844),g=t(94399);const y=(0,E.op)({conv3DBackpropInput_:function c(m,h,f,p,u){l.vA(m.length===h.rank,()=>`Length of inShape (${m.length}) and rank of dy (${h.rank}) must match`);let d=m,C=h,T=!1;4===h.rank&&(T=!0,C=(0,g.t)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]]),d=[1,m[0],m[1],m[2],m[3]]);const D=d[4],S=C.shape[4];l.vA(5===d.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${d.length}.`),l.vA(5===C.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${C.rank}`),l.vA(5===f.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${f.rank}`),l.vA(D===f.shape[3],()=>`Error in conv3dDerInput: depth of input (${D}) must match input depth for filter ${f.shape[3]}.`),l.vA(S===f.shape[4],()=>`Error in conv3dDerInput: depth of output (${S}) must match output depth for filter ${f.shape[4]}.`);const H=e.T2.runKernel(s.gC7,{dy:C,filter:f},{pad:u,strides:p,inputShape:d});return T?(0,g.t)(H,[H.shape[1],H.shape[2],H.shape[3],H.shape[4]]):H}})},2772:(pt,R,t)=>{"use strict";t.d(R,{j:()=>g});var e=t(17636),s=t(87482);const g=(0,t(87844).op)({conv3dTranspose_:function E(c,y,m,h,f){const p=(0,e.YT)(c,"x","conv3dTranspose"),u=(0,e.YT)(y,"filter","conv3dTranspose");return(0,s.c)(m,p,u,h,f)}})},29458:(pt,R,t)=>{"use strict";t.d(R,{$Q:()=>w,Dh:()=>D,E6:()=>l,G0:()=>S,G8:()=>h,YQ:()=>s,l5:()=>E,p$:()=>c,qk:()=>b,s_:()=>H,uf:()=>g});var e=t(26674);function s(j,F,B,A,k="NHWC",x){return g(j,[...F,j[3]],B,x,A,null,null,w(k))}function l(j,F,B,A,k,x,V="channelsLast"){const[W,Y]=f(F);let Z;if("channelsLast"===V)Z=[W,Y,j[3],j[3]];else{if("channelsFirst"!==V)throw new Error(`Unknown dataFormat ${V}`);Z=[W,Y,j[1],j[1]]}return g(j,Z,B,A,k,x,!1,V)}function E(j,F,B,A,k,x,V="NDHWC"){const[W,Y,Z]=p(F);let it,at;if("NDHWC"===V)at="channelsLast",it=[W,Y,Z,j[4],j[4]];else{if("NCDHW"!==V)throw new Error(`Unknown dataFormat ${V}`);at="channelsFirst",it=[W,Y,Z,j[1],j[1]]}return c(j,it,B,A,k,!1,at,x)}function g(j,F,B,A,k,x,V=!1,W="channelsLast"){let[Y,Z,it,at]=[-1,-1,-1,-1];if("channelsLast"===W)[Y,Z,it,at]=j;else{if("channelsFirst"!==W)throw new Error(`Unknown dataFormat ${W}`);[Y,at,Z,it]=j}const[q,ot,,rt]=F,[et,yt]=f(B),[mt,St]=f(A),se=u(q,mt),Ht=u(ot,St),{padInfo:ue,outHeight:Xt,outWidth:ie}=function d(j,F,B,A,k,x,V,W,Y){let Z,it,at;if("number"==typeof j){Z={top:j,bottom:j,left:j,right:j,type:0===j?"VALID":"NUMBER"};const ot=function y(j,F,B,A,k){null==A&&(A=h(j,F,B));const V=j[1];return[T((j[0]-F+2*A)/B+1,k),T((V-F+2*A)/B+1,k)]}([F,B],x,A,j,W);it=ot[0],at=ot[1]}else if("same"===j){it=Math.ceil(F/A),at=Math.ceil(B/k);const q=Math.max(0,(it-1)*A+x-F),ot=Math.max(0,(at-1)*k+V-B),rt=Math.floor(q/2),et=q-rt,yt=Math.floor(ot/2);Z={top:rt,bottom:et,left:yt,right:ot-yt,type:"SAME"}}else if("valid"===j)Z={top:0,bottom:0,left:0,right:0,type:"VALID"},it=Math.ceil((F-x+1)/A),at=Math.ceil((B-V+1)/k);else{if("object"!=typeof j)throw Error(`Unknown padding parameter: ${j}`);{const q="channelsLast"===Y?j[1][0]:j[2][0],ot="channelsLast"===Y?j[1][1]:j[2][1],rt="channelsLast"===Y?j[2][0]:j[3][0],et="channelsLast"===Y?j[2][1]:j[3][1];Z={top:q,bottom:ot,left:rt,right:et,type:0===q&&0===ot&&0===rt&&0===et?"VALID":"EXPLICIT"},it=T((F-x+q+ot)/A+1,W),at=T((B-V+rt+et)/k+1,W)}}return{padInfo:Z,outHeight:it,outWidth:at}}(k,Z,it,et,yt,se,Ht,x,W),ae=V?rt*at:rt;let ne;return"channelsFirst"===W?ne=[Y,ae,Xt,ie]:"channelsLast"===W&&(ne=[Y,Xt,ie,ae]),{batchSize:Y,dataFormat:W,inHeight:Z,inWidth:it,inChannels:at,outHeight:Xt,outWidth:ie,outChannels:ae,padInfo:ue,strideHeight:et,strideWidth:yt,filterHeight:q,filterWidth:ot,effectiveFilterHeight:se,effectiveFilterWidth:Ht,dilationHeight:mt,dilationWidth:St,inShape:j,outShape:ne,filterShape:F}}function c(j,F,B,A,k,x=!1,V="channelsLast",W){let[Y,Z,it,at,q]=[-1,-1,-1,-1,-1];if("channelsLast"===V)[Y,Z,it,at,q]=j;else{if("channelsFirst"!==V)throw new Error(`Unknown dataFormat ${V}`);[Y,q,Z,it,at]=j}const[ot,rt,et,,yt]=F,[mt,St,se]=p(B),[Ht,ue,Xt]=p(A),ie=u(ot,Ht),ae=u(rt,ue),ne=u(et,Xt),{padInfo:Pe,outDepth:Ie,outHeight:Ct,outWidth:zt}=function C(j,F,B,A,k,x,V,W,Y,Z,it){let at,q,ot,rt;if("valid"===j&&(j=0),"number"==typeof j){at={top:j,bottom:j,left:j,right:j,front:j,back:j,type:0===j?"VALID":"NUMBER"};const yt=function m(j,F,B,A,k,x){null==k&&(k=h(j,F[0],A[0]));const V=[0,0,0,B];for(let W=0;W<3;W++)j[W]+2*k>=F[W]&&(V[W]=T((j[W]-F[W]+2*k)/A[W]+1,x));return V}([F,B,A,1],[W,Y,Z],1,[k,x,V],j,it);q=yt[0],ot=yt[1],rt=yt[2]}else{if("same"!==j)throw Error(`Unknown padding parameter: ${j}`);{q=Math.ceil(F/k),ot=Math.ceil(B/x),rt=Math.ceil(A/V);const et=(q-1)*k+W-F,yt=(ot-1)*x+Y-B,mt=(rt-1)*V+Z-A,St=Math.floor(et/2),se=et-St,Ht=Math.floor(yt/2),ue=yt-Ht,Xt=Math.floor(mt/2);at={top:Ht,bottom:ue,left:Xt,right:mt-Xt,front:St,back:se,type:"SAME"}}}return{padInfo:at,outDepth:q,outHeight:ot,outWidth:rt}}(k,Z,it,at,mt,St,se,ie,ae,ne,W),Jt=x?yt*q:yt;let pe;return"channelsFirst"===V?pe=[Y,Jt,Ie,Ct,zt]:"channelsLast"===V&&(pe=[Y,Ie,Ct,zt,Jt]),{batchSize:Y,dataFormat:V,inDepth:Z,inHeight:it,inWidth:at,inChannels:q,outDepth:Ie,outHeight:Ct,outWidth:zt,outChannels:Jt,padInfo:Pe,strideDepth:mt,strideHeight:St,strideWidth:se,filterDepth:ot,filterHeight:rt,filterWidth:et,effectiveFilterDepth:ie,effectiveFilterHeight:ae,effectiveFilterWidth:ne,dilationDepth:Ht,dilationHeight:ue,dilationWidth:Xt,inShape:j,outShape:pe,filterShape:F}}function h(j,F,B,A=1){const k=u(F,A);return Math.floor((j[0]*(B-1)-B+k)/2)}function f(j){return"number"==typeof j?[j,j,j]:2===j.length?[j[0],j[1],1]:j}function p(j){return"number"==typeof j?[j,j,j]:j}function u(j,F){return F<=1?j:j+(j-1)*(F-1)}function T(j,F){if(!F)return Math.trunc(j);switch(F){case"round":return Math.round(j);case"ceil":return Math.ceil(j);case"floor":return Math.floor(j);default:throw new Error(`Unknown roundingMode ${F}`)}}function D(j){const[F,B,A]=f(j);return 1===F&&1===B&&1===A}function S(j,F){return D(j)||D(F)}function b(j){return f(j).every(F=>F>0)}function w(j){if("NHWC"===j)return"channelsLast";if("NCHW"===j)return"channelsFirst";throw new Error(`Unknown dataFormat ${j}`)}function H(j,F,B){if(null!=B){if("string"==typeof F)throw Error(`Error in ${j}: pad must be an integer when using dimRoundingMode ${B} but got pad ${F}.`);if("number"==typeof F)e.vA(e.E6(F),()=>`Error in ${j}: pad must be an integer when using dimRoundingMode ${B} but got pad ${F}.`);else{if("object"!=typeof F)throw Error(`Error in ${j}: Unknown padding parameter: ${F}`);F.forEach(A=>{A.forEach(k=>{e.vA(e.E6(k),()=>`Error in ${j}: pad must be an integer when using dimRoundingMode ${B} but got pad ${k}.`)})})}}}},54758:(pt,R,t)=>{"use strict";t.d(R,{g:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({cos_:function g(y){const h={x:(0,l.YT)(y,"x","cos","float32")};return e.T2.runKernel(s.Mn0,h)}})},12076:(pt,R,t)=>{"use strict";t.d(R,{y:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({cosh_:function g(y){const h={x:(0,l.YT)(y,"x","cosh","float32")};return e.T2.runKernel(s.MnK,h)}})},63371:(pt,R,t)=>{"use strict";t.d(R,{L:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({cumprod_:function g(y,m=0,h=!1,f=!1){const u={x:(0,l.YT)(y,"x","cumprod")};return e.T2.runKernel(s.jj_,u,{axis:m,exclusive:h,reverse:f})}})},28799:(pt,R,t)=>{"use strict";t.d(R,{r:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({cumsum_:function g(y,m=0,h=!1,f=!1){const u={x:(0,l.YT)(y,"x","cumsum")};return e.T2.runKernel(s.nY8,u,{axis:m,exclusive:h,reverse:f})}})},26193:(pt,R,t)=>{"use strict";t.d(R,{a:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({denseBincount_:function c(m,h,f,p=!1){const u=(0,l.YT)(m,"x","denseBincount"),d=(0,l.YT)(h,"weights","denseBincount");return E.vA("int32"===u.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`),E.vA(u.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`),E.vA(f>=0,()=>`size must be non-negative, but got ${f}.`),E.vA(d.size===u.size||0===d.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${d.shape}.`),e.T2.runKernel(s.wNW,{x:u,weights:d},{size:f,binaryOutput:p})}})},73595:(pt,R,t)=>{"use strict";t.d(R,{G:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(29458),c=t(87844),y=t(94399);const h=(0,c.op)({depthwiseConv2d_:function m(f,p,u,d,C="NHWC",T=[1,1],D){const S=(0,l.YT)(f,"x","depthwiseConv2d","float32"),b=(0,l.YT)(p,"filter","depthwiseConv2d","float32");let w=S,H=!1;3===S.rank&&(H=!0,w=(0,y.t)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),E.vA(4===w.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${w.rank}.`),E.vA(4===b.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`);const j="NHWC"===C?w.shape[3]:w.shape[1];E.vA(j===b.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${j}) must match the inChannels dimension in filter ${b.shape[2]}.`),g.s_("depthwiseConv2d",d,D);const A=e.T2.runKernel(s.tGH,{x:w,filter:b},{strides:u,pad:d,dataFormat:C,dilations:T,dimRoundingMode:D});return H?(0,y.t)(A,[A.shape[1],A.shape[2],A.shape[3]]):A}})},60455:(pt,R,t)=>{"use strict";t.d(R,{x:()=>c});var e=t(611),s=t(30162),l=t(87844),E=t(94399);const c=(0,l.op)({depthwiseConv2dNativeBackpropFilter_:function g(y,m,h,f,p,u=[1,1],d){let C=y;3===y.rank&&(C=(0,E.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]]));let T=m;return 3===T.rank&&(T=(0,E.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),e.T2.runKernel(s.X$8,{x:C,dy:T},{strides:f,pad:p,dimRoundingMode:d,dilations:u,filterShape:h})}})},43749:(pt,R,t)=>{"use strict";t.d(R,{l:()=>c});var e=t(611),s=t(30162),l=t(87844),E=t(94399);const c=(0,l.op)({depthwiseConv2dNativeBackpropInput_:function g(y,m,h,f,p,u=[1,1],d){let C=m,T=!1;3===m.rank&&(T=!0,C=(0,E.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]]));const b=e.T2.runKernel(s.nVu,{dy:C,filter:h},{strides:f,pad:p,dimRoundingMode:d,dilations:u,inputShape:y});return T?(0,E.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},4350:(pt,R,t)=>{"use strict";t.d(R,{y:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(34316);const m=(0,t(87844).op)({div_:function y(h,f){let p=(0,E.YT)(h,"a","div"),u=(0,E.YT)(f,"b","div");return[p,u]=(0,l.makeTypesMatch)(p,u),"int32"===p.dtype&&"int32"===u.dtype?(0,g.w)(p,u):e.T2.runKernel(s.sDr,{a:p,b:u},{})}})},45733:(pt,R,t)=>{"use strict";t.d(R,{E:()=>u});var e=t(73444),s=t(17636),l=t(26674),E=t(83034),g=t(4350),y=t(41467),m=t(59731),h=t(87844),f=t(65413);const u=(0,h.op)({dropout_:function p(d,C,T,D){const S=(0,s.YT)(d,"x","dropout");if(l.vA("float32"===S.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${S.dtype} tensor instead.`),l.vA(C>=0&&C<1,()=>`rate must be a float in the range [0, 1), but got ${C}.`),0===C)return d instanceof e.qY?S.clone():S;const b=function c(d,C){if(null==C)return d.shape.slice();if(l.r1(d.shape,C))return C;if(d.shape.length===C.length){const T=[];for(let D=0;D<d.shape.length;D++)T.push(null==C[D]&&null!=d.shape[D]?d.shape[D]:C[D]);return T}return C}(S,T),w=1-C,H=(0,g.y)((0,y.R)((0,E.W)((0,f.Y)(b,0,1,"float32",D),w)),w);return(0,m.l)(S,H)}})},41325:(pt,R,t)=>{"use strict";t.d(R,{P:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({elu_:function g(y){const h={x:(0,l.YT)(y,"x","elu","float32")};return e.T2.runKernel(s.Pah,h)}})},68833:(pt,R,t)=>{"use strict";t.d(R,{L:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({equal_:function y(h,f){let p=(0,E.YT)(h,"a","equal","string_or_numeric"),u=(0,E.YT)(f,"b","equal","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.BRl,{a:p,b:u})}})},78650:(pt,R,t)=>{"use strict";t.d(R,{Y:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(92290);const m=(0,t(87844).op)({erf_:function y(h){let f=(0,l.YT)(h,"x","erf");return E.vA("int32"===f.dtype||"float32"===f.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===f.dtype&&(f=(0,g.w)(f,"float32")),e.T2.runKernel(s._s9,{x:f})}})},68326:(pt,R,t)=>{"use strict";t.d(R,{o:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({exp_:function g(y){const h={x:(0,l.YT)(y,"x","exp")};return e.T2.runKernel(s.ox3,h)}})},42103:(pt,R,t)=>{"use strict";t.d(R,{U:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({expandDims_:function c(m,h=0){const f=(0,l.YT)(m,"x","expandDims","string_or_numeric");return E.vA(h<=f.rank,()=>"Axis must be <= rank of the tensor"),e.T2.runKernel(s.ybN,{input:f},{dim:h})}})},45104:(pt,R,t)=>{"use strict";t.d(R,{y:()=>y});var e=t(75987),s=t(42103),l=t(87844),E=t(94399),g=t(36409);const y=(0,l.op)({eye_:function c(m,h,f,p="float32"){null==h&&(h=m);const u=(0,e.r)([m,h],p),d=m<=h?m:h;for(let T=0;T<d;++T)u.set(1,T,T);const C=(0,E.t)(u.toTensor(),[m,h]);if(null==f)return C;if(1===f.length)return(0,g.V)((0,s.U)(C,0),[f[0],1,1]);if(2===f.length)return(0,g.V)((0,s.U)((0,s.U)(C,0),0),[f[0],f[1],1,1]);if(3===f.length)return(0,g.V)((0,s.U)((0,s.U)((0,s.U)(C,0),0),0),[f[0],f[1],f[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${f.length}D.`)}})},7684:(pt,R,t)=>{"use strict";t.d(R,{G:()=>E});var e=t(611),s=t(30162),l=t(26674);function E(g,c,y){return(0,l.SA)(g),y=y||(0,l.X$)(c),e.T2.runKernel(s.SQl,{},{shape:g,value:c,dtype:y})}},41467:(pt,R,t)=>{"use strict";t.d(R,{R:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({floor_:function g(y){const h={x:(0,l.YT)(y,"x","floor","float32")};return e.T2.runKernel(s.ZgB,h)}})},34316:(pt,R,t)=>{"use strict";t.d(R,{w:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({floorDiv_:function c(m,h){let f=(0,E.YT)(m,"a","floorDiv"),p=(0,E.YT)(h,"b","floorDiv");return[f,p]=(0,l.makeTypesMatch)(f,p),e.T2.runKernel(s.ElG,{a:f,b:p})}})},63552:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{conv2d:()=>S,depthwiseConv2d:()=>F,matMul:()=>k});var e=t(611),s=t(22047),l=t(30162),E=t(14548),g=t(17636),c=t(26674),y=t(83034),m=t(9269),h=t(12809),f=t(70511),p=t(73725),u=t(29458),d=t(14145),C=t(87844),T=t(94399);const S=(0,C.op)({fusedConv2d_:function D({x,filter:V,strides:W,pad:Y,dataFormat:Z="NHWC",dilations:it=[1,1],dimRoundingMode:at,bias:q,activation:ot="linear",preluActivationWeights:rt,leakyreluAlpha:et}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,ot=ot||"linear")){c.vA("NHWC"===Z,()=>`Error in fused conv2d: got dataFormat of ${Z} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let Ie=(0,h.X)(x,V,W,Y,Z,it,at);return null!=q&&(Ie=(0,y.W)(Ie,q)),(0,d.f2)(Ie,ot,rt,et)}const yt=(0,g.YT)(x,"x","conv2d","float32"),mt=(0,g.YT)(V,"filter","conv2d","float32");let St=yt,se=!1;3===yt.rank&&(se=!0,St=(0,T.t)(yt,[1,yt.shape[0],yt.shape[1],yt.shape[2]])),c.vA(4===St.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${St.rank}.`),c.vA(4===mt.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${mt.rank}.`),u.s_("fused conv2d",Y,at);const Ht="NHWC"===Z?St.shape[3]:St.shape[1];c.vA(mt.shape[2]===Ht,()=>`Error in conv2d: depth of input (${Ht}) must match input depth for filter ${mt.shape[2]}.`),c.vA(u.G0(W,it),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${W} and dilations '${it}'`);const ue=u.uf(St.shape,mt.shape,W,it,Y,at);let Xt,ie;if(null!=q&&(Xt=(0,g.YT)(q,"bias","fused conv2d"),[Xt]=(0,E.makeTypesMatch)(Xt,yt),"NHWC"===Z?m.assertAndGetBroadcastShape(ue.outShape,Xt.shape):(c.vA(Xt.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${Xt.shape.length}.`),c.vA(0===Xt.shape.length||Xt.shape[0]===ue.outChannels||1===Xt.shape[0],()=>`Error in fused conv2d: bias shape (${Xt.shape}) is not compatible with the number of output channels (${ue.outChannels})`))),null!=rt){const Ie=rt.shape;if(c.vA(Ie.length<=1||3===Ie.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${Ie.length}.`),1===Ie.length)c.vA(1===Ie[0]||Ie[0]===ue.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${Ie}) is not compatible with the number of output channels (${ue.outChannels}).`);else if(3===Ie.length)try{m.assertAndGetBroadcastShape(Ie,ue.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${Ie}) is not compatible with the output shape of the conv2d (${ue.outShape}).`)}ie=(0,g.YT)(rt,"prelu weights","fused conv2d")}const ae=(Ie,Ct)=>{c.vA("NHWC"===Z,()=>`Error in gradient of fused conv2D: got dataFormat of ${Z} but only NHWC is currently supported.`);const[zt,Jt,pe,ze]=Ct,an=(0,d.XB)(Ie,pe,ot);c.vA(u.Dh(it),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${it}'`);const hn=[(0,p.v)(Jt.shape,an,zt,W,Y),(0,f.H)(Jt,an,zt.shape,W,Y)];if(null!=ze){const $n=(0,d.Do)(ze,an);hn.push($n)}return hn},ne={x:St,filter:mt,bias:Xt,preluActivationWeights:ie},Pe={strides:W,pad:Y,dataFormat:Z,dilations:it,dimRoundingMode:at,activation:ot,leakyreluAlpha:et};return null==q?(0,s._X)((Ct,zt,Jt)=>{let pe=e.T2.runKernel(l.aAr,ne,Pe);return Jt([zt,Ct,pe]),se&&(pe=(0,T.t)(pe,[pe.shape[1],pe.shape[2],pe.shape[3]])),{value:pe,gradFunc:ae}})(St,mt):(0,s._X)((Ct,zt,Jt,pe)=>{let ze=e.T2.runKernel(l.aAr,ne,Pe);return pe([zt,Ct,ze,Jt]),se&&(ze=(0,T.t)(ze,[ze.shape[1],ze.shape[2],ze.shape[3]])),{value:ze,gradFunc:ae}})(St,mt,Xt)}});var b=t(73595),w=t(60455),H=t(43749);const F=(0,C.op)({fusedDepthwiseConv2d_:function j({x,filter:V,strides:W,pad:Y,dataFormat:Z="NHWC",dilations:it=[1,1],dimRoundingMode:at,bias:q,activation:ot="linear",preluActivationWeights:rt,leakyreluAlpha:et}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,ot)){let Pe=(0,b.G)(x,V,W,Y,Z,it,at);return null!=q&&(Pe=(0,y.W)(Pe,q)),(0,d.f2)(Pe,ot,rt,et)}const yt=(0,g.YT)(x,"x","depthwiseConv2d","float32"),mt=(0,g.YT)(V,"filter","depthwiseConv2d","float32");let St=yt,se=!1;3===yt.rank&&(se=!0,St=(0,T.t)(yt,[1,yt.shape[0],yt.shape[1],yt.shape[2]])),c.vA(4===St.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${St.rank}.`),c.vA(4===mt.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${mt.rank}.`),c.vA(St.shape[3]===mt.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${St.shape[3]}) must match the inChannels dimension in filter ${mt.shape[2]}.`),null==it&&(it=[1,1]),c.vA(u.G0(W,it),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${W} and dilations '${it}'`),u.s_("fused depthwiseConv2d",Y,at);const Ht=u.uf(St.shape,mt.shape,W,it,Y,at,!0);let ue,Xt;null!=q&&(ue=(0,g.YT)(q,"bias","fused conv2d"),[ue]=(0,E.makeTypesMatch)(ue,yt),m.assertAndGetBroadcastShape(Ht.outShape,ue.shape)),null!=rt&&(Xt=(0,g.YT)(rt,"prelu weights","fused depthwiseConv2d"));const ie=(Pe,Ie)=>{c.vA(u.Dh(it),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${it}'`);const[Ct,zt,Jt,pe]=Ie,ze=(0,d.XB)(Pe,Jt,ot),an=(0,H.l)(zt.shape,ze,Ct,W,Y,it,at),vn=(0,w.x)(zt,ze,Ct.shape,W,Y,it,at);return null!=pe?[an,vn,(0,d.Do)(ue,ze)]:[an,vn]},ae={x:St,filter:mt,bias:ue,preluActivationWeights:Xt},ne={strides:W,pad:Y,dataFormat:Z,dilations:it,dimRoundingMode:at,activation:ot,leakyreluAlpha:et};return null==q?(0,s._X)((Ie,Ct,zt)=>{let Jt=e.T2.runKernel(l.T7M,ae,ne);return zt([Ct,Ie,Jt]),se&&(Jt=(0,T.t)(Jt,[Jt.shape[1],Jt.shape[2],Jt.shape[3]])),{value:Jt,gradFunc:ie}})(St,mt):(0,s._X)((Ie,Ct,zt,Jt)=>{let pe=e.T2.runKernel(l.T7M,ae,ne);return Jt([Ct,Ie,pe,zt]),se&&(pe=(0,T.t)(pe,[pe.shape[1],pe.shape[2],pe.shape[3]])),{value:pe,gradFunc:ie}})(St,mt,ue)}});var B=t(60314);const k=(0,C.op)({fusedMatMul_:function A({a:x,b:V,transposeA:W=!1,transposeB:Y=!1,bias:Z,activation:it="linear",preluActivationWeights:at,leakyreluAlpha:q=.2}){if(!1===(0,d.zE)(e.T2.state.gradientDepth,it)){let ze=(0,B.N)(x,V,W,Y);return null!=Z&&(ze=(0,y.W)(ze,Z)),(0,d.f2)(ze,it,at,q)}let ot=(0,g.YT)(x,"a","fused matMul"),rt=(0,g.YT)(V,"b","fused matMul");[ot,rt]=(0,E.makeTypesMatch)(ot,rt);const et=W?ot.shape[ot.rank-2]:ot.shape[ot.rank-1],yt=Y?rt.shape[rt.rank-1]:rt.shape[rt.rank-2],mt=W?ot.shape[ot.rank-1]:ot.shape[ot.rank-2],St=Y?rt.shape[rt.rank-2]:rt.shape[rt.rank-1],se=ot.shape.slice(0,-2),Ht=rt.shape.slice(0,-2),ue=c.Ze(se),Xt=c.Ze(Ht);c.vA(et===yt,()=>`Error in fused matMul: inner shapes (${et}) and (${yt}) of Tensors with shapes ${ot.shape} and ${rt.shape} and transposeA=${W} and transposeB=${Y} must match.`);const ae=m.assertAndGetBroadcastShape(ot.shape.slice(0,-2),rt.shape.slice(0,-2)).concat([mt,St]),ne=(0,T.t)(ot,W?[ue,et,mt]:[ue,mt,et]),Pe=(0,T.t)(rt,Y?[Xt,St,yt]:[Xt,yt,St]);let Ie,Ct;null!=Z&&(Ie=(0,g.YT)(Z,"bias","fused matMul"),[Ie]=(0,E.makeTypesMatch)(Ie,ot),m.assertAndGetBroadcastShape(ae,Ie.shape)),null!=at&&(Ct=(0,g.YT)(at,"prelu weights","fused matMul"));const zt=(ze,an)=>{const[vn,mn,hn,$n]=an,wn=(0,d.XB)((0,T.t)(ze,hn.shape),hn,it);let Gn,jn;return W||Y?!W&&Y?(Gn=(0,B.N)(wn,mn,!1,!1),jn=(0,B.N)(wn,vn,!0,!1)):W&&!Y?(Gn=(0,B.N)(mn,wn,!1,!0),jn=(0,B.N)(vn,wn,!1,!1)):(Gn=(0,B.N)(mn,wn,!0,!0),jn=(0,B.N)(wn,vn,!0,!0)):(Gn=(0,B.N)(wn,mn,!1,!0),jn=(0,B.N)(vn,wn,!0,!1)),null!=Z?[Gn,jn,(0,d.Do)($n,wn)]:[Gn,jn]},Jt={a:ne,b:Pe,bias:Ie,preluActivationWeights:Ct},pe={transposeA:W,transposeB:Y,activation:it,leakyreluAlpha:q};return null==Z?(0,s._X)((an,vn,mn)=>{const hn=e.T2.runKernel(l.Dr,Jt,pe);return mn([an,vn,hn]),{value:(0,T.t)(hn,ae),gradFunc:zt}})(ne,Pe):(0,s._X)((an,vn,mn,hn)=>{const $n=e.T2.runKernel(l.Dr,Jt,pe);return hn([an,vn,$n,mn]),{value:(0,T.t)($n,ae),gradFunc:zt}})(ne,Pe,Ie)}})},14145:(pt,R,t)=>{"use strict";t.d(R,{Do:()=>d,XB:()=>u,f2:()=>C,zE:()=>T});var e=t(9269),s=t(41325),l=t(93580),E=t(59731),g=t(62655),c=t(98611),y=t(55065),m=t(94399),h=t(53205),f=t(72079),p=t(66342);function u(D,S,b){if(null==b||"linear"===b)return D;if("relu"===b)return(0,E.l)(D,(0,f.P)(S));throw new Error(`Cannot compute gradient for fused activation ${b}.`)}function d(D,S){let b=S;const w=e.getReductionAxes(D.shape,S.shape);return w.length>0&&(b=(0,p.c)(b,w)),(0,m.t)(b,D.shape)}function C(D,S,b,w){if("linear"===S)return D;if("relu"===S)return(0,c.V)(D);if("elu"===S)return(0,s.P)(D);if("relu6"===S)return(0,y.j)(D);if("prelu"===S)return(0,g.N)(D,b);if("leakyrelu"===S)return(0,l.H)(D,w);if("sigmoid"===S)return(0,h.r)(D);throw new Error(`Unknown fused activation ${S}.`)}const T=(D,S)=>!(D>0)||"linear"===S},38837:(pt,R,t)=>{"use strict";t.d(R,{k:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({gather_:function g(y,m,h=0,f=0){const p=(0,l.YT)(y,"x","gather"),u=(0,l.YT)(m,"indices","gather","int32");return e.T2.runKernel(s.mxL,{x:p,indices:u},{axis:h,batchDims:f})}})},54807:(pt,R,t)=>{"use strict";t.d(R,{r:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({greater_:function y(h,f){let p=(0,E.YT)(h,"a","greater","string_or_numeric"),u=(0,E.YT)(f,"b","greater","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.XhZ,{a:p,b:u})}})},94300:(pt,R,t)=>{"use strict";t.d(R,{D:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({greaterEqual_:function y(h,f){let p=(0,E.YT)(h,"a","greaterEqual","string_or_numeric"),u=(0,E.YT)(f,"b","greaterEqual","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.lLS,{a:p,b:u})}})},62823:(pt,R,t)=>{"use strict";t.d(R,{n:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({imag_:function g(y){const h={input:(0,l.YT)(y,"input","imag")};return e.T2.runKernel(s.dv8,h)}})},27958:(pt,R,t)=>{"use strict";t.d(R,{C:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({cropAndResize_:function c(m,h,f,p,u="bilinear",d=0){const C=(0,l.YT)(m,"image","cropAndResize"),T=(0,l.YT)(h,"boxes","cropAndResize","float32"),D=(0,l.YT)(f,"boxInd","cropAndResize","int32"),S=T.shape[0];return E.vA(4===C.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${C.rank}.`),E.vA(2===T.rank&&4===T.shape[1],()=>`Error in cropAndResize: boxes must be have size [${S},4] but had shape ${T.shape}.`),E.vA(1===D.rank&&D.shape[0]===S,()=>`Error in cropAndResize: boxInd must be have size [${S}] but had shape ${T.shape}.`),E.vA(2===p.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${p.length}.`),E.vA(p[0]>=1&&p[1]>=1,()=>`cropSize must be atleast [1,1], but was ${p}`),E.vA("bilinear"===u||"nearest"===u,()=>`method must be bilinear or nearest, but was ${u}`),e.T2.runKernel(s.MRQ,{image:C,boxes:T,boxInd:D},{method:u,extrapolationValue:d,cropSize:p})}})},99587:(pt,R,t)=>{"use strict";t.d(R,{n:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({flipLeftRight_:function c(m){const h=(0,l.YT)(m,"image","flipLeftRight","float32");return E.vA(4===h.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${h.rank}.`),e.T2.runKernel(s.BxF,{image:h},{})}})},60926:(pt,R,t)=>{"use strict";t.d(R,{C:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(36409);const c=(0,l.op)({grayscaleToRGB_:function g(y){const m=(0,e.YT)(y,"image","grayscaleToRGB"),h=m.rank-1,f=m.shape[h];s.vA(m.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${m.rank}.`),s.vA(1===f,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${f}.`);const p=new Array(m.rank);return p.fill(1,0,h),p[h]=3,(0,E.V)(m,p)}})},30561:(pt,R,t)=>{"use strict";t.d(R,{L:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(30081);const y=(0,t(87844).op)({nonMaxSuppression_:function c(m,h,f,p=.5,u=Number.NEGATIVE_INFINITY){const d=(0,l.YT)(m,"boxes","nonMaxSuppression","float32"),C=(0,l.YT)(h,"scores","nonMaxSuppression","float32"),T=(0,E.W)(d,C,f,p,u);return e.T2.runKernel(s.SDM,{boxes:d,scores:C},{maxOutputSize:f=T.maxOutputSize,iouThreshold:p=T.iouThreshold,scoreThreshold:u=T.scoreThreshold})}})},50110:(pt,R,t)=>{"use strict";t.d(R,{z:()=>m});var e=t(10467),s=t(64857),l=t(17636),E=t(30081),g=t(48449);function y(){return(y=(0,e.A)(function*(h,f,p,u=.5,d=Number.NEGATIVE_INFINITY){const C=(0,l.YT)(h,"boxes","nonMaxSuppressionAsync"),T=(0,l.YT)(f,"scores","nonMaxSuppressionAsync"),D=(0,E.W)(C,T,p,u,d);p=D.maxOutputSize,u=D.iouThreshold,d=D.scoreThreshold;const S=yield Promise.all([C.data(),T.data()]),b=S[0],w=S[1],{selectedIndices:H}=(0,s.c7)(b,w,p,u,d);return C!==h&&C.dispose(),T!==f&&T.dispose(),(0,g.t)(H,"int32")})).apply(this,arguments)}const m=function c(h,f,p){return y.apply(this,arguments)}},4594:(pt,R,t)=>{"use strict";t.d(R,{H:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(30081);const y=(0,t(87844).op)({nonMaxSuppressionPadded_:function c(m,h,f,p=.5,u=Number.NEGATIVE_INFINITY,d=!1){const C=(0,l.YT)(m,"boxes","nonMaxSuppression"),T=(0,l.YT)(h,"scores","nonMaxSuppression"),D=(0,E.W)(C,T,f,p,u,null),F=e.T2.runKernel(s.Zl4,{boxes:C,scores:T},{maxOutputSize:D.maxOutputSize,iouThreshold:D.iouThreshold,scoreThreshold:D.scoreThreshold,padToMaxOutputSize:d});return{selectedIndices:F[0],validOutputs:F[1]}}})},33601:(pt,R,t)=>{"use strict";t.d(R,{R:()=>h});var e=t(10467),s=t(64857),l=t(17636),E=t(30081),g=t(10829),c=t(48449);function m(){return(m=(0,e.A)(function*(f,p,u,d=.5,C=Number.NEGATIVE_INFINITY,T=!1){const D=(0,l.YT)(f,"boxes","nonMaxSuppressionAsync"),S=(0,l.YT)(p,"scores","nonMaxSuppressionAsync"),b=(0,E.W)(D,S,u,d,C,null),w=b.maxOutputSize,H=b.iouThreshold,j=b.scoreThreshold,[F,B]=yield Promise.all([D.data(),S.data()]),{selectedIndices:A,validOutputs:k}=(0,s.ZS)(F,B,w,H,j,T);return D!==f&&D.dispose(),S!==p&&S.dispose(),{selectedIndices:(0,c.t)(A,"int32"),validOutputs:(0,g.d)(k,"int32")}})).apply(this,arguments)}const h=function y(f,p,u){return m.apply(this,arguments)}},31393:(pt,R,t)=>{"use strict";t.d(R,{f:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(30081);const y=(0,t(87844).op)({nonMaxSuppressionWithScore_:function c(m,h,f,p=.5,u=Number.NEGATIVE_INFINITY,d=0){const C=(0,l.YT)(m,"boxes","nonMaxSuppression"),T=(0,l.YT)(h,"scores","nonMaxSuppression"),D=(0,E.W)(C,T,f,p,u,d),w=e.T2.runKernel(s.e0f,{boxes:C,scores:T},{maxOutputSize:f=D.maxOutputSize,iouThreshold:p=D.iouThreshold,scoreThreshold:u=D.scoreThreshold,softNmsSigma:d=D.softNmsSigma});return{selectedIndices:w[0],selectedScores:w[1]}}})},47774:(pt,R,t)=>{"use strict";t.d(R,{l:()=>m});var e=t(10467),s=t(64857),l=t(17636),E=t(30081),g=t(48449);function y(){return(y=(0,e.A)(function*(h,f,p,u=.5,d=Number.NEGATIVE_INFINITY,C=0){const T=(0,l.YT)(h,"boxes","nonMaxSuppressionAsync"),D=(0,l.YT)(f,"scores","nonMaxSuppressionAsync"),S=(0,E.W)(T,D,p,u,d,C);p=S.maxOutputSize,u=S.iouThreshold,d=S.scoreThreshold,C=S.softNmsSigma;const b=yield Promise.all([T.data(),D.data()]),w=b[0],H=b[1],{selectedIndices:j,selectedScores:F}=(0,s.ut)(w,H,p,u,d,C);return T!==h&&T.dispose(),D!==f&&D.dispose(),{selectedIndices:(0,g.t)(j,"int32"),selectedScores:(0,g.t)(F)}})).apply(this,arguments)}const m=function c(h,f,p){return y.apply(this,arguments)}},26486:(pt,R,t)=>{"use strict";t.d(R,{v:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(87844),c=t(94399);const m=(0,g.op)({resizeBilinear_:function y(h,f,p=!1,u=!1){const d=(0,l.YT)(h,"images","resizeBilinear");E.vA(3===d.rank||4===d.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${d.rank}.`),E.vA(2===f.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${f}.`),E.vA(!1===u||!1===p,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let C=d,T=!1;3===d.rank&&(T=!0,C=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const[]=f,b=e.T2.runKernel(s.hgw,{images:C},{alignCorners:p,halfPixelCenters:u,size:f});return T?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},91719:(pt,R,t)=>{"use strict";t.d(R,{b:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(87844),c=t(94399);const m=(0,g.op)({resizeNearestNeighbor_:function y(h,f,p=!1,u=!1){const d=(0,l.YT)(h,"images","resizeNearestNeighbor");E.vA(3===d.rank||4===d.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${d.rank}.`),E.vA(2===f.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${f}.`),E.vA("float32"===d.dtype||"int32"===d.dtype,()=>"`images` must have `int32` or `float32` as dtype"),E.vA(!1===u||!1===p,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let C=d,T=!1;3===d.rank&&(T=!0,C=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]));const[]=f,b=e.T2.runKernel(s.jOE,{images:C},{alignCorners:p,halfPixelCenters:u,size:f});return T?(0,c.t)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},70644:(pt,R,t)=>{"use strict";t.d(R,{S:()=>u});var e=t(17636),s=t(26674),l=t(92290),E=t(611),g=t(30162),c=t(87844);const m=(0,c.op)({einsum_:function y(d,...C){const T=C.map((S,b)=>(0,e.YT)(S,`tensors${b}`,"einsum"));return E.T2.runKernel(g.Qgm,T,{equation:d})}});var h=t(42103),f=t(48449);const u=(0,c.op)({rgbToGrayscale_:function p(d){const C=(0,e.YT)(d,"image","RGBToGrayscale"),D=C.shape[C.rank-1];s.vA(C.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${C.rank}.`),s.vA(3===D,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${D}.`);const S=C.dtype,b=(0,l.w)(C,"float32"),w=(0,f.t)([.2989,.587,.114]);let H;switch(C.rank){case 2:H=m("ij,j->i",b,w);break;case 3:H=m("ijk,k->ij",b,w);break;case 4:H=m("ijkl,l->ijk",b,w);break;case 5:H=m("ijklm,m->ijkl",b,w);break;case 6:H=m("ijklmn,n->ijklm",b,w);break;default:throw new Error("Not a valid tensor rank.")}return H=(0,h.U)(H,-1),(0,l.w)(H,S)}})},76333:(pt,R,t)=>{"use strict";t.d(R,{x:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({rotateWithOffset_:function c(m,h,f=0,p=.5){const u=(0,l.YT)(m,"image","rotateWithOffset","float32");return E.vA(4===u.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${u.rank}.`),e.T2.runKernel(s.BK4,{image:u},{radians:h,fillValue:f,center:p})}})},65425:(pt,R,t)=>{"use strict";t.d(R,{E:()=>x});var e=t(48449),s=t(87844),l=t(92290),E=t(91517),g=t(611),c=t(30162),y=t(17636),m=t(26674);const f=(0,s.op)({bincount_:function h(V,W,Y){const Z=(0,y.YT)(V,"x","bincount"),it=(0,y.YT)(W,"weights","bincount");return m.vA("int32"===Z.dtype,()=>`Error in bincount: input dtype must be int32, but got ${Z.dtype}`),m.vA(Y>=0,()=>`size must be non-negative, but got ${Y}.`),m.vA(it.size===Z.size||0===it.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${Z.shape}, weights shape: ${it.shape}.`),g.T2.runKernel(c.N4F,{x:Z,weights:it},{size:Y})}});var p=t(94411),u=t(54807),d=t(66342),C=t(83034),T=t(59731),D=t(4350),S=t(59279),b=t(23821),w=t(56914),H=t(7684),j=t(94063),F=t(16412),B=t(74544);const x=(0,s.op)({threshold_:function A(V,W="binary",Y=!1,Z=.5){const it=(0,y.YT)(V,"image","threshold"),rt=it.shape[0]*it.shape[1];let yt,mt,St,se,et=(0,T.l)((0,e.t)([Z]),255);if(m.vA(3===it.rank,()=>`Error in threshold: image must be rank 3,but got rank ${it.rank}.`),m.vA(3===it.shape[2]||1===it.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${it.shape[2]}.`),m.vA("int32"===it.dtype||"float32"===it.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${it.dtype}.`),m.vA("otsu"===W||"binary"===W,()=>`Method must be binary or otsu, but was ${W}`),3===it.shape[2]){[yt,mt,St]=(0,E.l)(it,[1,1,1],-1);const Xt=(0,T.l)(yt,.2989),ie=(0,T.l)(mt,.587),ae=(0,T.l)(St,.114);se=(0,C.W)((0,C.W)(Xt,ie),ae)}else se=V;"otsu"===W&&(et=function k(V,W){let at,q,ot,rt,et,yt,Y=(0,e.t)([-1]),Z=(0,e.t)([0]),it=(0,e.t)([0]);for(let mt=0;mt<V.size-1;mt++){at=(0,j.d)(V,0,mt+1),q=(0,j.d)(V,mt+1),et=(0,D.y)((0,d.c)(at),W),yt=(0,D.y)((0,d.c)(q),W);const St=(0,d.c)((0,T.l)(at,(0,F.y)(0,at.size)));ot=(0,D.y)(St,(0,d.c)(at));const se=(0,H.G)(q.shape,at.size),Ht=(0,C.W)((0,F.y)(0,q.size),se),ue=(0,T.l)(q,Ht);rt=(0,D.y)((0,d.c)(ue),(0,d.c)(q));const Xt=(0,S.j)(ot,rt),ie=(0,S.j)(ot,rt),ae=(0,T.l)(et,yt);it=(0,T.l)((0,T.l)(ae,Xt),ie);const ne=(0,u.r)(it,Z);Z=(0,w._)(ne,it,Z),Y=(0,w._)(ne,(0,e.t)([mt]),Y)}return Y}(f((0,l.w)((0,b.L)(se),"int32"),(0,B.O)([]),256),rt));const Ht=Y?(0,p.I)(se,et):(0,u.r)(se,et);return(0,l.w)((0,T.l)(Ht,255),"int32")}})},59339:(pt,R,t)=>{"use strict";t.d(R,{p:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({transform_:function c(m,h,f="nearest",p="constant",u=0,d){const C=(0,l.YT)(m,"image","transform","float32"),T=(0,l.YT)(h,"transforms","transform","float32");return E.vA(4===C.rank,()=>`Error in transform: image must be rank 4,but got rank ${C.rank}.`),E.vA(2===T.rank&&(T.shape[0]===C.shape[0]||1===T.shape[0])&&8===T.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E.vA(null==d||2===d.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${d}.`),e.T2.runKernel(s.dLy,{image:C,transforms:T},{interpolation:f,fillMode:p,fillValue:u,outputShape:d})}})},93580:(pt,R,t)=>{"use strict";t.d(R,{H:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({leakyRelu_:function g(y,m=.2){const f={x:(0,l.YT)(y,"x","leakyRelu")};return e.T2.runKernel(s.X0$,f,{alpha:m})}})},56576:(pt,R,t)=>{"use strict";t.d(R,{M:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({less_:function y(h,f){let p=(0,E.YT)(h,"a","less","string_or_numeric"),u=(0,E.YT)(f,"b","less","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.mIA,{a:p,b:u})}})},94411:(pt,R,t)=>{"use strict";t.d(R,{I:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({lessEqual_:function y(h,f){let p=(0,E.YT)(h,"a","lessEqual","string_or_numeric"),u=(0,E.YT)(f,"b","lessEqual","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.CwD,{a:p,b:u})}})},55244:(pt,R,t)=>{"use strict";t.d(R,{x:()=>b});var e=t(17636),s=t(26674),l=t(94300),E=t(56576),g=t(94411),c=t(21292),y=t(85233),m=t(43267),h=t(87844),f=t(16412),p=t(94399),u=t(92885),d=t(59279),C=t(48256),T=t(56914),D=t(20218);const b=(0,h.op)({bandPart_:function S(w,H,j){const F=(0,e.YT)(w,"a","bandPart");(0,s.vA)(F.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${F.rank}.`);const B=F.shape,[A,k]=F.shape.slice(-2);let x,V;"number"==typeof H?((0,s.vA)(H%1==0,()=>`bandPart(): numLower must be an integer, got ${H}.`),(0,s.vA)(H<=A,()=>`bandPart(): numLower (${H}) must not be greater than the number of rows (${A}).`),x=(0,e.YT)(H<0?A:H,"numLower","bandPart")):((0,s.vA)("int32"===H.dtype,()=>"bandPart(): numLower's dtype must be an int32."),x=(0,T._)((0,E.M)(H,0),A,(0,y.B)(H,A))),"number"==typeof j?((0,s.vA)(j%1==0,()=>`bandPart(): numUpper must be an integer, got ${j}.`),(0,s.vA)(j<=k,()=>`bandPart(): numUpper (${j}) must not be greater than the number of columns (${k}).`),V=(0,e.YT)(j<0?k:j,"numUpper","bandPart")):((0,s.vA)("int32"===j.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),V=(0,T._)((0,E.M)(j,0),k,(0,y.B)(j,k)));const W=(0,p.t)((0,f.y)(0,A,1,"int32"),[-1,1]),Y=(0,f.y)(0,k,1,"int32"),Z=(0,d.j)(W,Y),it=(0,c.n)((0,g.I)(Z,x),(0,l.D)(Z,(0,m.H)(V))),at=(0,D.U)([A,k],F.dtype);return(0,p.t)((0,u.t)((0,C.K)((0,p.t)(F,[-1,A,k])).map(q=>(0,T._)(it,q,at))),B)}})},52325:(pt,R,t)=>{"use strict";t.d(R,{i:()=>d});var e=t(611),s=t(26674),l=t(4350),E=t(59731),g=t(96075),c=t(87844),y=t(91517),m=t(41621),h=t(92885),f=t(59279),p=t(66342);const d=(0,c.op)({gramSchmidt_:function u(C){let T;if(Array.isArray(C)){T=!1,(0,s.vA)(null!=C&&C.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const b=C[0].shape[0];for(let w=1;w<C.length;++w)(0,s.vA)(C[w].shape[0]===b,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${C[w].shape[0]} vs. ${b})`)}else T=!0,C=(0,y.l)(C,C.shape[0],0).map(b=>(0,m.r)(b,[0]));(0,s.vA)(C.length<=C[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${C.length}) exceeds number of dimensions (${C[0].shape[0]}).`);const D=[],S=C;for(let b=0;b<C.length;++b)D.push(e.T2.tidy(()=>{let w=S[b];if(b>0)for(let H=0;H<b;++H){const j=(0,E.l)((0,p.c)((0,E.l)(D[H],w)),D[H]);w=(0,f.j)(w,j)}return(0,l.y)(w,(0,g.x)(w,"euclidean"))}));return T?(0,h.t)(D,0):D}})},92974:(pt,R,t)=>{"use strict";t.d(R,{qr:()=>A});var e=t(611),s=t(47054),l=t(26674),E=t(61548),g=t(35213),c=t(4350),y=t(45104),m=t(54807),h=t(60314),f=t(59731),p=t(43267),u=t(96075),d=t(87844),C=t(94399),T=t(94063),D=t(92885),S=t(59279),b=t(41494),w=t(77914),H=t(48256),j=t(56914);function B(k,x=!1){return e.T2.tidy(()=>{(0,l.vA)(2===k.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${k.shape.length}D Tensor.`);const V=k.shape[0],W=k.shape[1];let Y=(0,y.y)(V),Z=(0,E.o)(k);const it=(0,b.K)([[1]],[1,1]);let at=(0,E.o)(it);const q=V>=W?W:V;for(let ot=0;ot<q;++ot){const rt=Z,et=at,yt=Y;[at,Z,Y]=e.T2.tidy(()=>{const mt=(0,T.d)(Z,[ot,ot],[V-ot,1]),St=(0,u.x)(mt),se=(0,T.d)(Z,[ot,ot],[1,1]),Ht=(0,j._)((0,m.r)(se,0),(0,b.K)([[-1]]),(0,b.K)([[1]])),ue=(0,S.j)(se,(0,f.l)(Ht,St)),Xt=(0,c.y)(mt,ue);at=1===Xt.shape[0]?(0,E.o)(it):(0,g.x)([it,(0,T.d)(Xt,[1,0],[Xt.shape[0]-1,Xt.shape[1]])],0);const ie=(0,p.H)((0,c.y)((0,h.N)(Ht,ue),St)),ae=(0,T.d)(Z,[ot,0],[V-ot,W]),ne=(0,f.l)(ie,at),Pe=(0,w.m)(at);if(0===ot)Z=(0,S.j)(ae,(0,h.N)(ne,(0,h.N)(Pe,ae)));else{const zt=(0,S.j)(ae,(0,h.N)(ne,(0,h.N)(Pe,ae)));Z=(0,g.x)([(0,T.d)(Z,[0,0],[ot,W]),zt],0)}const Ie=(0,w.m)(ne),Ct=(0,T.d)(Y,[0,ot],[V,Y.shape[1]-ot]);if(0===ot)Y=(0,S.j)(Ct,(0,h.N)((0,h.N)(Ct,at),Ie));else{const zt=(0,S.j)(Ct,(0,h.N)((0,h.N)(Ct,at),Ie));Y=(0,g.x)([(0,T.d)(Y,[0,0],[V,ot]),zt],1)}return[at,Z,Y]}),(0,s.AS)([rt,et,yt])}return!x&&V>W&&(Y=(0,T.d)(Y,[0,0],[V,W]),Z=(0,T.d)(Z,[0,0],[W,W])),[Y,Z]})}const A=(0,d.op)({qr_:function F(k,x=!1){if((0,l.vA)(k.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${k.rank}`),2===k.rank)return B(k,x);{const V=k.shape.slice(0,k.shape.length-2).reduce((q,ot)=>q*ot),W=(0,H.K)((0,C.t)(k,[V,k.shape[k.shape.length-2],k.shape[k.shape.length-1]]),0),Y=[],Z=[];return W.forEach(q=>{const[ot,rt]=B(q,x);Y.push(ot),Z.push(rt)}),[(0,C.t)((0,D.t)(Y,0),k.shape),(0,C.t)((0,D.t)(Z,0),k.shape)]}}})},8535:(pt,R,t)=>{"use strict";t.d(R,{R:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({log_:function g(y){const h={x:(0,l.YT)(y,"x","log","float32")};return e.T2.runKernel(s.tG8,h)}})},72954:(pt,R,t)=>{"use strict";t.d(R,{K:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({log1p_:function g(y){const h={x:(0,l.YT)(y,"x","log1p")};return e.T2.runKernel(s.Cg$,h)}})},89578:(pt,R,t)=>{"use strict";t.d(R,{H:()=>u});var e=t(22047),s=t(17636),l=t(92290),E=t(68326),g=t(8535),c=t(56619),y=t(59731),m=t(87844),h=t(59279),f=t(66342);const u=(0,m.op)({logSoftmax_:function p(d,C=-1){const T=(0,s.YT)(d,"logits","logSoftmax");if(-1===C&&(C=T.rank-1),C!==T.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${T.rank} and axis was ${C}`);return(0,e._X)((S,b)=>{const H=(0,c.T)(S,C,!0),j=(0,h.j)(S,H),F=(0,h.j)((0,l.w)(j,"float32"),(0,g.R)((0,f.c)((0,E.o)(j),C,!0)));return b([F]),{value:F,gradFunc:(A,k)=>{const[x]=k,W=(0,E.o)(x);return(0,h.j)(A,(0,y.l)((0,f.c)(A,C,!0),W))}}})(T)}})},17391:(pt,R,t)=>{"use strict";t.d(R,{V:()=>d});var e=t(17636),s=t(26674),l=t(83034),E=t(94963),g=t(68326),c=t(8535),y=t(56619),m=t(87844),h=t(94399),f=t(59279),p=t(66342);const d=(0,m.op)({logSumExp_:function u(C,T=null,D=!1){const S=(0,e.YT)(C,"x","logSumExp"),b=(0,s.Y6)(T,S.shape),w=(0,y.T)(S,b,!0),H=(0,f.j)(S,w),j=(0,g.o)(H),F=(0,p.c)(j,b),B=(0,c.R)(F),A=(0,l.W)((0,h.t)(w,B.shape),B);if(D){const k=(0,E.SM)(A.shape,b);return(0,h.t)(A,k)}return A}})},21292:(pt,R,t)=>{"use strict";t.d(R,{n:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(9269);const y=(0,t(87844).op)({logicalAnd_:function c(m,h){const f=(0,l.YT)(m,"a","logicalAnd","bool"),p=(0,l.YT)(h,"b","logicalAnd","bool");return(0,E.assertAndGetBroadcastShape)(f.shape,p.shape),e.T2.runKernel(s.RUm,{a:f,b:p})}})},88288:(pt,R,t)=>{"use strict";t.d(R,{N:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({logicalNot_:function g(y){const h={x:(0,l.YT)(y,"x","logicalNot","bool")};return e.T2.runKernel(s.nZd,h)}})},27347:(pt,R,t)=>{"use strict";t.d(R,{i:()=>e});var e=function(s){return s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",s}(e||{})},88476:(pt,R,t)=>{"use strict";t.d(R,{n:()=>h});var e=t(17636),s=t(26674),l=t(72009),E=t(27347),g=t(87844),c=t(59279),y=t(24782);const h=(0,g.op)({absoluteDifference_:function m(f,p,u,d=E.i.SUM_BY_NONZERO_WEIGHTS){const C=(0,e.YT)(f,"labels","absoluteDifference"),T=(0,e.YT)(p,"predictions","absoluteDifference");let D=null;null!=u&&(D=(0,e.YT)(u,"weights","absoluteDifference")),(0,s.O3)(C.shape,T.shape,"Error in absoluteDifference: ");const S=(0,l.t)((0,c.j)(C,T));return(0,y.M)(S,D,d)}})},24782:(pt,R,t)=>{"use strict";t.d(R,{M:()=>d});var e=t(17636),s=t(92290),l=t(4350),E=t(27347),g=t(23444),c=t(59731),y=t(66279),m=t(95032),h=t(87844),f=t(10829),p=t(66342);const d=(0,h.op)({computeWeightedLoss_:function u(C,T,D=E.i.SUM_BY_NONZERO_WEIGHTS){const S=(0,e.YT)(C,"losses","computeWeightedLoss");let b=null;null!=T&&(b=(0,e.YT)(T,"weights","computeWeightedLoss"));const w=null==b?S:(0,c.l)(S,b);if(D===E.i.NONE)return w;if(D===E.i.SUM)return(0,p.c)(w);if(D===E.i.MEAN){if(null==b)return(0,g.i)(w);{const H=S.size/b.size,j=(0,l.y)((0,p.c)(w),(0,p.c)(b));return H>1?(0,l.y)(j,(0,f.d)(H)):j}}if(D===E.i.SUM_BY_NONZERO_WEIGHTS){if(null==b)return(0,l.y)((0,p.c)(w),(0,f.d)(S.size));{const H=(0,c.l)(b,(0,m.S)(S.shape)),j=(0,s.w)((0,p.c)((0,y.E)(H,(0,f.d)(0))),"float32");return(0,l.y)((0,p.c)(w),j)}}throw Error(`Unknown reduction: ${D}`)}})},36170:(pt,R,t)=>{"use strict";t.d(R,{l:()=>p});var e=t(17636),s=t(26674),l=t(27347),E=t(59731),g=t(87844),c=t(10829),y=t(59279),m=t(66342),h=t(24782);const p=(0,g.op)({cosineDistance_:function f(u,d,C,T,D=l.i.SUM_BY_NONZERO_WEIGHTS){const S=(0,e.YT)(u,"labels","cosineDistance"),b=(0,e.YT)(d,"predictions","cosineDistance");let w=null;null!=T&&(w=(0,e.YT)(T,"weights","cosineDistance")),(0,s.O3)(S.shape,b.shape,"Error in cosineDistance: ");const H=(0,c.d)(1),j=(0,y.j)(H,(0,m.c)((0,E.l)(S,b),C,!0));return(0,h.M)(j,w,D)}})},45026:(pt,R,t)=>{"use strict";t.d(R,{Z:()=>p});var e=t(17636),s=t(26674),l=t(27347),E=t(59731),g=t(87844),c=t(98611),y=t(10829),m=t(59279),h=t(24782);const p=(0,g.op)({hingeLoss_:function f(u,d,C,T=l.i.SUM_BY_NONZERO_WEIGHTS){let D=(0,e.YT)(u,"labels","hingeLoss");const S=(0,e.YT)(d,"predictions","hingeLoss");let b=null;null!=C&&(b=(0,e.YT)(C,"weights","hingeLoss")),(0,s.O3)(D.shape,S.shape,"Error in hingeLoss: ");const w=(0,y.d)(1);D=(0,m.j)((0,E.l)((0,y.d)(2),D),w);const H=(0,c.V)((0,m.j)(w,(0,E.l)(D,S)));return(0,h.M)(H,b,T)}})},29655:(pt,R,t)=>{"use strict";t.d(R,{c:()=>C});var e=t(17636),s=t(26674),l=t(72009),E=t(83034),g=t(27347),c=t(85233),y=t(59731),m=t(87844),h=t(10829),f=t(32362),p=t(59279),u=t(24782);const C=(0,m.op)({huberLoss_:function d(T,D,S,b=1,w=g.i.SUM_BY_NONZERO_WEIGHTS){const H=(0,e.YT)(T,"labels","huberLoss"),j=(0,e.YT)(D,"predictions","huberLoss");let F=null;null!=S&&(F=(0,e.YT)(S,"weights","huberLoss")),(0,s.O3)(H.shape,j.shape,"Error in huberLoss: ");const B=(0,h.d)(b),A=(0,l.t)((0,p.j)(j,H)),k=(0,c.B)(A,B),x=(0,p.j)(A,k),V=(0,E.W)((0,y.l)((0,h.d)(.5),(0,f.E)(k)),(0,y.l)(B,x));return(0,u.M)(V,F,w)}})},3733:(pt,R,t)=>{"use strict";t.d(R,{_:()=>d});var e=t(17636),s=t(26674),l=t(83034),E=t(8535),g=t(27347),c=t(59731),y=t(43267),m=t(87844),h=t(10829),f=t(59279),p=t(24782);const d=(0,m.op)({logLoss_:function u(C,T,D,S=1e-7,b=g.i.SUM_BY_NONZERO_WEIGHTS){const w=(0,e.YT)(C,"labels","logLoss"),H=(0,e.YT)(T,"predictions","logLoss");let j=null;null!=D&&(j=(0,e.YT)(D,"weights","logLoss")),(0,s.O3)(w.shape,H.shape,"Error in logLoss: ");const F=(0,h.d)(1),B=(0,h.d)(S),A=(0,y.H)((0,c.l)(w,(0,E.R)((0,l.W)(H,B)))),k=(0,c.l)((0,f.j)(F,w),(0,E.R)((0,l.W)((0,f.j)(F,H),B))),x=(0,f.j)(A,k);return(0,p.M)(x,j,b)}})},33115:(pt,R,t)=>{"use strict";t.d(R,{b:()=>m});var e=t(17636),s=t(26674),l=t(27347),E=t(87844),g=t(24976),c=t(24782);const m=(0,E.op)({meanSquaredError_:function y(h,f,p,u=l.i.SUM_BY_NONZERO_WEIGHTS){const d=(0,e.YT)(h,"labels","meanSquaredError"),C=(0,e.YT)(f,"predictions","meanSquaredError");let T=null;null!=p&&(T=(0,e.YT)(p,"weights","meanSquaredError")),(0,s.O3)(d.shape,C.shape,"Error in meanSquaredError: ");const D=(0,g.P)(d,C);return(0,c.M)(D,T,u)}})},79780:(pt,R,t)=>{"use strict";t.d(R,{k:()=>S});var e=t(17636),s=t(26674),l=t(72009),E=t(83034),g=t(68326),c=t(72954),y=t(27347),m=t(59731),h=t(43267),f=t(87844),p=t(98611),u=t(10829),d=t(59279),C=t(24782);const S=(0,f.op)({sigmoidCrossEntropy_:function D(b,w,H,j=0,F=y.i.SUM_BY_NONZERO_WEIGHTS){let B=(0,e.YT)(b,"multiClassLabels","sigmoidCrossEntropy");const A=(0,e.YT)(w,"logits","sigmoidCrossEntropy");let k=null;if(null!=H&&(k=(0,e.YT)(H,"weights","sigmoidCrossEntropy")),(0,s.O3)(B.shape,A.shape,"Error in sigmoidCrossEntropy: "),j>0){const V=(0,u.d)(j),W=(0,u.d)(1),Y=(0,u.d)(.5);B=(0,E.W)((0,m.l)(B,(0,d.j)(W,V)),(0,m.l)(Y,V))}const x=function T(b,w){const H=(0,e.YT)(b,"labels","sigmoidCrossEntropyWithLogits"),j=(0,e.YT)(w,"logits","sigmoidCrossEntropyWithLogits");(0,s.O3)(H.shape,j.shape,"Error in sigmoidCrossEntropyWithLogits: ");const F=(0,p.V)(j),B=(0,m.l)(j,H),A=(0,c.K)((0,g.o)((0,h.H)((0,l.t)(j))));return(0,E.W)((0,d.j)(F,B),A)}(B,A);return(0,C.M)(x,k,F)}})},33030:(pt,R,t)=>{"use strict";t.d(R,{C:()=>j});var e=t(22047),s=t(17636),l=t(26674),E=t(83034),g=t(94963),c=t(92290),y=t(4350),m=t(68326),h=t(17391),f=t(27347),p=t(59731),u=t(43267),d=t(87844),C=t(94399),T=t(10829),D=t(59279),S=t(66342),b=t(24782);const j=(0,d.op)({softmaxCrossEntropy_:function H(F,B,A,k=0,x=f.i.SUM_BY_NONZERO_WEIGHTS){let V=(0,s.YT)(F,"onehotLabels","softmaxCrossEntropy");const W=(0,s.YT)(B,"logits","softmaxCrossEntropy");let Y=null;if(null!=A&&(Y=(0,s.YT)(A,"weights","softmaxCrossEntropy")),(0,l.O3)(V.shape,W.shape,"Error in softmaxCrossEntropy: "),k>0){const it=(0,T.d)(k),at=(0,T.d)(1),q=(0,T.d)(V.shape[1]);V=(0,E.W)((0,p.l)(V,(0,D.j)(at,it)),(0,y.y)(it,q))}const Z=function w(F,B,A=-1){if(-1===A&&(A=B.rank-1),A!==B.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${B.rank} and dim was ${A}`);return(0,e._X)((x,V,W)=>{const Z=(0,h.V)(V,[A],!0),it=(0,D.j)((0,c.w)(V,"float32"),Z);W([x,it]);const at=(0,u.H)((0,p.l)(it,x));return{value:(0,S.c)(at,[A]),gradFunc:(rt,et)=>{const[yt,mt]=et,St=(0,g.SM)(rt.shape,[A]);return[(0,p.l)((0,C.t)(rt,St),(0,D.j)((0,c.w)(yt,"float32"),(0,m.o)(mt))),(0,p.l)((0,C.t)(rt,St),(0,D.j)((0,m.o)(mt),(0,c.w)(yt,"float32")))]}}})(F,B)}(V,W);return(0,b.M)(Z,Y,x)}})},60314:(pt,R,t)=>{"use strict";t.d(R,{N:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({matMul_:function c(m,h,f=!1,p=!1){let u=(0,E.YT)(m,"a","matMul"),d=(0,E.YT)(h,"b","matMul");return[u,d]=(0,l.makeTypesMatch)(u,d),e.T2.runKernel(s.jAQ,{a:u,b:d},{transposeA:f,transposeB:p})}})},56619:(pt,R,t)=>{"use strict";t.d(R,{T:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({max_:function g(y,m=null,h=!1){const p={x:(0,l.YT)(y,"x","max")};return e.T2.runKernel(s.VAI,p,{reductionIndices:m,keepDims:h})}})},40044:(pt,R,t)=>{"use strict";t.d(R,{j:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(29458),c=t(87844),y=t(94399);const h=(0,c.op)({maxPool_:function m(f,p,u,d,C){const T=(0,l.YT)(f,"x","maxPool");let S=T,b=!1;3===T.rank&&(b=!0,S=(0,y.t)(T,[1,T.shape[0],T.shape[1],T.shape[2]])),E.vA(4===S.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${S.rank}.`),E.vA(g.G0(u,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`),g.s_("maxPool",d,C);const j=e.T2.runKernel(s.t3d,{x:S},{filterSize:p,strides:u,pad:d,dimRoundingMode:C});return b?(0,y.t)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},42524:(pt,R,t)=>{"use strict";t.d(R,{e:()=>h});var e=t(611),s=t(30162),l=t(17636),E=t(26674),g=t(29458),c=t(87844),y=t(94399);const h=(0,c.op)({maxPool3d_:function m(f,p=[1,1,1],u,d,C,T="NDHWC"){const D=(0,l.YT)(f,"x","maxPool3d");let S=D,b=!1;4===D.rank&&(b=!0,S=(0,y.t)(D,[1,D.shape[0],D.shape[1],D.shape[2],D.shape[3]])),E.vA(5===S.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${S.rank}.`),E.vA("NDHWC"===T,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${T}`),(0,g.s_)("maxPool3d",d,C);const j=e.T2.runKernel(s.ySp,{x:S},{filterSize:p,strides:u,pad:d,dimRoundingMode:C,dataFormat:T});return b?(0,y.t)(j,[j.shape[1],j.shape[2],j.shape[3],j.shape[4]]):j}})},74659:(pt,R,t)=>{"use strict";t.d(R,{P:()=>h});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269),c=t(92290);const h=(0,t(87844).op)({maximum_:function m(f,p){let u=(0,E.YT)(f,"a","maximum"),d=(0,E.YT)(p,"b","maximum");return[u,d]=(0,l.makeTypesMatch)(u,d),"bool"===u.dtype&&(u=(0,c.w)(u,"int32"),d=(0,c.w)(d,"int32")),(0,g.assertAndGetBroadcastShape)(u.shape,d.shape),e.T2.runKernel(s.LDN,{a:u,b:d})}})},23444:(pt,R,t)=>{"use strict";t.d(R,{i:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({mean_:function g(y,m=null,h=!1){const p={x:(0,l.YT)(y,"x","mean")};return e.T2.runKernel(s.g5A,p,{axis:m,keepDims:h})}})},82825:(pt,R,t)=>{"use strict";t.d(R,{j:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({min_:function g(y,m=null,h=!1){const p={x:(0,l.YT)(y,"x","min")};return e.T2.runKernel(s.lNG,p,{axis:m,keepDims:h})}})},85233:(pt,R,t)=>{"use strict";t.d(R,{B:()=>h});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269),c=t(92290);const h=(0,t(87844).op)({minimum_:function m(f,p){let u=(0,E.YT)(f,"a","minimum"),d=(0,E.YT)(p,"b","minimum");return[u,d]=(0,l.makeTypesMatch)(u,d),"bool"===u.dtype&&(u=(0,c.w)(u,"int32"),d=(0,c.w)(d,"int32")),(0,g.assertAndGetBroadcastShape)(u.shape,d.shape),e.T2.runKernel(s.LG0,{a:u,b:d})}})},11732:(pt,R,t)=>{"use strict";t.d(R,{C:()=>p});var e=t(17636),s=t(26674),l=t(94963),E=t(92290),g=t(23444),c=t(87844),y=t(94399),m=t(32362),h=t(59279);const p=(0,c.op)({moments_:function f(u,d=null,C=!1){u=(0,e.YT)(u,"x","moments");const T=(0,s.Y6)(d,u.shape),D=(0,g.i)(u,T,C);let S=D.shape;C||(S=(0,l.SM)(D.shape,T));const b=(0,m.E)((0,h.j)((0,E.w)(u,"float32"),(0,y.t)(D,S)));return{mean:D,variance:(0,g.i)(b,T,C)}}})},59731:(pt,R,t)=>{"use strict";t.d(R,{l:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({mul_:function c(m,h){let f=(0,E.YT)(m,"a","mul"),p=(0,E.YT)(h,"b","mul");return[f,p]=(0,l.makeTypesMatch)(f,p),e.T2.runKernel(s.xu7,{a:f,b:p})}})},43267:(pt,R,t)=>{"use strict";t.d(R,{H:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({neg_:function g(y){const h={x:(0,l.YT)(y,"x","neg")};return e.T2.runKernel(s.l0G,h)}})},30081:(pt,R,t)=>{"use strict";t.d(R,{W:()=>s});var e=t(26674);function s(l,E,g,c,y,m){null==c&&(c=.5),null==y&&(y=Number.NEGATIVE_INFINITY),null==m&&(m=0);const h=l.shape[0];return g=Math.min(g,h),e.vA(0<=c&&c<=1,()=>`iouThreshold must be in [0, 1], but was '${c}'`),e.vA(2===l.rank,()=>`boxes must be a 2D tensor, but was of rank '${l.rank}'`),e.vA(4===l.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${l.shape[1]}`),e.vA(1===E.rank,()=>"scores must be a 1D tensor"),e.vA(E.shape[0]===h,()=>`scores has incompatible shape with boxes. Expected ${h}, but was ${E.shape[0]}`),e.vA(0<=m&&m<=1,()=>`softNmsSigma must be in [0, 1], but was '${m}'`),{maxOutputSize:g,iouThreshold:c,scoreThreshold:y,softNmsSigma:m}}},96075:(pt,R,t)=>{"use strict";t.d(R,{x:()=>D});var e=t(17636),s=t(26674),l=t(72009),E=t(94963),g=t(56619),c=t(82825),y=t(87844),m=t(53827),h=t(94399),f=t(10829),p=t(51583),u=t(32362),d=t(66342);function T(S,b,w=null){if(0===S.rank)return(0,l.t)(S);if(1!==S.rank&&null===w)return T((0,h.t)(S,[-1]),b,w);if(1===S.rank||"number"==typeof w||Array.isArray(w)&&1===w.length){if(1===b)return(0,d.c)((0,l.t)(S),w);if(b===1/0)return(0,g.T)((0,l.t)(S),w);if(b===-1/0)return(0,c.j)((0,l.t)(S),w);if("euclidean"===b||2===b)return(0,p.R)((0,d.c)((0,m.n)((0,l.t)(S),(0,f.d)(2,"int32")),w));throw new Error(`Error in norm: invalid ord value: ${b}`)}if(Array.isArray(w)&&2===w.length){if(1===b)return(0,g.T)((0,d.c)((0,l.t)(S),w[0]),w[1]-1);if(b===1/0)return(0,g.T)((0,d.c)((0,l.t)(S),w[1]),w[0]);if(b===-1/0)return(0,c.j)((0,d.c)((0,l.t)(S),w[1]),w[0]);if("fro"===b||"euclidean"===b)return(0,p.R)((0,d.c)((0,u.E)(S),w));throw new Error(`Error in norm: invalid ord value: ${b}`)}throw new Error(`Error in norm: invalid axis: ${w}`)}const D=(0,y.op)({norm_:function C(S,b="euclidean",w=null,H=!1){const j=T(S=(0,e.YT)(S,"x","norm"),b,w);let F=j.shape;if(H){const B=(0,s.Y6)(w,S.shape);F=E.SM(j.shape,B)}return(0,h.t)(j,F)}})},66279:(pt,R,t)=>{"use strict";t.d(R,{E:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({notEqual_:function y(h,f){let p=(0,E.YT)(h,"a","notEqual","string_or_numeric"),u=(0,E.YT)(f,"b","notEqual","string_or_numeric");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.ylV,{a:p,b:u})}})},87073:(pt,R,t)=>{"use strict";t.d(R,{M:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({oneHot_:function g(y,m,h=1,f=0,p="int32"){if(m<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${m}`);const d={indices:(0,l.YT)(y,"indices","oneHot","int32")};return e.T2.runKernel(s.urI,d,{dtype:p,depth:m,onValue:h,offValue:f})}})},95032:(pt,R,t)=>{"use strict";t.d(R,{S:()=>g});var e=t(611),s=t(26674),l=t(55349),E=t(20218);function g(c,y="float32"){if((0,s.SA)(c),"complex64"===y){const h=g(c,"float32"),f=(0,E.U)(c,"float32");return(0,l.f)(h,f)}const m=(0,s.FZ)((0,s.Ze)(c),y);return e.T2.makeTensor(m,c,y)}},28692:(pt,R,t)=>{"use strict";t.d(R,{P:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({onesLike_:function g(y){const h={x:(0,l.YT)(y,"x","onesLike")};return e.T2.runKernel(s.LWX,h)}})},87844:(pt,R,t)=>{"use strict";t.d(R,{op:()=>E});var e=t(611),s=t(26674);const l="__op";function E(g){const c=Object.keys(g);if(1!==c.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${c.length} keys.`);let y=c[0];const m=g[y];y.endsWith("_")&&(y=y.substring(0,y.length-1)),y+=l;const h=(...f)=>{e.T2.startScope(y);try{const p=m(...f);return(0,s.yL)(p)&&console.error("Cannot return a Promise inside of tidy."),e.T2.endScope(p),p}catch(p){throw e.T2.endScope(null),p}};return Object.defineProperty(h,"name",{value:y,configurable:!0}),h}},54472:(pt,R,t)=>{"use strict";t.d(R,{e:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({pad_:function g(y,m,h=0){const f=(0,l.YT)(y,"x","pad");if(0===f.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return e.T2.runKernel(s.ODT,{x:f},{paddings:m,constantValue:h})}})},53827:(pt,R,t)=>{"use strict";t.d(R,{n:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({pow_:function c(m,h){let f=(0,E.YT)(m,"base","pow"),p=(0,E.YT)(h,"exp","pow");return[f,p]=(0,l.makeTypesMatch)(f,p),e.T2.runKernel(s.pyJ,{a:f,b:p})}})},62655:(pt,R,t)=>{"use strict";t.d(R,{N:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({prelu_:function g(y,m){const h=(0,l.YT)(y,"x","prelu"),f=(0,l.YT)(m,"alpha","prelu");return e.T2.runKernel(s.Ncv,{x:h,alpha:f})}})},54969:(pt,R,t)=>{"use strict";t.d(R,{ai:()=>l,yU:()=>g});var e=t(48814);class l{constructor(d,C,T,D,S){this.mean=d,this.stdDev=C,this.dtype=T,this.nextVal=NaN,this.truncated=D,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const b=S||Math.random();this.random=e.alea(b.toString())}nextValue(){if(!isNaN(this.nextVal)){const D=this.nextVal;return this.nextVal=NaN,D}let d,C,T=!1;for(;!T;){let D,S,b;do{D=2*this.random()-1,S=2*this.random()-1,b=D*D+S*S}while(b>=1||0===b);const w=Math.sqrt(-2*Math.log(b)/b);d=this.mean+this.stdDev*D*w,C=this.mean+this.stdDev*S*w,(!this.truncated||this.isValidTruncated(d))&&(T=!0)}return(!this.truncated||this.isValidTruncated(C))&&(this.nextVal=this.convertValue(C)),this.convertValue(d)}convertValue(d){return null==this.dtype||"float32"===this.dtype?d:Math.round(d)}isValidTruncated(d){return d<=this.upper&&d>=this.lower}}class g{constructor(d=0,C=1,T,D){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=d,this.range=C-d,this.dtype=T,null==D&&(D=Math.random()),"number"==typeof D&&(D=D.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${d} - ${C} <= 1 and dtype is not float`);this.random=e.alea(D)}convertValue(d){return this.canReturnFloat()?d:Math.round(d)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},41222:(pt,R,t)=>{"use strict";t.d(R,{F:()=>c});var e=t(26674),s=t(75987),l=t(87844),E=t(54969);const c=(0,l.op)({randomNormal_:function g(y,m=0,h=1,f,p){if((0,e.SA)(y),null!=f&&"bool"===f)throw new Error(`Unsupported data type ${f}`);const u=new E.ai(m,h,f,!1,p),d=(0,s.r)(y,f);for(let C=0;C<d.values.length;C++)d.values[C]=u.nextValue();return d.toTensor()}})},65413:(pt,R,t)=>{"use strict";t.d(R,{Y:()=>c});var e=t(26674),s=t(75987),l=t(87844),E=t(54969);const c=(0,l.op)({randomUniform_:function g(y,m=0,h=1,f="float32",p){(0,e.SA)(y);const u=(0,s.r)(y,f),d=new E.yU(m,h,null,p);for(let C=0;C<u.values.length;C++)u.values[C]=d.nextValue();return u.toTensor()}})},16412:(pt,R,t)=>{"use strict";t.d(R,{y:()=>l});var e=t(611),s=t(30162);function l(E,g,c=1,y="float32"){if(0===c)throw new Error("Cannot have a step of zero");return e.T2.runKernel(s.Q6t,{},{start:E,stop:g,step:c,dtype:y})}},69909:(pt,R,t)=>{"use strict";t.d(R,{x:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({real_:function g(y){const h={input:(0,l.YT)(y,"input","real")};return e.T2.runKernel(s.LRy,h)}})},98611:(pt,R,t)=>{"use strict";t.d(R,{V:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({relu_:function g(y){const h={x:(0,l.YT)(y,"x","relu")};return e.T2.runKernel(s.fUj,h)}})},55065:(pt,R,t)=>{"use strict";t.d(R,{j:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({relu6_:function g(y){const h={x:(0,l.YT)(y,"x","relu6")};return e.T2.runKernel(s.P_L,h)}})},94399:(pt,R,t)=>{"use strict";t.d(R,{t:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({reshape_:function g(y,m){const f={x:(0,l.YT)(y,"x","reshape","string_or_numeric")};return e.T2.runKernel(s.R23,f,{shape:m})}})},21067:(pt,R,t)=>{"use strict";t.d(R,{B:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({reverse_:function g(y,m){const f={x:(0,l.YT)(y,"x","reverse")};return e.T2.runKernel(s.D7i,f,{dims:m})}})},23821:(pt,R,t)=>{"use strict";t.d(R,{L:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({round_:function g(y){const h={x:(0,l.YT)(y,"x","round")};return e.T2.runKernel(s.hVg,h)}})},90313:(pt,R,t)=>{"use strict";t.d(R,{Z:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({rsqrt_:function g(y){const h={x:(0,l.YT)(y,"x","rsqrt","float32")};return e.T2.runKernel(s.TOR,h)}})},10829:(pt,R,t)=>{"use strict";t.d(R,{d:()=>l});var e=t(21710),s=t(98682);function l(E,g){if(((0,e.isTypedArray)(E)&&"string"!==g||Array.isArray(E))&&"complex64"!==g)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===g&&(0,e.isTypedArray)(E)&&!(E instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.Q)(E,[],[],g)}},26966:(pt,R,t)=>{"use strict";t.d(R,{W:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({selu_:function g(y){const h={x:(0,l.YT)(y,"x","selu")};return e.T2.runKernel(s.u$b,h)}})},62597:(pt,R,t)=>{"use strict";t.d(R,{X:()=>s,j:()=>e});const e=1.7580993408473768,s=1.0507009873554805},48285:(pt,R,t)=>{"use strict";t.d(R,{w:()=>m});var e=t(17636),s=t(26674),l=t(12809),E=t(73595),g=t(87844),c=t(94399);const m=(0,g.op)({separableConv2d_:function y(h,f,p,u,d,C=[1,1],T="NHWC"){const D=(0,e.YT)(h,"x","separableConv2d"),S=(0,e.YT)(f,"depthwiseFilter","separableConv2d"),b=(0,e.YT)(p,"pointwiseFilter","separableConv2d");let w=D,H=!1;if(3===D.rank&&(H=!0,w=(0,c.t)(D,[1,D.shape[0],D.shape[1],D.shape[2]])),"NCHW"===T)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.vA(4===w.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${w.rank}.`),s.vA(4===S.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${S.rank}.`),s.vA(4===b.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${S.rank}.`),s.vA(1===b.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${b.shape[0]}.`),s.vA(1===b.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${b.shape[1]}.`);const j=S.shape[2],F=S.shape[3];s.vA(b.shape[2]===j*F,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${j*F}, but got ${b.shape[2]}.`);const B=(0,E.G)(w,S,u,d,T,C),k=(0,l.X)(B,b,1,"valid",T);return H?(0,c.t)(k,[k.shape[1],k.shape[2],k.shape[3]]):k}})},53205:(pt,R,t)=>{"use strict";t.d(R,{r:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sigmoid_:function g(y){const h={x:(0,l.YT)(y,"x","sigmoid","float32")};return e.T2.runKernel(s.vI1,h)}})},32395:(pt,R,t)=>{"use strict";t.d(R,{G:()=>m});var e=t(35213),s=t(7684),l=t(87844),E=t(94399),g=t(94063),c=t(41494);const m=(0,l.op)({frame_:function y(h,f,p,u=!1,d=0){let C=0;const T=[];for(;C+f<=h.size;)T.push((0,g.d)(h,C,f)),C+=p;if(u)for(;C<h.size;){const D=C+f-h.size,S=(0,e.x)([(0,g.d)(h,C,f-D),(0,s.G)([D],d)]);T.push(S),C+=p}return 0===T.length?(0,c.K)([],[0,f]):(0,E.t)((0,e.x)(T),[T.length,f])}})},79208:(pt,R,t)=>{"use strict";t.d(R,{W:()=>E});var e=t(87844),s=t(37369);const E=(0,e.op)({hammingWindow_:function l(g){return(0,s._)(g,.54,.46)}})},92822:(pt,R,t)=>{"use strict";t.d(R,{_:()=>E});var e=t(87844),s=t(37369);const E=(0,e.op)({hannWindow_:function l(g){return(0,s._)(g,.5,.5)}})},76221:(pt,R,t)=>{"use strict";t.d(R,{u:()=>m});var e=t(59731),s=t(87844),l=t(37369),E=t(40638),g=t(32395),c=t(92822);const m=(0,s.op)({stft_:function y(h,f,p,u,d=c._){null==u&&(u=(0,l.F)(f));const C=(0,g.G)(h,f,p),T=(0,e.l)(C,d(f));return(0,E.z)(T,u)}})},37369:(pt,R,t)=>{"use strict";t.d(R,{F:()=>s,_:()=>l});var e=t(48449);function s(E){return Math.floor(Math.pow(2,Math.ceil(Math.log(E)/Math.log(2))))}function l(E,g,c){const y=1-E%2,m=new Float32Array(E);for(let h=0;h<E;++h){const f=2*Math.PI*h/(E+y-1);m[h]=g-c*Math.cos(f)}return(0,e.t)(m,"float32")}},20415:(pt,R,t)=>{"use strict";t.d(R,{F:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sin_:function g(y){const h={x:(0,l.YT)(y,"x","sin","float32")};return e.T2.runKernel(s.hql,h)}})},91071:(pt,R,t)=>{"use strict";t.d(R,{L:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sinh_:function g(y){const h={x:(0,l.YT)(y,"x","sinh")};return e.T2.runKernel(s.J3C,h)}})},94063:(pt,R,t)=>{"use strict";t.d(R,{d:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({slice_:function g(y,m,h){const f=(0,l.YT)(y,"x","slice","string_or_numeric");if(0===f.rank)throw new Error("Slicing scalar is not possible");return e.T2.runKernel(s.JiE,{x:f},{begin:m,size:h})}})},14638:(pt,R,t)=>{"use strict";t.d(R,{Q:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(94063);const c=(0,l.op)({slice1d_:function g(y,m,h){const f=(0,e.YT)(y,"x","slice1d");return s.vA(1===f.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,[m],[h])}})},81209:(pt,R,t)=>{"use strict";t.d(R,{z:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(94063);const c=(0,l.op)({slice2d_:function g(y,m,h){const f=(0,e.YT)(y,"x","slice2d");return s.vA(2===f.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,m,h)}})},29660:(pt,R,t)=>{"use strict";t.d(R,{w:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(94063);const c=(0,l.op)({slice3d_:function g(y,m,h){const f=(0,e.YT)(y,"x","slice3d");return s.vA(3===f.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,m,h)}})},24167:(pt,R,t)=>{"use strict";t.d(R,{R:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(94063);const c=(0,l.op)({slice4d_:function g(y,m,h){const f=(0,e.YT)(y,"x","slice4d");return s.vA(4===f.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${f.rank} tensor`),(0,E.d)(f,m,h)}})},1986:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{assertParamsValid:()=>E,computeFlatOffset:()=>S,computeOutShape:()=>c,getNormalizedAxes:()=>f,isSliceContinous:()=>D,maskToAxes:()=>g,parseSliceParams:()=>b,sliceInfo:()=>w,startForAxis:()=>C,startIndicesWithElidedDims:()=>p,stopForAxis:()=>T,stopIndicesWithElidedDims:()=>u,stridesForAxis:()=>d,stridesWithElidedDims:()=>y});var e=t(26674);const s=-2,l=-1;function E(F,B,A){const k=F.shape.length;e.vA(k===B.length,()=>`Error in slice${k}D: Length of begin ${B} must match the rank of the array (${k}).`),e.vA(k===A.length,()=>`Error in slice${k}D: Length of size ${A} must match the rank of the array (${k}).`);for(let x=0;x<k;++x)e.vA(B[x]+A[x]<=F.shape[x],()=>`Error in slice${k}D: begin[${x}] + size[${x}] (${B[x]+A[x]}) would overflow input.shape[${x}] (${F.shape[x]})`)}function g(F){const B=[];let A=0;for(;F>0;)1&F&&B.push(A),F/=2,A++;return B}function c(F,B,A){const k=[];for(let x=0;x<F.length;x++)k[x]=Math.ceil((B[x]-F[x])/A[x]);return k}function y(F,B,A,k){const x=[...F];for(let V=x.length;V<k.length;V++)x.push(1);for(let V=0;V<A;V++)0===V?x[B]=1:(x.splice(B,0,1),x.pop());return x}function m(F,B,A){return A<=F?A:A-(B-1)}function h(F,B){const A=[];for(let k=0;k<F;k++)A.push(B+k);return A}function f(F,B,A,k,x,V,W,Y,Z){const it=F.length;let at=new Array(it),q=new Array(it),ot=new Array(it);if(B.length&&A>0){const rt=B[0],et=A+1;at=p(W,rt,et,k,F),q=u(Y,rt,et,x,F),ot=y(V,rt,et,F)}else for(let rt=0;rt<it;rt++)at[rt]=C(W,k,V,F,rt,Z),q[rt]=T(Y,x,V,F,rt,Z),ot[rt]=d(V,rt,Z);return{begin:at,end:q,strides:ot}}function p(F,B,A,k,x){const V=[...x],W=h(A,B);for(let Y=0;Y<V.length;Y++)if(W.indexOf(Y)>-1)V[Y]=0;else{const Z=m(B,A,Y);let it=k[Z];F&1<<Z&&(it=0),V[Y]=it}return V}function u(F,B,A,k,x){const V=[...x],W=h(A,B);for(let Y=0;Y<V.length;Y++)if(W.indexOf(Y)>-1)V[Y]=Number.MAX_SAFE_INTEGER;else{const Z=m(B,A,Y);let it=k[Z];F&1<<Z&&(it=Number.MAX_SAFE_INTEGER),V[Y]=it}for(let Y=0;Y<V.length;Y++)V[Y]<0&&(V[Y]+=x[Y]),V[Y]=e.qE(0,V[Y],x[Y]);return V}function d(F,B,A){let k=F[B];return(A&1<<B||null==k)&&(k=1),k}function C(F,B,A,k,x,V){let W=B[x];(F&1<<x||V&1<<x||null==W)&&(W=(A[x]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const Z=k[x];return W<0&&(W+=Z),W=e.qE(0,W,Z-1),W}function T(F,B,A,k,x,V){let W=B[x];const Y=A[x]||1;(F&1<<x||V&1<<x||null==W)&&(W=Y>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const Z=k[x];return W<0&&(W+=Z),W=Y>0?e.qE(0,W,Z):e.qE(-1,W,Z-1),W}function D(F,B,A){let k=A.length;for(let x=0;x<A.length;x++)if(A[x]>1){k=x;break}for(let x=k+1;x<A.length;x++)if(B[x]>0||A[x]!==F[x])return!1;return!0}function S(F,B){let A=F.length>0?F[F.length-1]:1;for(let k=0;k<F.length-1;k++)A+=F[k]*B[k];return A}function b(F,B,A){let k;const x=F.shape.length;let V;return k="number"==typeof B?[B,...new Array(x-1).fill(0)]:B.length<x?B.concat(new Array(x-B.length).fill(0)):B.slice(),k.forEach(W=>{e.vA(-1!==W,()=>"slice() does not support negative begin indexing.")}),V=null==A?new Array(x).fill(-1):"number"==typeof A?[A,...new Array(x-1).fill(-1)]:A.length<x?A.concat(new Array(x-A.length).fill(-1)):A,V=V.map((W,Y)=>W>=0?W:(e.vA(-1===W,()=>`Negative size values should be exactly -1 but got ${W} for the slice() size at index ${Y}.`),F.shape[Y]-k[Y])),[k,V]}function w(F,B,A,k,x,V,W,Y,Z){let it;if(null==k?(it=new Array(B.length),it.fill(1)):it=k,null!=W&&W&W-1)throw new Error("Multiple ellipses in slice is not allowed.");let at=!1;const q={dims:it.length,numAddAxisAfterEllipsis:0,begin:B.slice(),end:A.slice(),strides:it.slice(),beginMask:x,endMask:V,ellipsisMask:W,newAxisMask:Y,shrinkAxisMask:Z};for(let Ht=0;Ht<q.dims;Ht++)at&&1<<Ht&Y&&q.numAddAxisAfterEllipsis++,1<<Ht&W&&(at=!0);at||(q.ellipsisMask|=1<<q.dims,q.dims++);const ot={dims:F.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function H(F,B){B.beginMask=0,B.endMask=0,B.shrinkAxisMask=0;let A=0;B.beginValid=null!=F.begin,B.endValid=null!=F.end,B.begin=new Array(B.dims),B.end=new Array(B.dims),B.strides=new Array(B.dims),B.finalShapeGatherIndices=[],B.finalShapeGatherIndicesSparse=[],B.inputShapeGatherIndicesSparse=new Array(B.dims);for(let k=0;k<F.dims;k++)if(1<<k&F.ellipsisMask){const x=Math.min(B.dims-(F.dims-k)+1+F.numAddAxisAfterEllipsis,B.dims);for(;A<x;A++)B.begin[A]=0,B.end[A]=0,B.strides[A]=1,B.beginMask|=1<<A,B.endMask|=1<<A,B.finalShapeGatherIndices.push(A),B.finalShapeGatherIndicesSparse.push(-1),B.inputShapeGatherIndicesSparse[A]=k}else if(1<<k&F.newAxisMask)B.finalShapeGatherIndices.push(s),B.finalShapeGatherIndicesSparse.push(-1);else{if(A===B.begin.length)throw Error(`Index out of range using input dim ${A}; input has only ${B.dims} dims, ${B.begin.length}.`);null!=F.begin&&(B.begin[A]=F.begin[k]),null!=F.end&&(B.end[A]=F.end[k]),B.strides[A]=F.strides[k],F.beginMask&1<<k&&(B.beginMask|=1<<A),F.endMask&1<<k&&(B.endMask|=1<<A),F.shrinkAxisMask&1<<k?(B.finalShapeGatherIndices.push(l),B.finalShapeGatherIndicesSparse.push(-1),B.shrinkAxisMask|=1<<A):(B.finalShapeGatherIndices.push(A),B.finalShapeGatherIndicesSparse.push(k)),B.inputShapeGatherIndicesSparse[A]=k,A++}}(q,ot);let rt=!0,et=!0,yt=!0;const mt=[],St=[];for(let Ht=0;Ht<F.length;++Ht){if(0===ot.strides[Ht])throw Error(`strides[${Ht}] must be non-zero`);const ue=!!(ot.shrinkAxisMask&1<<Ht),Xt=F[Ht];if(-1===Xt){mt.push(ue?1:-1);continue}const ie=[ot.beginMask&1<<Ht,ot.endMask&1<<Ht],ae=[ot.strides[Ht]>0?0:-1,ot.strides[Ht]>0?Xt:Xt-1];if(ue&&ot.strides[Ht]<=0)throw Error("only stride 1 allowed on non-range indexing.");yt=yt&&1===ot.strides[Ht];const ne=!!(ot.beginMask&1<<Ht&&ot.endMask&1<<Ht);if(ot.beginValid&&ot.endValid){if(ue){const zt=ot.begin[Ht]<0?Xt+ot.begin[Ht]:ot.begin[Ht];if(ot.begin[Ht]=zt,ot.end[Ht]=ot.begin[Ht]+1,zt<0||zt>=Xt)throw Error(`slice index ${ot.begin[Ht]} of dimension ${Ht} out of bounds.`)}else ot.begin[Ht]=j(ot.begin[Ht],0,ot.strides[Ht],Xt,ie,ae),ot.end[Ht]=j(ot.end[Ht],1,ot.strides[Ht],Xt,ie,ae);const Ct=1===ot.strides[Ht]&&0===ot.begin[Ht]&&ot.end[Ht]===Xt;rt=rt&&Ct,et=et&&(0===Ht&&1===ot.strides[Ht]||Ct)}else rt=rt&&1===ot.strides[Ht]&&ne,et=et&&(0===Ht&&1===ot.strides[Ht]||ne);let Pe,Ie=!1;if(ot.beginValid&&ot.endValid?(Pe=ot.end[Ht]-ot.begin[Ht],Ie=!0):ue?(Pe=1,Ie=!0):ne&&Xt>=0&&(Pe=ot.strides[Ht]<0?-Xt:Xt,Ie=!0),Ie){let Ct;Ct=0===Pe||Pe<0!=ot.strides[Ht]<0?0:Math.trunc(Pe/ot.strides[Ht])+(Pe%ot.strides[Ht]!=0?1:0),mt.push(Ct)}else mt.push(-1)}for(let Ht=0;Ht<ot.finalShapeGatherIndices.length;++Ht){const ue=ot.finalShapeGatherIndices[Ht];ue>=0?St.push(mt[ue]):ue===s&&St.push(1)}return{finalShapeSparse:St.filter((Ht,ue)=>ot.finalShapeGatherIndices[ue]!==s),finalShape:St,isIdentity:rt,sliceDim0:et,isSimpleSlice:yt,begin:ot.begin,end:ot.end,strides:ot.strides}}function j(F,B,A,k,x,V){if(x[B])return A>0?V[B]:V[B+1&1];{const W=F<0?k+F:F;return W<V[0]?V[0]:W>V[1]?V[1]:W}}},52431:(pt,R,t)=>{"use strict";t.d(R,{V:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({softmax_:function g(y,m=-1){const h=(0,l.YT)(y,"logits","softmax","float32");if(-1===m&&(m=h.rank-1),m!==h.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${h.rank} and dim was ${m}`);return e.T2.runKernel(s.rFG,{logits:h},{dim:m})}})},14181:(pt,R,t)=>{"use strict";t.d(R,{l:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({softplus_:function g(y){const h={x:(0,l.YT)(y,"x","softplus")};return e.T2.runKernel(s.Fin,h)}})},93713:(pt,R,t)=>{"use strict";t.d(R,{e:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({spaceToBatchND_:function c(m,h,f){const p=(0,l.YT)(m,"x","spaceToBatchND");return E.vA(p.rank>=1+h.length,()=>`input rank ${p.rank} should be > than [blockShape] ${h.length}`),E.vA(f.length===h.length,()=>`paddings.shape[0] ${f.length} must be equal to [blockShape] ${h.length}`),E.vA(p.shape.reduce((C,T,D)=>D>0&&D<=h.length?C&&(T+f[D-1][0]+f[D-1][1])%h[D-1]==0:C,!0),()=>`input spatial dimensions ${p.shape.slice(1)} with paddings ${f.toString()} must be divisible by blockShapes ${h.toString()}`),e.T2.runKernel(s.A8B,{x:p},{blockShape:h,paddings:f})}})},19702:(pt,R,t)=>{"use strict";t.d(R,{o:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sparseFillEmptyRows_:function g(y,m,h,f){const p=(0,l.YT)(y,"indices","sparseFillEmptyRows","int32"),u=(0,l.YT)(m,"values","sparseFillEmptyRows"),d=(0,l.YT)(h,"denseShape","sparseFillEmptyRows","int32"),C=(0,l.YT)(f,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==p.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${p.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==d.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${d.shape}`);if(0!==C.rank)throw new Error(`Default value should be a scalar but received shape ${C.shape}`);const D=e.T2.runKernel(s.C8s,{indices:p,values:u,denseShape:d,defaultValue:C});return{outputIndices:D[0],outputValues:D[1],emptyRowIndicator:D[2],reverseIndexMap:D[3]}}})},56637:(pt,R,t)=>{"use strict";t.d(R,{Z:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sparseReshape_:function g(y,m,h){const f=(0,l.YT)(y,"inputIndices","sparseReshape","int32"),p=(0,l.YT)(m,"inputShape","sparseReshape","int32"),u=(0,l.YT)(h,"newShape","sparseReshape","int32");if(2!==f.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${f.shape}`);if(1!==p.rank)throw new Error(`Input shape should be Tensor1D but received shape ${p.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const C=e.T2.runKernel(s.BoJ,{inputIndices:f,inputShape:p,newShape:u});return{outputIndices:C[0],outputShape:C[1]}}})},46764:(pt,R,t)=>{"use strict";t.d(R,{t:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sparseSegmentMean_:function g(y,m,h){const f=(0,l.YT)(y,"data","sparseSegmentMean"),p=(0,l.YT)(m,"indices","sparseSegmentMean","int32"),u=(0,l.YT)(h,"segmentIds","sparseSegmentMean","int32");if(f.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==p.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${p.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);return e.T2.runKernel(s.L6G,{data:f,indices:p,segmentIds:u})}})},46782:(pt,R,t)=>{"use strict";t.d(R,{F:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sparseSegmentSum_:function g(y,m,h){const f=(0,l.YT)(y,"data","sparseSegmentSum"),p=(0,l.YT)(m,"indices","sparseSegmentSum","int32"),u=(0,l.YT)(h,"segmentIds","sparseSegmentSum","int32");if(f.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==p.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${p.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);return e.T2.runKernel(s.DvZ,{data:f,indices:p,segmentIds:u})}})},90694:(pt,R,t)=>{"use strict";t.d(R,{h:()=>c});var e=t(611),s=t(30162),l=t(26674);const c=(0,t(87844).op)({fft_:function g(y){return(0,l.vA)("complex64"===y.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${y.dtype}.`),e.T2.runKernel(s.rGP,{input:y})}})},15245:(pt,R,t)=>{"use strict";t.d(R,{K:()=>c});var e=t(611),s=t(30162),l=t(26674);const c=(0,t(87844).op)({ifft_:function g(y){return(0,l.vA)("complex64"===y.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${y.dtype}.`),e.T2.runKernel(s.OAQ,{input:y})}})},43:(pt,R,t)=>{"use strict";t.d(R,{g:()=>d});var e=t(55349),s=t(35213),l=t(62823),E=t(59731),g=t(87844),c=t(69909),y=t(94399),m=t(21067),h=t(10829),f=t(94063),p=t(15245);const d=(0,g.op)({irfft_:function u(C){const T=C.shape[C.shape.length-1],D=C.size/T;let S;if(T<=2){const b=(0,y.t)(C,[D,T]);S=(0,p.K)(b)}else{const b=[D,2*(T-1)],w=(0,y.t)((0,c.x)(C),[D,T]),H=(0,y.t)((0,l.n)(C),[D,T]),j=(0,m.B)((0,f.d)(w,[0,1],[D,T-2]),1),F=(0,E.l)((0,m.B)((0,f.d)(H,[0,1],[D,T-2]),1),(0,h.d)(-1)),B=(0,s.x)([w,j],1),A=(0,s.x)([H,F],1),k=(0,y.t)((0,e.f)(B,A),[b[0],b[1]]);S=(0,p.K)(k)}if(S=(0,c.x)(S),3===C.rank&&0!==C.shape[0]){const b=S,w=C.shape[0];S=(0,y.t)(S,[w,S.shape[0]/w,S.shape[1]]),b.dispose()}return S}})},40638:(pt,R,t)=>{"use strict";t.d(R,{z:()=>C});var e=t(26674),s=t(55349),l=t(35213),E=t(62823),g=t(87844),c=t(69909),y=t(94399),m=t(94063),h=t(91517),f=t(20218),p=t(44714),u=t(90694);const C=(0,g.op)({rfft_:function d(T,D){(0,e.vA)("float32"===T.dtype,()=>`The dtype for rfft() must be real value but got ${T.dtype}`);let S=T.shape[T.shape.length-1];const b=T.size/S;let w;if(null!=D&&D<S){const Y=T.shape.map(it=>0),Z=T.shape.map(it=>it);Z[T.shape.length-1]=D,w=(0,m.d)(T,Y,Z),S=D}else if(null!=D&&D>S){const Y=T.shape.map(Z=>Z);Y[T.shape.length-1]=D-S,w=(0,l.x)([T,(0,f.U)(Y)],T.shape.length-1),S=D}else w=T;const H=(0,p.P)(w),j=(0,y.t)((0,s.f)(w,H),[b,S]),F=(0,u.h)(j),B=Math.floor(S/2)+1,A=(0,c.x)(F),k=(0,E.n)(F),x=(0,h.l)(A,[B,S-B],A.shape.length-1),V=(0,h.l)(k,[B,S-B],k.shape.length-1),W=w.shape.slice();return W[w.shape.length-1]=B,(0,y.t)((0,s.f)(x[0],V[0]),W)}})},91517:(pt,R,t)=>{"use strict";t.d(R,{l:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({split_:function g(y,m,h=0){const p={x:(0,l.YT)(y,"x","split")};return e.T2.runKernel(s.Blb,p,{numOrSizeSplits:m,axis:h})}})},51583:(pt,R,t)=>{"use strict";t.d(R,{R:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({sqrt_:function g(y){const h={x:(0,l.YT)(y,"x","sqrt","float32")};return e.T2.runKernel(s.dFH,h)}})},32362:(pt,R,t)=>{"use strict";t.d(R,{E:()=>g});var e=t(611),s=t(17636);const g=(0,t(87844).op)({square_:function E(c){const y=(0,s.YT)(c,"x","square");return e.T2.runKernel("Square",{x:y},{})}})},24976:(pt,R,t)=>{"use strict";t.d(R,{P:()=>m});var e=t(611),s=t(30162),l=t(14548),E=t(17636),g=t(9269);const m=(0,t(87844).op)({squaredDifference_:function y(h,f){let p=(0,E.YT)(h,"a","squaredDifference"),u=(0,E.YT)(f,"b","squaredDifference");return[p,u]=(0,l.makeTypesMatch)(p,u),(0,g.assertAndGetBroadcastShape)(p.shape,u.shape),e.T2.runKernel(s.Ddj,{a:p,b:u},{})}})},41621:(pt,R,t)=>{"use strict";t.d(R,{r:()=>c});var e=t(17636),s=t(26674),l=t(87844),E=t(94399);const c=(0,l.op)({squeeze_:function g(y,m){const h=(0,e.YT)(y,"x","squeeze","string_or_numeric");return(0,E.t)(h,(0,s.gx)(h.shape,m).newShape)}})},92885:(pt,R,t)=>{"use strict";t.d(R,{t:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({stack_:function c(m,h=0){const f=(0,l.j1)(m,"tensors","stack","string_or_numeric");return E.vA(f.length>=1,()=>"Pass at least one tensor to tf.stack"),f.length>0&&E.vA(h<=f[0].rank,()=>"Axis must be <= rank of the tensor"),e.T2.runKernel(s.mM$,f,{axis:h})}})},72079:(pt,R,t)=>{"use strict";t.d(R,{P:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({step_:function g(y,m=0){const f={x:(0,l.YT)(y,"x","step")};return e.T2.runKernel(s.pnw,f,{alpha:m})}})},41342:(pt,R,t)=>{"use strict";t.d(R,{E:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({staticRegexReplace_:function g(y,m,h,f=!0){const p=(0,l.YT)(y,"input","staticRegexReplace","string");return e.T2.runKernel(s.GZp,{x:p},{pattern:m,rewrite:h,replaceGlobal:f})}})},37500:(pt,R,t)=>{"use strict";t.d(R,{A:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({stringNGrams_:function g(y,m,h,f,p,u,d,C){const T=(0,l.YT)(y,"data","stringNGrams","string");if("string"!==T.dtype)throw new Error("Data must be of datatype string");if(1!==T.shape.length)throw new Error(`Data must be a vector, saw: ${T.shape}`);const D=(0,l.YT)(m,"dataSplits","stringNGrams");if("int32"!==D.dtype)throw new Error("Data splits must be of datatype int32");const w=e.T2.runKernel(s.YAb,{data:T,dataSplits:D},{separator:h,nGramWidths:f,leftPad:p,rightPad:u,padWidth:d,preserveShortSequences:C});return{nGrams:w[0],nGramsSplits:w[1]}}})},74305:(pt,R,t)=>{"use strict";t.d(R,{c:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({stringSplit_:function g(y,m,h=!0){const f=(0,l.YT)(y,"input","stringSplit","string"),p=(0,l.YT)(m,"delimiter","stringSplit","string");if(1!==f.rank)throw new Error(`Input should be Tensor1D but received shape ${f.shape}`);if(0!==p.rank)throw new Error(`Delimiter should be a scalar but received shape ${p.shape}`);const C=e.T2.runKernel(s.iW0,{input:f,delimiter:p},{skipEmpty:h});return{indices:C[0],values:C[1],shape:C[2]}}})},45629:(pt,R,t)=>{"use strict";t.d(R,{N:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({stringToHashBucketFast_:function g(y,m){const h=(0,l.YT)(y,"input","stringToHashBucketFast","string"),f={numBuckets:m};if(m<=0)throw new Error("Number of buckets must be at least 1");return e.T2.runKernel(s.$jE,{input:h},f)}})},59279:(pt,R,t)=>{"use strict";t.d(R,{j:()=>y});var e=t(611),s=t(30162),l=t(14548),E=t(17636);const y=(0,t(87844).op)({sub_:function c(m,h){let f=(0,E.YT)(m,"a","sub"),p=(0,E.YT)(h,"b","sub");return[f,p]=(0,l.makeTypesMatch)(f,p),e.T2.runKernel(s.PbM,{a:f,b:p})}})},66342:(pt,R,t)=>{"use strict";t.d(R,{c:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(92290);const y=(0,t(87844).op)({sum_:function c(m,h=null,f=!1){let p=(0,l.YT)(m,"x","sum");return"bool"===p.dtype&&(p=(0,E.w)(p,"int32")),e.T2.runKernel(s.WuN,{x:p},{axis:h,keepDims:f})}})},86580:(pt,R,t)=>{"use strict";t.d(R,{y:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({tanh_:function g(y){const h={x:(0,l.YT)(y,"x","tanh","float32")};return e.T2.runKernel(s.iuW,h)}})},74544:(pt,R,t)=>{"use strict";t.d(R,{O:()=>l});var e=t(17636),s=t(98682);function l(E,g,c){const y=(0,e.MZ)(E,c);return(0,s.Q)(E,g,y,c)}},48449:(pt,R,t)=>{"use strict";t.d(R,{t:()=>E});var e=t(17636),s=t(26674),l=t(98682);function E(g,c){(0,s.HO)(g);const y=(0,e.MZ)(g,c);if(1!==y.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,l.Q)(g,null,y,c)}},41494:(pt,R,t)=>{"use strict";t.d(R,{K:()=>E});var e=t(17636),s=t(26674),l=t(98682);function E(g,c,y){if((0,s.HO)(g),null!=c&&2!==c.length)throw new Error("tensor2d() requires shape to have two numbers");const m=(0,e.MZ)(g,y);if(2!==m.length&&1!==m.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===m.length&&null==c)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,l.Q)(g,c,m,y)}},86691:(pt,R,t)=>{"use strict";t.d(R,{$:()=>E});var e=t(17636),s=t(26674),l=t(98682);function E(g,c,y){if((0,s.HO)(g),null!=c&&3!==c.length)throw new Error("tensor3d() requires shape to have three numbers");const m=(0,e.MZ)(g,y);if(3!==m.length&&1!==m.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===m.length&&null==c)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,l.Q)(g,c,m,y)}},98682:(pt,R,t)=>{"use strict";t.d(R,{Q:()=>g});var e=t(611),s=t(82891),l=t(26674),E=t(21710);function g(c,y,m,h){if(null==h)h=(0,l.X$)(c);else if("complex64"===h)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.Nw)(c)||(0,s.Oj)(c)){if("float32"!==h&&"int32"!==h)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${h}.`);return e.T2.backend.createTensorFromGPUData(c,y||m,h)}if(!(0,E.isTypedArray)(c)&&!Array.isArray(c)&&"number"!=typeof c&&"boolean"!=typeof c&&"string"!=typeof c)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=y){(0,l.SA)(y);const f=(0,l.Ze)(y),p=(0,l.Ze)(m);(0,l.vA)(f===p,()=>`Based on the provided shape, [${y}], the tensor should have ${f} values but has ${p}`);for(let u=0;u<m.length;++u){const C=u!==m.length-1||m[u]!==(0,l.Ze)(y.slice(u));(0,l.vA)(m[u]===y[u]||!C,()=>`Error creating a new Tensor. Inferred shape (${m}) does not match the provided shape (${y}). `)}}return!(0,E.isTypedArray)(c)&&!Array.isArray(c)&&(c=[c]),y=y||m,c="string"!==h?(0,E.toTypedArray)(c,h):(0,E.flatten)(c,[],!0),e.T2.makeTensor(c,y,h)}},36409:(pt,R,t)=>{"use strict";t.d(R,{V:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({tile_:function c(m,h){const f=(0,l.YT)(m,"x","tile","string_or_numeric");return E.vA(f.rank===h.length,()=>`Error in transpose: rank of input ${f.rank} must match length of reps ${h}.`),e.T2.runKernel(s.FAs,{x:f},{reps:h})}})},77914:(pt,R,t)=>{"use strict";t.d(R,{m:()=>u});var e=t(611),s=t(47054),l=t(30162),E=t(17636),g=t(26674),c=t(55349),y=t(62823),m=t(43267),h=t(87844),f=t(69909);const u=(0,h.op)({transpose_:function p(d,C,T){const D=(0,E.YT)(d,"x","transpose");if(null==C&&(C=D.shape.map((w,H)=>H).reverse()),g.vA(D.rank===C.length,()=>`Error in transpose: rank of input ${D.rank} must match length of perm ${C}.`),C.forEach(w=>{g.vA(w>=0&&w<D.rank,()=>`All entries in 'perm' must be between 0 and ${D.rank-1} but got ${C}`)}),D.rank<=1)return D.clone();const S={x:D},b={perm:C};return"complex64"===D.dtype?(0,s.DZ)(()=>{let w=(0,f.x)(D),H=(0,y.n)(D);return w=e.T2.runKernel(l.wx0,{x:w},b),H=e.T2.runKernel(l.wx0,{x:H},b),T&&(H=(0,m.H)(H)),(0,c.f)(w,H)}):e.T2.runKernel(l.wx0,S,b)}})},3609:(pt,R,t)=>{"use strict";t.d(R,{e:()=>c});var e=t(26674),s=t(75987),l=t(87844),E=t(54969);const c=(0,l.op)({truncatedNormal_:function g(y,m=0,h=1,f,p){if((0,e.SA)(y),null!=f&&"bool"===f)throw new Error("Unsupported data type $ { dtype }");const u=new E.ai(m,h,f,!0,p),d=(0,s.r)(y,f);for(let C=0;C<d.values.length;C++)d.values[C]=u.nextValue();return d.toTensor()}})},90893:(pt,R,t)=>{"use strict";t.d(R,{z:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({unsortedSegmentSum_:function c(m,h,f){const p=(0,l.YT)(m,"x","unsortedSegmentSum"),u=(0,l.YT)(h,"segmentIds","unsortedSegmentSum","int32");return(0,E.vA)((0,E.E6)(f),()=>"numSegments must be of dtype int"),e.T2.runKernel(s.pPe,{x:p,segmentIds:u},{numSegments:f})}})},48256:(pt,R,t)=>{"use strict";t.d(R,{K:()=>y});var e=t(611),s=t(30162),l=t(17636),E=t(26674);const y=(0,t(87844).op)({unstack_:function c(m,h=0){const f=(0,l.YT)(m,"x","unstack","string_or_numeric");return E.vA(h>=-f.shape.length&&h<f.shape.length,()=>`Axis = ${h} is not in [-${f.shape.length}, ${f.shape.length})`),e.T2.runKernel(s.dXR,{value:f},{axis:h})}})},38121:(pt,R,t)=>{"use strict";t.d(R,{b:()=>s});var e=t(611);function s(l,E=!0,g,c){return e.T2.makeVariable(l,E,g,c)}},56914:(pt,R,t)=>{"use strict";t.d(R,{_:()=>m});var e=t(611),s=t(30162),l=t(17636),E=t(3752),g=t(9269);const m=(0,t(87844).op)({where_:function y(h,f,p){const u=(0,l.YT)(f,"a","where"),d=(0,l.YT)(p,"b","where"),C=(0,l.YT)(h,"condition","where","bool"),T=(0,g.assertAndGetBroadcastShape)((0,g.assertAndGetBroadcastShape)(C.shape,u.shape),d.shape),D=(0,E.h)(C,T),S=(0,E.h)(u,T),b=(0,E.h)(d,T);return e.T2.runKernel(s.l6P,{condition:D,t:S,e:b})}})},20218:(pt,R,t)=>{"use strict";t.d(R,{U:()=>E});var e=t(611),s=t(26674),l=t(55349);function E(g,c="float32"){if((0,s.SA)(g),"complex64"===c){const m=E(g,"float32"),h=E(g,"float32");return(0,l.f)(m,h)}const y=(0,s.Ty)((0,s.Ze)(g),c);return e.T2.makeTensor(y,g,c)}},44714:(pt,R,t)=>{"use strict";t.d(R,{P:()=>c});var e=t(611),s=t(30162),l=t(17636);const c=(0,t(87844).op)({zerosLike_:function g(y){const h={x:(0,l.YT)(y,"x","zerosLike")};return e.T2.runKernel(s.xJ3,h)}})},1633:(pt,R,t)=>{"use strict";t.d(R,{K:()=>p});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(4350),c=t(59731),y=t(51583),m=t(32362),h=t(44714),f=t(56188);class p extends f.E{static get className(){return"Adadelta"}constructor(d,C,T=null){super(),this.learningRate=d,this.rho=C,this.epsilon=T,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==T&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(d){(Array.isArray(d)?d.map(T=>T.name):Object.keys(d)).forEach((T,D)=>{const S=s.T2.registeredVariables[T],b=!1;null==this.accumulatedGrads[D]&&(this.accumulatedGrads[D]={originalName:`${T}/accum_grad`,variable:(0,l.DZ)(()=>(0,h.P)(S).variable(b))}),null==this.accumulatedUpdates[D]&&(this.accumulatedUpdates[D]={originalName:`${T}/accum_var`,variable:(0,l.DZ)(()=>(0,h.P)(S).variable(b))});const w=Array.isArray(d)?d[D].tensor:d[T];if(null==w)return;const H=this.accumulatedGrads[D].variable,j=this.accumulatedUpdates[D].variable;(0,l.DZ)(()=>{const F=(0,E.W)((0,c.l)(H,this.rho),(0,c.l)((0,m.E)(w),1-this.rho)),B=(0,c.l)((0,g.y)((0,y.R)((0,E.W)(j,this.epsilon)),(0,y.R)((0,E.W)(H,this.epsilon))),w),A=(0,E.W)((0,c.l)(j,this.rho),(0,c.l)((0,m.E)(B),1-this.rho));H.assign(F),j.assign(A);const k=(0,E.W)((0,c.l)(B,-this.learningRate),S);S.assign(k)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,l.AS)(this.accumulatedGrads.map(d=>d.variable)),(0,l.AS)(this.accumulatedUpdates.map(d=>d.variable)))}getWeights(){var d=this;return(0,e.A)(function*(){const C=[...d.accumulatedGrads,...d.accumulatedUpdates];return[yield d.saveIterations()].concat(C.map(T=>({name:T.originalName,tensor:T.variable})))})()}setWeights(d){var C=this;return(0,e.A)(function*(){const T=(d=yield C.extractIterations(d)).length/2,D=!1;C.accumulatedGrads=d.slice(0,T).map(S=>({originalName:S.name,variable:S.tensor.variable(D)})),C.accumulatedUpdates=d.slice(T,2*T).map(S=>({originalName:S.name,variable:S.tensor.variable(D)}))})()}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(d,C){return new d(C.learningRate,C.rho,C.epsilon)}}},60415:(pt,R,t)=>{"use strict";t.d(R,{a:()=>p});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(4350),c=t(7684),y=t(59731),m=t(51583),h=t(32362),f=t(56188);class p extends f.E{static get className(){return"Adagrad"}constructor(d,C=.1){super(),this.learningRate=d,this.initialAccumulatorValue=C,this.accumulatedGrads=[]}applyGradients(d){(Array.isArray(d)?d.map(T=>T.name):Object.keys(d)).forEach((T,D)=>{const S=s.T2.registeredVariables[T];null==this.accumulatedGrads[D]&&(this.accumulatedGrads[D]={originalName:`${T}/accumulator`,variable:(0,l.DZ)(()=>(0,c.G)(S.shape,this.initialAccumulatorValue).variable(!1))});const b=Array.isArray(d)?d[D].tensor:d[T];if(null==b)return;const w=this.accumulatedGrads[D].variable;(0,l.DZ)(()=>{const H=(0,E.W)(w,(0,h.E)(b));w.assign(H);const j=(0,E.W)((0,y.l)((0,g.y)(b,(0,m.R)((0,E.W)(H,s.T2.backend.epsilon()))),-this.learningRate),S);S.assign(j)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,l.AS)(this.accumulatedGrads.map(d=>d.variable))}getWeights(){var d=this;return(0,e.A)(function*(){return[yield d.saveIterations()].concat(d.accumulatedGrads.map(C=>({name:C.originalName,tensor:C.variable})))})()}setWeights(d){var C=this;return(0,e.A)(function*(){d=yield C.extractIterations(d),C.accumulatedGrads=d.map(D=>({originalName:D.name,variable:D.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(d,C){return new d(C.learningRate,C.initialAccumulatorValue)}}},34128:(pt,R,t)=>{"use strict";t.d(R,{F:()=>C});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(4350),c=t(59731),y=t(53827),m=t(10829),h=t(51583),f=t(32362),p=t(59279),u=t(44714),d=t(56188);class C extends d.E{static get className(){return"Adam"}constructor(D,S,b,w=null){super(),this.learningRate=D,this.beta1=S,this.beta2=b,this.epsilon=w,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,l.DZ)(()=>{this.accBeta1=(0,m.d)(S).variable(),this.accBeta2=(0,m.d)(b).variable()}),null==w&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(D){const S=Array.isArray(D)?D.map(b=>b.name):Object.keys(D);(0,l.DZ)(()=>{const b=(0,p.j)(1,this.accBeta1),w=(0,p.j)(1,this.accBeta2);S.forEach((H,j)=>{const F=s.T2.registeredVariables[H],B=!1;null==this.accumulatedFirstMoment[j]&&(this.accumulatedFirstMoment[j]={originalName:`${H}/m`,variable:(0,l.DZ)(()=>(0,u.P)(F).variable(B))}),null==this.accumulatedSecondMoment[j]&&(this.accumulatedSecondMoment[j]={originalName:`${H}/v`,variable:(0,l.DZ)(()=>(0,u.P)(F).variable(B))});const A=Array.isArray(D)?D[j].tensor:D[H];if(null==A)return;const k=this.accumulatedFirstMoment[j].variable,x=this.accumulatedSecondMoment[j].variable,V=(0,E.W)((0,c.l)(k,this.beta1),(0,c.l)(A,1-this.beta1)),W=(0,E.W)((0,c.l)(x,this.beta2),(0,c.l)((0,f.E)(A),1-this.beta2)),Y=(0,g.y)(V,b),Z=(0,g.y)(W,w);k.assign(V),x.assign(W);const it=(0,E.W)((0,c.l)((0,g.y)(Y,(0,E.W)((0,h.R)(Z),this.epsilon)),-this.learningRate),F);F.assign(it)}),this.accBeta1.assign((0,c.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,c.l)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,l.AS)(this.accumulatedFirstMoment.map(D=>D.variable)),null!=this.accumulatedSecondMoment&&(0,l.AS)(this.accumulatedSecondMoment.map(D=>D.variable))}getWeights(){var D=this;return(0,e.A)(function*(){const S=[...D.accumulatedFirstMoment,...D.accumulatedSecondMoment];return[yield D.saveIterations()].concat(S.map(b=>({name:b.originalName,tensor:b.variable})))})()}setWeights(D){var S=this;return(0,e.A)(function*(){D=yield S.extractIterations(D),(0,l.DZ)(()=>{S.accBeta1.assign((0,y.n)(S.beta1,S.iterations_+1)),S.accBeta2.assign((0,y.n)(S.beta2,S.iterations_+1))});const b=D.length/2,w=!1;S.accumulatedFirstMoment=D.slice(0,b).map(H=>({originalName:H.name,variable:H.tensor.variable(w)})),S.accumulatedSecondMoment=D.slice(b,2*b).map(H=>({originalName:H.name,variable:H.tensor.variable(w)}))})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(D,S){return new D(S.learningRate,S.beta1,S.beta2,S.epsilon)}}},26041:(pt,R,t)=>{"use strict";t.d(R,{o:()=>d});var e=t(10467),s=t(611),l=t(47054),E=t(72009),g=t(83034),c=t(4350),y=t(74659),m=t(59731),h=t(10829),f=t(59279),p=t(44714),u=t(56188);class d extends u.E{static get className(){return"Adamax"}constructor(T,D,S,b=null,w=0){super(),this.learningRate=T,this.beta1=D,this.beta2=S,this.epsilon=b,this.decay=w,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,l.DZ)(()=>{this.iteration=(0,h.d)(0).variable(),this.accBeta1=(0,h.d)(D).variable()}),null==b&&(this.epsilon=s.T2.backend.epsilon())}applyGradients(T){const D=Array.isArray(T)?T.map(S=>S.name):Object.keys(T);(0,l.DZ)(()=>{const S=(0,f.j)(1,this.accBeta1),b=(0,c.y)(-this.learningRate,(0,g.W)((0,m.l)(this.iteration,this.decay),1));D.forEach((w,H)=>{const j=s.T2.registeredVariables[w],F=!1;null==this.accumulatedFirstMoment[H]&&(this.accumulatedFirstMoment[H]={originalName:`${w}/m`,variable:(0,p.P)(j).variable(F)}),null==this.accumulatedWeightedInfNorm[H]&&(this.accumulatedWeightedInfNorm[H]={originalName:`${w}/v`,variable:(0,p.P)(j).variable(F)});const B=Array.isArray(T)?T[H].tensor:T[w];if(null==B)return;const A=this.accumulatedFirstMoment[H].variable,k=this.accumulatedWeightedInfNorm[H].variable,x=(0,g.W)((0,m.l)(A,this.beta1),(0,m.l)(B,1-this.beta1)),V=(0,m.l)(k,this.beta2),W=(0,E.t)(B),Y=(0,y.P)(V,W);A.assign(x),k.assign(Y);const Z=(0,g.W)((0,m.l)((0,c.y)(b,S),(0,c.y)(x,(0,g.W)(Y,this.epsilon))),j);j.assign(Z)}),this.iteration.assign((0,g.W)(this.iteration,1)),this.accBeta1.assign((0,m.l)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,l.AS)(this.accumulatedFirstMoment.map(T=>T.variable)),null!=this.accumulatedWeightedInfNorm&&(0,l.AS)(this.accumulatedWeightedInfNorm.map(T=>T.variable))}getWeights(){return(0,e.A)(function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})()}setWeights(T){return(0,e.A)(function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})()}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(T,D){return new T(D.learningRate,D.beta1,D.beta2,D.epsilon,D.decay)}}},82961:(pt,R,t)=>{"use strict";t.d(R,{Q:()=>h});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(59731),c=t(10829),y=t(44714),m=t(11089);class h extends m.S{static get className(){return"Momentum"}constructor(p,u,d=!1){super(p),this.learningRate=p,this.momentum=u,this.useNesterov=d,this.accumulations=[],this.m=(0,c.d)(this.momentum)}applyGradients(p){(Array.isArray(p)?p.map(d=>d.name):Object.keys(p)).forEach((d,C)=>{const T=s.T2.registeredVariables[d];null==this.accumulations[C]&&(this.accumulations[C]={originalName:`${d}/momentum`,variable:(0,l.DZ)(()=>(0,y.P)(T).variable(!1))});const D=this.accumulations[C].variable,S=Array.isArray(p)?p[C].tensor:p[d];null!=S&&(0,l.DZ)(()=>{let b;const w=(0,E.W)((0,g.l)(this.m,D),S);b=(0,E.W)((0,g.l)(this.c,this.useNesterov?(0,E.W)(S,(0,g.l)(w,this.m)):w),T),D.assign(w),T.assign(b)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,l.AS)(this.accumulations.map(p=>p.variable))}setMomentum(p){this.momentum=p}getWeights(){var p=this;return(0,e.A)(function*(){return[yield p.saveIterations()].concat(p.accumulations.map(u=>({name:u.originalName,tensor:u.variable})))})()}setWeights(p){var u=this;return(0,e.A)(function*(){p=yield u.extractIterations(p),u.accumulations=p.map(C=>({originalName:C.name,variable:C.tensor.variable(!1)}))})()}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(p,u){return new p(u.learningRate,u.momentum,u.useNesterov)}}},56188:(pt,R,t)=>{"use strict";t.d(R,{E:()=>c});var e=t(10467),s=t(47054),l=t(22047),E=t(10829),g=t(1506);class c extends g.Serializable{minimize(m,h=!1,f){const{value:p,grads:u}=this.computeGradients(m,f);if(null!=f){const d=f.map(C=>({name:C.name,tensor:u[C.name]}));this.applyGradients(d)}else this.applyGradients(u);return(0,s.AS)(u),h?p:(p.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(m,h){return(0,l.y7)(m,h)}dispose(){null!=this.iterations_&&(0,s.AS)(this.iterations_)}saveIterations(){var m=this;return(0,e.A)(function*(){return null==m.iterations_&&(m.iterations_=0),{name:"iter",tensor:(0,E.d)(m.iterations_,"int32")}})()}getWeights(){return(0,e.A)(function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})()}setWeights(m){var h=this;return(0,e.A)(function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${h.getClassName()}`)})()}extractIterations(m){var h=this;return(0,e.A)(function*(){return h.iterations_=(yield m[0].tensor.data())[0],m.slice(1)})()}}Object.defineProperty(c,Symbol.hasInstance,{value:y=>null!=y.minimize&&null!=y.computeGradients&&null!=y.applyGradients})},29609:(pt,R,t)=>{"use strict";t.d(R,{i:()=>f});var e=t(1633),s=t(60415),l=t(34128),E=t(26041),g=t(82961),c=t(53532),y=t(11089),m=t(1506);const h=[e.K,s.a,l.F,E.o,g.Q,c.P,y.S];function f(){for(const p of h)(0,m.registerClass)(p)}},53532:(pt,R,t)=>{"use strict";t.d(R,{P:()=>u});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(4350),c=t(59731),y=t(51583),m=t(32362),h=t(59279),f=t(44714),p=t(56188);class u extends p.E{static get className(){return"RMSProp"}constructor(C,T=.9,D=0,S=null,b=!1){if(super(),this.learningRate=C,this.decay=T,this.momentum=D,this.epsilon=S,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=b,null==S&&(this.epsilon=s.T2.backend.epsilon()),null==C)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(C){(Array.isArray(C)?C.map(D=>D.name):Object.keys(C)).forEach((D,S)=>{const b=s.T2.registeredVariables[D],w=!1;null==this.accumulatedMeanSquares[S]&&(this.accumulatedMeanSquares[S]={originalName:`${D}/rms`,variable:(0,l.DZ)(()=>(0,f.P)(b).variable(w))}),null==this.accumulatedMoments[S]&&(this.accumulatedMoments[S]={originalName:`${D}/momentum`,variable:(0,l.DZ)(()=>(0,f.P)(b).variable(w))}),null==this.accumulatedMeanGrads[S]&&this.centered&&(this.accumulatedMeanGrads[S]={originalName:`${D}/mg`,variable:(0,l.DZ)(()=>(0,f.P)(b).variable(w))});const H=Array.isArray(C)?C[S].tensor:C[D];if(null==H)return;const j=this.accumulatedMeanSquares[S].variable,F=this.accumulatedMoments[S].variable;(0,l.DZ)(()=>{const B=(0,E.W)((0,c.l)(j,this.decay),(0,c.l)((0,m.E)(H),1-this.decay));if(this.centered){const A=this.accumulatedMeanGrads[S].variable,k=(0,E.W)((0,c.l)(A,this.decay),(0,c.l)(H,1-this.decay)),x=(0,g.y)((0,c.l)(H,this.learningRate),(0,y.R)((0,h.j)(B,(0,E.W)((0,m.E)(k),this.epsilon)))),V=(0,E.W)((0,c.l)(F,this.momentum),x);j.assign(B),A.assign(k),F.assign(V);const W=(0,h.j)(b,V);b.assign(W)}else{const A=(0,E.W)((0,c.l)(j,this.decay),(0,c.l)((0,m.E)(H),1-this.decay)),k=(0,E.W)((0,c.l)(F,this.momentum),(0,g.y)((0,c.l)(H,this.learningRate),(0,y.R)((0,E.W)(A,this.epsilon))));j.assign(A),F.assign(k);const x=(0,h.j)(b,k);b.assign(x)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,l.AS)(this.accumulatedMeanSquares.map(C=>C.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,l.AS)(this.accumulatedMeanGrads.map(C=>C.variable)),null!=this.accumulatedMoments&&(0,l.AS)(this.accumulatedMoments.map(C=>C.variable))}getWeights(){var C=this;return(0,e.A)(function*(){const T=[...C.accumulatedMeanSquares,...C.accumulatedMoments];return C.centered&&T.push(...C.accumulatedMeanGrads),[yield C.saveIterations()].concat(T.map(D=>({name:D.originalName,tensor:D.variable})))})()}setWeights(C){var T=this;return(0,e.A)(function*(){C=yield T.extractIterations(C);const D=T.centered?C.length/3:C.length/2,S=!1;T.accumulatedMeanSquares=C.slice(0,D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})),T.accumulatedMoments=C.slice(D,2*D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})),T.centered&&(T.accumulatedMeanGrads=C.slice(2*D,3*D).map(b=>({originalName:b.name,variable:b.tensor.variable(S)})))})()}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(C,T){return new C(T.learningRate,T.decay,T.momentum,T.epsilon,T.centered)}}},11089:(pt,R,t)=>{"use strict";t.d(R,{S:()=>m});var e=t(10467),s=t(611),l=t(47054),E=t(83034),g=t(59731),c=t(10829),y=t(56188);class m extends y.E{static get className(){return"SGD"}constructor(f){super(),this.learningRate=f,this.setLearningRate(f)}applyGradients(f){(Array.isArray(f)?f.map(u=>u.name):Object.keys(f)).forEach((u,d)=>{const C=Array.isArray(f)?f[d].tensor:f[u];if(null==C)return;const T=s.T2.registeredVariables[u];(0,l.DZ)(()=>{const D=(0,E.W)((0,g.l)(this.c,C),T);T.assign(D)})}),this.incrementIterations()}setLearningRate(f){this.learningRate=f,null!=this.c&&this.c.dispose(),this.c=(0,l.aC)((0,c.d)(-f))}dispose(){this.c.dispose()}getWeights(){var f=this;return(0,e.A)(function*(){return[yield f.saveIterations()]})()}setWeights(f){var p=this;return(0,e.A)(function*(){if(0!==(f=yield p.extractIterations(f)).length)throw new Error("SGD optimizer does not have settable weights.")})()}getConfig(){return{learningRate:this.learningRate}}static fromConfig(f,p){return new f(p.learningRate)}}},33319:(pt,R,t)=>{"use strict";function e(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}t.d(R,{Y:()=>e})},10222:(pt,R,t)=>{"use strict";var e=t(72009),s=t(73444);(0,s.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,e.t)(this)};var l=t(611),E=t(30162),g=t(17636),c=t(87844);const m=(0,c.op)({acos_:function y(Bt){const me={x:(0,g.YT)(Bt,"x","acos")};return l.T2.runKernel(E.Vvy,me)}});(0,s.tp)().prototype.acos=function(){return this.throwIfDisposed(),m(this)};const f=(0,c.op)({acosh_:function h(Bt){const me={x:(0,g.YT)(Bt,"x","acosh")};return l.T2.runKernel(E.PH8,me)}});(0,s.tp)().prototype.acosh=function(){return this.throwIfDisposed(),f(this)};var p=t(83034);(0,s.tp)().prototype.add=function(Bt){return this.throwIfDisposed(),(0,p.W)(this,Bt)};var u=t(56682);(0,s.tp)().prototype.all=function(Bt,re){return this.throwIfDisposed(),(0,u.Q)(this,Bt,re)};var d=t(37547);(0,s.tp)().prototype.any=function(Bt,re){return this.throwIfDisposed(),(0,d.b)(this,Bt,re)};var C=t(71084);(0,s.tp)().prototype.argMax=function(Bt){return this.throwIfDisposed(),(0,C.F)(this,Bt)};const D=(0,c.op)({argMin_:function T(Bt,re=0){const ve={x:(0,g.YT)(Bt,"x","argMin")};return l.T2.runKernel(E.p_m,ve,{axis:re})}});(0,s.tp)().prototype.argMin=function(Bt){return this.throwIfDisposed(),D(this,Bt)};var S=t(94399),b=t(26674);(0,s.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,b.vA)(1===this.size,()=>"The array must have only 1 element."),(0,S.t)(this,[])};var w=t(92290);(0,s.tp)().prototype.asType=function(Bt){return this.throwIfDisposed(),(0,w.w)(this,Bt)},(0,s.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,S.t)(this,[this.size])},(0,s.tp)().prototype.as2D=function(Bt,re){return this.throwIfDisposed(),(0,S.t)(this,[Bt,re])},(0,s.tp)().prototype.as3D=function(Bt,re,me){return this.throwIfDisposed(),(0,S.t)(this,[Bt,re,me])},(0,s.tp)().prototype.as4D=function(Bt,re,me,ve){return this.throwIfDisposed(),(0,S.t)(this,[Bt,re,me,ve])},(0,s.tp)().prototype.as5D=function(Bt,re,me,ve,cn){return this.throwIfDisposed(),(0,S.t)(this,[Bt,re,me,ve,cn])};const j=(0,c.op)({asin_:function H(Bt){const me={x:(0,g.YT)(Bt,"x","asin")};return l.T2.runKernel(E.QKF,me)}});(0,s.tp)().prototype.asin=function(){return this.throwIfDisposed(),j(this)};const B=(0,c.op)({asinh_:function F(Bt){const me={x:(0,g.YT)(Bt,"x","asinh")};return l.T2.runKernel(E.epO,me)}});(0,s.tp)().prototype.asinh=function(){return this.throwIfDisposed(),B(this)};const k=(0,c.op)({atan_:function A(Bt){const me={x:(0,g.YT)(Bt,"x","atan")};return l.T2.runKernel(E.TyE,me)}});(0,s.tp)().prototype.atan=function(){return this.throwIfDisposed(),k(this)};var x=t(14548);const W=(0,c.op)({atan2_:function V(Bt,re){let me=(0,g.YT)(Bt,"a","atan2"),ve=(0,g.YT)(re,"b","atan2");return[me,ve]=(0,x.makeTypesMatch)(me,ve),l.T2.runKernel(E.lxb,{a:me,b:ve})}});(0,s.tp)().prototype.atan2=function(Bt){return this.throwIfDisposed(),W(this,Bt)};const Z=(0,c.op)({atanh_:function Y(Bt){const me={x:(0,g.YT)(Bt,"x","atanh")};return l.T2.runKernel(E.zP9,me)}});(0,s.tp)().prototype.atanh=function(){return this.throwIfDisposed(),Z(this)};var it=t(37434);(0,s.tp)().prototype.avgPool=function(Bt,re,me,ve){return this.throwIfDisposed(),(0,it.$)(this,Bt,re,me,ve)};var at=t(69229);(0,s.tp)().prototype.batchToSpaceND=function(Bt,re){return this.throwIfDisposed(),(0,at.G)(this,Bt,re)};var q=t(60571);(0,s.tp)().prototype.batchNorm=function(Bt,re,me,ve,cn){return this.throwIfDisposed(),(0,q.$)(this,Bt,re,me,ve,cn)};var ot=t(3752);(0,s.tp)().prototype.broadcastTo=function(Bt){return this.throwIfDisposed(),(0,ot.h)(this,Bt)},(0,s.tp)().prototype.cast=function(Bt){return this.throwIfDisposed(),(0,w.w)(this,Bt)};const et=(0,c.op)({ceil_:function rt(Bt){const me={x:(0,g.YT)(Bt,"x","ceil","float32")};return l.T2.runKernel(E.QDP,me)}});(0,s.tp)().prototype.ceil=function(){return this.throwIfDisposed(),et(this)};var yt=t(70581);(0,s.tp)().prototype.clipByValue=function(Bt,re){return this.throwIfDisposed(),(0,yt.z)(this,Bt,re)};var mt=t(35213);(0,s.tp)().prototype.concat=function(Bt,re){return this.throwIfDisposed(),Bt instanceof s.qY&&(Bt=[Bt]),(0,mt.x)([this,...Bt],re)};var St=t(53054);(0,s.tp)().prototype.conv1d=function(Bt,re,me,ve,cn,gn){return this.throwIfDisposed(),(0,St.k)(this,Bt,re,me,ve,cn,gn)};var se=t(83521);(0,s.tp)().prototype.conv2dTranspose=function(Bt,re,me,ve,cn){return this.throwIfDisposed(),(0,se.w)(this,Bt,re,me,ve,cn)};var Ht=t(12809);(0,s.tp)().prototype.conv2d=function(Bt,re,me,ve,cn,gn){return this.throwIfDisposed(),(0,Ht.X)(this,Bt,re,me,ve,cn,gn)};var ue=t(54758);(0,s.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,ue.g)(this)};var Xt=t(12076);(0,s.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Xt.y)(this)};var ie=t(63371);(0,s.tp)().prototype.cumprod=function(Bt,re,me){return this.throwIfDisposed(),(0,ie.L)(this,Bt,re,me)};var ae=t(28799);(0,s.tp)().prototype.cumsum=function(Bt,re,me){return this.throwIfDisposed(),(0,ae.r)(this,Bt,re,me)};const Pe=(0,c.op)({depthToSpace_:function ne(Bt,re,me="NHWC"){const ve=(0,g.YT)(Bt,"x","depthToSpace","float32"),cn="NHWC"===me?ve.shape[1]:ve.shape[2],gn="NHWC"===me?ve.shape[2]:ve.shape[3],_n="NHWC"===me?ve.shape[3]:ve.shape[1];return b.vA(re>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${re}`),b.vA(cn*re>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${cn} and ${re}  for depthToSpace with input shape\n    ${ve.shape}`),b.vA(gn*re>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${gn} and ${re} for depthToSpace with input shape\n        ${ve.shape}`),b.vA(_n%(re*re)==0,()=>`Dimension size must be evenly divisible by ${re*re} but is ${_n} for depthToSpace with input shape ${ve.shape}`),l.T2.runKernel(E.TMz,{x:ve},{blockSize:re,dataFormat:me})}});(0,s.tp)().prototype.depthToSpace=function(Bt,re){return this.throwIfDisposed(),Pe(this,Bt,re)};var Ie=t(73595);(0,s.tp)().prototype.depthwiseConv2d=function(Bt,re,me,ve,cn,gn){return this.throwIfDisposed(),(0,Ie.G)(this,Bt,re,me,ve,cn,gn)};const zt=(0,c.op)({dilation2d_:function Ct(Bt,re,me,ve,cn=[1,1],gn="NHWC"){const _n=(0,g.YT)(Bt,"x","dilation2d"),yn=(0,g.YT)(re,"filter","dilation2d");b.vA(3===_n.rank||4===_n.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${_n.rank}.`),b.vA(3===yn.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${yn.rank}.`),b.vA("NHWC"===gn,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${gn}`);let Qn=_n,Cs=!1;3===_n.rank&&(Qn=(0,S.t)(_n,[1,_n.shape[0],_n.shape[1],_n.shape[2]]),Cs=!0),b.vA(Qn.shape[3]===yn.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${Qn.shape[3]} vs ${yn.shape[2]}`);const Ss=l.T2.runKernel(E.jxD,{x:Qn,filter:yn},{strides:me,pad:ve,dilations:cn});return Cs?(0,S.t)(Ss,[Ss.shape[1],Ss.shape[2],Ss.shape[3]]):Ss}});(0,s.tp)().prototype.dilation2d=function(Bt,re,me,ve,cn){return this.throwIfDisposed(),zt(this,Bt,re,me,ve,cn)};var Jt=t(4350),pe=t(68833),ze=t(56914),an=t(44714);const mn=(0,c.op)({divNoNan_:function vn(Bt,re){let me=(0,g.YT)(Bt,"a","div"),ve=(0,g.YT)(re,"b","div");[me,ve]=(0,x.makeTypesMatch)(me,ve);const cn=(0,Jt.y)(me,ve),gn=(0,an.P)(cn),_n=(0,pe.L)(ve,gn);return(0,ze._)(_n,gn,cn)}});(0,s.tp)().prototype.divNoNan=function(Bt){return this.throwIfDisposed(),mn(this,Bt)},(0,s.tp)().prototype.div=function(Bt){return this.throwIfDisposed(),(0,Jt.y)(this,Bt)};var hn=t(60314);const wn=(0,c.op)({dot_:function $n(Bt,re){const me=(0,g.YT)(Bt,"t1","dot"),ve=(0,g.YT)(re,"t2","dot");b.vA(!(1!==me.rank&&2!==me.rank||1!==ve.rank&&2!==ve.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${me.rank} and ${ve.rank}.`);const cn=1===me.rank?me.size:me.shape[1],gn=1===ve.rank?ve.size:ve.shape[0];if(b.vA(cn===gn,()=>`Error in dot: inner dimensions of inputs must match, but got ${cn} and ${gn}.`),1===me.rank&&1===ve.rank){const _n=(0,S.t)(me,[1,-1]),yn=(0,S.t)(ve,[-1,1]),Qn=(0,hn.N)(_n,yn);return(0,S.t)(Qn,[])}if(1===me.rank&&2===ve.rank){const _n=(0,S.t)(me,[1,-1]),yn=(0,S.t)(ve,[ve.shape[0],ve.shape[1]]),Qn=(0,hn.N)(_n,yn);return(0,S.t)(Qn,[Qn.size])}if(2===me.rank&&1===ve.rank){const _n=(0,S.t)(ve,[-1,1]),yn=(0,hn.N)(me,_n);return(0,S.t)(yn,[yn.size])}{const _n=(0,S.t)(ve,[ve.shape[0],ve.shape[1]]);return(0,hn.N)(me,_n)}}});(0,s.tp)().prototype.dot=function(Bt){return this.throwIfDisposed(),wn(this,Bt)};var Gn=t(41325);(0,s.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Gn.P)(this)},(0,s.tp)().prototype.equal=function(Bt){return this.throwIfDisposed(),(0,pe.L)(this,Bt)};var jn=t(78650);(0,s.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,jn.Y)(this)};var ls=t(96075);const Es=(0,c.op)({euclideanNorm_:function ts(Bt,re=null,me=!1){return(0,ls.x)(Bt,"euclidean",re,me)}});(0,s.tp)().prototype.euclideanNorm=function(Bt,re){return this.throwIfDisposed(),Es(this,Bt,re)};var ws=t(68326);(0,s.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,ws.o)(this)};var Ys=t(42103);(0,s.tp)().prototype.expandDims=function(Bt){return this.throwIfDisposed(),(0,Ys.U)(this,Bt)};const Vs=(0,c.op)({expm1_:function ps(Bt){const me={x:(0,g.YT)(Bt,"x","expm1")};return l.T2.runKernel(E.ybj,me)}});(0,s.tp)().prototype.expm1=function(){return this.throwIfDisposed(),Vs(this)};var $t=t(90694);(0,s.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,$t.h)(this)},(0,s.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,S.t)(this,[this.size])};var Vt=t(41467);(0,s.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,Vt.R)(this)};var G=t(34316);(0,s.tp)().prototype.floorDiv=function(Bt){return this.throwIfDisposed(),(0,G.w)(this,Bt)};var ct=t(38837);(0,s.tp)().prototype.gather=function(Bt,re,me){return this.throwIfDisposed(),(0,ct.k)(this,Bt,re,me)};var vt=t(94300);(0,s.tp)().prototype.greaterEqual=function(Bt){return this.throwIfDisposed(),(0,vt.D)(this,Bt)};var Tt=t(54807);(0,s.tp)().prototype.greater=function(Bt){return this.throwIfDisposed(),(0,Tt.r)(this,Bt)};var It=t(15245);(0,s.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,It.K)(this)};var bt=t(43);(0,s.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,bt.g)(this)};const ce=(0,c.op)({isFinite_:function Mt(Bt){const me={x:(0,g.YT)(Bt,"x","isFinite")};return l.T2.runKernel(E.gIW,me)}});(0,s.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),ce(this)};const Se=(0,c.op)({isInf_:function ge(Bt){const me={x:(0,g.YT)(Bt,"x","isInf")};return l.T2.runKernel(E.E3$,me)}});(0,s.tp)().prototype.isInf=function(){return this.throwIfDisposed(),Se(this)};const Ue=(0,c.op)({isNaN_:function We(Bt){const me={x:(0,g.YT)(Bt,"x","isNaN")};return l.T2.runKernel(E.iPs,me)}});(0,s.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),Ue(this)};var Je=t(93580);(0,s.tp)().prototype.leakyRelu=function(Bt){return this.throwIfDisposed(),(0,Je.H)(this,Bt)};var be=t(94411);(0,s.tp)().prototype.lessEqual=function(Bt){return this.throwIfDisposed(),(0,be.I)(this,Bt)};var Ce=t(56576);(0,s.tp)().prototype.less=function(Bt){return this.throwIfDisposed(),(0,Ce.M)(this,Bt)};const xe=(0,c.op)({localResponseNormalization_:function qe(Bt,re=5,me=1,ve=1,cn=.5){const gn=(0,g.YT)(Bt,"x","localResponseNormalization");b.vA(4===gn.rank||3===gn.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${gn.rank}.`),b.vA(b.E6(re),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${re}.`);let _n=gn,yn=!1;3===gn.rank&&(yn=!0,_n=(0,S.t)(gn,[1,gn.shape[0],gn.shape[1],gn.shape[2]]));const Kn=l.T2.runKernel(E.jM4,{x:_n},{depthRadius:re,bias:me,alpha:ve,beta:cn});return yn?(0,S.t)(Kn,[Kn.shape[1],Kn.shape[2],Kn.shape[3]]):Kn}});(0,s.tp)().prototype.localResponseNormalization=function(Bt,re,me,ve){return this.throwIfDisposed(),xe(this,Bt,re,me,ve)};var nn=t(22047),Ge=t(59731),un=t(43267),An=t(53205),Vn=t(14181);const ns=(0,c.op)({logSigmoid_:function Rn(Bt){const re=(0,g.YT)(Bt,"x","logSigmoid");return(0,nn._X)(ve=>({value:(0,un.H)((0,Vn.l)((0,un.H)(ve))),gradFunc:_n=>(0,Ge.l)(_n,(0,An.r)((0,un.H)(ve)))}))(re)}});(0,s.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),ns(this)};var Wn=t(89578);(0,s.tp)().prototype.logSoftmax=function(Bt){return this.throwIfDisposed(),(0,Wn.H)(this,Bt)};var Xn=t(17391);(0,s.tp)().prototype.logSumExp=function(Bt,re){return this.throwIfDisposed(),(0,Xn.V)(this,Bt,re)};var _s=t(8535);(0,s.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,_s.R)(this)};var hs=t(72954);(0,s.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,hs.K)(this)};var ms=t(21292);(0,s.tp)().prototype.logicalAnd=function(Bt){return this.throwIfDisposed(),(0,ms.n)(this,Bt)};var Xs=t(88288);(0,s.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Xs.N)(this)};var Qs=t(9269);const vs=(0,c.op)({logicalOr_:function Ps(Bt,re){const me=(0,g.YT)(Bt,"a","logicalOr","bool"),ve=(0,g.YT)(re,"b","logicalOr","bool");return(0,Qs.assertAndGetBroadcastShape)(me.shape,ve.shape),l.T2.runKernel(E.LXA,{a:me,b:ve})}});(0,s.tp)().prototype.logicalOr=function(Bt){return this.throwIfDisposed(),vs(this,Bt)};const Ks=(0,c.op)({logicalXor_:function Bs(Bt,re){const me=(0,g.YT)(Bt,"a","logicalXor","bool"),ve=(0,g.YT)(re,"b","logicalXor","bool");return(0,Qs.assertAndGetBroadcastShape)(me.shape,ve.shape),(0,ms.n)(vs(Bt,re),(0,Xs.N)((0,ms.n)(Bt,re)))}});(0,s.tp)().prototype.logicalXor=function(Bt){return this.throwIfDisposed(),Ks(this,Bt)},(0,s.tp)().prototype.matMul=function(Bt,re,me){return this.throwIfDisposed(),(0,hn.N)(this,Bt,re,me)};var or=t(40044);(0,s.tp)().prototype.maxPool=function(Bt,re,me,ve){return this.throwIfDisposed(),(0,or.j)(this,Bt,re,me,ve)};var Br=t(56619);(0,s.tp)().prototype.max=function(Bt,re){return this.throwIfDisposed(),(0,Br.T)(this,Bt,re)};var kr=t(74659);(0,s.tp)().prototype.maximum=function(Bt){return this.throwIfDisposed(),(0,kr.P)(this,Bt)};var Fr=t(23444);(0,s.tp)().prototype.mean=function(Bt,re){return this.throwIfDisposed(),(0,Fr.i)(this,Bt,re)};var yr=t(82825);(0,s.tp)().prototype.min=function(Bt,re){return this.throwIfDisposed(),(0,yr.j)(this,Bt,re)};var zs=t(85233);(0,s.tp)().prototype.minimum=function(Bt){return this.throwIfDisposed(),(0,zs.B)(this,Bt)};const Wr=(0,c.op)({mirrorPad_:function xr(Bt,re,me){b.vA("reflect"===me||"symmetric"===me,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${me}.`);const ve=(0,g.YT)(Bt,"x","mirrorPad");if(0===ve.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");b.vA(re.length===ve.rank,()=>`Padding doesn't match input. Must be ${ve.rank}. Got ${re.length}.`);const cn="reflect"===me?1:0;for(let yn=0;yn<ve.rank;yn++)b.vA(2===re[yn].length,()=>"Invalid number of paddings. Must be length of 2 each."),b.vA(re[yn][0]>=0&&re[yn][0]<=ve.shape[yn]-cn&&re[yn][1]>=0&&re[yn][1]<=ve.shape[yn]-cn,()=>`Padding in dimension ${yn} cannot be greater than or equal to ${ve.shape[yn]-cn} or less than 0 for input of shape ${ve.shape}`);return l.T2.runKernel(E.x7F,{x:ve},{paddings:re,mode:me})}});(0,s.tp)().prototype.mirrorPad=function(Bt,re){return this.throwIfDisposed(),Wr(this,Bt,re)};const Js=(0,c.op)({mod_:function Os(Bt,re){let me=(0,g.YT)(Bt,"a","mod"),ve=(0,g.YT)(re,"b","mod");return[me,ve]=(0,x.makeTypesMatch)(me,ve),l.T2.runKernel(E.BLA,{a:me,b:ve})}});(0,s.tp)().prototype.mod=function(Bt){return this.throwIfDisposed(),Js(this,Bt)},(0,s.tp)().prototype.mul=function(Bt){return this.throwIfDisposed(),(0,Ge.l)(this,Bt)},(0,s.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,un.H)(this)},(0,s.tp)().prototype.norm=function(Bt,re,me){return this.throwIfDisposed(),(0,ls.x)(this,Bt,re,me)};var vr=t(66279);(0,s.tp)().prototype.notEqual=function(Bt){return this.throwIfDisposed(),(0,vr.E)(this,Bt)};var ar=t(87073);(0,s.tp)().prototype.oneHot=function(Bt,re=1,me=0){return this.throwIfDisposed(),(0,ar.M)(this,Bt,re,me)};var Tr=t(28692);(0,s.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Tr.P)(this)};var Rs=t(54472);(0,s.tp)().prototype.pad=function(Bt,re){return this.throwIfDisposed(),(0,Rs.e)(this,Bt,re)};var Gs=t(29458),Cr=t(93713);const Ur=(0,c.op)({pool_:function Dr(Bt,re,me,ve,cn,gn,_n){null==cn&&(cn=[1,1]),null==gn&&(gn=1),0===ve&&(ve="valid");const yn=(0,g.YT)(Bt,"x","maxPool");let Qn=yn,Cs=!1;3===yn.rank&&(Cs=!0,Qn=(0,S.t)(yn,[1,yn.shape[0],yn.shape[1],yn.shape[2]])),b.vA(Gs.G0(gn,cn),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${gn} and dilations '${cn}'`);const Kn=Gs.E6(Qn.shape,re,gn,cn,ve),rs=[Kn.dilationHeight,Kn.dilationWidth];let Ss;Ss="same"===ve?function ir(Bt,re){const ve=Bt.map((_n,yn)=>_n+(_n-1)*(re[yn]-1)).map(_n=>_n-1),cn=ve.map(_n=>Math.floor(_n/2)),gn=ve.map((_n,yn)=>_n-cn[yn]);return ve.map((_n,yn)=>[cn[yn],gn[yn]])}([Kn.filterHeight,Kn.filterWidth],rs):[[0,0],[0,0]];const br=1===rs[0]&&1===rs[1],[eo,no]=function Ir(Bt,re,me){const ve=me.map(Kn=>Kn[0]),cn=me.map(Kn=>Kn[1]),gn=Bt.concat(ve,cn),_n=re.map((Kn,rs)=>(Kn-gn[rs]%Kn)%Kn),yn=cn.map((Kn,rs)=>Kn+_n[rs]),Qn=re.map((Kn,rs)=>[ve[rs],yn[rs]]),Cs=re.map((Kn,rs)=>[0,_n[rs]]);return[Qn,Cs]}([Kn.inHeight,Kn.inWidth],rs,Ss),Gr=br?ve:"valid",Hr=br?Qn:(0,Cr.e)(Qn,rs,eo),At=("avg"===me?()=>(0,it.$)(Hr,re,gn,Gr,_n):()=>(0,or.j)(Hr,re,gn,Gr,_n))(),Yt=br?At:(0,at.G)(At,rs,no);return Cs?(0,S.t)(Yt,[Yt.shape[1],Yt.shape[2],Yt.shape[3]]):Yt}});(0,s.tp)().prototype.pool=function(Bt,re,me,ve,cn,gn){return this.throwIfDisposed(),Ur(this,Bt,re,me,ve,cn,gn)};var qs=t(53827);(0,s.tp)().prototype.pow=function(Bt){return this.throwIfDisposed(),(0,qs.n)(this,Bt)};var ks=t(62655);(0,s.tp)().prototype.prelu=function(Bt){return this.throwIfDisposed(),(0,ks.N)(this,Bt)};const Or=(0,c.op)({prod_:function Pr(Bt,re=null,me=!1){let ve=(0,g.YT)(Bt,"x","prod");return"bool"===ve.dtype&&(ve=(0,w.w)(ve,"int32")),l.T2.runKernel(E.kdj,{x:ve},{axis:re,keepDims:me})}});(0,s.tp)().prototype.prod=function(Bt,re){return this.throwIfDisposed(),Or(this,Bt,re)};const _=(0,c.op)({reciprocal_:function O(Bt){const me={x:(0,g.YT)(Bt,"x","reciprocal")};return l.T2.runKernel(E.huO,me)}});(0,s.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),_(this)};var I=t(98611);(0,s.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,I.V)(this)};var K=t(55065);(0,s.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,K.j)(this)},(0,s.tp)().prototype.reshapeAs=function(Bt){return this.throwIfDisposed(),(0,S.t)(this,Bt.shape)},(0,s.tp)().prototype.reshape=function(Bt){return this.throwIfDisposed(),(0,S.t)(this,Bt)};var nt=t(26486);(0,s.tp)().prototype.resizeBilinear=function(Bt,re,me){return this.throwIfDisposed(),(0,nt.v)(this,Bt,re,me)};var st=t(91719);(0,s.tp)().prototype.resizeNearestNeighbor=function(Bt,re,me){return this.throwIfDisposed(),(0,st.b)(this,Bt,re,me)};var Nt=t(21067);(0,s.tp)().prototype.reverse=function(Bt){return this.throwIfDisposed(),(0,Nt.B)(this,Bt)};var Pt=t(40638);(0,s.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Pt.z)(this)};var te=t(23821);(0,s.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,te.L)(this)};var De=t(90313);(0,s.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,De.Z)(this)};var Le=t(26966);(0,s.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,Le.W)(this)};var je=t(48285);(0,s.tp)().prototype.separableConv2d=function(Bt,re,me,ve,cn,gn){return this.throwIfDisposed(),(0,je.w)(this,Bt,re,me,ve,cn,gn)},(0,s.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,An.r)(this)};const Dn=(0,c.op)({sign_:function en(Bt){const me={x:(0,g.YT)(Bt,"x","sign")};return l.T2.runKernel(E.YVe,me)}});(0,s.tp)().prototype.sign=function(){return this.throwIfDisposed(),Dn(this)};var Ln=t(20415);(0,s.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,Ln.F)(this)};var xn=t(91071);(0,s.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,xn.L)(this)};var on=t(94063);(0,s.tp)().prototype.slice=function(Bt,re){return this.throwIfDisposed(),(0,on.d)(this,Bt,re)};var Pn=t(52431);(0,s.tp)().prototype.softmax=function(Bt){return this.throwIfDisposed(),(0,Pn.V)(this,Bt)},(0,s.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Vn.l)(this)},(0,s.tp)().prototype.spaceToBatchND=function(Bt,re){return this.throwIfDisposed(),(0,Cr.e)(this,Bt,re)};var ss=t(91517);(0,s.tp)().prototype.split=function(Bt,re){return this.throwIfDisposed(),(0,ss.l)(this,Bt,re)};var Ts=t(51583);(0,s.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,Ts.R)(this)};var fs=t(32362);(0,s.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,fs.E)(this)};var Bn=t(24976);(0,s.tp)().prototype.squaredDifference=function(Bt){return this.throwIfDisposed(),(0,Bn.P)(this,Bt)};var Fs=t(41621);(0,s.tp)().prototype.squeeze=function(Bt){return this.throwIfDisposed(),(0,Fs.r)(this,Bt)};var Hs=t(92885);(0,s.tp)().prototype.stack=function(Bt,re){this.throwIfDisposed();const me=Bt instanceof s.qY?[this,Bt]:[this,...Bt];return(0,Hs.t)(me,re)};var lr=t(72079);(0,s.tp)().prototype.step=function(Bt){return this.throwIfDisposed(),(0,lr.P)(this,Bt)};const cr=(0,c.op)({stridedSlice_:function ur(Bt,re,me,ve,cn=0,gn=0,_n=0,yn=0,Qn=0){const Kn={x:(0,g.YT)(Bt,"x","stridedSlice","string_or_numeric")};return l.T2.runKernel(E.UcO,Kn,{begin:re,end:me,strides:ve,beginMask:cn,endMask:gn,ellipsisMask:_n,newAxisMask:yn,shrinkAxisMask:Qn})}});(0,s.tp)().prototype.stridedSlice=function(Bt,re,me,ve,cn,gn,_n,yn){return this.throwIfDisposed(),cr(this,Bt,re,me,ve,cn,gn,_n,yn)};var dr=t(59279);(0,s.tp)().prototype.sub=function(Bt){return this.throwIfDisposed(),(0,dr.j)(this,Bt)};var Vr=t(66342);(0,s.tp)().prototype.sum=function(Bt,re){return this.throwIfDisposed(),(0,Vr.c)(this,Bt,re)};const Yr=(0,c.op)({tan_:function Kr(Bt){const me={x:(0,g.YT)(Bt,"x","tan","float32")};return l.T2.runKernel(E.oFs,me)}});(0,s.tp)().prototype.tan=function(){return this.throwIfDisposed(),Yr(this)};var Sr=t(86580);(0,s.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Sr.y)(this)};var Xr=t(36409);(0,s.tp)().prototype.tile=function(Bt){return this.throwIfDisposed(),(0,Xr.V)(this,Bt)},(0,s.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,w.w)(this,"bool")},(0,s.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,w.w)(this,"float32")},(0,s.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,w.w)(this,"int32")};const Jr=(0,c.op)({topk_:function Qr(Bt,re=1,me=!0){const ve=(0,g.YT)(Bt,"x","topk");if(0===ve.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const cn=ve.shape[ve.shape.length-1];if(re<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${re}`);if(re>cn)throw new Error(`'k' passed to topk() must be <= the last dimension (${cn}) but got ${re}`);const gn={x:ve},_n={k:re,sorted:me},[yn,Qn]=l.T2.runKernel(E.TBb,gn,_n);return{values:yn,indices:Qn}}});(0,s.tp)().prototype.topk=function(Bt,re){return this.throwIfDisposed(),Jr(this,Bt,re)};var Ar=t(77914);(0,s.tp)().prototype.transpose=function(Bt){return this.throwIfDisposed(),(0,Ar.m)(this,Bt)};const zr=(0,c.op)({unique_:function qr(Bt,re=0){const me=(0,g.YT)(Bt,"x","unique","string_or_numeric");(0,b.vA)(me.rank>0,()=>"The input tensor must be at least 1D");const ve={x:me},cn={axis:re},[gn,_n]=l.T2.runKernel(E.EwU,ve,cn);return{values:gn,indices:_n}}});(0,s.tp)().prototype.unique=function(Bt){return this.throwIfDisposed(),zr(this,Bt)};var to=t(90893);(0,s.tp)().prototype.unsortedSegmentSum=function(Bt,re){return this.throwIfDisposed(),(0,to.z)(this,Bt,re)};var pr=t(48256);(0,s.tp)().prototype.unstack=function(Bt){return this.throwIfDisposed(),(0,pr.K)(this,Bt)},(0,s.tp)().prototype.where=function(Bt,re){return this.throwIfDisposed(),(0,ze._)(Bt,this,re)},(0,s.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,an.P)(this)}},62914:(pt,R,t)=>{"use strict";var e=t(30162),s=t(92290),l=t(59731),E=t(72079);const g={kernelName:e.ljI,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,E.P)((0,s.w)(kt,"float32"),-1))}}};var c=t(4350),y=t(43267),m=t(10829),h=t(51583),f=t(32362),p=t(59279);const u={kernelName:e.Vvy,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>{const Gt=(0,f.E)((0,s.w)(kt,"float32")),oe=(0,h.R)((0,p.j)((0,m.d)(1),Gt));return(0,y.H)((0,c.y)(At,oe))}}}},d={kernelName:e.PH8,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>{const Gt=(0,h.R)((0,p.j)((0,f.E)((0,s.w)(kt,"float32")),1));return(0,c.y)(At,Gt)}}}};var C=t(9269),T=t(94399),D=t(66342);const S={kernelName:e.OMN,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=C.assertAndGetBroadcastShape(kt.shape,Gt.shape);return{a:()=>{let de=At;const Ee=C.getReductionAxes(kt.shape,oe);return Ee.length>0&&(de=(0,D.c)(de,Ee)),(0,T.t)(de,kt.shape)},b:()=>{let de=At;const Ee=C.getReductionAxes(Gt.shape,oe);return Ee.length>0&&(de=(0,D.c)(de,Ee)),(0,T.t)(de,Gt.shape)}}}},b={kernelName:e.EkD,saveAllInputs:!0,gradFunc:(At,Yt)=>{const kt={};return Yt.forEach((Gt,oe)=>{kt[oe]=()=>At.clone()}),kt}};var w=t(44714);const H={kernelName:e.Jp_,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,w.P)(kt)}}},j={kernelName:e.p_m,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,w.P)(kt)}}},F={kernelName:e.QKF,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,h.R)((0,p.j)((0,m.d)(1),(0,f.E)((0,s.w)(kt,"float32")))))}}};var B=t(83034);const A={kernelName:e.epO,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>{const Gt=(0,h.R)((0,B.W)((0,m.d)(1),(0,f.E)((0,s.w)(kt,"float32"))));return(0,c.y)(At,Gt)}}}},k={kernelName:e.lxb,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,C.assertAndGetBroadcastShape)(kt.shape,Gt.shape);return{a:()=>{const de=(0,B.W)((0,f.E)(kt),(0,f.E)(Gt));let Ee=(0,l.l)(At,(0,c.y)(Gt,de));const fn=(0,C.getReductionAxes)(kt.shape,oe);return fn.length>0&&(Ee=(0,D.c)(Ee,fn)),(0,T.t)(Ee,kt.shape)},b:()=>{const de=(0,B.W)((0,f.E)(kt),(0,f.E)(Gt));let Ee=(0,y.H)((0,l.l)(At,(0,c.y)(kt,de)));const fn=(0,C.getReductionAxes)(Gt.shape,oe);return fn.length>0&&(Ee=(0,D.c)(Ee,fn)),(0,T.t)(Ee,Gt.shape)}}}},x={kernelName:e.TyE,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,B.W)((0,f.E)((0,s.w)(kt,"float32")),1))}}},V={kernelName:e.zP9,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,p.j)((0,m.d)(1),(0,f.E)((0,s.w)(kt,"float32"))))}}};var W=t(611),Y=t(17636),Z=t(26674),it=t(29458),at=t(87844);const ot=(0,at.op)({avgPool3dGrad_:function q(At,Yt,kt,Gt,oe,he){const ye=(0,Y.YT)(At,"dy","avgPool3dGrad"),de=(0,Y.YT)(Yt,"input","avgPool3dGrad");let Ee=ye,fn=de,Sn=!1;4===de.rank&&(Sn=!0,Ee=(0,T.t)(ye,[1,ye.shape[0],ye.shape[1],ye.shape[2],ye.shape[3]]),fn=(0,T.t)(de,[1,de.shape[0],de.shape[1],de.shape[2],de.shape[3]])),Z.vA(5===Ee.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${Ee.rank}.`),Z.vA(5===fn.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${fn.rank}.`),(0,it.s_)("avgPool3dGrad",oe,he);const Hn=W.T2.runKernel(e.wwC,{dy:Ee,input:fn},{filterSize:kt,strides:Gt,pad:oe,dimRoundingMode:he});return Sn?(0,T.t)(Hn,[Hn.shape[1],Hn.shape[2],Hn.shape[3],Hn.shape[4]]):Hn}}),rt={kernelName:e.cS,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{filterSize:oe,strides:he,pad:ye,dimRoundingMode:de}=kt;return{x:()=>ot(At,Gt,oe,he,ye,de)}}},yt=(0,at.op)({avgPoolGrad_:function et(At,Yt,kt,Gt,oe){const he=(0,Y.YT)(At,"dy","avgPoolGrad"),ye=(0,Y.YT)(Yt,"input","avgPoolGrad");Z.vA(ye.rank===he.rank,()=>`Rank of input (${ye.rank}) does not match rank of dy (${he.rank})`);let de=ye,Ee=he,fn=!1;3===ye.rank&&(fn=!0,de=(0,T.t)(ye,[1,ye.shape[0],ye.shape[1],ye.shape[2]]),Ee=(0,T.t)(he,[1,he.shape[0],he.shape[1],he.shape[2]])),Z.vA(4===Ee.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${Ee.rank}.`),Z.vA(4===de.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${de.rank}.`);const Un=W.T2.runKernel(e.VCH,{dy:Ee,input:de},{filterSize:kt,strides:Gt,pad:oe});return fn?(0,T.t)(Un,[Un.shape[1],Un.shape[2],Un.shape[3]]):Un}}),mt={kernelName:e.ho8,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{filterSize:oe,strides:he,pad:ye}=kt;return{x:()=>yt(At,Gt,oe,he,ye)}}};var St=t(60314);const se={kernelName:e.jAQ,inputsToSave:["a","b"],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{transposeA:he,transposeB:ye}=kt;return he||ye?!he&&ye?{a:()=>(0,St.N)(At,oe,!1,!1),b:()=>(0,St.N)(At,Gt,!0,!1)}:he&&!ye?{a:()=>(0,St.N)(oe,At,!1,!0),b:()=>(0,St.N)(Gt,At,!1,!1)}:{a:()=>(0,St.N)(oe,At,!0,!0),b:()=>(0,St.N)(At,Gt,!0,!0)}:{a:()=>(0,St.N)(At,oe,!1,!0),b:()=>(0,St.N)(Gt,At,!0,!1)}}};var Ht=t(93713);const ue={kernelName:e.Ik2,gradFunc:(At,Yt,kt)=>{const{blockShape:Gt,crops:oe}=kt;return{x:()=>(0,Ht.e)(At,Gt,oe)}}},Xt={kernelName:e.LB5,gradFunc:(At,Yt,kt)=>{const oe=kt.inputShape,he=kt.shape,ye=Array.from(he);for(let Ee=oe.length-1;Ee>=0;Ee--)if(oe[Ee]===he[Ee])ye[Ee]=1;else if(1!==oe[Ee])throw new Error(`broadcastTo(): [${oe}] cannot be broadcast to [${he}].`);const de=[];for(let Ee=0;Ee<ye.length;Ee++)ye[Ee]>1&&de.push(Ee);return{x:()=>(0,D.c)(At,de,!0)}}},ie={kernelName:e.KXH,gradFunc:At=>({x:()=>At.clone()})},ae={kernelName:e.QDP,gradFunc:At=>({x:()=>(0,w.P)(At)})};var ne=t(94300),Pe=t(94411),Ie=t(21292),Ct=t(56914);const zt={kernelName:e.vaV,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{clipValueMin:oe,clipValueMax:he}=kt;return{x:()=>(0,Ct._)((0,Ie.n)((0,ne.D)(Gt,oe),(0,Pe.I)(Gt,he)),At,(0,w.P)(At))}}},Jt={kernelName:e.$zE,inputsToSave:["x"],gradFunc:g.gradFunc};var pe=t(91517);const ze={kernelName:e.$dB,saveAllInputs:!0,gradFunc:(At,Yt,kt)=>{const Gt=Yt.map(Ee=>Ee.shape),{axis:oe}=kt,he=(0,Z.Y6)(oe,Yt[0].shape)[0],ye=Gt.map(Ee=>Ee[he]);return(0,pe.l)(At,ye,he).map(Ee=>()=>Ee)}};var an=t(70511),vn=t(73725);const mn={kernelName:e.p2J,inputsToSave:["x","filter"],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{dilations:he,strides:ye,pad:de,dataFormat:Ee}=kt;return Z.vA(it.Dh(he),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${he}'`),{x:()=>(0,vn.v)(Gt.shape,At,oe,ye,de,Ee),filter:()=>(0,an.H)(Gt,At,oe.shape,ye,de,Ee)}}};var hn=t(12809);const $n={kernelName:e.jfg,inputsToSave:["dy","filter"],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{strides:he,pad:ye,dataFormat:de,dimRoundingMode:Ee}=kt;return{dy:()=>(0,hn.X)(At,oe,he,ye,de,1,Ee),filter:()=>(0,an.H)(At,Gt,oe.shape,he,ye,de,Ee)}}},Gn=(0,at.op)({conv3DBackpropFilter_:function wn(At,Yt,kt,Gt,oe){let he=At;4===At.rank&&(he=(0,T.t)(At,[1,At.shape[0],At.shape[1],At.shape[2],At.shape[3]]));let ye=Yt;return 4===ye.rank&&(ye=(0,T.t)(Yt,[1,Yt.shape[0],Yt.shape[1],Yt.shape[2],Yt.shape[3]])),Z.vA(5===he.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${he.shape}.`),Z.vA(5===ye.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${ye.shape}.`),Z.vA(5===kt.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${kt}.`),Z.vA(he.shape[4]===kt[3],()=>`Error in conv3dDerFilter: depth of input ${he.shape[4]}) must match input depth in filter (${kt[3]}.`),Z.vA(ye.shape[4]===kt[4],()=>`Error in conv3dDerFilter: depth of dy (${ye.shape[4]}) must match output depth for filter (${kt[4]}).`),W.T2.runKernel(e.iGz,{x:he,dy:ye},{strides:Gt,pad:oe,filterShape:kt})}});var jn=t(87482);const ls={kernelName:e.A1h,inputsToSave:["x","filter"],gradFunc:(At,Yt,kt)=>{const{dilations:Gt,strides:oe,pad:he}=kt;Z.vA((0,it.Dh)(Gt),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${Gt}'`);const[ye,de]=Yt;return{x:()=>(0,jn.c)(ye.shape,At,de,oe,he),filter:()=>Gn(ye,At,de.shape,oe,he)}}};var ts=t(20415);const Es={kernelName:e.Mn0,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)((0,y.H)((0,ts.F)((0,s.w)(kt,"float32"))),At)}}};var ws=t(91071);const Ys={kernelName:e.MnK,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)((0,ws.L)((0,s.w)(kt,"float32")),At)}}};var ps=t(94963),Vs=t(28799),$t=t(77914);const Vt={kernelName:e.nY8,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{axis:oe,exclusive:he,reverse:ye}=kt;return{x:()=>{const de=(0,ps.Em)([oe],Gt.rank);let Ee=(0,Vs.r)(At,oe,he,!ye);return null!=de&&(Ee=(0,$t.m)(Ee,de)),Ee}}}};var G=t(60455),ct=t(43749);const vt={kernelName:e.tGH,inputsToSave:["x","filter"],gradFunc:(At,Yt,kt)=>{const{dilations:Gt,strides:oe,pad:he,dimRoundingMode:ye}=kt,de=null==Gt?[1,1]:Gt;Z.vA(it.Dh(de),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${de}'`);const[Ee,fn]=Yt;return Z.vA(4===Ee.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${Ee.rank}.`),Z.vA(4===fn.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${fn.rank}.`),Z.vA(Ee.shape[3]===fn.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${Ee.shape[3]}) must match the inChannels dimension in filter ${fn.shape[2]}.`),Z.vA(it.G0(oe,de),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${oe} and dilations '${de}'.`),it.s_("depthwiseConv2d",he,ye),{x:()=>(0,ct.l)(Ee.shape,At,fn,oe,he,de,ye),filter:()=>(0,G.x)(Ee,At,fn.shape,oe,he,de,ye)}}},Tt={kernelName:e.jxD,inputsToSave:["x","filter"],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,he={x:Gt,filter:oe,dy:At},ye={x:Gt,filter:oe,dy:At};return{x:()=>W.T2.runKernel(e.bP9,he,kt),filter:()=>W.T2.runKernel(e.pk0,ye,kt)}}},It={kernelName:e.Pah,outputsToSave:[!0],gradFunc:(At,Yt)=>{const[kt]=Yt,Gt={dy:At,y:kt};return{x:()=>W.T2.runKernel(e.rsH,Gt)}}};var bt=t(68326);const Mt={kernelName:e._s9,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt,Gt=(0,l.l)((0,bt.o)((0,y.H)((0,f.E)(kt))),2/Math.sqrt(Math.PI));return{x:()=>(0,l.l)(At,Gt)}}},ce={kernelName:e.ox3,outputsToSave:[!0],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,kt)}}},ge={kernelName:e.ybN,inputsToSave:["input"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{input:()=>(0,T.t)(At,kt.shape)}}},Se={kernelName:e.ybj,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,bt.o)(kt))}}},We={kernelName:e.ZgB,gradFunc:At=>({x:()=>(0,w.P)(At)})},Ue={kernelName:e.ElG,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,C.assertAndGetBroadcastShape)(kt.shape,Gt.shape);return{a:()=>{const de=(0,c.y)(At,(0,s.w)(Gt,"float32")),Ee=(0,C.getReductionAxes)(kt.shape,oe);return Ee.length>0?(0,T.t)((0,D.c)(de,Ee),kt.shape):de},b:()=>{let de=(0,l.l)(At,(0,s.w)(kt,"float32"));const Ee=(0,C.getReductionAxes)(Gt.shape,oe);Ee.length>0&&(de=(0,T.t)((0,D.c)(de,Ee),Gt.shape));const fn=(0,f.E)(Gt);return(0,y.H)((0,c.y)(de,(0,s.w)(fn,"float32")))}}}};var Je=t(90313),be=t(36409);const Ce={kernelName:e.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(At,Yt,kt)=>{const{varianceEpsilon:Gt}=kt,[oe,he,ye,de]=Yt,Ee=null==de?(0,m.d)(1):de,fn=(0,C.getReductionAxes)(he.shape,oe.shape),Sn=[];if(1===he.rank){for(let us=0;us<oe.shape.length-1;++us)Sn.push(oe.shape[us]);Sn.push(1)}const zn=(0,p.j)(oe,he),Un=(0,l.l)(At,Ee),Hn=(0,Je.Z)((0,B.W)(ye,(0,m.d)(Gt))),Ws=(0,l.l)((0,l.l)((0,l.l)(Hn,Hn),Hn),(0,m.d)(-.5));return{x:()=>(0,T.t)((0,l.l)((0,l.l)(At,1===he.rank?(0,be.V)((0,T.t)(Hn,[1,1,1,he.shape[0]]),Sn):Hn),Ee),oe.shape),mean:()=>{let us=(0,l.l)((0,l.l)(Hn,(0,m.d)(-1)),Un);return 1===he.rank&&(us=(0,D.c)(us,fn)),(0,T.t)(us,he.shape)},variance:()=>{let us=(0,l.l)((0,l.l)(Ws,zn),Un);return 1===he.rank&&(us=(0,D.c)(us,fn)),(0,T.t)(us,he.shape)},scale:()=>{const us=(0,l.l)(zn,Hn);let Mr=(0,l.l)(At,us);return 1===he.rank&&(Mr=(0,D.c)(Mr,fn)),(0,T.t)(Mr,he.shape)},offset:()=>{let us=At;return 1===he.rank&&(us=(0,D.c)(us,fn)),(0,T.t)(us,he.shape)}}}};var qe=t(92885),xe=t(90893);const nn={kernelName:e.mxL,inputsToSave:["x","indices"],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{axis:he,batchDims:ye}=kt,de=(0,Z.Y6)(he,Gt.shape)[0],Ee=(fn,Sn,zn)=>()=>{const Un=fn.shape,Hn=Sn.size,Ws=Un.slice(0,de),tr=Ws.length,Ls=Un.slice(he,Un.length).slice(1),po=Ls.length,ho=Ge(0,tr),fo=Ge(tr+1,tr+1+po),us=un([Ws,[Hn],Ls]),Mr=(0,T.t)(zn,us),Po=(0,T.t)(Sn,[Hn]),mo=un([[tr],ho,fo]),Oo=(0,$t.m)(Mr,mo);let so=(0,xe.z)(Oo,Po,fn.shape[de]);const go=(0,ps.gx)(mo);return so=(0,$t.m)(so,go),so};if(1===ye){const Sn=Gt.split(Gt.shape[0],0);return{x:()=>(0,qe.t)(Sn.map((Hn,Ws)=>Ee(Hn,oe.slice(Ws,1),At.slice(Ws,1))())).reshape(Gt.shape),indices:()=>oe}}return{x:Ee(Gt,oe,At),indices:()=>oe}}};function Ge(At,Yt){const kt=[];for(let Gt=At;Gt<Yt;++Gt)kt.push(Gt);return kt}function un(At){const Yt=[];for(let kt=0;kt<At.length;++kt)for(let Gt=0;Gt<At[kt].length;++Gt)Yt.push(At[kt][Gt]);return Yt}const An={kernelName:e.lLS,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt;return{a:()=>(0,w.P)(kt),b:()=>(0,w.P)(Gt)}}},Vn={kernelName:e.lzr,gradFunc:At=>({x:()=>(0,s.w)(At,"float32")})},Rn={kernelName:e.gIW,gradFunc:At=>({x:()=>(0,w.P)(At)})},ns={kernelName:e.E3$,gradFunc:At=>({x:()=>(0,w.P)(At)})},Wn={kernelName:e.iPs,gradFunc:At=>({x:()=>(0,w.P)(At)})};var Xn=t(54807);const _s={kernelName:e.X0$,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{alpha:oe}=kt,he=(0,Xn.r)(Gt,0);return{x:()=>(0,Ct._)(he,At,(0,l.l)(At,oe))}}},hs={kernelName:e.Cg$,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,B.W)(kt,1))}}},ms={kernelName:e.tG8,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,s.w)(kt,"float32"))}}},Xs={kernelName:e.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{axis:oe}=kt;return{logits:()=>{const ye=(0,bt.o)(Gt);return(0,p.j)(At,(0,l.l)((0,D.c)(At,oe,!0),ye))}}}},Ps=(0,at.op)({localResponseNormalizationBackprop_:function Qs(At,Yt,kt,Gt=5,oe=1,he=1,ye=.5){return W.T2.runKernel(e.ToN,{x:At,y:Yt,dy:kt},{depthRadius:Gt,bias:oe,alpha:he,beta:ye})}}),vs={kernelName:e.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{depthRadius:he,bias:ye,alpha:de,beta:Ee}=kt;return{x:()=>Ps(Gt,oe,At,he,ye,de,Ee)}}};var Bs=t(68833);function Ks(At,Yt,kt,Gt){return Yt.rank<kt.rank&&(Yt=(0,T.t)(Yt,ps.SM(Yt.shape,Gt))),At.rank<kt.rank&&(At=(0,T.t)(At,ps.SM(At.shape,Gt))),{x:()=>(0,l.l)(At,(0,s.w)((0,Bs.L)(kt,Yt),At.dtype))}}const or={kernelName:e.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const Gt=kt,{reductionIndices:oe}=Gt,he=Yt[0],Ee=Ks(At,Yt[1],he,Z.Y6(oe,he.shape));return{x:()=>Ee.x()}}};var Br=t(56576);const kr={kernelName:e.LDN,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt;return{a:()=>(0,l.l)(At,(0,s.w)((0,ne.D)(kt,Gt),"float32")),b:()=>(0,l.l)(At,(0,s.w)((0,Br.M)(kt,Gt),"float32"))}}},yr=(0,at.op)({maxPool3dGrad_:function Fr(At,Yt,kt,Gt,oe,he,ye){const de=(0,Y.YT)(At,"dy","maxPool3dGrad"),Ee=(0,Y.YT)(Yt,"input","maxPool3dGrad"),fn=(0,Y.YT)(kt,"output","maxPool3dGrad");let Sn=de,zn=Ee,Un=fn,Hn=!1;4===Ee.rank&&(Hn=!0,Sn=(0,T.t)(de,[1,de.shape[0],de.shape[1],de.shape[2],de.shape[3]]),zn=(0,T.t)(Ee,[1,Ee.shape[0],Ee.shape[1],Ee.shape[2],Ee.shape[3]]),Un=(0,T.t)(fn,[1,fn.shape[0],fn.shape[1],fn.shape[2],fn.shape[3]])),Z.vA(5===Sn.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${Sn.rank}.`),Z.vA(5===zn.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${zn.rank}.`),Z.vA(5===Un.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${Un.rank}.`),(0,it.s_)("maxPool3dGrad",he,ye);const Ls=W.T2.runKernel(e.cHb,{dy:Sn,input:zn,output:Un},{filterSize:Gt,strides:oe,pad:he,dimRoundingMode:ye});return Hn?(0,T.t)(Ls,[Ls.shape[1],Ls.shape[2],Ls.shape[3],Ls.shape[4]]):Ls}}),zs={kernelName:e.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{filterSize:he,strides:ye,pad:de,dimRoundingMode:Ee}=kt;return{x:()=>yr(At,Gt,oe,he,ye,de,Ee)}}},Wr=(0,at.op)({maxPoolGrad_:function xr(At,Yt,kt,Gt,oe,he,ye){const de=(0,Y.YT)(At,"dy","maxPoolGrad"),Ee=(0,Y.YT)(Yt,"input","maxPoolGrad"),fn=(0,Y.YT)(kt,"output","maxPoolGrad");return Z.vA(Ee.rank===de.rank,()=>`Rank of input (${Ee.rank}) does not match rank of dy (${de.rank})`),Z.vA(4===de.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${de.rank}.`),Z.vA(4===Ee.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${Ee.rank}.`),it.s_("maxPoolGrad",he,ye),W.T2.runKernel(e.RXX,{dy:de,input:Ee,output:fn},{filterSize:Gt,strides:oe,pad:he,dimRoundingMode:ye})}}),Os={kernelName:e.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const[Gt,oe]=Yt,{filterSize:he,strides:ye,pad:de}=kt;return{x:()=>Wr(At,Gt,oe,he,ye,de)}}};var Js=t(95032);const vr={kernelName:e.g5A,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{axis:oe}=kt,he=Z.Y6(oe,Gt.shape),de=(0,ps.lb)(Gt.shape,he)[1],Ee=Z.Ze(de);return{x:()=>{const Sn=Gt.shape.slice();he.forEach(Hn=>{Sn[Hn]=1});const zn=(0,T.t)(At,Sn);return(0,c.y)((0,l.l)(zn,(0,Js.S)(Gt.shape,"float32")),Ee)}}}},ar={kernelName:e.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const Gt=kt,{axis:oe}=Gt,[he,ye]=Yt,Ee=Ks(At,ye,he,Z.Y6(oe,he.shape));return{x:()=>Ee.x()}}},Tr={kernelName:e.LG0,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt;return{a:()=>(0,l.l)(At,(0,s.w)((0,Pe.I)(kt,Gt),"float32")),b:()=>(0,l.l)(At,(0,s.w)((0,Xn.r)(kt,Gt),"float32"))}}};var Rs=t(94063);const Gs={kernelName:e.x7F,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const Gt=Yt[0],{paddings:oe}=kt,he=oe.map(ye=>ye[0]);return{x:()=>(0,Rs.d)(At,he,Gt.shape)}}};var Cr=t(41467);const Dr={kernelName:e.BLA,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,C.assertAndGetBroadcastShape)(kt.shape,Gt.shape);return{a:()=>{const de=(0,C.getReductionAxes)(kt.shape,oe);return de.length>0?(0,T.t)((0,D.c)(At,de),kt.shape):At},b:()=>{const de=(0,l.l)(At,(0,y.H)((0,Cr.R)((0,c.y)(kt,Gt)))),Ee=(0,C.getReductionAxes)(Gt.shape,oe);return Ee.length>0?(0,T.t)((0,D.c)(de,Ee),Gt.shape):de}}}},Ir={kernelName:e.xu7,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,C.assertAndGetBroadcastShape)(kt.shape,Gt.shape);return{a:()=>{const de=(0,l.l)(At,(0,s.w)(Gt,"float32")),Ee=(0,C.getReductionAxes)(kt.shape,oe);return Ee.length>0?(0,T.t)((0,D.c)(de,Ee),kt.shape):de},b:()=>{const de=(0,l.l)(At,(0,s.w)(kt,"float32")),Ee=(0,C.getReductionAxes)(Gt.shape,oe);return Ee.length>0?(0,T.t)((0,D.c)(de,Ee),Gt.shape):de}}}},ir={kernelName:e.l0G,gradFunc:At=>({x:()=>(0,y.H)(At)})};var Ur=t(20218);const qs={kernelName:e.urI,inputsToSave:["indices"],gradFunc:(At,Yt)=>{const kt=Yt[0];return{indices:()=>(0,Ur.U)(kt.shape,"float32")}}},ks={kernelName:e.LWX,gradFunc:At=>({x:()=>(0,w.P)(At)})};var Pr=t(48256);const Or={kernelName:e.mM$,saveAllInputs:!0,gradFunc:(At,Yt,kt)=>{const{axis:Gt}=kt;return(0,Pr.K)(At,Gt).map(he=>()=>he)}},O={kernelName:e.ODT,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const Gt=Yt[0],{paddings:oe}=kt,he=oe.map(ye=>ye[0]);return{x:()=>(0,Rs.d)(At,he,Gt.shape)}}};var _=t(8535),I=t(53827);const K={kernelName:e.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(At,Yt)=>{const[kt,Gt,oe]=Yt,he=kt,ye=Gt,de=C.assertAndGetBroadcastShape(he.shape,ye.shape);return{a:()=>{const Sn=(0,s.w)(ye,"float32");let zn=(0,l.l)(At,(0,l.l)(Sn,(0,I.n)(he,(0,p.j)(Sn,(0,m.d)(1)))));const Un=C.getReductionAxes(he.shape,de);return Un.length>0&&(zn=(0,D.c)(zn,Un)),(0,T.t)(zn,he.shape)},b:()=>{const Sn=(0,Xn.r)(he,0),zn=(0,Ct._)(Sn,(0,_.R)(he),(0,w.P)(he));let Un=(0,l.l)(At,(0,l.l)(oe,zn));const Hn=C.getReductionAxes(ye.shape,de);return Hn.length>0&&(Un=(0,D.c)(Un,Hn)),(0,T.t)(Un,ye.shape)}}}},nt={kernelName:e.Ncv,inputsToSave:["x","alpha"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,Xn.r)(kt,0);return{x:()=>(0,Ct._)(oe,At,(0,l.l)(At,Gt)),alpha:()=>{let he=(0,Ct._)(oe,(0,w.P)(At),(0,l.l)(At,kt));const ye=(0,C.getReductionAxes)(Gt.shape,At.shape);return ye.length>0&&(he=(0,D.c)(he,ye)),(0,T.t)(he,Gt.shape)}}}};var st=t(63371);const te={kernelName:e.kdj,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{axis:oe}=kt;let he=[];return he=null==oe?Gt.shape.map((ye,de)=>de):"number"==typeof oe?[oe]:oe,{x:()=>function Pt(At,Yt,kt){const Gt=At.shape.length,oe=Gt-kt.length,he=ps.Em(kt,Gt);let ye=At;null!=he&&(ye=(0,$t.m)(At,he));const de=ye.shape.slice(),fn=de.splice(Gt-kt.length,kt.length).reduce((Un,Hn)=>Un*Hn,1);de.push(fn);let zn=function Nt(At,Yt,kt){const Gt=At.shape.slice();Gt[kt]=1;const oe=(0,T.t)(Yt,Gt),he=(0,st.L)(At,kt,!0,!1),ye=(0,st.L)(At,kt,!0,!0),de=(0,l.l)(he,ye);return(0,l.l)(oe,de)}(ye.reshape(de),Yt,oe);if(zn=zn.reshape(ye.shape),null!=he){const Un=ps.gx(he);zn=(0,$t.m)(zn,Un)}return zn}(Gt,At,he)}}},De={kernelName:e.sDr,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=C.assertAndGetBroadcastShape(kt.shape,Gt.shape);return{a:()=>{const de=(0,c.y)(At,(0,s.w)(Gt,"float32")),Ee=C.getReductionAxes(kt.shape,oe);return Ee.length>0?(0,T.t)((0,D.c)(de,Ee),kt.shape):de},b:()=>{let de=(0,l.l)(At,(0,s.w)(kt,"float32"));const Ee=C.getReductionAxes(Gt.shape,oe);Ee.length>0&&(de=(0,T.t)((0,D.c)(de,Ee),Gt.shape));const fn=(0,f.E)(Gt);return(0,y.H)((0,c.y)(de,(0,s.w)(fn,"float32")))}}}},Le={kernelName:e.huO,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,y.H)((0,f.E)(kt)))}}},je={kernelName:e.P_L,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt,Gt=(0,l.l)((0,Pe.I)(kt,6),(0,E.P)(kt));return{x:()=>(0,l.l)(At,(0,s.w)(Gt,"float32"))}}},en={kernelName:e.fUj,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,s.w)((0,E.P)(kt),"float32"))}}},Dn={kernelName:e.R23,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,T.t)(At,kt.shape)}}},Ln={kernelName:e.hgw,inputsToSave:["images"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,oe={dy:At,images:Gt};return{images:()=>W.T2.runKernel(e.FCQ,oe,kt)}}},xn={kernelName:e.jOE,inputsToSave:["images"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,oe={dy:At,images:Gt};return{images:()=>W.T2.runKernel(e.XQy,oe,kt)}}};var on=t(21067);const Pn={kernelName:e.D7i,gradFunc:(At,Yt,kt)=>{const{dims:Gt}=kt,oe=(0,Z.Y6)(Gt,At.shape);return{x:()=>(0,on.B)(At,oe)}}},ss={kernelName:e.hVg,gradFunc:At=>({x:()=>(0,w.P)(At)})},Ts={kernelName:e.TOR,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,y.H)((0,c.y)(At,(0,l.l)((0,I.n)(kt,1.5),2)))}}};var fs=t(88288);const Bn={kernelName:e.l6P,inputsToSave:["condition"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{condition:()=>(0,s.w)((0,w.P)(kt),"float32"),t:()=>(0,l.l)(At,(0,s.w)(kt,At.dtype)),e:()=>(0,l.l)(At,(0,s.w)((0,fs.N)(kt),At.dtype))}}};var Fs=t(62597);const Hs={kernelName:e.u$b,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>{const Gt=(0,Xn.r)(kt,(0,m.d)(0)),oe=(0,m.d)(Fs.j),he=(0,m.d)(Fs.X),ye=(0,l.l)(At,he),de=(0,l.l)((0,l.l)(At,oe),(0,bt.o)((0,s.w)(kt,"float32")));return(0,Ct._)(Gt,ye,de)}}}},lr={kernelName:e.vI1,outputsToSave:[!0],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,l.l)(kt,(0,p.j)((0,m.d)(1),kt)))}}},ur={kernelName:e.YVe,gradFunc:At=>({x:()=>(0,w.P)(At)})};var cr=t(54758);const dr={kernelName:e.hql,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)((0,cr.g)((0,s.w)(kt,"float32")),At)}}};var Vr=t(12076);const Kr={kernelName:e.J3C,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)((0,Vr.y)((0,s.w)(kt,"float32")),At)}}};var Yr=t(54472),Sr=t(1986);const Xr={kernelName:e.JiE,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{begin:oe,size:he}=kt,ye=Gt.shape,[de,Ee]=(0,Sr.parseSliceParams)(Gt,oe,he),fn=[];for(let Sn=0;Sn<At.rank;Sn++)fn.push([de[Sn],ye[Sn]-de[Sn]-Ee[Sn]]);return{x:()=>(0,Yr.e)(At,fn)}}},Qr={kernelName:e.rFG,outputsToSave:[!0],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{dim:oe}=kt,ye=(0,l.l)(At,Gt);return{logits:()=>(0,p.j)(ye,(0,l.l)((0,D.c)(ye,[oe],!0),Gt))}}};var Jr=t(53205);const Ar={kernelName:e.Fin,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,Jr.r)(kt))}}};var qr=t(69229);const zr={kernelName:e.A8B,gradFunc:(At,Yt,kt)=>{const{blockShape:Gt,paddings:oe}=kt;return{x:()=>(0,qr.G)(At,Gt,oe)}}};var to=t(35213);const pr={kernelName:e.Blb,gradFunc:(At,Yt,kt)=>{const{axis:Gt}=kt;return{x:()=>(0,to.x)(At,Gt)}}},Bt={kernelName:e.dFH,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,l.l)((0,h.R)((0,s.w)(kt,"float32")),2))}}},re={kernelName:e.M6A,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)(At,(0,l.l)((0,s.w)(kt,"float32"),2))}}},me={kernelName:e.Ddj,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=(0,m.d)(2);return{a:()=>(0,l.l)(At,(0,l.l)(oe,(0,p.j)(kt,Gt))),b:()=>(0,l.l)(At,(0,l.l)(oe,(0,p.j)(Gt,kt)))}}},ve={kernelName:e.pnw,gradFunc:At=>({x:()=>(0,w.P)(At)})},cn={kernelName:e.PbM,inputsToSave:["a","b"],gradFunc:(At,Yt)=>{const[kt,Gt]=Yt,oe=C.assertAndGetBroadcastShape(kt.shape,Gt.shape);return{a:()=>{let de=At;const Ee=C.getReductionAxes(kt.shape,oe);return Ee.length>0&&(de=(0,D.c)(de,Ee)),(0,T.t)(de,kt.shape)},b:()=>{let de=At;const Ee=C.getReductionAxes(Gt.shape,oe);return Ee.length>0&&(de=(0,D.c)(de,Ee)),(0,T.t)((0,y.H)(de),Gt.shape)}}}},gn={kernelName:e.WuN,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,oe=Gt.shape.slice(),{axis:he}=kt;(0,Z.Y6)(he,Gt.shape).forEach(fn=>{oe[fn]=1});const de=(0,T.t)(At,oe),Ee=(0,l.l)(de,(0,Js.S)(Gt.shape,"float32"));return{x:()=>Ee}}},_n={kernelName:e.oFs,inputsToSave:["x"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,c.y)(At,(0,f.E)((0,cr.g)(kt)))}}},yn={kernelName:e.iuW,outputsToSave:[!0],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>(0,l.l)((0,p.j)((0,m.d)(1),(0,f.E)(kt)),At)}}},Qn={kernelName:e.FAs,inputsToSave:["x"],gradFunc:(At,Yt,kt)=>{const[Gt]=Yt,{reps:oe}=kt;return{x:()=>{let ye=(0,w.P)(Gt);if(1===Gt.rank)for(let de=0;de<oe[0];++de)ye=(0,B.W)(ye,(0,Rs.d)(At,[de*Gt.shape[0]],[Gt.shape[0]]));else if(2===Gt.rank)for(let de=0;de<oe[0];++de)for(let Ee=0;Ee<oe[1];++Ee)ye=(0,B.W)(ye,(0,Rs.d)(At,[de*Gt.shape[0],Ee*Gt.shape[1]],[Gt.shape[0],Gt.shape[1]]));else if(3===Gt.rank)for(let de=0;de<oe[0];++de)for(let Ee=0;Ee<oe[1];++Ee)for(let fn=0;fn<oe[2];++fn)ye=(0,B.W)(ye,(0,Rs.d)(At,[de*Gt.shape[0],Ee*Gt.shape[1],fn*Gt.shape[2]],[Gt.shape[0],Gt.shape[1],Gt.shape[2]]));else{if(4!==Gt.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${Gt.rank} tensors yet.`);for(let de=0;de<oe[0];++de)for(let Ee=0;Ee<oe[1];++Ee)for(let fn=0;fn<oe[2];++fn)for(let Sn=0;Sn<oe[3];++Sn)ye=(0,B.W)(ye,(0,Rs.d)(At,[de*Gt.shape[0],Ee*Gt.shape[1],fn*Gt.shape[2],Sn*Gt.shape[3]],[Gt.shape[0],Gt.shape[1],Gt.shape[2],Gt.shape[3]]))}return ye}}}},Cs={kernelName:e.wx0,gradFunc:(At,Yt,kt)=>{const Gt=kt,{perm:oe}=Gt,he=ps.gx(oe);return{x:()=>(0,$t.m)(At,he)}}},Kn={kernelName:e.dXR,gradFunc:(At,Yt,kt)=>{const Gt=kt,{axis:oe}=Gt;return{value:()=>(0,qe.t)(At,oe)}}};var rs=t(42103),Ss=t(38837),br=t(74659);const eo={kernelName:e.pPe,inputsToSave:["segmentIds"],gradFunc:(At,Yt)=>{const[kt]=Yt;return{x:()=>function no(At,Yt){const kt=(0,br.P)(Yt,(0,w.P)(Yt)),Gt=(0,Ss.k)(At,kt);let oe=(0,ne.D)(Yt,(0,m.d)(0,"int32"));const he=Gt.rank-oe.rank;for(let de=0;de<he;++de)oe=(0,rs.U)(oe,de+1);oe=(0,Ie.n)(oe,(0,Js.S)(Gt.shape,"bool"));const ye=(0,w.P)(Gt);return(0,Ct._)(oe,Gt,ye)}(At,kt)}}},Gr={kernelName:e.xJ3,gradFunc:At=>({x:()=>(0,w.P)(At)})};var Hr=t(56203);const co=[g,u,d,S,b,H,j,F,A,k,x,V,rt,mt,se,ue,Xt,ie,ae,zt,Jt,ze,$n,mn,ls,Es,Ys,Vt,vt,Tt,De,It,Mt,ce,ge,Se,Ue,We,Ce,nn,An,Vn,Rn,ns,Wn,_s,hs,ms,Xs,vs,or,or,kr,zs,Os,vr,ar,Tr,Gs,Dr,Ir,ir,qs,ks,Or,O,O,K,nt,te,Le,je,en,Dn,Ln,xn,Pn,ss,Ts,Bn,Hs,lr,ur,dr,Kr,Xr,Qr,Ar,zr,zr,pr,pr,Bt,me,re,ve,cn,gn,_n,yn,Qn,Cs,Kn,eo,Gr];for(const At of co)(0,Hr.kr)(At)},1506:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{Serializable:()=>E,SerializationMap:()=>g,getRegisteredName:()=>y,registerClass:()=>c});var e=t(26674);const s=new Map,l=new Map;class E{getClassName(){return this.constructor.className}static fromConfig(h,f){return new h(f)}}class g{constructor(){this.classNameMap={}}static getMap(){return null==g.instance&&(g.instance=new g),g.instance}static register(h){g.getMap().classNameMap[h.className]=[h,h.fromConfig]}}function c(m,h,f){(0,e.vA)(null!=m.className,()=>"Class being registered does not have the static className property defined."),(0,e.vA)("string"==typeof m.className,()=>"className is required to be a string, but got type "+typeof m.className),(0,e.vA)(m.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof h>"u"&&(h="Custom"),typeof f>"u"&&(f=m.className);const u=h+">"+f;return g.register(m),s.set(u,m),l.set(m,u),m}function y(m){return l.has(m)?l.get(m):m.className}},73444:(pt,R,t)=>{"use strict";t.d(R,{qY:()=>j,yl:()=>C,rT:()=>B,tp:()=>F,B4:()=>H,Q5:()=>w,qP:()=>b});var e=t(10467),s=t(73366),l=t(26674);const E=20,g=3,c=7;function y(A,k,x,V){const W=(0,l.Ur)(k),Y=function m(A,k,x,V){const W=(0,l.Ze)(k),Y=V[V.length-1],Z=new Array(Y).fill(0),it=k.length,at="complex64"===x?u(A):A;if(it>1)for(let q=0;q<W/Y;q++){const ot=q*Y;for(let rt=0;rt<Y;rt++)Z[rt]=Math.max(Z[rt],h(at[ot+rt],0,x).length)}return Z}(A,k,x,W),Z=k.length,it=p(A,k,x,W,Y),at=["Tensor"];return V&&(at.push(`  dtype: ${x}`),at.push(`  rank: ${Z}`),at.push(`  shape: [${k}]`),at.push("  values:")),at.push(it.map(q=>"    "+q).join("\n")),at.join("\n")}function h(A,k,x){let V;return V=Array.isArray(A)?`${parseFloat(A[0].toFixed(c))} + ${parseFloat(A[1].toFixed(c))}j`:(0,l.Kg)(A)?`'${A}'`:"bool"===x?f(A):parseFloat(A.toFixed(c)).toString(),(0,l.av)(V,k)}function f(A){return 0===A?"false":"true"}function p(A,k,x,V,W,Y=!0){const Z="complex64"===x?2:1,it=k[0],at=k.length;if(0===at)return"complex64"===x?[h(u(A)[0],0,x)]:"bool"===x?[f(A[0])]:[A[0].toString()];if(1===at){if(it>E){let Ht=Array.from(A.slice(0,g*Z)),ue=Array.from(A.slice((it-g)*Z,it*Z));return"complex64"===x&&(Ht=u(Ht),ue=u(ue)),["["+Ht.map((Xt,ie)=>h(Xt,W[ie],x)).join(", ")+", ..., "+ue.map((Xt,ie)=>h(Xt,W[it-g+ie],x)).join(", ")+"]"]}return["["+("complex64"===x?u(A):Array.from(A)).map((se,Ht)=>h(se,W[Ht],x)).join(", ")+"]"]}const q=k.slice(1),ot=V.slice(1),rt=V[0]*Z,et=[];if(it>E){for(let St=0;St<g;St++){const se=St*rt;et.push(...p(A.slice(se,se+rt),q,x,ot,W,!1))}et.push("...");for(let St=it-g;St<it;St++){const se=St*rt;et.push(...p(A.slice(se,se+rt),q,x,ot,W,St===it-1))}}else for(let St=0;St<it;St++){const se=St*rt;et.push(...p(A.slice(se,se+rt),q,x,ot,W,St===it-1))}const yt=2===at?",":"";et[0]="["+(it>0?et[0]+yt:"");for(let St=1;St<et.length-1;St++)et[St]=" "+et[St]+yt;let mt=",\n";for(let St=2;St<at;St++)mt+="\n";return et[et.length-1]=" "+et[et.length-1]+"]"+(Y?"":mt),et}function u(A){const k=[];for(let x=0;x<A.length;x+=2)k.push([A[x],A[x+1]]);return k}var d=t(21710);class C{constructor(k,x,V){if(this.dtype=x,this.shape=k.slice(),this.size=l.Ze(k),null!=V){const W=V.length;l.vA(W===this.size,()=>`Length of values '${W}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===x)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=V||l.Ab(x,this.size),this.strides=(0,l.Ur)(k)}set(k,...x){0===x.length&&(x=[0]),l.vA(x.length===this.rank,()=>`The number of provided coordinates (${x.length}) must match the rank (${this.rank})`);const V=this.locToIndex(x);this.values[V]=k}get(...k){0===k.length&&(k=[0]);let x=0;for(const W of k){if(W<0||W>=this.shape[x])throw new Error(`Requested out of range element at ${k}.   Buffer shape=${this.shape}`);x++}let V=k[k.length-1];for(let W=0;W<k.length-1;++W)V+=this.strides[W]*k[W];return this.values[V]}locToIndex(k){if(0===this.rank)return 0;if(1===this.rank)return k[0];let x=k[k.length-1];for(let V=0;V<k.length-1;++V)x+=this.strides[V]*k[V];return x}indexToLoc(k){if(0===this.rank)return[];if(1===this.rank)return[k];const x=new Array(this.shape.length);for(let V=0;V<x.length-1;++V)x[V]=Math.floor(k/this.strides[V]),k-=x[V]*this.strides[V];return x[x.length-1]=k,x}get rank(){return this.shape.length}toTensor(){return T().makeTensor(this.values,this.shape,this.dtype)}}let T=null,D=null,S=null;function b(A){T=A}function w(A){D=A}function H(A){S=A}class j{constructor(k,x,V,W){this.kept=!1,this.isDisposedInternal=!1,this.shape=k.slice(),this.dtype=x||"float32",this.size=l.Ze(k),this.strides=(0,l.Ur)(k),this.dataId=V,this.id=W,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){var k=this;return(0,e.A)(function*(){const x=yield k.data();return D.buffer(k.shape,k.dtype,x)})()}bufferSync(){return D.buffer(this.shape,this.dtype,this.dataSync())}array(){var k=this;return(0,e.A)(function*(){const x=yield k.data();return(0,l.yw)(k.shape,x,"complex64"===k.dtype)})()}arraySync(){return(0,l.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}data(){var k=this;return(0,e.A)(function*(){k.throwIfDisposed();const x=T().read(k.dataId);if("string"===k.dtype){const V=yield x;try{return V.map(W=>d.decodeString(W))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return x})()}dataToGPU(k){return this.throwIfDisposed(),T().readToGPU(this.dataId,k)}dataSync(){this.throwIfDisposed();const k=T().readSync(this.dataId);if("string"===this.dtype)try{return k.map(x=>d.decodeString(x))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return k}bytes(){var k=this;return(0,e.A)(function*(){k.throwIfDisposed();const x=yield T().read(k.dataId);return"string"===k.dtype?x:new Uint8Array(x.buffer)})()}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),T().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(k=!1){return D.print(this,k)}clone(){return this.throwIfDisposed(),D.clone(this)}toString(k=!1){return y(this.dataSync(),this.shape,this.dtype,k)}cast(k){return this.throwIfDisposed(),D.cast(this,k)}variable(k=!0,x,V){return this.throwIfDisposed(),T().makeVariable(this,k,x,V)}}function F(){return(0,s.m)("Tensor",()=>j)}Object.defineProperty(j,Symbol.hasInstance,{value:A=>!!A&&null!=A.data&&null!=A.dataSync&&null!=A.throwIfDisposed}),F();class B extends j{constructor(k,x,V,W){super(k.shape,k.dtype,k.dataId,W),this.trainable=x,this.name=V}assign(k){if(k.dtype!==this.dtype)throw new Error(`dtype of the new value (${k.dtype}) and previous value (${this.dtype}) must match`);if(!l.r1(k.shape,this.shape))throw new Error(`shape of the new value (${k.shape}) and previous value (${this.shape}) must match`);T().disposeTensor(this),this.dataId=k.dataId,T().incRef(this,null)}dispose(){T().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(B,Symbol.hasInstance,{value:A=>A instanceof j&&null!=A.assign&&A.assign instanceof Function})},14548:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{assertTypesMatch:()=>g,getTensorsInContainer:()=>y,isTensorInList:()=>c,makeTypesMatch:()=>E});var e=t(73444),s=t(82891),l=t(26674);function E(f,p){if(f.dtype===p.dtype)return[f,p];const u=(0,s.Tu)(f.dtype,p.dtype);return[f.cast(u),p.cast(u)]}function g(f,p){(0,l.vA)(f.dtype===p.dtype,()=>`The dtypes of the first(${f.dtype}) and second(${p.dtype}) input must match`)}function c(f,p){return p.some(u=>u.id===f.id)}function y(f){const p=[];return m(f,p,new Set),p}function m(f,p,u){if(null==f)return;if(f instanceof e.qY)return void p.push(f);if(!function h(f){return Array.isArray(f)||"object"==typeof f}(f))return;const d=f;for(const C in d){const T=d[C];u.has(T)||(u.add(T),m(T,p,u))}}},17636:(pt,R,t)=>{"use strict";t.d(R,{MZ:()=>y,YT:()=>f,j1:()=>p});var e=t(611),s=t(25271),l=t(73444),E=t(82891),g=t(21710),c=t(26674);function y(u,d){let C=u;if((0,g.isTypedArray)(u))return"string"===d?[]:[u.length];if((0,E.Oj)(u))return[u.height,u.width*(u.channels||"RGBA").length];if((0,E.Nw)(u))return[u.buffer.size/(null==d?4:(0,c.jv)(d))];if(!Array.isArray(u))return[];const T=[];for(;Array.isArray(C)||(0,g.isTypedArray)(C)&&"string"!==d;)T.push(C.length),C=C[0];return Array.isArray(u)&&(0,s._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&m(u,T,[]),T}function m(u,d,C){if(C=C||[],!Array.isArray(u)&&!(0,g.isTypedArray)(u))return void(0,c.vA)(0===d.length,()=>`Element arr[${C.join("][")}] is a primitive, but should be an array/TypedArray of ${d[0]} elements`);(0,c.vA)(d.length>0,()=>`Element arr[${C.join("][")}] should be a primitive, but is an array of ${u.length} elements`),(0,c.vA)(u.length===d[0],()=>`Element arr[${C.join("][")}] should have ${d[0]} elements, but has ${u.length} elements`);const T=d.slice(1);for(let D=0;D<u.length;++D)m(u[D],T,C.concat(D))}function h(u,d,C,T){if("string_or_numeric"!==u){if(null==u)throw new Error("Expected dtype cannot be null.");if("numeric"!==u&&u!==d||"numeric"===u&&"string"===d)throw new Error(`Argument '${C}' passed to '${T}' must be ${u} tensor, but got ${d} tensor`)}}function f(u,d,C,T="numeric"){if(u instanceof(0,l.tp)())return h(T,u.dtype,d,C),u;let D=(0,c.X$)(u);if("string"!==D&&["bool","int32","float32"].indexOf(T)>=0&&(D=T),h(T,D,d,C),null==u||!(0,g.isTypedArray)(u)&&!Array.isArray(u)&&"number"!=typeof u&&"boolean"!=typeof u&&"string"!=typeof u)throw new Error(`Argument '${d}' passed to '${C}' must be a Tensor or TensorLike, but got '${null==u?"null":u.constructor.name}'`);const S=y(u,D);!(0,g.isTypedArray)(u)&&!Array.isArray(u)&&(u=[u]);const w="string"!==D?(0,g.toTypedArray)(u,D):(0,g.flatten)(u,[],!0);return e.T2.makeTensor(w,S,D)}function p(u,d,C,T="numeric"){if(!Array.isArray(u))throw new Error(`Argument ${d} passed to ${C} must be a \`Tensor[]\` or \`TensorLike[]\``);return u.map((S,b)=>f(S,`${d}[${b}]`,C,T))}},19057:(pt,R,t)=>{"use strict";t.d(R,{B:()=>h});var e=t(1633),s=t(60415),l=t(34128),E=t(26041),g=t(82961),c=t(53532),y=t(11089);const h=class m{static sgd(p){return new y.S(p)}static momentum(p,u,d=!1){return new g.Q(p,u,d)}static rmsprop(p,u=.9,d=0,C=null,T=!1){return new c.P(p,u,d,C,T)}static adam(p=.001,u=.9,d=.999,C=null){return new l.F(p,u,d,C)}static adadelta(p=.001,u=.95,d=null){return new e.K(p,u,d)}static adamax(p=.002,u=.9,d=.999,C=null,T=0){return new E.o(p,u,d,C,T)}static adagrad(p,u=.1){return new s.a(p,u)}}},82891:(pt,R,t)=>{"use strict";t.d(R,{Nw:()=>f,Oj:()=>h,Tu:()=>y,ch:()=>m});var s=function(p){return p.float32="float32",p.int32="int32",p.bool="int32",p.complex64="complex64",p}(s||{}),l=function(p){return p.float32="float32",p.int32="int32",p.bool="bool",p.complex64="complex64",p}(l||{}),E=function(p){return p.float32="float32",p.int32="float32",p.bool="float32",p.complex64="complex64",p}(E||{}),g=function(p){return p.float32="complex64",p.int32="complex64",p.bool="complex64",p.complex64="complex64",p}(g||{});const c={float32:E,int32:s,bool:l,complex64:g};function y(p,u){if("string"===p||"string"===u){if("string"===p&&"string"===u)return"string";throw new Error(`Can not upcast ${p} with ${u}`)}return c[p][u]}function m(p){return y(p,"int32")}function h(p){return null!=p&&"object"==typeof p&&"texture"in p&&p.texture instanceof WebGLTexture}function f(p){return typeof GPUBuffer<"u"&&null!=p&&"object"==typeof p&&"buffer"in p&&p.buffer instanceof GPUBuffer}},21710:(pt,R,t)=>{"use strict";t.r(R),t.d(R,{arraysEqual:()=>l.r1,arraysEqualWithNull:()=>l.e_,assert:()=>l.vA,assertNonNegativeIntegerDimensions:()=>l.SA,assertNonNull:()=>l.HO,assertShapesMatch:()=>l.O3,bytesFromStringArray:()=>l.SL,bytesPerElement:()=>l.jv,checkConversionForErrors:()=>l.nd,clamp:()=>l.qE,computeStrides:()=>l.Ur,convertBackendValuesAndArrayBuffer:()=>l.o2,createScalarValue:()=>B,createShuffledIndices:()=>l.P8,decodeString:()=>Y,distSquared:()=>l.oO,encodeString:()=>W,fetch:()=>V,fingerPrint64:()=>F,flatten:()=>it,getArrayFromDType:()=>l.Ab,getTypedArrayFromDType:()=>l.ce,hasEncodingLoss:()=>l.BE,hexToLong:()=>y,indexToLoc:()=>l._k,inferDtype:()=>l.X$,inferFromImplicitShape:()=>l.XT,isBoolean:()=>l.Lm,isFunction:()=>l.Tn,isInt:()=>l.E6,isNumber:()=>l.Et,isPromise:()=>l.yL,isScalarShape:()=>l.Sf,isString:()=>l.Kg,isTypedArray:()=>Z,isValidDtype:()=>l.xn,locToIndex:()=>l.sX,makeOnesTypedArray:()=>l.FZ,makeZerosNestedTypedArray:()=>l.c7,makeZerosTypedArray:()=>l.Ty,nearestDivisor:()=>l.lK,nearestLargerEven:()=>l.eV,now:()=>x,parseAxisParam:()=>l.Y6,randUniform:()=>l.so,repeatedTry:()=>l._q,rightPad:()=>l.av,shuffle:()=>l.k4,shuffleCombo:()=>l.a0,sizeFromShape:()=>l.Ze,sizeToSquarishShape:()=>l.gS,squeezeShape:()=>l.gx,sum:()=>l.cz,swap:()=>l.wg,tanh:()=>l.ym,toNestedArray:()=>l.yw,toTypedArray:()=>k});var e=t(25271),s=t(33319),l=t(26674),E=t(61218);const c=t.n(E)()||E;function y(at){return c.fromString(at,!0,16)}const m=y("c3a5c85c97cb3127"),h=y("b492b66fbe98f273"),f=y("9ae16a3b2f90404f");function p(at){return at.xor(at.shru(47))}function u(at,q,ot){const rt=at.slice(q,q+ot);return c.fromBytes(Array.from(rt),!0,!0)}function d(at,q){return u(at,q,8)}function C(at,q){return u(at,q,4)}function T(at,q){return 0===q?at:at.shru(q).or(at.shl(64-q))}function D(at,q,ot=y("9ddfea08eb382d69")){let rt=at.xor(q).mul(ot);rt=rt.xor(rt.shru(47));let et=q.xor(rt).mul(ot);return et=et.xor(et.shru(47)),et=et.mul(ot),et}function b(at,q,ot,rt){return function S(at,q,ot,rt,et,yt){et=et.add(at),yt=T(yt.add(et).add(rt),21);const mt=et;return et=(et=et.add(q)).add(ot),yt=yt.add(T(et,44)),[et.add(rt),yt.add(mt)]}(d(at,q),d(at,q+8),d(at,q+16),d(at,q+24),ot,rt)}function F(at,q=at.length){const ot=c.fromNumber(81,!0);if(q<=32)return q<=16?function w(at,q=at.length){if(q>=8){const ot=f.add(2*q),rt=d(at,0).add(f),et=d(at,q-8);return D(T(et,37).mul(ot).add(rt),T(rt,25).add(et).mul(ot),ot)}if(q>=4){const ot=f.add(2*q);return D(C(at,0).shl(3).add(q),C(at,q-4),ot)}if(q>0){const mt=q+(at[q-1]<<2);return p(f.mul(at[0]+(at[q>>1]<<8)).xor(m.mul(mt))).mul(f)}return f}(at,q):function H(at,q=at.length){const ot=f.add(2*q),rt=d(at,0).mul(h),et=d(at,8),yt=d(at,q-8).mul(ot),mt=d(at,q-16).mul(f);return D(T(rt.add(et),43).add(T(yt,30)).add(mt),rt.add(T(et.add(f),18)).add(yt),ot)}(at,q);if(q<=64)return function j(at,q=at.length){const ot=f.add(2*q),rt=d(at,0).mul(f),et=d(at,8),yt=d(at,q-8).mul(ot),mt=d(at,q-16).mul(f),St=T(rt.add(et),43).add(T(yt,30)).add(mt),se=D(St,rt.add(T(et.add(f),18)).add(yt),ot),Ht=d(at,16).mul(ot),ue=d(at,24),Xt=St.add(d(at,q-32)).mul(ot),ie=se.add(d(at,q-24)).mul(ot);return D(T(Ht.add(ue),43).add(T(Xt,30)).add(ie),Ht.add(T(ue.add(rt),18)).add(Xt),ot)}(at,q);let rt=ot,et=ot.mul(h).add(113),yt=p(et.mul(f).add(113)).mul(f),mt=[c.UZERO,c.UZERO],St=[c.UZERO,c.UZERO];rt=rt.mul(f).add(d(at,0));let se=0;const Ht=64*(q-1>>6),ue=Ht+(q-1&63)-63;do{rt=T(rt.add(et).add(mt[0]).add(d(at,se+8)),37).mul(h),et=T(et.add(mt[1]).add(d(at,se+48)),42).mul(h),rt=rt.xor(St[1]),et=et.add(mt[0]).add(d(at,se+40)),yt=T(yt.add(St[0]),33).mul(h),mt=b(at,se,mt[1].mul(h),rt.add(St[0])),St=b(at,se+32,yt.add(St[1]),et.add(d(at,se+16))),[yt,rt]=[rt,yt],se+=64}while(se!==Ht);const Xt=h.add(yt.and(255).shl(1));return se=ue,St[0]=St[0].add(q-1&63),mt[0]=mt[0].add(St[0]),St[0]=St[0].add(mt[0]),rt=T(rt.add(et).add(mt[0]).add(d(at,se+8)),37).mul(Xt),et=T(et.add(mt[1]).add(d(at,se+48)),42).mul(Xt),rt=rt.xor(St[1].mul(9)),et=et.add(mt[0].mul(9).add(d(at,se+40))),yt=T(yt.add(St[0]),33).mul(Xt),mt=b(at,se,mt[1].mul(Xt),rt.add(St[0])),St=b(at,se+32,yt.add(St[1]),et.add(d(at,se+16))),[yt,rt]=[rt,yt],D(D(mt[0],St[0],Xt).add(p(et).mul(m)).add(yt),D(mt[1],St[1],Xt).add(rt),Xt)}function B(at,q){return"string"===q?W(at):k([at],q)}function k(at,q){if("string"===q)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(at)&&(at=it(at)),(0,e._K)().getBool("DEBUG")&&l.nd(at,q),function A(at,q){return at instanceof Float32Array&&"float32"===q||at instanceof Int32Array&&"int32"===q||at instanceof Uint8Array&&"bool"===q}(at,q))return at;if(null==q||"float32"===q||"complex64"===q)return new Float32Array(at);if("int32"===q)return new Int32Array(at);if("bool"===q){const ot=new Uint8Array(at.length);for(let rt=0;rt<ot.length;++rt)0!==Math.round(at[rt])&&(ot[rt]=1);return ot}throw new Error(`Unknown data type ${q}`)}function x(){return(0,e._K)().platform.now()}function V(at,q){return(0,e._K)().platform.fetch(at,q)}function W(at,q="utf-8"){return q=q||"utf-8",(0,e._K)().platform.encode(at,q)}function Y(at,q="utf-8"){return q=q||"utf-8",(0,e._K)().platform.decode(at,q)}function Z(at){return null!=(0,e._K)().platform.isTypedArray?(0,e._K)().platform.isTypedArray(at):(0,s.Y)(at)}function it(at,q=[],ot=!1){if(null==q&&(q=[]),"boolean"==typeof at||"number"==typeof at||"string"==typeof at||l.yL(at)||null==at||Z(at)&&ot)q.push(at);else if(Array.isArray(at)||Z(at))for(let rt=0;rt<at.length;++rt)it(at[rt],q,ot);else{let rt=-1;for(const et of Object.keys(at))/^([1-9]+[0-9]*|0)$/.test(et)&&(rt=Math.max(rt,Number(et)));for(let et=0;et<=rt;et++)it(at[et],q,ot)}return q}},26674:(pt,R,t)=>{"use strict";function e(Ct){let zt=Ct.length,Jt=0;for(;zt>0;)Jt=Math.random()*zt|0,zt--,g(Ct,zt,Jt)}function s(Ct,zt){if(Ct.length!==zt.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${Ct.length}Second array length was ${zt.length}`);let Jt=Ct.length,pe=0;for(;Jt>0;)pe=Math.random()*Jt|0,Jt--,g(Ct,Jt,pe),g(zt,Jt,pe)}function l(Ct,zt,Jt){return Math.max(Ct,Math.min(zt,Jt))}function E(Ct){return Ct%2==0?Ct:Ct+1}function g(Ct,zt,Jt){const pe=Ct[zt];Ct[zt]=Ct[Jt],Ct[Jt]=pe}function c(Ct){let zt=0;for(let Jt=0;Jt<Ct.length;Jt++)zt+=Ct[Jt];return zt}function y(Ct,zt){const Jt=Math.random();return zt*Jt+(1-Jt)*Ct}function m(Ct,zt){let Jt=0;for(let pe=0;pe<Ct.length;pe++){const ze=Number(Ct[pe])-Number(zt[pe]);Jt+=ze*ze}return Jt}function h(Ct,zt){if(!Ct)throw new Error("string"==typeof zt?zt:zt())}function f(Ct,zt,Jt=""){h(T(Ct,zt),()=>Jt+` Shapes ${Ct} and ${zt} must match`)}function p(Ct){h(null!=Ct,()=>"The input to the tensor constructor must be a non-null value.")}function u(Ct){if(0===Ct.length)return 1;let zt=Ct[0];for(let Jt=1;Jt<Ct.length;Jt++)zt*=Ct[Jt];return zt}function d(Ct){return 0===Ct.length}function C(Ct,zt){if(Ct===zt)return!0;if(null==Ct||null==zt||Ct.length!==zt.length)return!1;for(let Jt=0;Jt<Ct.length;Jt++)if(null!==Ct[Jt]&&null!==zt[Jt]&&Ct[Jt]!==zt[Jt])return!1;return!0}function T(Ct,zt){if(Ct===zt)return!0;if(null==Ct||null==zt||Ct.length!==zt.length)return!1;for(let Jt=0;Jt<Ct.length;Jt++)if(Ct[Jt]!==zt[Jt])return!1;return!0}function D(Ct){return Ct%1==0}function S(Ct){if(null!=Math.tanh)return Math.tanh(Ct);if(Ct===1/0)return 1;if(Ct===-1/0)return-1;{const zt=Math.exp(2*Ct);return(zt-1)/(zt+1)}}function b(Ct){const zt=Math.ceil(Math.sqrt(Ct));return[zt,Math.ceil(Ct/zt)]}function w(Ct){const zt=new Uint32Array(Ct);for(let Jt=0;Jt<Ct;++Jt)zt[Jt]=Jt;return e(zt),zt}function H(Ct,zt){return zt<=Ct.length?Ct:Ct+" ".repeat(zt-Ct.length)}function j(Ct,zt=ze=>0,Jt,pe){return new Promise((ze,an)=>{let vn=0;const mn=()=>{if(Ct())return void ze();vn++;const hn=zt(vn);null!=Jt&&vn>=Jt?an():null!=pe?pe(mn,hn):setTimeout(mn,hn)};mn()})}function F(Ct,zt){let Jt=1,pe=-1;for(let an=0;an<Ct.length;++an)if(Ct[an]>=0)Jt*=Ct[an];else if(-1===Ct[an]){if(-1!==pe)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${pe} and dim ${an}`);pe=an}else if(Ct[an]<0)throw Error(`Shapes can not be < 0. Found ${Ct[an]} at dim ${an}`);if(-1===pe){if(zt>0&&zt!==Jt)throw Error(`Size(${zt}) must match the product of shape ${Ct}`);return Ct}if(0===Jt)throw Error(`Cannot infer the missing size in [${Ct}] when there are 0 elements`);if(zt%Jt!=0)throw Error(`The implicit shape can't be a fractional number. Got ${zt} / ${Jt}`);const ze=Ct.slice();return ze[pe]=zt/Jt,ze}function B(Ct,zt){const Jt=zt.length;return h((Ct=null==Ct?zt.map((pe,ze)=>ze):[].concat(Ct)).every(pe=>pe>=-Jt&&pe<Jt),()=>`All values in axis param must be in range [-${Jt}, ${Jt}) but got axis ${Ct}`),h(Ct.every(pe=>D(pe)),()=>`All values in axis param must be integers but got axis ${Ct}`),Ct.map(pe=>pe<0?Jt+pe:pe)}function A(Ct,zt){const Jt=[],pe=[],ze=null!=zt&&Array.isArray(zt)&&0===zt.length,an=null==zt||ze?null:B(zt,Ct).sort();let vn=0;for(let mn=0;mn<Ct.length;++mn){if(null!=an){if(an[vn]===mn&&1!==Ct[mn])throw new Error(`Can't squeeze axis ${mn} since its dim '${Ct[mn]}' is not 1`);(null==an[vn]||an[vn]>mn)&&1===Ct[mn]&&(Jt.push(Ct[mn]),pe.push(mn)),an[vn]<=mn&&vn++}1!==Ct[mn]&&(Jt.push(Ct[mn]),pe.push(mn))}return{newShape:Jt,keptDims:pe}}function k(Ct,zt){return x(Ct,zt)}function x(Ct,zt){let Jt=null;if(null==Ct||"float32"===Ct)Jt=new Float32Array(zt);else if("int32"===Ct)Jt=new Int32Array(zt);else if("bool"===Ct)Jt=new Uint8Array(zt);else{if("string"!==Ct)throw new Error(`Unknown data type ${Ct}`);Jt=new Array(zt)}return Jt}function V(Ct,zt){for(let Jt=0;Jt<Ct.length;Jt++){const pe=Ct[Jt];if(isNaN(pe)||!isFinite(pe))throw Error(`A tensor of type ${zt} being uploaded contains ${pe}.`)}}function W(Ct){return"bool"===Ct||"complex64"===Ct||"float32"===Ct||"int32"===Ct||"string"===Ct}function Y(Ct,zt){return!("complex64"===zt||"float32"===zt&&"complex64"!==Ct||"int32"===zt&&"float32"!==Ct&&"complex64"!==Ct||"bool"===zt&&"bool"===Ct)}function Z(Ct){if("float32"===Ct||"int32"===Ct)return 4;if("complex64"===Ct)return 8;if("bool"===Ct)return 1;throw new Error(`Unknown dtype ${Ct}`)}function it(Ct){if(null==Ct)return 0;let zt=0;return Ct.forEach(Jt=>zt+=Jt.length),zt}function at(Ct){return"string"==typeof Ct||Ct instanceof String}function q(Ct){return"boolean"==typeof Ct}function ot(Ct){return"number"==typeof Ct}function rt(Ct){return Array.isArray(Ct)?rt(Ct[0]):Ct instanceof Float32Array?"float32":Ct instanceof Int32Array||Ct instanceof Uint8Array||Ct instanceof Uint8ClampedArray?"int32":ot(Ct)?"float32":at(Ct)?"string":q(Ct)?"bool":"float32"}function et(Ct){return!!(Ct&&Ct.constructor&&Ct.call&&Ct.apply)}function yt(Ct,zt){for(let Jt=zt;Jt<Ct;++Jt)if(Ct%Jt==0)return Jt;return Ct}function mt(Ct){const zt=Ct.length;if(zt<2)return[];const Jt=new Array(zt-1);Jt[zt-2]=Ct[zt-1];for(let pe=zt-3;pe>=0;--pe)Jt[pe]=Jt[pe+1]*Ct[pe+1];return Jt}function St(Ct,zt,Jt,pe=!1){const ze=new Array;if(1===zt.length){const an=zt[0]*(pe?2:1);for(let vn=0;vn<an;vn++)ze[vn]=Jt[Ct+vn]}else{const an=zt[0],vn=zt.slice(1),mn=vn.reduce((hn,$n)=>hn*$n)*(pe?2:1);for(let hn=0;hn<an;hn++)ze[hn]=St(Ct+hn*mn,vn,Jt,pe)}return ze}function se(Ct,zt,Jt=!1){if(0===Ct.length)return zt[0];const pe=Ct.reduce((ze,an)=>ze*an)*(Jt?2:1);if(0===pe)return[];if(pe!==zt.length)throw new Error(`[${Ct}] does not match the input size ${zt.length}${Jt?" for a complex tensor":""}.`);return St(0,Ct,zt,Jt)}function Ht(Ct,zt){if(Array.isArray(Ct))return Ct;if("float32"===zt)return Ct instanceof Float32Array?Ct:new Float32Array(Ct);if("int32"===zt)return Ct instanceof Int32Array?Ct:new Int32Array(Ct);if("bool"===zt||"string"===zt)return Uint8Array.from(new Int32Array(Ct));throw new Error(`Unknown dtype ${zt}`)}function ue(Ct,zt){const Jt=Xt(Ct,zt);for(let pe=0;pe<Jt.length;pe++)Jt[pe]=1;return Jt}function Xt(Ct,zt){if(null==zt||"float32"===zt||"complex64"===zt)return new Float32Array(Ct);if("int32"===zt)return new Int32Array(Ct);if("bool"===zt)return new Uint8Array(Ct);throw new Error(`Unknown data type ${zt}`)}function ie(Ct,zt){const Jt=Ct.reduce((pe,ze)=>pe*ze,1);if(null==zt||"float32"===zt)return se(Ct,new Float32Array(Jt));if("int32"===zt)return se(Ct,new Int32Array(Jt));if("bool"===zt)return se(Ct,new Uint8Array(Jt));throw new Error(`Unknown data type ${zt}`)}function ae(Ct){Ct.forEach(zt=>{h(Number.isInteger(zt)&&zt>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${Ct}].`)})}function ne(Ct,zt,Jt){if(0===zt)return 0;if(1===zt)return Ct[0];let pe=Ct[Ct.length-1];for(let ze=0;ze<Ct.length-1;++ze)pe+=Jt[ze]*Ct[ze];return pe}function Pe(Ct,zt,Jt){if(0===zt)return[];if(1===zt)return[Ct];const pe=new Array(zt);for(let ze=0;ze<pe.length-1;++ze)pe[ze]=Math.floor(Ct/Jt[ze]),Ct-=pe[ze]*Jt[ze];return pe[pe.length-1]=Ct,pe}function Ie(Ct){return Ct&&Ct.then&&"function"==typeof Ct.then}t.d(R,{Ab:()=>x,BE:()=>Y,E6:()=>D,Et:()=>ot,FZ:()=>ue,HO:()=>p,Kg:()=>at,Lm:()=>q,O3:()=>f,P8:()=>w,SA:()=>ae,SL:()=>it,Sf:()=>d,Tn:()=>et,Ty:()=>Xt,Ur:()=>mt,X$:()=>rt,XT:()=>F,Y6:()=>B,Ze:()=>u,_k:()=>Pe,_q:()=>j,a0:()=>s,av:()=>H,c7:()=>ie,ce:()=>k,cz:()=>c,eV:()=>E,e_:()=>C,gS:()=>b,gx:()=>A,jv:()=>Z,k4:()=>e,lK:()=>yt,nd:()=>V,o2:()=>Ht,oO:()=>m,qE:()=>l,r1:()=>T,sX:()=>ne,so:()=>y,vA:()=>h,wg:()=>g,xn:()=>W,yL:()=>Ie,ym:()=>S,yw:()=>se})},97762:(pt,R,t)=>{"use strict";t.d(R,{r:()=>e});const e="4.22.0"},61218:pt=>{pt.exports=t;var R=null;try{R=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(k,x,V){this.low=0|k,this.high=0|x,this.unsigned=!!V}function e(k){return!0===(k&&k.__isLong__)}Object.defineProperty(t.prototype,"__isLong__",{value:!0}),t.isLong=e;var s={},l={};function E(k,x){var V,W,Y;return x?(Y=0<=(k>>>=0)&&k<256)&&(W=l[k])?W:(V=c(k,(0|k)<0?-1:0,!0),Y&&(l[k]=V),V):(Y=-128<=(k|=0)&&k<128)&&(W=s[k])?W:(V=c(k,k<0?-1:0,!1),Y&&(s[k]=V),V)}function g(k,x){if(isNaN(k))return x?S:D;if(x){if(k<0)return S;if(k>=d)return F}else{if(k<=-C)return B;if(k+1>=C)return j}return k<0?g(-k,x).neg():c(k%u|0,k/u|0,x)}function c(k,x,V){return new t(k,x,V)}t.fromInt=E,t.fromNumber=g,t.fromBits=c;var y=Math.pow;function m(k,x,V){if(0===k.length)throw Error("empty string");if("NaN"===k||"Infinity"===k||"+Infinity"===k||"-Infinity"===k)return D;if("number"==typeof x?(V=x,x=!1):x=!!x,(V=V||10)<2||36<V)throw RangeError("radix");var W;if((W=k.indexOf("-"))>0)throw Error("interior hyphen");if(0===W)return m(k.substring(1),x,V).neg();for(var Y=g(y(V,8)),Z=D,it=0;it<k.length;it+=8){var at=Math.min(8,k.length-it),q=parseInt(k.substring(it,it+at),V);if(at<8){var ot=g(y(V,at));Z=Z.mul(ot).add(g(q))}else Z=(Z=Z.mul(Y)).add(g(q))}return Z.unsigned=x,Z}function h(k,x){return"number"==typeof k?g(k,x):"string"==typeof k?m(k,x):c(k.low,k.high,"boolean"==typeof x?x:k.unsigned)}t.fromString=m,t.fromValue=h;var u=4294967296,d=u*u,C=d/2,T=E(1<<24),D=E(0);t.ZERO=D;var S=E(0,!0);t.UZERO=S;var b=E(1);t.ONE=b;var w=E(1,!0);t.UONE=w;var H=E(-1);t.NEG_ONE=H;var j=c(-1,2147483647,!1);t.MAX_VALUE=j;var F=c(-1,-1,!0);t.MAX_UNSIGNED_VALUE=F;var B=c(0,-2147483648,!1);t.MIN_VALUE=B;var A=t.prototype;A.toInt=function(){return this.unsigned?this.low>>>0:this.low},A.toNumber=function(){return this.unsigned?(this.high>>>0)*u+(this.low>>>0):this.high*u+(this.low>>>0)},A.toString=function(x){if((x=x||10)<2||36<x)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(B)){var V=g(x),W=this.div(V),Y=W.mul(V).sub(this);return W.toString(x)+Y.toInt().toString(x)}return"-"+this.neg().toString(x)}for(var Z=g(y(x,6),this.unsigned),it=this,at="";;){var q=it.div(Z),rt=(it.sub(q.mul(Z)).toInt()>>>0).toString(x);if((it=q).isZero())return rt+at;for(;rt.length<6;)rt="0"+rt;at=""+rt+at}},A.getHighBits=function(){return this.high},A.getHighBitsUnsigned=function(){return this.high>>>0},A.getLowBits=function(){return this.low},A.getLowBitsUnsigned=function(){return this.low>>>0},A.getNumBitsAbs=function(){if(this.isNegative())return this.eq(B)?64:this.neg().getNumBitsAbs();for(var x=0!=this.high?this.high:this.low,V=31;V>0&&!(x&1<<V);V--);return 0!=this.high?V+33:V+1},A.isZero=function(){return 0===this.high&&0===this.low},A.eqz=A.isZero,A.isNegative=function(){return!this.unsigned&&this.high<0},A.isPositive=function(){return this.unsigned||this.high>=0},A.isOdd=function(){return!(1&~this.low)},A.isEven=function(){return!(1&this.low)},A.equals=function(x){return e(x)||(x=h(x)),(this.unsigned===x.unsigned||this.high>>>31!=1||x.high>>>31!=1)&&this.high===x.high&&this.low===x.low},A.eq=A.equals,A.notEquals=function(x){return!this.eq(x)},A.neq=A.notEquals,A.ne=A.notEquals,A.lessThan=function(x){return this.comp(x)<0},A.lt=A.lessThan,A.lessThanOrEqual=function(x){return this.comp(x)<=0},A.lte=A.lessThanOrEqual,A.le=A.lessThanOrEqual,A.greaterThan=function(x){return this.comp(x)>0},A.gt=A.greaterThan,A.greaterThanOrEqual=function(x){return this.comp(x)>=0},A.gte=A.greaterThanOrEqual,A.ge=A.greaterThanOrEqual,A.compare=function(x){if(e(x)||(x=h(x)),this.eq(x))return 0;var V=this.isNegative(),W=x.isNegative();return V&&!W?-1:!V&&W?1:this.unsigned?x.high>>>0>this.high>>>0||x.high===this.high&&x.low>>>0>this.low>>>0?-1:1:this.sub(x).isNegative()?-1:1},A.comp=A.compare,A.negate=function(){return!this.unsigned&&this.eq(B)?B:this.not().add(b)},A.neg=A.negate,A.add=function(x){e(x)||(x=h(x));var rt=0,et=0,yt=0,mt=0;return yt+=(mt+=(65535&this.low)+(65535&x.low))>>>16,et+=(yt+=(this.low>>>16)+(x.low>>>16))>>>16,rt+=(et+=(65535&this.high)+(65535&x.high))>>>16,rt+=(this.high>>>16)+(x.high>>>16),c((yt&=65535)<<16|(mt&=65535),(rt&=65535)<<16|(et&=65535),this.unsigned)},A.subtract=function(x){return e(x)||(x=h(x)),this.add(x.neg())},A.sub=A.subtract,A.multiply=function(x){if(this.isZero())return D;if(e(x)||(x=h(x)),R)return c(R.mul(this.low,this.high,x.low,x.high),R.get_high(),this.unsigned);if(x.isZero())return D;if(this.eq(B))return x.isOdd()?B:D;if(x.eq(B))return this.isOdd()?B:D;if(this.isNegative())return x.isNegative()?this.neg().mul(x.neg()):this.neg().mul(x).neg();if(x.isNegative())return this.mul(x.neg()).neg();if(this.lt(T)&&x.lt(T))return g(this.toNumber()*x.toNumber(),this.unsigned);var Y=65535&this.high,Z=this.low>>>16,it=65535&this.low,q=65535&x.high,ot=x.low>>>16,rt=65535&x.low,et=0,yt=0,mt=0,St=0;return mt+=(St+=it*rt)>>>16,yt+=(mt+=Z*rt)>>>16,mt&=65535,yt+=(mt+=it*ot)>>>16,et+=(yt+=Y*rt)>>>16,yt&=65535,et+=(yt+=Z*ot)>>>16,yt&=65535,et+=(yt+=it*q)>>>16,et+=(this.high>>>16)*rt+Y*ot+Z*q+it*(x.high>>>16),c((mt&=65535)<<16|(St&=65535),(et&=65535)<<16|(yt&=65535),this.unsigned)},A.mul=A.multiply,A.divide=function(x){if(e(x)||(x=h(x)),x.isZero())throw Error("division by zero");var W,Y,Z;if(R)return this.unsigned||-2147483648!==this.high||-1!==x.low||-1!==x.high?c((this.unsigned?R.div_u:R.div_s)(this.low,this.high,x.low,x.high),R.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?S:D;if(this.unsigned){if(x.unsigned||(x=x.toUnsigned()),x.gt(this))return S;if(x.gt(this.shru(1)))return w;Z=S}else{if(this.eq(B))return x.eq(b)||x.eq(H)?B:x.eq(B)?b:(W=this.shr(1).div(x).shl(1)).eq(D)?x.isNegative()?b:H:(Y=this.sub(x.mul(W)),Z=W.add(Y.div(x)));if(x.eq(B))return this.unsigned?S:D;if(this.isNegative())return x.isNegative()?this.neg().div(x.neg()):this.neg().div(x).neg();if(x.isNegative())return this.div(x.neg()).neg();Z=D}for(Y=this;Y.gte(x);){W=Math.max(1,Math.floor(Y.toNumber()/x.toNumber()));for(var at=Math.ceil(Math.log(W)/Math.LN2),q=at<=48?1:y(2,at-48),ot=g(W),rt=ot.mul(x);rt.isNegative()||rt.gt(Y);)rt=(ot=g(W-=q,this.unsigned)).mul(x);ot.isZero()&&(ot=b),Z=Z.add(ot),Y=Y.sub(rt)}return Z},A.div=A.divide,A.modulo=function(x){return e(x)||(x=h(x)),R?c((this.unsigned?R.rem_u:R.rem_s)(this.low,this.high,x.low,x.high),R.get_high(),this.unsigned):this.sub(this.div(x).mul(x))},A.mod=A.modulo,A.rem=A.modulo,A.not=function(){return c(~this.low,~this.high,this.unsigned)},A.and=function(x){return e(x)||(x=h(x)),c(this.low&x.low,this.high&x.high,this.unsigned)},A.or=function(x){return e(x)||(x=h(x)),c(this.low|x.low,this.high|x.high,this.unsigned)},A.xor=function(x){return e(x)||(x=h(x)),c(this.low^x.low,this.high^x.high,this.unsigned)},A.shiftLeft=function(x){return e(x)&&(x=x.toInt()),0==(x&=63)?this:x<32?c(this.low<<x,this.high<<x|this.low>>>32-x,this.unsigned):c(0,this.low<<x-32,this.unsigned)},A.shl=A.shiftLeft,A.shiftRight=function(x){return e(x)&&(x=x.toInt()),0==(x&=63)?this:x<32?c(this.low>>>x|this.high<<32-x,this.high>>x,this.unsigned):c(this.high>>x-32,this.high>=0?0:-1,this.unsigned)},A.shr=A.shiftRight,A.shiftRightUnsigned=function(x){if(e(x)&&(x=x.toInt()),0==(x&=63))return this;var V=this.high;return x<32?c(this.low>>>x|V<<32-x,V>>>x,this.unsigned):c(32===x?V:V>>>x-32,0,this.unsigned)},A.shru=A.shiftRightUnsigned,A.shr_u=A.shiftRightUnsigned,A.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},A.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},A.toBytes=function(x){return x?this.toBytesLE():this.toBytesBE()},A.toBytesLE=function(){var x=this.high,V=this.low;return[255&V,V>>>8&255,V>>>16&255,V>>>24,255&x,x>>>8&255,x>>>16&255,x>>>24]},A.toBytesBE=function(){var x=this.high,V=this.low;return[x>>>24,x>>>16&255,x>>>8&255,255&x,V>>>24,V>>>16&255,V>>>8&255,255&V]},t.fromBytes=function(x,V,W){return W?t.fromBytesLE(x,V):t.fromBytesBE(x,V)},t.fromBytesLE=function(x,V){return new t(x[0]|x[1]<<8|x[2]<<16|x[3]<<24,x[4]|x[5]<<8|x[6]<<16|x[7]<<24,V)},t.fromBytesBE=function(x,V){return new t(x[4]<<24|x[5]<<16|x[6]<<8|x[7],x[0]<<24|x[1]<<16|x[2]<<8|x[3],V)}},4902:(pt,R,t)=>{"use strict";t.d(R,{q:()=>e});class e{}},8084:(pt,R,t)=>{"use strict";t.d(R,{c:()=>f});var e=t(10467),s=t(41653),l=t(74042);class E extends l.DJ{split(u){return new g(this,u)}}class g extends E{constructor(u,d){super(),this.upstream=u,this.impl=new c(u,d)}summary(){return this.impl.summary()}next(){var u=this;return(0,e.A)(function*(){return u.impl.next()})()}}class c extends l.lh{constructor(u,d){super(),this.upstream=u,this.separator=d,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}pump(){var u=this;return(0,e.A)(function*(){const d=yield u.upstream.next();if(d.done)return""!==u.carryover&&(u.outputQueue.push(u.carryover),u.carryover="",!0);const C=d.value.split(u.separator);C[0]=u.carryover+C[0];for(const T of C.slice(0,-1))u.outputQueue.push(T);return u.carryover=C[C.length-1],!0})()}}class y extends l.DJ{decodeUTF8(){return new m(this)}}class m extends E{constructor(u){super(),this.upstream=u,this.impl=new h(u)}summary(){return this.impl.summary()}next(){var u=this;return(0,e.A)(function*(){return u.impl.next()})()}}class h extends l.lh{constructor(u){if(super(),this.upstream=u,(0,s._K2)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:d}=t(4530);this.decoder=new d("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}pump(){var u=this;return(0,e.A)(function*(){const d=yield u.upstream.next();let C,T;return!d.done&&(C=d.value,T=(0,s._K2)().get("IS_BROWSER")?u.decoder.decode(C,{stream:!0}):u.decoder.write(Buffer.from(C.buffer)),u.outputQueue.push(T),!0)})()}}class f extends y{constructor(u,d={}){super(),this.file=u,this.options=d,s.ZSL.assert(u instanceof Uint8Array||!!(0,s._K2)().get("IS_BROWSER")&&(u instanceof File||u instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=d.offset||0,this.chunkSize=d.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}next(){var u=this;return(0,e.A)(function*(){return u.offset>=(u.file instanceof Uint8Array?u.file.byteLength:u.file.size)?{value:null,done:!0}:{value:yield new Promise((C,T)=>{const D=u.offset+u.chunkSize;if(u.file instanceof Uint8Array)C(new Uint8Array(u.file.slice(u.offset,D)));else{const S=new FileReader;S.onload=w=>{let H=S.result;if(H instanceof ArrayBuffer&&(H=new Uint8Array(H)),!(H instanceof Uint8Array))return T(new TypeError("FileReader returned unknown type."));C(H)},S.onabort=w=>T(new Error("Aborted")),S.onerror=w=>T(new Error(w.type));const b=u.file.slice(u.offset,D);S.readAsArrayBuffer(b)}u.offset=D}),done:!1}})()}}},11033:(pt,R,t)=>{"use strict";t.d(R,{t:()=>E});var e=t(10467),s=t(41653),l=t(8084);function E(y){return g.apply(this,arguments)}function g(){return(g=(0,e.A)(function*(y,m={},h){let f,p;"string"==typeof y?f=y:(f=y.url,p=c(y));const u=yield(h||s.ZSL.fetch)(f,p);if(u.ok){const d=new Uint8Array(yield u.arrayBuffer());return new l.c(d,m)}throw new Error(u.statusText)})).apply(this,arguments)}const c=y=>({method:y.method,headers:y.headers,body:y.body,mode:y.mode,credentials:y.credentials,cache:y.cache,redirect:y.redirect,referrer:y.referrer,integrity:y.integrity})},58034:(pt,R,t)=>{"use strict";t.d(R,{G:()=>l});var e=t(41653),s=t(27669);function l(g){return(0,s.Bl)(g,E)}function E(g){return g instanceof e.qYS?{value:g.clone(),recurse:!1}:(0,s.xZ)(g)?{value:null,recurse:!0}:{value:g,recurse:!1}}},52531:(pt,R,t)=>{"use strict";t.d(R,{g:()=>s});var e=t(92357);let s=(()=>{class l extends e.N{constructor(){super(l.INITIAL_CAPACITY)}isFull(){return!1}push(g){super.isFull()&&this.expand(),super.push(g)}unshift(g){super.isFull()&&this.expand(),super.unshift(g)}expand(){const g=2*this.capacity,c=new Array(g),y=this.length();for(let m=0;m<y;m++)c[m]=this.get(this.wrap(this.begin+m));this.data=c,this.capacity=g,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=y}}return l.INITIAL_CAPACITY=32,l})()},92357:(pt,R,t)=>{"use strict";t.d(R,{N:()=>e});class e{constructor(l){if(this.capacity=l,this.begin=0,this.end=0,null==l)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(l<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(l),this.doubledCapacity=2*l}wrap(l){for(;l<0;)l+=this.doubledCapacity;return l%this.doubledCapacity}get(l){if(l<0)throw new RangeError("Can't get item at a negative index.");return this.data[l%this.capacity]}set(l,E){if(l<0)throw new RangeError("Can't set item at a negative index.");this.data[l%this.capacity]=E}length(){let l=this.end-this.begin;return l<0&&(l=this.doubledCapacity+l),l}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(l){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,l),this.end=this.wrap(this.end+1)}pushAll(l){for(const E of l)this.push(E)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const l=this.get(this.end);return this.set(this.end,void 0),l}unshift(l){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,l)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const l=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),l}shuffleExcise(l){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const E=this.wrap(this.begin+l),g=this.get(E);return this.set(E,this.pop()),g}}},41014:(pt,R,t)=>{"use strict";function e(s){return"string"==typeof s&&"file://"===s.slice(0,7)}t.d(R,{N:()=>e})},98603:(pt,R,t)=>{"use strict";t.d(R,{r:()=>e});const e="4.22.0"},42804:(pt,R,t)=>{"use strict";t.d(R,{Bu:()=>j,b_:()=>B,rF:()=>T});var e=t(41653),s=t(99198),l=t(24503);class E extends e.JFn.Serializable{getConfig(){return{}}}e.JFn.registerClass((()=>{class A extends E{apply(x,V=1){return s.Pq(x,V)}}return A.className="elu",A})());let c=(()=>{class A extends E{apply(x){return e.WfX(x)}}return A.className="selu",A})();e.JFn.registerClass(c);let y=(()=>{class A extends E{apply(x){return e.VVh(x)}}return A.className="relu",A})();e.JFn.registerClass(y);let m=(()=>{class A extends E{apply(x){return(0,e.DZQ)(()=>e.BpO(6,e.VVh(x)))}}return A.className="relu6",A})();e.JFn.registerClass(m),e.JFn.registerClass((()=>{class A extends E{apply(x){return x}}return A.className="linear",A})());let f=(()=>{class A extends E{apply(x){return e.ry7(x)}}return A.className="sigmoid",A})();e.JFn.registerClass(f),e.JFn.registerClass((()=>{class A extends E{apply(x){return s.KK(x)}}return A.className="hardSigmoid",A})());let u=(()=>{class A extends E{apply(x){return e.lw0(x)}}return A.className="softplus",A})();e.JFn.registerClass(u),e.JFn.registerClass((()=>{class A extends E{apply(x){return s.aY(x)}}return A.className="softsign",A})());let C=(()=>{class A extends E{apply(x){return e.ymU(x)}}return A.className="tanh",A})();e.JFn.registerClass(C);let T=(()=>{class A extends E{apply(x,V=-1){return e.Vs9(x,V)}}return A.className="softmax",A})();e.JFn.registerClass(T);let D=(()=>{class A extends E{apply(x,V=-1){return e.HPB(x,V)}}return A.className="logSoftmax",A})();e.JFn.registerClass(D);let S=(()=>{class A extends E{apply(x){return(0,e.DZQ)(()=>e.DZQ(()=>{const V=Math.sqrt(2),W=e.lKK(.5,e.WQq(1,e.Y12(e.y4m(x,V))));return e.lKK(x,W)}))}}return A.className="gelu",A})();e.JFn.registerClass(S);let b=(()=>{class A extends E{apply(x){return(0,e.DZQ)(()=>e.lKK(.5,e.lKK(x,e.WQq(1,e.ymU(e.lKK(e.RZD(e.y4m(2,Math.PI)),e.WQq(x,e.lKK(.044715,e.n7C(x,3)))))))))}}return A.className="gelu_new",A})();e.JFn.registerClass(b);let w=(()=>{class A extends E{apply(x){return(0,e.DZQ)(()=>e.lKK(x,e.ymU(e.lw0(x))))}}return A.className="mish",A})();e.JFn.registerClass(w);let H=(()=>{class A extends E{apply(x,V=1){return(0,e.DZQ)(()=>e.lKK(e.ry7(e.lKK(x,V)),x))}}return A.className="swish",A})();function j(A){return A.getClassName()}function F(A,k={}){return(0,l.Xv)(A,e.JFn.SerializationMap.getMap().classNameMap,k,"activation")}function B(A){if(null==A){return F({className:"linear",config:{}})}if("string"==typeof A){const k={};return k.className=A,k.config={},F(k)}return A instanceof E?A:F(A)}e.JFn.registerClass(H)},17513:(pt,R,t)=>{"use strict";t.d(R,{Ni:()=>l,VI:()=>g});var e=t(41653);let s;function l(){return null==s&&(s=(0,e.Hs)().epsilon()),s}function g(){return"channelsLast"}},29887:(pt,R,t)=>{"use strict";t.d(R,{j:()=>s,v:()=>E});let e=0;function s(){return e++}const l={};function E(g=""){return g in l||(l[g]=0),l[g]+=1,g+l[g].toString()}},99198:(pt,R,t)=>{"use strict";t.d(R,{Bq:()=>C,Dh:()=>D,EZ:()=>q,Ew:()=>V,FE:()=>F,KK:()=>ot,Ls:()=>rt,Om:()=>B,PS:()=>T,Pq:()=>it,UG:()=>u,Vs:()=>j,aY:()=>at,kg:()=>x,ly:()=>H,ni:()=>Z,r0:()=>b,u1:()=>w,ux:()=>d,wg:()=>p});var e=t(41653),s=t(9980),l=t(42946),E=t(89119),g=t(17513);function p(et,yt){return e.wgE(et,yt)}function u(et,yt=-1){const mt=et.shape.slice();return yt<0&&(yt=mt.length+yt+1),mt.splice(yt,0,1),e.tQQ(et,mt)}function d(et,yt){return(0,e.DZQ)(()=>{if(2!==et.shape.length)throw new l.Qp(`repeat() expects a rank-2 tensor, but received a rank-${et.shape.length} tensor.`);return j(u(et,1),[1,yt,1])})}function C(et){const yt=[E.no(et.shape)];return e.tQQ(et,yt)}function T(et){if(et.rank<=1)throw new l.Qp(`batchFlatten requires a minimum rank of 2. Got rank: ${et.rank}.`);const yt=[et.shape[0],E.no(et.shape,1)];return e.tQQ(et,yt)}function D(et,yt,mt){return(0,e.DZQ)(()=>{switch(et.rank){case 1:return e.Q$M(et,yt,mt);case 2:return e.zAd(et,[yt,0],[mt,et.shape[1]]);case 3:return e.wck(et,[yt,0,0],[mt,et.shape[1],et.shape[2]]);case 4:return e.R0O(et,[yt,0,0,0],[mt,et.shape[1],et.shape[2],et.shape[3]]);case 5:return e.dik(et,[yt,0,0,0,0],[mt,et.shape[1],et.shape[2],et.shape[3],et.shape[4]]);case 6:return e.dik(et,[yt,0,0,0,0,0],[mt,et.shape[1],et.shape[2],et.shape[3],et.shape[4],et.shape[5]]);default:throw new l.Qp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${et.rank}`)}})}function S(et,yt,mt){return(0,e.DZQ)(()=>{switch(et.rank){case 1:return e.Q$M(et,yt,mt);case 2:return e.zAd(et,[0,yt],[et.shape[0],mt]);case 3:return e.wck(et,[0,0,yt],[et.shape[0],et.shape[1],mt]);case 4:return e.R0O(et,[0,0,0,yt],[et.shape[0],et.shape[1],et.shape[2],mt]);default:throw new l.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${et.rank}`)}})}function b(et,yt,mt,St){return(0,e.DZQ)(()=>{switch(et.rank){case 1:return e.Q$M(et,yt,mt);case 2:switch(St){case 1:return D(et,yt,mt);case 2:return S(et,yt,mt);default:throw new l.Qp(`The axis is not within the rank of the tensor ${St}`)}case 3:switch(St){case 1:return D(et,yt,mt);case 2:return e.wck(et,[0,yt,0],[et.shape[0],mt,et.shape[2]]);case 3:return S(et,yt,mt);default:throw new l.Qp(`The axis is not within the rank of the tensor ${St}`)}case 4:switch(St){case 1:return D(et,yt,mt);case 2:return e.R0O(et,[0,yt,0,0],[et.shape[0],mt,et.shape[2],et.shape[3]]);case 3:return e.R0O(et,[0,0,yt,0],[et.shape[0],et.shape[1],mt,et.shape[3]]);case 4:return S(et,yt,mt);default:throw new l.Qp(`The axis is not within the rank of the tensor ${St}`)}default:throw new l.Qp(`sliceAlongLastAxis() received an unsupported tensor rank: ${et.rank}`)}})}function w(et,yt=-1){let mt;return yt<0&&(mt=et[0].rank,yt=0!==mt?mt:0),yt===et[0].rank&&(yt=-1),e.xWs(et,yt)}function H(et,yt){switch(et.rank){case 1:return e.I1m([et,yt]);case 2:return e.RPU([et,yt],0);case 3:return e.O5O([et,yt],0);case 4:return e.P1l([et,yt],0);default:throw new l.Qp(`concatAlongFirstAxis() received an unsupported tensor rank: ${et.rank}`)}}function j(et,yt){if(Array.isArray(yt)||(yt=[yt]),et.rank!==yt.length)throw new l.Qp(`The length of input n (${yt.length}) does not match the number of dimensions in input x (${et.rank})`);return e.Vsq(et,yt)}function F(et,yt=0,mt=1,St,se){return e.FE$(et,yt,mt,St,se)}function B(et,yt,mt,St){if(et.rank<2||yt.rank<2)throw new l.EH(`dot requires both inputs to be rank >= 2 but got x shape = ${et.shape} and y shape = ${yt.shape}`);if(yt.rank>=3&&et.shape.slice(-1)[0]!==yt.shape.slice(-2)[0])throw new l.EH(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${et.shape} and  y shape = ${yt.shape}`);if(2===et.rank&&2===yt.rank)return e.cZk.matMul({a:et,b:yt,transposeA:!1,transposeB:!1,bias:St?Y(et.rank,St,(0,g.VI)()):null,activation:mt});{const se=et.shape.slice(),Ht=se.pop();et=e.tQQ(et,[-1,Ht]);const ue=yt.shape.slice(),Xt=ue.pop(),ie=ue.pop(),ae=[...ue,Xt],ne=Array.from({length:yt.rank},(zt,Jt)=>0===Jt?yt.rank-2:Jt<=yt.rank-2?Jt-1:Jt);yt=e.tQQ(e.mgz(yt,ne),[ie,-1]);const Pe=[...se,...ae];return e.tQQ(e.cZk.matMul({a:et,b:yt,transposeA:!1,transposeB:!1,bias:St?Y(et.rank,St,(0,g.VI)()):null,activation:mt}),Pe)}}function x(et,yt,mt){return(0,e.DZQ)(()=>(yt=Array.isArray(yt)?(0,e.tGX)(yt,"int32"):e.wgE(yt,"int32"),e.kgh(et,yt,mt)))}function V(et){return e.lKK(et,et)}function Y(et,yt,mt){const St=yt.shape;if(1!==yt.rank&&yt.rank!==et)throw new l.Qp(`Unexpected bias dimensions: ${yt.rank}; expected it to be 1 or ${et}`);if(5===et){if("channelsFirst"===mt)return e.tQQ(yt,1===St.length?[1,St[0],1,1,1]:[1,St[3],St[0],St[1],St[2]]);if("channelsLast"===mt)return e.tQQ(yt,1===St.length?[1,1,1,1,St[0]]:[1].concat(St))}else if(4===et){if("channelsFirst"===mt)return e.tQQ(yt,1===St.length?[1,St[0],1,1]:[1,St[2],St[0],St[1]]);if("channelsLast"===mt)return e.tQQ(yt,1===St.length?[1,1,1,St[0]]:[1].concat(St))}else if(3===et){if("channelsFirst"===mt)return e.tQQ(yt,1===St.length?[1,St[0],1]:[1,St[1],St[0]]);if("channelsLast"===mt)return e.tQQ(yt,1===St.length?[1,1,St[0]]:[1].concat(St))}else if(et<3)return yt;throw new l.Qp(`Unsupported input rank by biasAdd: ${yt.rank}`)}function Z(et,yt,mt){return(0,e.DZQ)(()=>(null==mt&&(mt=(0,g.VI)()),(0,s.uM)(mt),e.WQq(et,Y(et.rank,yt,mt))))}function it(et,yt=1){if(1!==yt)throw new l.EH(`Support for alpha values other than 1 (${yt}) is not implemented yet.`);return e.Pqc(et)}function at(et){return(0,e.DZQ)(()=>e.y4m(et,e.WQq(e.tnl(et),1)))}function q(et,yt,mt,St){return(0,e.DZQ)(()=>e.EZY(et,yt,mt,St))}function ot(et){return(0,e.DZQ)(()=>{const yt=e.WQq(.5,e.lKK(.2,et));return e.zQh(yt,0,1)})}function rt(et,yt,mt=!1){return mt?et():yt()}},40083:(pt,R,t)=>{"use strict";t.d(R,{Eq:()=>d,J5:()=>m,dY:()=>T});var e=t(10467),s=t(41653),l=t(42946),E=t(35814),g=t(24503);class m{constructor(){this.validationData=null}setParams(S){this.params=S}onEpochBegin(S,b){return(0,e.A)(function*(){})()}onEpochEnd(S,b){return(0,e.A)(function*(){})()}onBatchBegin(S,b){return(0,e.A)(function*(){})()}onBatchEnd(S,b){return(0,e.A)(function*(){})()}onTrainBegin(S){return(0,e.A)(function*(){})()}onTrainEnd(S){return(0,e.A)(function*(){})()}setModel(S){}}class h{constructor(S,b=10){null==S&&(S=[]),this.callbacks=S,this.queueLength=b}append(S){this.callbacks.push(S)}setParams(S){for(const b of this.callbacks)b.setParams(S)}setModel(S){for(const b of this.callbacks)b.setModel(S)}onEpochBegin(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const H of w.callbacks)yield H.onEpochBegin(S,b)})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const H of w.callbacks)yield H.onEpochEnd(S,b)})()}onBatchBegin(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const H of w.callbacks)yield H.onBatchBegin(S,b)})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});for(const H of w.callbacks)yield H.onBatchEnd(S,b)})()}onTrainBegin(S){var b=this;return(0,e.A)(function*(){null==S&&(S={});for(const w of b.callbacks)yield w.onTrainBegin(S)})()}onTrainEnd(S){var b=this;return(0,e.A)(function*(){null==S&&(S={});for(const w of b.callbacks)yield w.onTrainEnd(S)})()}}class f extends m{constructor(){super()}onEpochBegin(S){var b=this;return(0,e.A)(function*(){b.seen=0,b.totals={}})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={});const H=null==b.size?0:b.size;w.seen+=H;for(const j in b){const F=b[j];if("number"==typeof F)w.totals.hasOwnProperty(j)||(w.totals[j]=0),w.totals[j]=w.totals[j]+F*H;else{let B;j in w.totals?B=w.totals[j]:w.totals[j]=0;const A=(0,s.DZQ)(()=>(0,s.WQq)(w.totals[j],(0,s.lKK)(F,H)));w.totals[j]=A,null!=B&&B.dispose()}}})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){if(null!=b)for(const H of w.params.metrics)null!=w.totals[H]&&("number"==typeof w.totals[H]?b[H]=w.totals[H]/w.seen:(0,s.DZQ)(()=>{const j=(0,s.lKK)((0,s.y4m)(1,w.seen),w.totals[H]);b[H]=j,w.totals[H].dispose(),(0,s.aCs)(b[H])}))})()}}class p extends m{onTrainBegin(S){var b=this;return(0,e.A)(function*(){b.epoch=[],b.history={}})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){null==b&&(b={}),w.epoch.push(S);for(const H in b)null==w.history[H]&&(w.history[H]=[]),w.history[H].push(b[H])})()}syncData(){var S=this;return(0,e.A)(function*(){const b=[],w=[],H=[];for(const F in S.history){const B=S.history[F];for(let A=0;A<B.length;++A)"number"!=typeof B[A]&&(b.push(B[A].data()),w.push(F),H.push(A))}const j=yield Promise.all(b);for(let F=0;F<j.length;++F)S.history[w[F]][H[F]].dispose(),S.history[w[F]][H[F]]=j[F][0]})()}}class u extends m{constructor(S,b){if(super(),this.currentEpoch=0,this.nowFunc=S.nowFunc,this.nextFrameFunc=S.nextFrameFunc||s.dA1,this.yieldEvery=b||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=S.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");s.ZSL.isNumber(this.yieldEvery)&&(this.maybeWait=g.sg(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=S.onTrainBegin,this.trainEnd=S.onTrainEnd,this.epochBegin=S.onEpochBegin,this.epochEnd=S.onEpochEnd,this.batchBegin=S.onBatchBegin,this.batchEnd=S.onBatchEnd,this.yield=S.onYield}maybeWait(S,b,w){var H=this;return(0,e.A)(function*(){const j=[];null!=H.yield&&(yield(0,E.I)(w),j.push(H.yield(S,b,w))),j.push(H.nextFrameFunc()),yield Promise.all(j)})()}onEpochBegin(S,b){var w=this;return(0,e.A)(function*(){w.currentEpoch=S,null!=w.epochBegin&&(yield(0,E.I)(b),yield w.epochBegin(S,b))})()}onEpochEnd(S,b){var w=this;return(0,e.A)(function*(){const H=[];null!=w.epochEnd&&(yield(0,E.I)(b),H.push(w.epochEnd(S,b))),"epoch"===w.yieldEvery&&H.push(w.nextFrameFunc()),yield Promise.all(H)})()}onBatchBegin(S,b){var w=this;return(0,e.A)(function*(){null!=w.batchBegin&&(yield(0,E.I)(b),yield w.batchBegin(S,b))})()}onBatchEnd(S,b){var w=this;return(0,e.A)(function*(){const H=[];null!=w.batchEnd&&(yield(0,E.I)(b),H.push(w.batchEnd(S,b))),"batch"===w.yieldEvery?H.push(w.nextFrameFunc()):s.ZSL.isNumber(w.yieldEvery)&&H.push(w.maybeWait(w.currentEpoch,S,b)),yield Promise.all(H)})()}onTrainBegin(S){var b=this;return(0,e.A)(function*(){null!=b.trainBegin&&(yield(0,E.I)(S),yield b.trainBegin(S))})()}onTrainEnd(S){var b=this;return(0,e.A)(function*(){null!=b.trainEnd&&(yield(0,E.I)(S),yield b.trainEnd(S))})()}}function d(D,S){return null==D&&(D={}),D instanceof m?[D]:Array.isArray(D)&&D[0]instanceof m?D:g.st(D).map(w=>new u(w,S))}let C=(()=>{class D{constructor(){}static registerCallbackConstructor(b,w){s.ZSL.assert(b>=0&&Number.isInteger(b),()=>`Verbosity level is expected to be an integer >= 0, but got ${b}`),D.checkForDuplicate(w),null==D.constructors[b]&&(D.constructors[b]=[]),D.constructors[b].push(w)}static checkForDuplicate(b){for(const w in D.constructors)D.constructors[+w].forEach(j=>{if(j===b)throw new l.Qp("Duplicate callback constructor.")})}static clear(){D.constructors={}}static createCallbacks(b){const w=[];for(const H in D.constructors){const j=+H;b>=j&&w.push(...D.constructors[j])}return w.map(H=>new H)}}return D.constructors={},D})();function T(D,S,b,w,H,j,F,B,A){const k=new p,x=[new f,...C.createCallbacks(S)];null!=D&&x.push(...D),x.push(k);const V=new h(x);return V.setParams({epochs:b,initialEpoch:w,samples:H,steps:j,batchSize:F,verbose:S,doValidation:B,metrics:A}),{callbackList:V,history:k}}},30593:(pt,R,t)=>{"use strict";t(10467),t(40083),t(31542),t(42946),t(35814)},9980:(pt,R,t)=>{"use strict";t.d(R,{BC:()=>u,IU:()=>f,Kx:()=>y,Uc:()=>d,tB:()=>c,uM:()=>E,uU:()=>g});var e=t(89893),s=t(24503);const l=new Map;function E(D){(0,s.E6)(e.To,"DataFormat",D)}function g(D){(0,s.E6)(e.ft,"InterpolationFormat",D)}function c(D){(0,s.E6)(e.EY,"PaddingMode",D)}function y(D){(0,s.E6)(e.bb,"PoolMode",D)}const m=[],h="/";function f(D,S){m.push(D);try{const b=S();return m.pop(),b}catch(b){throw m.pop(),b}}function u(D){if(!T(D))throw new Error("Not a valid tensor name: '"+D+"'");return function p(){return 0===m.length?"":m.join(h)+h}()+D}function d(D){if(!T(D))throw new Error("Not a valid tensor name: '"+D+"'");l.has(D)||l.set(D,0);const S=l.get(D);if(l.set(D,l.get(D)+1),S>0){const b=`${D}_${S}`;return l.set(b,1),b}return D}const C=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function T(D){return!!D.match(C)}},67165:(pt,R,t)=>{"use strict";t.d(R,{YZ:()=>d,uH:()=>p});var e=t(41653),s=t(17513),l=t(24503);function E(C,T){return(0,e.DZQ)(()=>e.RZD(e.czq(e.lKK(C,C),T,!0)))}class g extends e.JFn.Serializable{getConfig(){return{}}}let c=(()=>{class C extends g{constructor(D){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=D.maxValue?D.maxValue:this.defaultMaxValue,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>{const S=E(D,this.axis),b=e.zQh(S,0,this.maxValue);return e.lKK(D,e.y4m(b,e.WQq((0,s.Ni)(),S)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return C.className="MaxNorm",C})();e.JFn.registerClass(c);let y=(()=>{class C extends g{constructor(D){super(),this.defaultAxis=0,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>e.y4m(D,e.WQq((0,s.Ni)(),E(D,this.axis))))}getConfig(){return{axis:this.axis}}}return C.className="UnitNorm",C})();e.JFn.registerClass(y);let m=(()=>{class C extends g{apply(D){return e.VVh(D)}}return C.className="NonNeg",C})();e.JFn.registerClass(m);let h=(()=>{class C extends g{constructor(D){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=D.minValue?D.minValue:this.defaultMinValue,this.maxValue=null!=D.maxValue?D.maxValue:this.defaultMaxValue,this.rate=null!=D.rate?D.rate:this.defaultRate,this.axis=null!=D.axis?D.axis:this.defaultAxis}apply(D){return(0,e.DZQ)(()=>{const S=E(D,this.axis),b=e.WQq(e.lKK(this.rate,e.zQh(S,this.minValue,this.maxValue)),e.lKK(1-this.rate,S));return e.lKK(D,e.y4m(b,e.WQq((0,s.Ni)(),S)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return C.className="MinMaxNorm",C})();e.JFn.registerClass(h);const f={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function p(C){return(0,l.k4)(C)}function u(C,T={}){return(0,l.Xv)(C,e.JFn.SerializationMap.getMap().classNameMap,T,"constraint")}function d(C){return null==C?null:"string"==typeof C?u({className:C in f?f[C]:C,config:{}}):C instanceof g?C:u(C)}},29947:(pt,R,t)=>{"use strict";t.d(R,{W:()=>l});var e=t(22919);let s=(()=>{class E{constructor(c){this.seed=c}next(){if(void 0!==this.seed)return this.seed++}}return E.className="RandomSeed",E})(),l=(()=>{class E extends e.Wd{constructor(c){super(c),this.randomGenerator=new s(c.seed)}getConfig(){const c={seed:this.randomGenerator.seed},y=super.getConfig();return Object.assign(c,y),c}}return E.className="BaseRandomLayer",E})()},10281:(pt,R,t)=>{"use strict";t.d(R,{RW:()=>m,g7:()=>u,oR:()=>p});var e=t(41653),s=t(42946);class l{constructor(b){this.maxEntries=b||100,this.cache=new Map}get(b){let w;return this.cache.has(b)&&(w=this.cache.get(b),this.cache.delete(b),this.cache.set(b,w)),w}put(b,w){if(this.cache.has(b))this.cache.delete(b);else if(this.cache.size>=this.maxEntries){const H=this.cache.keys().next().value;this.cache.delete(H)}this.cache.set(b,w)}getMaxEntries(){return this.maxEntries}setMaxEntries(b){if(b<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${b}.`);if(this.maxEntries>b)for(let w=0;w<this.maxEntries-b;w++){const H=this.cache.keys().next().value;this.cache.delete(H)}this.maxEntries=b}}var E=t(24503),g=t(91806),c=t(22919);class m{constructor(b){if(this.id2Value={},this.id2Mask={},this.name2Id={},b instanceof m)for(const w in b.id2Value)this.id2Value[w]=b.id2Value[w],w in b.id2Mask&&(this.id2Mask[w]=b.id2Mask[w]);else{if(null==b)return;for(const w of b)this.add(w.key,w.value)}}add(b,w,H){if(null!=this.id2Value[b.id])throw new s.Qp(`Duplicate key: name=${b.name}, id=${b.id}`);return this.id2Value[b.id]=function y(S,b){if(null==S.dtype||S.dtype===b.dtype)return b;try{return(0,e.wgE)(b,S.dtype)}catch{throw new s.Qp(`The dtype of the feed (${b.dtype}) can not be cast to the dtype of the key '${S.name}' (${S.dtype}).`)}}(b,w),this.name2Id[b.name]=b.id,null!=H&&(this.id2Mask[b.id]=H),this}addFeed(b){this.add(b.key,b.value)}hasKey(b){return null!=this.id2Value[b.id]}names(){return Object.keys(this.name2Id)}getValue(b){if(b instanceof c.Ar){if(null==this.id2Value[b.id])throw new s.Qp(`Nonexistent key: ${b.name}`);return this.id2Value[b.id]}{const w=this.name2Id[b];if(null==w)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${b}`);return this.id2Value[w]}}getMask(b){if(b instanceof c.Ar){if(null==this.id2Value[b.id])throw new s.Qp(`Nonexistent key: ${b.name}`);return this.id2Mask[b.id]}{const w=this.name2Id[b];if(null==w)throw new s.Qp(`Feed dict has no SymbolicTensor name: ${b}`);return this.id2Mask[w]}}disposeMasks(){null!=this.id2Mask&&(0,e.ASo)(this.id2Mask)}}const h=new l,f=new l;function p(S){null!=h&&h.setMaxEntries(S),null!=f&&f.setMaxEntries(S)}function u(S,b,w,H){const j=null!=w&&w.training,F=Array.isArray(S),B=F?S:[S],A=B.map(it=>it.name),k=[],x=b.names();for(const it of A)-1!==x.indexOf(it)?k.push(b.getValue(it)):k.push(null);null!=H&&(H.maxNumTensors=-1/0,H.minNumTensors=1/0);const V=A.join(",")+"|"+b.names().sort().join(",");let Y,W=h.get(V);if(null==W){const it=function d(S,b){e.ZSL.assert(null!=S&&S.length>0,()=>"Expected at least one fetch, got none");let w=[],H={};if(1===S.length){const j=T(S[0],b);w=j.sorted,H=j.recipientMap}else{const j=new Set;for(const F of S){const{sorted:B,recipientMap:A}=T(F,b);for(const k of B)j.has(k.name)||(w.push(k),j.add(k.name));for(const k in A)null==H[k]&&(H[k]=new Set),A[k].forEach(x=>H[k].add(x))}}return{sorted:w,recipientCounts:C(H)}}(B,b);W=it.sorted,Y=it.recipientCounts,h.put(V,W),f.put(V,Y)}Y={},j||Object.assign(Y,f.get(V));const Z=new m(b);for(let it=0;it<W.length;++it){if(null!=H){const ue=(0,e.m1Z)().numTensors;ue>H.maxNumTensors&&(H.maxNumTensors=ue),ue<H.minNumTensors&&(H.minNumTensors=ue)}const at=W[it],q=at.sourceLayer;if(q instanceof g.m)continue;const ot=[],rt=[],et=[];let yt=!1;for(const ue of at.inputs){const Xt=Z.getValue(ue),ie=Z.getMask(ue);ot.push(Xt),rt.push(ie),null!=ie&&(yt=!0),j||(Y[ue.name]--,0===Y[ue.name]&&!b.hasKey(ue)&&-1===A.indexOf(ue.name)&&!Xt.isDisposed&&!0!==ue.sourceLayer.stateful&&et.push(Xt))}yt&&((w=w||{}).mask=rt[0]);const mt=(0,E.st)(q.apply(ot,w));let St=null;q.supportsMasking&&(St=q.computeMask(ot,rt));const se=D(at),Ht=Array.isArray(se)?se:[se];for(let ue=0;ue<Ht.length;++ue){Z.hasKey(Ht[ue])||Z.add(Ht[ue],mt[ue],Array.isArray(St)?St[0]:St);const Xt=A.indexOf(Ht[ue].name);-1!==Xt&&(k[Xt]=mt[ue])}j||(0,e.ASo)(et)}return Z.disposeMasks(),F?k:k[0]}function C(S){const b={};for(const w in S)b[w]=S[w].size;return b}function T(S,b){const w=new Set,H=[],j={};for(const A of b.names())w.add(A);const F=[],B=[];for(F.push(S);F.length>0;){const A=F[F.length-1];if(w.has(A.name)){F.pop();continue}const k=B[B.length-1]===F.length-1;if(0===A.inputs.length||k)F.pop(),H.push(A),w.add(A.name),k&&B.pop();else{B.push(F.length-1);for(const x of A.inputs)null==j[x.name]&&(j[x.name]=new Set),j[x.name].add(A.name),!w.has(x.name)&&F.push(x)}}return{sorted:H,recipientMap:j}}function D(S){let b;if(1===S.sourceLayer.inboundNodes.length)b=S.sourceLayer.output;else{let w=null;for(let H=0;H<S.sourceLayer.inboundNodes.length;++H)for(const j of S.sourceLayer.inboundNodes[H].outputTensors)if(j.id===S.id){w=H;break}b=S.sourceLayer.getOutputAt(w)}return b}},22919:(pt,R,t)=>{"use strict";t.d(R,{Ar:()=>p,Wd:()=>T,X6:()=>b,bP:()=>d,eO:()=>f});var e=t(41653),s=t(29887),l=t(9980),E=t(42946),g=t(7257),c=t(24503),y=t(71936),m=t(43549),h=t(75768);class f{constructor(F){this.dtype=F.dtype,this.shape=F.shape,this.ndim=null!=F.shape?F.shape.length:F.ndim,this.maxNDim=F.maxNDim,this.minNDim=F.minNDim,this.axes=F.axes||{}}}class p{constructor(F,B,A,k,x,V,W){this.dtype=F,this.shape=B,this.sourceLayer=A,this.inputs=k,this.callArgs=x,this.outputTensorIndex=W,this.id=(0,s.j)(),null!=V&&(this.originalName=(0,l.BC)(V),this.name=(0,l.Uc)(this.originalName)),this.rank=B.length}}let u=0;class d{constructor(F,B){this.callArgs=B,this.id=u++,this.outboundLayer=F.outboundLayer,this.inboundLayers=F.inboundLayers,this.nodeIndices=F.nodeIndices,this.tensorIndices=F.tensorIndices,this.inputTensors=F.inputTensors,this.outputTensors=F.outputTensors,this.inputMasks=F.inputMasks,this.outputMasks=F.outputMasks,this.inputShapes=F.inputShapes,this.outputShapes=F.outputShapes;for(const A of F.inboundLayers)null!=A&&A.outboundNodes.push(this);F.outboundLayer.inboundNodes.push(this)}getConfig(){const F=[];for(const B of this.inboundLayers)F.push(null!=B?B.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:F,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let C=0;class T extends e.JFn.Serializable{constructor(F={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=C++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let B=F.name;if(!B){const A=this.getClassName();B=c.uc(A)+"_"+(0,s.v)(A)}if(this.name=B,this.trainable_=null==F.trainable||F.trainable,null!=F.inputShape||null!=F.batchInputShape){let A;if(null!=F.batchInputShape)A=F.batchInputShape;else if(null!=F.inputShape){let x=null;null!=F.batchSize&&(x=F.batchSize),A=[x].concat(F.inputShape)}this.batchInputShape=A;let k=F.dtype;null==k&&(k=F.inputDType),null==k&&(k="float32"),this.dtype=k}this.initialWeights=null!=F.weights?F.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(F,B){return F.name+"_ib-"+B.toString()}getNodeAtIndex(F,B){if(0===this.inboundNodes.length)throw new E.bu(`The layer has never been called and thus has no defined ${B}.`);if(this.inboundNodes.length<=F)throw new E.Qp(`Asked to get ${B} at node ${F}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[F]}getInputAt(F){return c.wL(this.getNodeAtIndex(F,"input").inputTensors)}getOutputAt(F){return c.wL(this.getNodeAtIndex(F,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new E.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new E.l7(`Layer ${this.name} is not connected, no input to return.`);return c.wL(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new E.l7(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new E.l7(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return c.wL(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(F=>F())}get updates(){return this._updates}get built(){return this._built}set built(F){this._built=F}get trainable(){return this.trainable_}set trainable(F){this._trainableWeights.forEach(B=>B.trainable=F),this.trainable_=F}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(F=>F.trainable):[]}set trainableWeights(F){this._trainableWeights=F}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(F=>!F.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(F){this._nonTrainableWeights=F}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(F){const B=c.st(F);if(null==this.inputSpec||0===this.inputSpec.length)return;const A=c.st(this.inputSpec);if(B.length!==A.length)throw new E.Qp(`Layer ${this.name} expects ${A.length} inputs, but it received ${B.length} input tensors. Input received: ${F}`);for(let k=0;k<B.length;k++){const x=B[k],V=A[k];if(null==V)continue;const W=x.rank;if(null!=V.ndim&&W!==V.ndim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected ndim=${V.ndim}, found ndim=${W}`);if(null!=V.maxNDim&&W>V.maxNDim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected max_ndim=${V.maxNDim}, found ndim=${W}`);if(null!=V.minNDim&&W<V.minNDim)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected min_ndim=${V.minNDim}, found ndim=${W}.`);if(null!=V.dtype&&x.dtype!==V.dtype)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name} : expected dtype=${V.dtype}, found dtype=${x.dtype}.`);if(V.axes){const Y=x.shape;for(const Z in V.axes){const it=Number(Z),at=V.axes[Z];if(null!=at&&-1===[at,null].indexOf(it>=0?Y[it]:Y[Y.length+it]))throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected axis ${it} of input shape to have value ${at} but got shape ${Y}.`)}}if(null!=V.shape)for(let Y=0;Y<V.shape.length;++Y){const Z=V.shape[Y],it=x.shape[Y];if(null!=Z&&null!=it&&Z!==it)throw new E.Qp(`Input ${k} is incompatible with layer ${this.name}: expected shape=${V.shape}, found shape=${x.shape}.`)}}}call(F,B){return F}invokeCallHook(F,B){null!=this._callHook&&this._callHook(F,B)}setCallHook(F){this._callHook=F}clearCallHook(){this._callHook=null}apply(F,B){B=B||{},this.assertNotDisposed();const A=c.st(F),k=function w(j){let F=!0;for(const B of c.st(j))if(!(B instanceof p)){F=!1;break}return F}(F),x=function H(j){let F=!0;for(const B of c.st(j))if(B instanceof p){F=!1;break}return F}(F);if(k===x)throw new E.Qp("Arguments to apply() must be all SymbolicTensors or all Tensors");return(0,l.IU)(this.name,()=>{if(!this.built){this.assertInputCompatibility(F);const V=[];for(const W of c.st(F))V.push(W.shape);this.build(c.wL(V)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&x&&(this._refCount=1)}if(this.assertInputCompatibility(F),x){let V=this.call(F,B);this.supportsMasking&&this.setMaskMetadata(F,V);const W=c.st(V),Y=[];for(let Z of W)-1!==A.indexOf(Z)&&(Z=Z.clone()),Y.push(Z);if(V=c.wL(Y),null!=this.activityRegularizer)throw new E.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return V}{const V=function D(j){j=c.st(j);const F=[];for(const B of j)F.push(B.shape);return c.wL(F)}(F),W=this.computeOutputShape(V);let Y;const Z="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(F)?V[0]:V),Y=null!=W&&W.length>0&&Array.isArray(W[0])?W.map((it,at)=>new p(Z,it,this,c.st(F),B,this.name,at)):new p(Z,W,this,c.st(F),B,this.name),this.addInboundNode(F,Y,null,null,V,W,B),this._refCount++,null!=this.activityRegularizer)throw new E.EH("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return Y}})}warnOnIncompatibleInputShape(F){if(null!=this.batchInputShape)if(F.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(F)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let B=!1;this.batchInputShape.forEach((A,k)=>{null!=A&&null!=F[k]&&F[k]!==A&&(B=!0)}),B&&console.warn(`The shape of the input tensor (${JSON.stringify(F)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new E.l7(`The layer ${this.name} has never been called and thus has no defined output shape.`);const F=[];for(const B of this.inboundNodes){const A=JSON.stringify(B.outputShapes);-1===F.indexOf(A)&&F.push(A)}if(1===F.length){const B=this.inboundNodes[0].outputShapes;return Array.isArray(B)&&Array.isArray(B[0])&&1===B.length?B[0]:B}throw new E.l7(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new E.bu(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return m.Y(this.weights)}build(F){this.built=!0}getWeights(F=!1){return(0,h.ex)(F?this.trainableWeights:this.weights)}setWeights(F){(0,e.DZQ)(()=>{const B=this.weights;if(B.length!==F.length)throw new E.Qp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${F.length}, but the layer was expecting ${B.length} weights. Provided weights: ${F}...`);if(0===B.length)return;const A=[],k=(0,h.ex)(B);for(let x=0;x<k.length;++x){const V=k[x],W=B[x],Y=F[x];if(!e.ZSL.arraysEqual(V.shape,Y.shape))throw new E.Qp(`Layer weight shape ${V.shape} not compatible with provided weight shape ${Y.shape}`);A.push([W,Y])}(0,h.UM)(A)})}addWeight(F,B,A,k,x,V,W,Y){if(-1!==this._addedWeightNames.indexOf(F))throw new E.Qp(`Duplicate weight name ${F} for layer ${this.name}`);this._addedWeightNames.push(F),null==A&&(A="float32"),this.fastWeightInitDuringBuild&&(k=null!=Y?Y():(0,g.Fe)("zeros"));const Z=k.apply(B,A),it=new h.eR(Z,A,F,V,W);return Z.dispose(),null!=x&&this.addLoss(()=>x.apply(it.read())),null==V&&(V=!0),V?this._trainableWeights.push(it):this._nonTrainableWeights.push(it),it}setFastWeightInitDuringBuild(F){this.fastWeightInitDuringBuild=F}addLoss(F){null==F||Array.isArray(F)&&0===F.length||(F=c.st(F),null!=this._losses&&this.losses.push(...F))}computeOutputShape(F){return F}computeMask(F,B){if(!this.supportsMasking){if(null!=B){if(!Array.isArray(B))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);B.forEach(A=>{if(null!=A)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return B}setMaskMetadata(F,B,A){if(!this.supportsMasking)return;const k=this.computeMask(F,A),x=c.st(B),V=c.st(k);if(x.length!==V.length)throw new Error(`${this.name} outputs ${x.length} tensors but ${x.length} masks for those tensors`);for(let W=0;W<x.length;W++)x[W].kerasMask=V[W]}addInboundNode(F,B,A,k,x,V,W=null){const Y=c.st(F);B=c.st(B),A=c.st(A),k=c.st(k),x=y.FS(x),V=y.FS(V);const Z=[],it=[],at=[];for(const q of Y)Z.push(q.sourceLayer),it.push(q.nodeIndex),at.push(q.tensorIndex);new d({outboundLayer:this,inboundLayers:Z,nodeIndices:it,tensorIndices:at,inputTensors:Y,outputTensors:B,inputMasks:A,outputMasks:k,inputShapes:x,outputShapes:V},W);for(let q=0;q<B.length;q++)B[q].sourceLayer=this,B[q].nodeIndex=this.inboundNodes.length-1,B[q].tensorIndex=q}getConfig(){const F={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(F.batchInputShape=this.batchInputShape),null!=this.dtype&&(F.dtype=this.dtype),F}disposeWeights(){return this.weights.forEach(F=>F.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let F=0;return 0==--this._refCount&&(F=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:F}}}function b(j,F,B){if((null==F||null!=B&&B>0)&&(F=j.sourceLayer,B=j.nodeIndex),0===F.inboundNodes.length)return[j];{const A=F.inboundNodes[B];if(0===A.inboundLayers.length)return A.inputTensors;{const k=[];for(let x=0;x<A.inboundLayers.length;x++){const Z=b(A.inputTensors[x],A.inboundLayers[x],A.nodeIndices[x]);for(const it of Z)-1===k.indexOf(it)&&k.push(it)}return k}}}},31542:(pt,R,t)=>{"use strict";t.d(R,{Gw:()=>ps});var e=t(10467),s=t(41653),l=t(99198),E=t(40083),g=t(9980),c=t(42946),y=t(53340),m=t(35814),h=t(55294),f=t(98552),p=t(17513);const d=1048576;function C($t,Vt,G=!1){if(null==$t||"object"!=typeof $t||Object.getPrototypeOf($t)!==Object.prototype||!T($t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(G){const ct=JSON.stringify($t);ct.length>d&&console.warn(`User-defined metadata of model "${Vt}" is too large in size (length=${ct.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${d}.`)}}function T($t){if(null===$t)return!0;if("object"==typeof $t){if(Object.getPrototypeOf($t)===Object.prototype){const Vt=Object.keys($t);for(const G of Vt)if("string"!=typeof G||!T($t[G]))return!1;return!0}if(Array.isArray($t)){for(const Vt of $t)if(!T(Vt))return!1;return!0}return!1}{const Vt=typeof $t;return"string"===Vt||"number"===Vt||"boolean"===Vt}}var D=t(24503),S=t(43549);function j($t,Vt,G=console.log){let ct="";for(let vt=0;vt<$t.length;++vt)vt>0&&(ct=ct.slice(0,ct.length-1)+" "),ct+=$t[vt],ct=ct.slice(0,Vt[vt]),ct+=" ".repeat(Vt[vt]-ct.length);G(ct)}function F($t,Vt,G){let ct,vt;try{vt=$t.inboundNodes.map(Mt=>JSON.stringify(Mt.inputShapes)).join(",")}catch{vt="multiple"}try{ct=JSON.stringify($t.outputShape)}catch{ct="multiple"}j([`${$t.name} (${$t.getClassName()})`,vt,ct,$t.countParams().toString()],Vt,G)}function B($t,Vt,G,ct){let vt,Tt;try{Tt=$t.inboundNodes.map(Se=>JSON.stringify(Se.inputShapes)).join(",")}catch{Tt="multiple"}try{vt=JSON.stringify($t.outputShape)}catch{vt="multiple"}const It=[];for(const Se of $t.inboundNodes)if(!(null!=G&&G.length>0&&-1===G.indexOf(Se)))for(let We=0;We<Se.inboundLayers.length;++We)It.push(`${Se.inboundLayers[We].name}[${Se.nodeIndices[We]}][${Se.tensorIndices[We]}]`);const bt=$t.name,Mt=$t.getClassName(),ce=0===It.length?"":It[0];j([`${bt} (${Mt})`,Tt,vt,$t.countParams().toString(),ce],Vt,ct);for(let Se=1;Se<It.length;++Se)j(["","","","",It[Se]],Vt,ct)}var A=t(89119),k=t(13425),x=t(13509),V=t(29887),W=t(71936),Y=t(75768),Z=t(10281),it=t(91806),at=t(22919);class ot extends at.Wd{constructor(Vt){if(super({}),this.containerNodes=new Set,this.name=Vt.name,null==this.name){const xe=this.getClassName().toLowerCase();this.name=(0,V.v)(xe)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(Vt.inputs)?Vt.inputs.slice():[Vt.inputs],this.outputs=Array.isArray(Vt.outputs)?Vt.outputs.slice():[Vt.outputs],D.Am(this.inputs).length!==this.inputs.length)throw new c.Qp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(xe=>xe.name)}`);D.Am(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(xe=>xe.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const xe of this.outputs){const Ge=xe.nodeIndex,un=xe.tensorIndex;this.outputLayers.push(xe.sourceLayer),this.outputLayersNodeIndices.push(Ge),this.outputLayersTensorIndices.push(un)}for(const xe of this.inputs){const nn=xe.sourceLayer,Ge=xe.nodeIndex,un=xe.tensorIndex;D.vA(0===Ge,"input layer has >1 nodes"),D.vA(0===un,"input layer has >1 tensors"),this.inputLayers.push(nn),this.inputLayersNodeIndices.push(Ge),this.inputLayersTensorIndices.push(un)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let xe=0;xe<this.inputLayers.length;xe++){const nn=this.inputLayers[xe];if(!(nn instanceof it.m))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${Vt.inputs}. Input ${xe} (0-based) originates from layer type ${nn.getClassName()}.`);this.inputNames.push(nn.name),this.feedInputShapes.push(nn.batchInputShape),this.feedInputNames.push(nn.name)}for(const xe of this.outputLayers)this.outputNames.push(xe.name);this.internalInputShapes=this.inputs.map(xe=>xe.shape),this.internalOutputShapes=this.outputs.map(xe=>xe.shape);const G={},ct={},vt={},Tt={},It={},bt=[],Mt=(xe,nn,Ge,un,An,Vn)=>{(null==un||null==An||null==Vn)&&(un=xe.sourceLayer,An=xe.nodeIndex,Vn=xe.tensorIndex);const Rn=un.inboundNodes[An];if(-1!==Ge.indexOf(Rn))throw new c.bu(`The tensor ${xe.name} at layer "${un.name}" is part of a cycle.`);if(-1!==nn.indexOf(Rn))return;this.containerNodes.add(ot.nodeKey(un,An)),un.id in It||(It[un.id]=Object.keys(It).length),-1===Ge.indexOf(Rn)&&Ge.push(Rn);const ns=Rn.inboundLayers.length;for(let Wn=0;Wn<ns;Wn++)Mt(Rn.inputTensors[Wn],nn,Ge,Rn.inboundLayers[Wn],Rn.nodeIndices[Wn],Rn.tensorIndices[Wn]);for(nn.push(Rn);Ge.indexOf(Rn)>=0;)Ge.splice(Ge.indexOf(Rn),1);bt.push(Rn)},ce=[],ge=[];for(const xe of this.outputs)Mt(xe,ce,ge);const Se=bt.slice().reverse();for(const xe of Se){ct[xe.id]=xe,xe.id in G||(G[xe.id]=0);let nn=G[xe.id];nn=Math.max(nn,null==vt[xe.outboundLayer.id]?0:vt[xe.outboundLayer.id]),vt[xe.outboundLayer.id]=nn,Tt[xe.outboundLayer.id]=xe.outboundLayer,G[xe.id]=nn;for(let un=0;un<xe.inboundLayers.length;un++){const Rn=xe.inboundLayers[un].inboundNodes[xe.nodeIndices[un]];G[Rn.id]=Math.max(nn+1,null==G[Rn.id]?0:G[Rn.id]),ct[Rn.id]=Rn}}const We={};for(const xe in G){const nn=G[xe];nn in We||(We[nn]=[]),We[nn].push(ct[xe])}const Ue={};for(const xe in vt){const nn=vt[xe];nn in Ue||(Ue[nn]=[]),Ue[nn].push(Tt[xe])}let Je=Object.keys(Ue).map(xe=>parseInt(xe,10)).sort(D.th);this.layers=[];for(const xe of Je){const nn=Ue[xe];nn.sort((Ge,un)=>{const An=It[Ge.id],Vn=It[un.id];return An<Vn?-1:An>Vn?1:0});for(const Ge of nn)Ge instanceof ot&&this.internalContainerRefs.push(Ge),this.layers.push(Ge)}this.layersByDepth=Ue,Je=Object.keys(We).map(xe=>parseInt(xe,10)).sort(D.th);const be=this.inputs.slice(),Ce=[];for(const xe of Je)for(const nn of We[xe]){const Ge=nn.outboundLayer;if(null!=Ge){for(const un of nn.inputTensors)if(-1===be.indexOf(un))throw new c.bu(`Graph disconnected: cannot obtain value for tensor ${un} at layer "${Ge.name}". The following previous layers were accessed without issue: ${Ce}`);for(const un of nn.outputTensors)be.push(un);Ce.push(Ge.name)}}this.nodesByDepth=We;const qe=this.layers.map(xe=>xe.name);for(const xe of qe){const nn=qe.filter(Ge=>Ge===xe).length;if(1!==nn)throw new c.bu(`The name "${xe}" is used ${nn} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(qe))}this.outboundNodes=[],this.inboundNodes=[],new at.bP({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(xe=>null),outputMasks:this.outputs.map(xe=>null),inputShapes:this.inputs.map(xe=>xe.shape),outputShapes:this.outputs.map(xe=>xe.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const Vt={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const G of this.layers)Vt.numDisposedVariables+=G.dispose().numDisposedVariables;for(const G of this.internalContainerRefs)Vt.numDisposedVariables+=G.dispose().numDisposedVariables}return Vt.refCountAfterDispose=this._refCount,Vt}get trainable(){return this.trainable_}set trainable(Vt){this.layers.forEach(G=>{G._trainableWeights.forEach(ct=>ct.trainable=Vt)}),this.trainable_=Vt}get trainableWeights(){if(this._trainableWeights.length>0)throw new c.Qp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let Vt=[];for(const G of this.layers)Vt=Vt.concat(G.trainableWeights);return Vt}get nonTrainableWeights(){const Vt=[];for(const G of this.layers)Vt.push(...G.nonTrainableWeights);if(!this.trainable){const G=[];for(const ct of this.layers)G.push(...ct.trainableWeights);return G.concat(Vt)}return Vt}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(Vt,G=!0){const ct={};let vt=0;const Tt=($t=>{const Vt=Object.keys($t);if(0===Vt.length)return!1;const G=Vt[0].split("/");return!isNaN(parseInt(G[G.length-1],10))})(Vt);Tt&&this.parseWeights(Vt);for(const bt of this.layers)for(const[Mt,ce]of bt.weights.entries()){const ge=Tt?`${ce.name.split("/").slice(0,-1).join("/")+"/"}${Mt}`:ce.originalName;if(null!=ct[ge])throw new c.Qp(`Duplicate weight name: ${ge}`);ct[ge]=ce,vt++}const It=[];for(const bt in Vt){let Mt=bt;if(null==ct[bt]){const ce=bt.split("/");Mt=ce.slice(0,-2).concat([ce[ce.length-1]]).join("/")}if(null!=ct[Mt])It.push([ct[Mt],Vt[bt]]);else if(G)throw new c.Qp(`Provided weight data has no target variable: ${bt}`);delete ct[Mt]}if(G){const bt=[];for(const Mt in ct)bt.push(Mt);if(bt.length>0)throw new c.Qp(`${bt.length} of ${vt} weights are not set: ${bt}`)}(0,Y.UM)(It)}parseWeights(Vt){for(const G in Object.keys(Vt)){const ct=G.split("/"),vt=["vars","layer_checkpoint_dependencies"],Tt=ct.map(It=>It.startsWith("_")?It.slice(1):It).filter(It=>!vt.includes(It)).join("/");Tt!==G&&(Vt[Tt]=Vt[G],delete Vt[G])}}updatedConfig(){const Vt=this.getConfig(),G={};return G.className=this.getClassName(),G.config=Vt,G.kerasVersion=`tfjs-layers ${x.r}`,G.backend="TensorFlow.js",G}toJSON(Vt,G=!0){const ct=(0,k.M)(this.updatedConfig());return G?JSON.stringify(ct):ct}call(Vt,G){return(0,s.DZQ)(()=>{Vt=D.st(Vt);const ct=new Z.RW;for(let vt=0;vt<this.inputs.length;++vt)ct.add(this.inputs[vt],Vt[vt]);return(0,Z.g7)(this.outputs,ct,G)})}computeMask(Vt,G){return(0,s.DZQ)(()=>{let ct;return Vt=D.st(Vt),ct=null==G?D.fD(null,Vt.length):D.st(G),this.runInternalGraph(Vt,ct)[1]})}computeOutputShape(Vt){const G=W.FS(Vt);if(G.length!==this.inputLayers.length)throw new c.Qp(`Invalid inputShape argument ${Vt}: model has ${this.inputLayers.length} tensor inputs.`);const ct={};for(let bt=0;bt<G.length;bt++)ct[this.inputLayers[bt].name+"_0_0"]=G[bt];const vt=Object.keys(this.nodesByDepth).map(bt=>parseInt(bt,10)).sort(D.th);if(vt.length>1)for(const bt of vt){const Mt=this.nodesByDepth[bt];for(const ce of Mt){const ge=ce.outboundLayer;if(-1!==this.inputLayers.map(be=>be.id).indexOf(ge.id))continue;const Se=[];for(let be=0;be<ce.inboundLayers.length;be++)Se.push(ct[`${ce.inboundLayers[be].name}_${ce.nodeIndices[be]}_${ce.tensorIndices[be]}`]);const We=ge.computeOutputShape(D.wL(Se)),Ue=W.FS(We),Je=ge.inboundNodes.indexOf(ce);for(let be=0;be<Ue.length;be++)ct[`${ge.name}_${Je}_${be}`]=Ue[be]}}const Tt=[],It=[];for(let bt=0;bt<this.outputLayers.length;bt++)It.push(`${this.outputLayers[bt].name}_${this.outputLayersNodeIndices[bt]}_${this.outputLayersTensorIndices[bt]}`);for(let bt=0;bt<It.length;bt++){const Mt=It[bt];D.vA(Mt in ct),Tt.push(ct[Mt])}return D.wL(Tt)}runInternalGraph(Vt,G){null==G&&(G=D.fD(null,Vt.length));const ct={};for(let Mt=0;Mt<this.inputs.length;++Mt)ct[this.inputs[Mt].id]=[Vt[Mt],G[Mt]];const vt=Object.keys(this.nodesByDepth).map(Mt=>parseInt(Mt,10)).sort(D.th);for(const Mt of vt){const ce=this.nodesByDepth[Mt];for(const ge of ce){const Se=ge.outboundLayer,We=ge.inputTensors,Ue=ge.outputTensors,Je=new Array;for(const be of We)be.id in ct&&Je.push(ct[be.id]);if(Je.length===We.length){let Ce,qe,xe,nn,be={};if(null!=ge.callArgs&&(be=ge.callArgs),1===Je.length){const[Ge,un]=Je[0];null==be.mask&&(be.mask=un),xe=D.st(Se.call(Ge,be)),nn=D.st(Se.computeMask(Ge,un)),Ce=[Ge],qe=[un]}else Ce=Je.map(Ge=>Ge[0]),qe=Je.map(Ge=>Ge[1]),null==be.mask&&(be.mask=qe),xe=D.st(Se.call(Ce,be)),nn=D.st(Se.computeMask(Ce,qe));if(Se.activityRegularizer)throw new c.EH("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let Ge=0;Ge<Ue.length;++Ge)ct[Ue[Ge].id]=[xe[Ge],nn[Ge]]}}}const Tt=[],It=[],bt=[];for(const Mt of this.outputs){D.vA(Mt.id in ct,`Could not compute output ${Mt.name} : ${Mt.id}`);const[ce,ge]=ct[Mt.id];bt.push(ce.shape),Tt.push(ce),It.push(ge)}return[Tt,It,bt]}buildNodeConversionMap(Vt){const G={};let ct;for(const vt of this.layers){ct=vt instanceof ot?1:0;for(let Tt=0;Tt<vt.inboundNodes.length;Tt++){const It=ot.nodeKey(vt,Tt);this.containerNodes.has(It)&&(G[It]=ct,ct+=1)}}return G}getLayer(Vt,G){if(null!=G)return this.findLayer(G);if(null==Vt)throw new c.Qp("Provide either a layer name or layer index");if("number"==typeof Vt)return this.findLayer(Vt);for(const ct of this.layers)if(ct.name===Vt)return ct;throw new c.Qp(`No such layer: ${Vt}`)}findLayer(Vt){if(this.layers.length<=Vt)throw new c.Qp(`Was asked to retrieve layer at index ${Vt}, but model only has ${this.layers.length} layer(s).`);return this.layers[Vt]}calculateLosses(){return(0,s.DZQ)(()=>{const Vt=[];for(const G of this.layers)for(let ct=0;ct<G.inboundNodes.length;++ct){const vt=ot.nodeKey(G,ct);this.containerNodes.has(vt)&&Vt.push(...G.calculateLosses())}return Vt})}getConfig(){const Vt={name:this.name},G=this.buildNodeConversionMap(this.layers),ct=[];for(const It of this.layers){const bt=It.getClassName(),Mt=It.getConfig(),ce=[];for(let Se=0;Se<It.inboundNodes.length;Se++){const We=It.inboundNodes[Se],Ue=ot.nodeKey(It,Se);let Je={};if(this.containerNodes.has(Ue)){if(We.callArgs)try{JSON.stringify(We.callArgs),Je=We.callArgs}catch{console.warn(`Layer ${It.name} was passed non-serializable keyword arguments: ${We.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),Je={}}if(We.inboundLayers.length>0){const be=[];for(let Ce=0;Ce<We.inboundLayers.length;Ce++){const qe=We.inboundLayers[Ce],nn=We.tensorIndices[Ce];let un=G[ot.nodeKey(qe,We.nodeIndices[Ce])];null==un&&(un=0),be.push([qe.name,un,nn,Je])}ce.push(be)}}}const ge={};ge.name=It.name,ge.className=bt,ge.config=Mt,ge.inboundNodes=ce,ct.push(ge)}Vt.layers=ct;const vt=[];for(let It=0;It<this.inputLayers.length;It++){const bt=this.inputLayers[It],ce=ot.nodeKey(bt,this.inputLayersNodeIndices[It]);if(!this.containerNodes.has(ce))continue;let ge=G[ce];null==ge&&(ge=0),vt.push([bt.name,ge,this.inputLayersTensorIndices[It]])}Vt.inputLayers=vt;const Tt=[];for(let It=0;It<this.outputLayers.length;It++){const bt=this.outputLayers[It],ce=ot.nodeKey(bt,this.outputLayersNodeIndices[It]);if(!this.containerNodes.has(ce))continue;let ge=G[ce];null==ge&&(ge=0),Tt.push([bt.name,ge,this.outputLayersTensorIndices[It]])}return Vt.outputLayers=Tt,Vt}static fromConfig(Vt,G,ct={},vt=!1){const Tt={},It={};function bt(Ce,qe){Ce.name in It?It[Ce.name].push(qe):It[Ce.name]=[qe]}function Mt(Ce,qe){const xe=[];let nn;for(const Ge of qe){const un=Ge[0],An=Ge[1],Vn=Ge[2];if(nn=null==Ge[3]?{}:Ge[3],!(un in Tt))return void bt(Ce,qe);const Rn=Tt[un];if(Rn.inboundNodes.length<=An)return void bt(Ce,qe);xe.push(Rn.inboundNodes[An].outputTensors[Vn])}xe.length>0&&Ce.apply(D.wL(xe),nn)}function ce(Ce){const qe=Ce.name,xe=(0,y.i)(Ce,null!=G.customObjects?G.customObjects:{});xe.setFastWeightInitDuringBuild(vt),Tt[qe]=xe,Ce.inboundNodes.forEach(Ge=>{if(!(Ge instanceof Array))throw new c.Qp(`Corrupted configuration, expected array for nodeData: ${Ge}`);bt(xe,Ge)})}const ge=G.name,Se=G.layers;for(const Ce of Se)ce(Ce);for(;!D.ZF(It);)for(const Ce of Se){const qe=Tt[Ce.name];if(qe.name in It){const xe=It[qe.name];delete It[qe.name];for(const nn of xe)Mt(qe,nn)}}const We=[],Ue=[],Je=G.inputLayers;for(const Ce of Je){const qe=Ce[0],xe=Ce[1],nn=Ce[2];D.vA(qe in Tt),We.push(Tt[qe].inboundNodes[xe].outputTensors[nn])}const be=G.outputLayers;for(const Ce of be){const qe=Ce[0],xe=Ce[1],nn=Ce[2];D.vA(qe in Tt),Ue.push(Tt[qe].inboundNodes[xe].outputTensors[nn])}return new Vt({inputs:We,outputs:Ue,name:ge})}get stateful(){if(this._stateful)throw new c.Qp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const Vt of this.layers)if(Vt.stateful)return!0;return!1}resetStates(){(0,s.DZQ)(()=>{this.layers.forEach(Vt=>{Vt.stateful&&Vt.resetStates()})})}}function et($t,Vt){return function rt($t,Vt,G){const ct=Vt.length;if(null==$t||Array.isArray($t)&&0===$t.length)return Vt.map(vt=>null);if(1===ct)return Array.isArray($t)&&1===$t.length?$t:"object"==typeof $t&&Vt[0]in $t?[$t[Vt[0]]]:[$t];if(Array.isArray($t)){if($t.length!==ct)throw new Error(`Provided ${G} is an array of ${$t.length} element(s), but the model has ${ct} outputs. Make sure a set of weights is provided for each model output.`);return $t}if("object"==typeof $t&&Object.keys($t).length>0&&"object"==typeof $t[Object.keys($t)[0]]){const vt=[];return Vt.forEach(Tt=>{vt.push(Tt in $t?$t[Tt]:null)}),vt}throw new Error(`The model has multiple (${ct}) outputs, so ${G} must be either an array with ${ct} elements or an object with ${Vt} keys. Provided ${G} not understood: ${JSON.stringify($t)}`)}($t,Vt,"classWeight")}function mt($t,Vt,G,ct){return St.apply(this,arguments)}function St(){return(St=(0,e.A)(function*($t,Vt,G,ct){if(null!=Vt||null!=ct)throw new Error("Support sampleWeight is not implemented yet");if(null!=G){const vt=(0,s.DZQ)(()=>{if(1===$t.shape.length)return(0,s.o8B)($t);if(2===$t.shape.length){if($t.shape[1]>1)return(0,s.FLi)($t,1);if(1===$t.shape[1])return(0,s.tQQ)($t,[$t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${$t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${$t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),Tt=Array.from(yield vt.data());(0,s.ASo)(vt);const It=[];return Tt.forEach(bt=>{if(null==G[bt])throw new Error(`classWeight must contain all classes in the training data. The class ${bt} exists in the data but not in classWeight`);It.push(G[bt])}),(0,s.tGX)(It,"float32")}return null})).apply(this,arguments)}function se($t,Vt){return(0,s.lKK)($t,Vt)}function ue($t,Vt){let G,ct;G=Vt.xs,ct=Vt.ys,s.ZSL.assert(null!=G&&null!=ct,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${Vt}`);const Tt=Xt("input",$t.inputNames,G),It=Xt("output",$t.outputNames,ct),bt=Tt[0].shape[0];s.ZSL.assert(Tt.length===$t.inputs.length,()=>`LayersModel has ${$t.inputs.length} inputs, but the dataset provides ${Tt.length} inputs.  (Expected input keys: ${JSON.stringify($t.inputNames)})`),s.ZSL.assert(It.length===$t.outputs.length,()=>`LayersModel has ${$t.outputs.length} outputs, but the dataset provides ${It.length} outputs.  (Expected output keys: ${JSON.stringify($t.outputNames)})`);for(let Mt=0;Mt<Tt.length;Mt++)s.ZSL.assert(Tt[Mt].shape[0]===bt,()=>`Batch size mismatch: input ${$t.inputNames[Mt]} has ${Tt[Mt].shape[0]}; expected  ${bt} based on input ${$t.inputNames[0]}.`);for(let Mt=0;Mt<It.length;Mt++)s.ZSL.assert(It[Mt].shape[0]===bt,()=>`Batch size mismatch: output ${$t.outputNames[Mt]} has ${It[Mt].shape[0]}; expected  ${bt} based on input ${$t.inputNames[0]}.`);return{xs:Tt,ys:It}}function Xt($t,Vt,G){if(G instanceof s.qYS)return[G];if(Array.isArray(G))return s.ZSL.assert(G.length===Vt.length,()=>`Received an array of ${G.length} Tensors, but expected ${Vt.length} to match the ${$t} keys ${Vt}.`),G;{const ct=[];for(const vt of Vt){if(null==G[vt])throw new c.Qp(`The feature data generated by the dataset lacks the required ${$t} key '${vt}'.`);ct.push(G[vt])}return ct}}function ne(){return(ne=(0,e.A)(function*($t,Vt,G){const ct=null!=G.batchesPerEpoch;if(s.ZSL.assert(null!=$t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),s.ZSL.assert(null!=G,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),s.ZSL.assert(null!=G.epochs&&G.epochs>0&&Number.isInteger(G.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${G.epochs}`),s.ZSL.assert(!ct||G.batchesPerEpoch>0&&Number.isInteger(G.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${G.batchesPerEpoch}`),s.ZSL.assert(null==G.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),$t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");$t.isTraining=!0;try{const vt=null!=G.validationData;let Tt,It;if(vt)if(Ie(G.validationData))s.ZSL.assert(null==G.validationBatches||G.validationBatches>0&&Number.isInteger(G.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${G.validationBatches}`);else{const Ce=function ie($t){if(3===$t.length)throw new c.EH("Validation with sample weights is not implemented yet.");return{xs:$t[0],ys:$t[1]}}(G.validationData);Tt=Ce.xs,It=Ce.ys}const bt=$t.makeTrainFunction(),Mt=$t.getDedupedMetricsNames();let ce;ce=vt?Mt.slice().concat(Mt.map(Ce=>"val_"+Ce)):Mt.slice();const ge=(0,E.Eq)(G.callbacks,G.yieldEvery),Se=null==G.verbose?1:G.verbose,{callbackList:We,history:Ue}=(0,E.dY)(ge,Se,G.epochs,null,null,function Pe($t,Vt){let G=null;return null!=Vt.batchesPerEpoch?G=Vt.batchesPerEpoch:Number.isFinite($t.size)&&(G=$t.size),G}(Vt,G),null,vt,ce);We.setModel($t),$t.history=Ue,yield We.onTrainBegin(),$t.stopTraining_=!1;let Je=null==G.initialEpoch?0:G.initialEpoch,be=yield Vt.iterator();for(;Je<G.epochs;){const Ce={};yield We.onEpochBegin(Je);let qe=0,xe=0;for(ct||(be=yield Vt.iterator());!ct||qe<G.batchesPerEpoch;){const nn=yield be.next();if(ct&&nn.done){console.warn(`You provided \`batchesPerEpoch\` as ${G.batchesPerEpoch}, but your dataset iterator ran out of data after ${qe} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${G.batchesPerEpoch*G.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=nn.value){const{xs:Ge,ys:un}=ue($t,nn.value),An={};An.batch=xe,An.size=Ge[0].shape[0],yield We.onBatchBegin(xe,An);const Vn=[];if(null!=G.classWeight){const Wn=et(G.classWeight,$t.outputNames);for(let Xn=0;Xn<Wn.length;++Xn)Vn.push(yield mt(un[Xn],null,Wn[Xn]))}const Rn=Ge.concat(un).concat(Vn),ns=bt(Rn);s.ASo(Rn);for(let Wn=0;Wn<Mt.length;++Wn){const _s=ns[Wn];An[Mt[Wn]]=_s,s.aCs(_s)}yield We.onBatchEnd(xe,An),(0,m.i)(An),xe++,qe++}if(ct?qe>=G.batchesPerEpoch:nn.done){if(vt){let Ge;Ge=Ie(G.validationData)?(0,D.st)(yield $t.evaluateDataset(G.validationData,{batches:G.validationBatches})):(0,D.st)($t.evaluate(Tt,It,{batchSize:null==G.validationBatchSize?32:G.validationBatchSize,verbose:0}));for(let un=0;un<$t.metricsNames.length;++un)Ce[`val_${$t.metricsNames[un]}`]=Ge[un]}break}if($t.stopTraining_)break}if(yield We.onEpochEnd(Je,Ce),Je++,$t.stopTraining_)break}return yield We.onTrainEnd(),yield $t.history.syncData(),$t.history}finally{$t.isTraining=!1}})).apply(this,arguments)}function Ie($t){return"function"==typeof $t.iterator}function Jt(){return(Jt=(0,e.A)(function*($t,Vt,G){const ct=null!=(G=G||{}).batches,vt=$t.testFunction;let Tt=[];if(G.verbose>0)throw new c.EH("Verbose mode is not implemented yet.");s.ZSL.assert(!ct||G.batches>0&&Number.isInteger(G.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(G.batches)}`);const It=function Ct($t){return"function"==typeof $t.next}(Vt)?Vt:yield Vt.iterator();let bt=0,Mt=0;for(;!ct||Mt<G.batches;){const ce=yield It.next();if(Tt=s.DZQ(()=>{if(ce.value){const{xs:ge,ys:Se}=ue($t,ce.value),We=ge.concat(Se),Ue=s.DZQ(()=>vt(We));if(s.ASo(We),0===Mt)for(let be=0;be<Ue.length;++be)Tt.push((0,s.d_2)(0));const Je=We[0].shape[0];for(let be=0;be<Ue.length;++be){const Ce=Ue[be],qe=Tt[be];Tt[be]=s.DZQ(()=>s.WQq(Tt[be],s.lKK(Je,Ce))),Mt>0&&s.ASo(qe)}s.ASo(Ue),bt+=Je,++Mt}return Tt}),ce.done){ct&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${G.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let ce=0;ce<Tt.length;++ce){const ge=Tt[ce];Tt[ce]=s.y4m(Tt[ce],bt),s.ASo(ge)}return(0,D.wL)(Tt)})).apply(this,arguments)}function pe($t){s.ZSL.assert($t>0&&Number.isInteger($t),()=>`batchSize is required to be a positive integer, but got ${$t}`)}function ze($t,Vt,G){return null==$t?[null]:Array.isArray($t)?$t.map(ct=>(0,l.Dh)(ct,Vt,G-Vt)):(0,l.Dh)($t,Vt,G-Vt)}function an($t,Vt){return s.DZQ(()=>null==$t?null:Array.isArray($t)?$t.map(G=>an(G,Vt)):(0,l.kg)($t,"int32"===Vt.dtype?Vt:s.wgE(Vt,"int32")))}function vn($t,Vt){const G=[];let ct=0,vt=null;for(;ct<$t;)vt=ct+Vt,vt>=$t&&(vt=$t),G.push([ct,vt]),ct=vt;return G}function mn($t){const Vt=[];$t instanceof s.qYS&&($t=[$t]);for(let G=0;G<$t.length;++G){const ct=$t[G];if(1===ct.rank)Vt.push((0,l.UG)(ct,1));else{if(0===ct.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");Vt.push(ct)}}return Vt}function hn($t,Vt){if(null==$t)return;const G=[];if(Vt instanceof s.qYS)G.push(Vt.id);else if(Array.isArray(Vt))Vt.forEach(vt=>G.push(vt.id));else if(null!=Vt)for(const vt in Vt)G.push(Vt[vt].id);const ct=[];if($t instanceof s.qYS)-1===G.indexOf($t.id)&&ct.push($t);else if(Array.isArray($t))$t.forEach(vt=>{-1===G.indexOf(vt.id)&&ct.push(vt)});else if(null!=$t)for(const vt in $t){const Tt=$t[vt];-1===G.indexOf(Tt.id)&&ct.push(Tt)}ct.forEach(vt=>{vt.isDisposed||vt.dispose()})}function wn($t){return Array.isArray($t)}function Gn($t){return!function $n($t){return $t instanceof s.qYS}($t)&&!wn($t)}function jn($t,Vt,G,ct=!0,vt=""){if(null==Vt||0===Vt.length){if(null!=$t){let It=!1;if(wn($t)&&$t.length>0)It=!0;else if(Gn($t)){for(const bt in $t)if($t.hasOwnProperty(bt)){It=!0;break}}else It=!0;if(It)throw new c.Qp(`Error when checking model ${vt} expected no data, but got ${$t}`)}return[]}if(null==$t)return Vt.map(It=>null);let Tt;if(Gn($t)){Tt=[];for(const It of Vt){if(null==$t[It])throw new c.Qp(`No data provided for "${It}". Need data for each key in: ${Vt}`);Tt.push($t[It])}}else if(wn($t)){if($t.length!==Vt.length)throw new c.Qp(`Error when checking model ${vt}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${Vt.length} Tensor(s), but instead got the following list of Tensor(s): ${$t}`);Tt=$t}else{if(Vt.length>1)throw new c.Qp(`The model ${vt} expects ${Vt.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${$t.shape}`);Tt=[$t]}if(Tt=mn(Tt),null!=G)for(let It=0;It<Vt.length;++It){if(null==G[It])continue;const bt=Tt[It];if(bt.shape.length!==G[It].length)throw new c.Qp(`Error when checking ${vt}: expected ${Vt[It]} to have ${G[It].length} dimension(s). but got array with shape ${bt.shape}`);for(let Mt=0;Mt<G[It].length;++Mt){if(0===Mt&&!ct)continue;const ge=G[It][Mt];if(null!=ge&&ge>=0&&bt.shape[Mt]!==ge)throw new c.Qp(`${vt} expected a batch of elements where each example has shape [${G[It].slice(1,G[It].length)}] (i.e.,tensor shape [*,${G[It].slice(1,G[It].length)}]) but the ${vt} received an input with ${bt.shape[0]} examples, each with shape [${bt.shape.slice(1,bt.shape.length)}] (tensor shape [${bt.shape}])`)}}return Tt}function Es($t,Vt,G,ct=!0,vt=""){let Tt;if(Array.isArray($t)){if($t.length!==Vt.length)throw new c.Qp(`Error when checking model ${vt}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${Vt.length} Tensor(s), but instead got ${$t.length} Tensors(s).`);Tt=$t}else{if(Vt.length>1)throw new c.Qp(`The model expects ${Vt.length} ${vt} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify($t.shape)}.`);Tt=[$t]}if(null!=G)for(let It=0;It<Vt.length;++It){if(null==G[It])continue;const bt=Tt[It];if(bt.shape.length!==G[It].length)throw new c.Qp(`Error when checking ${vt}: expected ${Vt[It]} to have ${G[It].length} dimension(s), but got array with shape ${JSON.stringify(bt.shape)}`);for(let Mt=0;Mt<G[It].length;++Mt){if(0===Mt&&!ct)continue;const ge=G[It][Mt];if(null!=ge&&ge!==bt.shape[Mt])throw new c.Qp(`Error when checking ${vt}: expected ${Vt[It]} to have shape ${JSON.stringify(G[It])} but got array with shape ${JSON.stringify(bt.shape)}.`)}}}let ps=(()=>{class $t extends ot{constructor(G){super(G),this.isTraining=!1}summary(G,ct,vt=console.log){if(!this.built)throw new c.Qp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function b($t,Vt,G,ct=console.log){const vt=function H($t){let Vt=!0;const G=[],ct=[];for(const vt in $t.nodesByDepth)G.push($t.nodesByDepth[vt]);for(const vt of G){if(vt.length>1||1===vt.length&&vt[0].inboundLayers.length>1){Vt=!1;break}ct.push(...vt)}if(Vt)for(const vt of $t.layers){let Tt=!1;for(const It of vt.inboundNodes)if(-1!==ct.indexOf(It)){if(Tt){Vt=!1;break}Tt=!0}if(!Vt)break}return Vt}($t),Tt=["Layer (type)","Input Shape","Output shape","Param #"];let It;if(vt?(Vt=Vt||90,G=G||[.32,.61,.89,1]):(Vt=Vt||115,G=G||[.24,.48,.7,.8,1]),G[G.length-1]<=1&&(G=G.map(ge=>Math.floor(Vt*ge))),!vt){Tt.push("Receives inputs"),It=[];for(const ge in $t.nodesByDepth)It.push(...$t.nodesByDepth[ge])}ct("_".repeat(Vt)),j(Tt,G,ct),ct("=".repeat(Vt));const bt=$t.layers;for(let ge=0;ge<bt.length;++ge)vt?F(bt[ge],G,ct):B(bt[ge],G,It,ct),ct((ge===bt.length-1?"=":"_").repeat(Vt));$t.checkTrainableWeightsConsistency();const Mt=function w($t){let Vt;return Vt=(0,S.Y)(null!=$t.collectedTrainableWeights?$t.collectedTrainableWeights:$t.trainableWeights),Vt}($t),ce=(0,S.Y)($t.nonTrainableWeights);ct(`Total params: ${Mt+ce}`),ct(`Trainable params: ${Mt}`),ct(`Non-trainable params: ${ce}`),ct("_".repeat(Vt))}(this,G,ct,vt)}compile(G){if(null==G.loss&&(G.loss=[]),this.loss=G.loss,"string"==typeof G.optimizer)this.optimizer_=function u($t){const Vt={Adagrad:()=>s.BaG.adagrad(.01),Adadelta:()=>s.BaG.adadelta(1,.95,(0,p.Ni)()),Adam:()=>s.BaG.adam(.001,.9,.999,(0,p.Ni)()),Adamax:()=>s.BaG.adamax(.002,.9,.999,(0,p.Ni)(),0),RMSProp:()=>s.BaG.rmsprop(.001,.9,0,(0,p.Ni)()),SGD:()=>s.BaG.sgd(.01)};if(Vt.adagrad=Vt.Adagrad,Vt.adadelta=Vt.Adadelta,Vt.adam=Vt.Adam,Vt.adamax=Vt.Adamax,Vt.rmsprop=Vt.RMSProp,Vt.sgd=Vt.SGD,$t in Vt)return Vt[$t]();throw new c.Qp(`Unknown Optimizer ${$t}`)}(G.optimizer),this.isOptimizerOwned=!0;else{if(!(G.optimizer instanceof s.ELo))throw new c.Qp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=G.optimizer,this.isOptimizerOwned=!1}let ct=[];if(Array.isArray(G.loss)||"string"==typeof G.loss||"function"==typeof G.loss)if(Array.isArray(G.loss)){if(G.loss.length!==this.outputs.length)throw new c.Qp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${G.loss}.`);ct=G.loss.map(Mt=>h.Jt(Mt))}else{const bt=h.Jt(G.loss);this.outputs.forEach(Mt=>{ct.push(bt)})}else{G.loss=G.loss;for(const bt in G.loss)if(-1===this.outputNames.indexOf(bt))throw new c.Qp(`Unknown entry in loss dictionary: "${bt}". Only expected the following keys: ${this.outputNames}`);for(const bt of this.outputNames)null==G.loss[bt]&&console.warn(`Output "${bt}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${bt} during training`),ct.push(h.Jt(G.loss[bt]))}this.lossFunctions=ct,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let bt=0;bt<this.outputs.length;++bt){const Mt=this.internalOutputShapes[bt];this.feedOutputNames.push(this.outputNames[bt]),this.feedOutputShapes.push(Mt),this.feedLossFns.push(this.lossFunctions[bt])}const vt=[];this.metrics=G.metrics,this.metricsNames=["loss"],this.metricsTensors=[],(0,g.IU)("loss",()=>{for(let bt=0;bt<this.outputs.length;++bt)-1===vt.indexOf(bt)&&this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[bt],bt]),this.metricsNames.push(this.outputNames[bt]+"_loss"))});const Tt=function ws($t,Vt){if(null==$t||Array.isArray($t)&&0===$t.length)return Vt.map(ct=>[]);let G;if("string"==typeof $t||"function"==typeof $t)G=[$t];else{if(!Array.isArray($t)&&"object"!=typeof $t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${$t}`);G=$t}if(Array.isArray(G))return Vt.map(ct=>G);{const ct=[];for(const vt of Vt){let Tt=G.hasOwnProperty(vt)?G[vt]:[];Array.isArray(Tt)||(Tt=[Tt]),ct.push(Tt)}return ct}}(G.metrics,this.outputNames),It=(bt,Mt,ce)=>{this.outputNames.length>1&&(Mt=this.outputNames[bt]+"_"+Mt),this.metricsNames.push(Mt),this.metricsTensors.push([ce,bt])};(0,g.IU)("metric",()=>{for(let bt=0;bt<this.outputs.length;++bt)-1===vt.indexOf(bt)&&(ge=>{let We,Ue,Je;for(const be of ge){if("string"==typeof be&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(be)){const qe=this.internalOutputShapes[bt];let xe;1===qe[qe.length-1]||this.lossFunctions[bt]===h.Jc?-1!==["accuracy","acc"].indexOf(be)?Ue=f.xM:-1!==["crossentropy","ce"].indexOf(be)&&(Ue=f.Jc):this.lossFunctions[bt]===h.qp?-1!==["accuracy","acc"].indexOf(be)?Ue=f.qv:-1!==["crossentropy","ce"].indexOf(be)&&(Ue=f.qp):-1!==["accuracy","acc"].indexOf(be)?Ue=f.yP:-1!==["crossentropy","ce"].indexOf(be)&&(Ue=f.Ol),-1!==["accuracy","acc"].indexOf(be)?xe="acc":-1!==["crossentropy","ce"].indexOf(be)&&(xe="ce"),Je=Ue,We=""+xe}else Je=f.Jt(be),We=""+f.GT(be);let Ce;(0,g.IU)(We,()=>{Ce=Je}),It(bt,We,Ce)}})(Tt[bt])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(G,ct,vt={}){const Tt=null==vt.batchSize?32:vt.batchSize;pe(Tt);const bt=this.standardizeUserDataXY(G,ct,!0,Tt);try{const Mt=bt[0].concat(bt[1]);this.makeTestFunction();const ge=this.testLoop(this.testFunction,Mt,Tt,vt.verbose,vt.steps);return(0,D.wL)(ge)}finally{hn(bt[0],G),hn(bt[1],ct)}}evaluateDataset(G,ct){var vt=this;return(0,e.A)(function*(){return vt.makeTestFunction(),function zt($t,Vt,G){return Jt.apply(this,arguments)}(vt,G,ct)})()}checkNumSamples(G,ct,vt,Tt="steps"){let It;if(null!=vt){if(It=null,null!=ct)throw new c.Qp(`If ${Tt} is set, batchSize must be null or undefined.Got batchSize = ${ct}`)}else{if(null==G)throw new c.Qp(`Either the input data should have a defined shape, or ${Tt} shoud be specified.`);It=Array.isArray(G)?G[0].shape[0]:G.shape[0]}return It}execute(G,ct){if(Array.isArray(ct)&&0===ct.length)throw new c.Qp("`outputs` is an empty Array, which is not allowed.");const vt=Array.isArray(ct),It=this.retrieveSymbolicTensors(vt?ct:[ct]),bt=new Z.RW;if(G instanceof s.qYS&&(G=[G]),Array.isArray(G)){if(G.length!==this.inputs.length)throw new c.Qp(`The number of inputs provided (${G.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let ce=0;ce<this.inputs.length;++ce)bt.add(this.inputs[ce],G[ce])}else for(const ce of this.inputs){const ge=G[ce.name];if(null==ge)throw new c.Qp(`No value is provided for the model's input ${ce.name}`);bt.add(ce,ge)}const Mt=(0,Z.g7)(It,bt);return vt?Mt:Mt[0]}retrieveSymbolicTensors(G){const ct=(0,D.fD)(null,G.length);let vt=G.length;for(const Tt of this.layers){const It=Array.isArray(Tt.output)?Tt.output:[Tt.output],bt=It.map(Mt=>Mt.name);for(let Mt=0;Mt<G.length;++Mt){const ce=bt.indexOf(G[Mt]);if(-1!==ce&&(ct[Mt]=It[ce],vt--),0===vt)break}if(0===vt)break}if(vt>0){const Tt=[];throw ct.forEach((It,bt)=>{null==It&&Tt.push(G[bt])}),new c.Qp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(Tt)}`)}return ct}predictLoop(G,ct=32,vt=!1){return s.DZQ(()=>{const Tt=this.checkNumSamples(G);if(vt)throw new c.EH("Verbose predictLoop() is not implemented yet.");const It=vn(Tt,ct),bt=this.outputs.map(Mt=>[]);for(let Mt=0;Mt<It.length;++Mt)s.DZQ(()=>{const We=ze(G,It[Mt][0],It[Mt][1]),Ue=[];if(Array.isArray(We))for(let be=0;be<We.length;++be)Ue.push({key:this.inputs[be],value:We[be]});else Ue.push({key:this.inputs[0],value:We});const Je=new Z.RW(Ue);return(0,Z.g7)(this.outputs,Je)}).forEach((ge,Se)=>bt[Se].push(ge));return(0,D.wL)(bt.map(Mt=>s.xWs(Mt,0)))})}predict(G,ct={}){const vt=mn(G);Es(vt,this.inputNames,this.feedInputShapes,!1);try{const Tt=null==ct.batchSize?32:ct.batchSize;return pe(Tt),this.predictLoop(vt,Tt)}finally{hn(vt,G)}}predictOnBatch(G){Es(G,this.inputNames,this.feedInputShapes,!0);const ct=(Array.isArray(G)?G[0]:G).shape[0];return this.predictLoop(G,ct)}standardizeUserDataXY(G,ct,vt=!0,Tt){if(null==this.optimizer_)throw new c.bu("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const It=[];for(let bt=0;bt<this.feedOutputShapes.length;++bt){const Mt=this.feedOutputShapes[bt];It.push(this.feedLossFns[bt]===h.qp?Mt.slice(0,Mt.length-1).concat([1]):Mt)}if(function ls($t,Vt){const ct=(0,D.Am)($t.map(Tt=>Tt.shape[0]));ct.sort();const vt=(0,D.Am)(Vt.map(Tt=>Tt.shape[0]));if(vt.sort(),ct.length>1)throw new c.Qp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify($t.map(Tt=>Tt.shape))}`);if(vt.length>1)throw new c.Qp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(Vt.map(Tt=>Tt.shape))}`);if(ct.length>0&&vt.length>0&&!s.ZSL.arraysEqual(ct,vt))throw new c.Qp(`Input Tensors should have the same number of samples as target Tensors. Found ${ct[0]} input sample(s) and ${vt[0]} target sample(s).`)}(G=jn(G,this.feedInputNames,this.feedInputShapes,!1,"input"),ct=jn(ct,this.feedOutputNames,It,!1,"target")),function ts($t,Vt,G){const ct=[h.bt,h.Jc,h.Ol];for(let vt=0;vt<$t.length;++vt){const Tt=$t[vt],It=Vt[vt],bt=G[vt];if(null!=It){if(It===h.Ol&&1===Tt.shape[Tt.shape.length-1])throw new c.Qp(`You are passing a target array of shape ${Tt.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==ct.indexOf(It)){const Mt=Tt.shape.slice(1),ce=bt.slice(1);for(let ge=0;ge<Mt.length;++ge){const We=ce[ge];if(null!=We&&Mt[ge]!==We)throw new c.Qp(`A target Tensor with shape ${Tt.shape} was passed for an output of shape ${bt}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(ct,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=Tt&&Tt>0&&G[0].shape[0]%Tt!=0)throw new c.Qp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${Tt}. Found: ${G[0].shape[0]} sample(s).`);return[G,ct]}standardizeUserData(G,ct,vt,Tt){var It=this;return(0,e.A)(function*(bt,Mt,ce,ge,Se=!0,We){const[Ue,Je]=It.standardizeUserDataXY(bt,Mt,Se,We);if(null!=ce)throw new Error("sample weight is not supported yet.");let be=null;if(null!=ge){const Ce=et(ge,It.outputNames);be=[];for(let qe=0;qe<Ce.length;++qe)be.push(yield mt(Je[qe],null,Ce[qe]))}return[Ue,Je,be]}).apply(this,arguments)}testLoop(G,ct,vt,Tt=0,It){return s.DZQ(()=>{const bt=this.checkNumSamples(ct,vt,It,"steps"),Mt=[];if(Tt>0)throw new c.EH("Verbose mode is not implemented yet.");if(null!=It)throw new c.EH("steps mode in testLoop() is not implemented yet");{const ce=vn(bt,vt),ge=(0,s.tGX)((0,A.y1)(0,bt));for(let Se=0;Se<ce.length;++Se){const We=ce[Se][0],Ue=ce[Se][1],Je=l.Dh(ge,We,Ue-We),be=an(ct,Je),Ce=G(be);if(0===Se)for(let qe=0;qe<Ce.length;++qe)Mt.push((0,s.d_2)(0));for(let qe=0;qe<Ce.length;++qe)Mt[qe]=s.WQq(Mt[qe],s.lKK(Ue-We,Ce[qe]))}for(let Se=0;Se<Mt.length;++Se)Mt[Se]=s.y4m(Mt[Se],bt)}return Mt})}getDedupedMetricsNames(){const G=this.metricsNames,ct=[];for(let vt=0;vt<G.length;++vt){const Tt=G[vt];let It=Tt;(0,D.U9)(G,Tt)>1&&(It+=`_${(0,D.U9)(G.slice(0,vt),Tt)}`),ct.push(It)}return ct}makeTrainFunction(){return G=>{const ct=[],vt=G.slice(0,this.inputs.length),Tt=G.slice(this.inputs.length,this.inputs.length+this.outputs.length),It=G.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),bt=[],ce=this.collectedTrainableWeights.map(We=>We.read());return[this.optimizer_.minimize(()=>{const We=[];for(let Ce=0;Ce<this.inputs.length;++Ce)We.push({key:this.inputs[Ce],value:vt[Ce]});const Ue=new Z.RW(We),Je=(0,Z.g7)(this.outputs,Ue,{training:!0});let be;for(let Ce=0;Ce<this.lossFunctions.length;++Ce){let xe=(0,this.lossFunctions[Ce])(Tt[Ce],Je[Ce]);null!=It[Ce]&&(xe=se(xe,It[Ce]));const nn=s.i2o(xe);ct.push(nn),be=0===Ce?xe:s.WQq(be,xe)}for(let Ce=0;Ce<this.metricsTensors.length;++Ce){let qe;if(this.outputs.length>1&&Ce<this.outputs.length)qe=ct[Ce];else{const nn=this.metricsTensors[Ce][1];qe=s.i2o((0,this.metricsTensors[Ce][0])(Tt[nn],Je[nn]))}s.aCs(qe),bt.push(qe)}return be=s.i2o(be),this.calculateLosses().forEach(Ce=>{be=s.WQq(be,Ce)}),be},!0,ce)].concat(bt)}}makeTestFunction(){this.testFunction=G=>s.DZQ(()=>{const ct=[];let vt;const Tt=G.slice(0,this.inputs.length),It=G.slice(this.inputs.length,this.inputs.length+this.outputs.length),bt=[];for(let ge=0;ge<this.inputs.length;++ge)bt.push({key:this.inputs[ge],value:Tt[ge]});const Mt=new Z.RW(bt),ce=(0,Z.g7)(this.outputs,Mt);for(let ge=0;ge<this.lossFunctions.length;++ge){const We=s.i2o((0,this.lossFunctions[ge])(It[ge],ce[ge]));vt=0===ge?We:s.WQq(vt,We),ct.push(vt)}for(let ge=0;ge<this.metricsTensors.length;++ge){const We=this.metricsTensors[ge][1],Ue=s.i2o((0,this.metricsTensors[ge][0])(It[We],ce[We]));ct.push(Ue)}return ct})}fit(G,ct){var vt=this;return(0,e.A)(function*(Tt,It,bt={}){if(vt.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let Mt,ce,ge,Se,We,Ue,Je,be,Ce;vt.isTraining=!0;try{const qe=null==bt.batchSize?32:bt.batchSize;pe(qe);const nn=yield vt.standardizeUserData(Tt,It,bt.sampleWeight,bt.classWeight,!1,qe);Mt=nn[0],ce=nn[1],Ce=nn[2];let un,Ge=!1;if(null!=bt.validationData&&bt.validationData.length>0){if(Ge=!0,2!==bt.validationData.length)throw 3===bt.validationData.length?new c.EH("validationData including sample weights is not supported yet."):new c.Qp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${bt.validationData} is invalid.`);We=bt.validationData[0],Ue=bt.validationData[1];const ms=yield vt.standardizeUserData(We,Ue,null,null,!0,qe);Je=ms[0],be=ms[1],un=Je.concat(be)}else if(null!=bt.validationSplit&&bt.validationSplit>0&&bt.validationSplit<1){Ge=!0;const hs=Math.floor(Mt[0].shape[0]*(1-bt.validationSplit)),ms=Mt[0].shape[0];Je=ze(Mt,hs,ms),ge=Mt,Mt=ze(Mt,0,hs),be=ze(ce,hs,ms),Se=ce,ce=ze(ce,0,hs),un=Je.concat(be)}else null!=bt.validationSteps&&(Ge=!0);const An=Mt.concat(ce).concat(Ce);vt.checkTrainableWeightsConsistency();const Vn=vt.makeTrainFunction(),Rn=vt.getDedupedMetricsNames();let ns,Wn;Ge?(vt.makeTestFunction(),ns=vt.testFunction,Wn=Rn.slice().concat(Rn.map(hs=>"val_"+hs))):(ns=null,un=[],Wn=Rn.slice());const Xn=(0,E.Eq)(bt.callbacks,bt.yieldEvery);return yield vt.fitLoop(Vn,An,Rn,qe,bt.epochs,bt.verbose,Xn,ns,un,bt.shuffle,Wn,bt.initialEpoch,null,null)}finally{vt.isTraining=!1,hn(Mt,Tt),hn(ce,It),hn(ge,Tt),hn(Se,It),hn(Je,We),hn(be,Ue),null!=Ce&&s.ASo(Ce)}}).apply(this,arguments)}fitLoop(G,ct,vt,Tt,It,bt,Mt,ce,ge,Se,We,Ue,Je,be){var Ce=this;return(0,e.A)(function*(){null==Tt&&(Tt=32),null==It&&(It=1),null==Se&&(Se=!0),null==Ue&&(Ue=0);let qe=!1;if(null!=ce&&null!=ge&&(qe=!0),null!=be&&(qe=!0,null==Je))throw new c.Qp("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const xe=Ce.checkNumSamples(ct,Tt,Je,"steps_per_epoch");let nn;null!=xe&&(nn=(0,A.y1)(0,xe)),null==bt&&(bt=1);const{callbackList:Ge,history:un}=(0,E.dY)(Mt,bt,It,Ue,xe,Je,Tt,qe,We);Ge.setModel(Ce),Ce.history=un,yield Ge.onTrainBegin(),Ce.stopTraining_=!1;for(let An=Ue;An<It;++An){yield Ge.onEpochBegin(An);const Vn={};if(null!=Je)throw new c.EH("stepsPerEpoch mode is not implemented yet.");{if("batch"===Se)throw new c.EH("batch shuffling is not implemneted yet");Se&&s.ZSL.shuffle(nn);const Rn=(0,s.tGX)(nn),ns=vn(xe,Tt);for(let Wn=0;Wn<ns.length;++Wn){const Xn={};if(yield Ge.onBatchBegin(Wn,Xn),s.DZQ(()=>{const _s=ns[Wn][0],hs=ns[Wn][1],ms=l.Dh(Rn,_s,hs-_s);Xn.batch=Wn,Xn.size=hs-_s;const Xs=an(ct,ms),Qs=G(Xs);for(let Ps=0;Ps<vt.length;++Ps){const Bs=Qs[Ps];Xn[vt[Ps]]=Bs,s.aCs(Bs)}if(Wn===ns.length-1&&qe){const Ps=Ce.testLoop(ce,ge,Tt);for(let vs=0;vs<vt.length;++vs){const Bs=vt[vs],Ks=Ps[vs];s.aCs(Ks),Vn["val_"+Bs]=Ks}}}),yield Ge.onBatchEnd(Wn,Xn),(0,m.i)(Xn),Ce.stopTraining_)break}Rn.dispose()}if(yield Ge.onEpochEnd(An,Vn),Ce.stopTraining_)break}return yield Ge.onTrainEnd(),yield Ce.history.syncData(),Ce.history})()}fitDataset(G,ct){var vt=this;return(0,e.A)(function*(){return function ae($t,Vt,G){return ne.apply(this,arguments)}(vt,G,ct)})()}trainOnBatch(G,ct){var vt=this;return(0,e.A)(function*(){const Tt=yield vt.standardizeUserData(G,ct),It=Tt[0],bt=Tt[1],ce=vt.makeTrainFunction()(It.concat(bt)),ge=[];for(const Se of ce){const We=yield Se.data();ge.push(We[0])}return s.ASo(ce),hn(Tt[0],G),hn(Tt[1],ct),(0,D.wL)(ge)})()}getNamedWeights(G){const ct=[],vt=null!=G&&G.trainableOnly,Tt=vt?this.trainableWeights:this.weights,It=this.getWeights(vt);for(let bt=0;bt<Tt.length;++bt)vt&&!Tt[bt].trainable||ct.push({name:Tt[bt].originalName,tensor:It[bt]});return ct}set stopTraining(G){this.stopTraining_=G}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(G){this.optimizer_!==G&&(this.optimizer_=G,this.isOptimizerOwned=!1)}dispose(){const G=super.dispose();if(0===G.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const ct=s.m1Z().numTensors;this.optimizer_.dispose(),G.numDisposedVariables+=ct-s.m1Z().numTensors}return G}getLossIdentifiers(){let G;if("string"==typeof this.loss)G=(0,D.uc)(this.loss);else if(Array.isArray(this.loss)){for(const ct of this.loss)if("string"!=typeof ct)throw new Error("Serialization of non-string loss is not supported.");G=this.loss.map(ct=>(0,D.uc)(ct))}else{const ct=Object.keys(this.loss);G={};const vt=this.loss;for(const Tt of ct){if("string"!=typeof vt[Tt])throw new Error("Serialization of non-string loss is not supported.");G[Tt]=(0,D.uc)(vt[Tt])}}return G}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[(0,D.uc)(f.GT(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(G=>(0,D.uc)(f.GT(G)));{const G={};for(const ct in this.metrics)G[ct]=(0,D.uc)(f.GT(this.metrics[ct]));return G}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(G){if(null!=G.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=G.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=G.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const ct=(0,k.w)(G.optimizer_config),vt=(0,y.i)(ct);let Tt,It;if("string"==typeof G.loss)Tt=(0,D.Cb)(G.loss);else if(Array.isArray(G.loss))Tt=G.loss.map(bt=>(0,D.Cb)(bt));else if(null!=G.loss){Tt={};for(const bt in G.loss)Tt[bt]=(0,D.Cb)(G.loss[bt])}if(Array.isArray(G.metrics))It=G.metrics.map(bt=>(0,D.Cb)(bt));else if(null!=G.metrics){It={};for(const bt in G.metrics)It[bt]=(0,D.Cb)(G.metrics[bt])}this.compile({loss:Tt,metrics:It,optimizer:vt})}save(G,ct){var vt=this;return(0,e.A)(function*(){if("string"==typeof G){const Se=s.io.getSaveHandlers(G);if(0===Se.length)throw new c.Qp(`Cannot find any save handlers for URL '${G}'`);if(Se.length>1)throw new c.Qp(`Found more than one (${Se.length}) save handlers for URL '${G}'`);G=Se[0]}if(null==G.save)throw new c.Qp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const Tt=yield s.io.encodeWeights(vt.getNamedWeights(ct)),ce={modelTopology:vt.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${x.r}`,convertedBy:null};if(null!=ct&&ct.includeOptimizer&&null!=vt.optimizer){ce.trainingConfig=vt.getTrainingConfig();const Se="optimizer",{data:We,specs:Ue}=yield s.io.encodeWeights(yield vt.optimizer.getWeights(),Se);Tt.specs.push(...Ue),Tt.data=s.io.concatenateArrayBuffers([Tt.data,We])}return null!=vt.userDefinedMetadata&&(C(vt.userDefinedMetadata,vt.name,!0),ce.userDefinedMetadata=vt.userDefinedMetadata),ce.weightData=Tt.data,ce.weightSpecs=Tt.specs,G.save(ce)})()}setUserDefinedMetadata(G){C(G,this.name),this.userDefinedMetadata=G}getUserDefinedMetadata(){return this.userDefinedMetadata}}return $t.className="Model",$t})();s.JFn.registerClass(ps),s.JFn.registerClass((()=>{class $t extends ps{}return $t.className="Functional",$t})())},42946:(pt,R,t)=>{"use strict";t.d(R,{EH:()=>E,Qp:()=>l,bu:()=>s,l7:()=>e,pf:()=>g});class e extends Error{constructor(m){super(m),Object.setPrototypeOf(this,e.prototype)}}class s extends Error{constructor(m){super(m),Object.setPrototypeOf(this,s.prototype)}}class l extends Error{constructor(m){super(m),Object.setPrototypeOf(this,l.prototype)}}class E extends Error{constructor(m){super(m),Object.setPrototypeOf(this,E.prototype)}}class g extends Error{constructor(m){super(m),Object.setPrototypeOf(this,g.prototype)}}Error},15293:(pt,R,t)=>{"use strict";t(67165)},91584:(pt,R,t)=>{"use strict";t(7257)},39416:(pt,R,t)=>{"use strict";t(55294),t(98552)},40183:(pt,R,t)=>{"use strict";t(48631)},73112:(pt,R,t)=>{"use strict";t(59352)},50531:(pt,R,t)=>{"use strict";var e=t(41653),s=t(10281);(0,e._K2)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,s.oR)},7257:(pt,R,t)=>{"use strict";t.d(R,{H4:()=>u,sN:()=>C,Fe:()=>at,zo:()=>it});var e=t(41653),s=t(99198),l=t(9980),E=t(42946);const g=["fanIn","fanOut","fanAvg"],c=["normal","uniform","truncatedNormal"];var m=t(24503),h=t(89119);class u extends e.JFn.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}e.JFn.registerClass((()=>{class q extends u{apply(rt,et){return(0,e.Ul9)(rt,et)}}return q.className="Zeros",q})());let C=(()=>{class q extends u{apply(rt,et){return(0,e.SaS)(rt,et)}}return q.className="Ones",q})();e.JFn.registerClass(C),e.JFn.registerClass((()=>{class q extends u{constructor(rt){if(super(),"object"!=typeof rt)throw new E.Qp(`Expected argument of type ConstantConfig but got ${rt}`);if(void 0===rt.value)throw new E.Qp(`config must have value set but got ${rt}`);this.value=rt.value}apply(rt,et){return(0,e.DZQ)(()=>(0,e.lKK)((0,e.d_2)(this.value),(0,e.SaS)(rt,et)))}getConfig(){return{value:this.value}}}return q.className="Constant",q})()),e.JFn.registerClass((()=>{class q extends u{constructor(rt){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=rt.minval||this.DEFAULT_MINVAL,this.maxval=rt.maxval||this.DEFAULT_MAXVAL,this.seed=rt.seed}apply(rt,et){return(0,e.YeY)(rt,this.minval,this.maxval,et,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return q.className="RandomUniform",q})()),e.JFn.registerClass((()=>{class q extends u{constructor(rt){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=rt.mean||this.DEFAULT_MEAN,this.stddev=rt.stddev||this.DEFAULT_STDDEV,this.seed=rt.seed}apply(rt,et){if("float32"!==(et=et||"float32")&&"int32"!==et)throw new E.EH(`randomNormal does not support dType ${et}.`);return s.FE(rt,this.mean,this.stddev,et,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return q.className="RandomNormal",q})()),e.JFn.registerClass((()=>{class q extends u{constructor(rt){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=rt.mean||this.DEFAULT_MEAN,this.stddev=rt.stddev||this.DEFAULT_STDDEV,this.seed=rt.seed}apply(rt,et){if("float32"!==(et=et||"float32")&&"int32"!==et)throw new E.EH(`truncatedNormal does not support dType ${et}.`);return(0,e.efE)(rt,this.mean,this.stddev,et,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return q.className="TruncatedNormal",q})()),e.JFn.registerClass((()=>{class q extends u{constructor(rt){super(),this.gain=null!=rt.gain?rt.gain:1}apply(rt,et){return(0,e.DZQ)(()=>{if(2!==rt.length||rt[0]!==rt[1])throw new E.Qp("Identity matrix initializer can only be used for 2D square matrices.");return(0,e.lKK)(this.gain,(0,e.y5U)(rt[0]))})}getConfig(){return{gain:this.gain}}}return q.className="Identity",q})());let j=(()=>{class q extends u{constructor(rt){if(super(),rt.scale<0)throw new E.Qp(`scale must be a positive float. Got: ${rt.scale}`);this.scale=null==rt.scale?1:rt.scale,this.mode=null==rt.mode?"fanIn":rt.mode,function f(q){(0,m.E6)(g,"FanMode",q)}(this.mode),this.distribution=null==rt.distribution?"normal":rt.distribution,function p(q){(0,m.E6)(c,"Distribution",q)}(this.distribution),this.seed=rt.seed}apply(rt,et){const yt=function H(q,ot="channelsLast"){let rt,et;if((0,l.uM)(ot),2===q.length)rt=q[0],et=q[1];else if(-1!==[3,4,5].indexOf(q.length)){if("channelsFirst"===ot){const yt=(0,h.no)(q,2);rt=q[1]*yt,et=q[0]*yt}else if("channelsLast"===ot){const yt=(0,h.no)(q,0,q.length-2);rt=q[q.length-2]*yt,et=q[q.length-1]*yt}}else{const yt=(0,h.no)(q);rt=Math.sqrt(yt),et=Math.sqrt(yt)}return[rt,et]}(rt),mt=yt[0],St=yt[1];let se=this.scale;if(se/="fanIn"===this.mode?Math.max(1,mt):"fanOut"===this.mode?Math.max(1,St):Math.max(1,(mt+St)/2),"normal"===this.distribution){const Ht=Math.sqrt(se);if("float32"!==(et=et||"float32")&&"int32"!==et)throw new E.EH(`${this.getClassName()} does not support dType ${et}.`);return(0,e.efE)(rt,0,Ht,et,this.seed)}{const Ht=Math.sqrt(3*se);return(0,e.YeY)(rt,-Ht,Ht,et,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return q.className="VarianceScaling",q})();e.JFn.registerClass(j);let F=(()=>{class q extends j{constructor(rt){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="GlorotUniform",q})();e.JFn.registerClass(F);let B=(()=>{class q extends j{constructor(rt){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="GlorotNormal",q})();e.JFn.registerClass(B);let A=(()=>{class q extends j{constructor(rt){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="HeNormal",q})();e.JFn.registerClass(A);let k=(()=>{class q extends j{constructor(rt){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="HeUniform",q})();e.JFn.registerClass(k);let x=(()=>{class q extends j{constructor(rt){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="LeCunNormal",q})();e.JFn.registerClass(x);let V=(()=>{class q extends j{constructor(rt){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==rt?null:rt.seed})}getClassName(){return j.className}}return q.className="LeCunUniform",q})();e.JFn.registerClass(V);let W=(()=>{class q extends u{constructor(rt){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==rt.gain?this.DEFAULT_GAIN:rt.gain,this.seed=rt.seed}apply(rt,et){return(0,e.DZQ)(()=>{if(rt.length<2)throw new E.EH("Shape must be at least 2D.");if("int32"!==et&&"float32"!==et&&void 0!==et)throw new TypeError(`Unsupported data type ${et}.`);const yt=e.ZSL.sizeFromShape(rt.slice(0,-1)),mt=rt[rt.length-1],St=yt*mt;St>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${St}) elements: Slowness may result.`);const se=[Math.max(mt,yt),Math.min(mt,yt)],Ht=s.FE(se,0,1,et,this.seed),ue=e.mPL.qr(Ht,!1);let Xt=ue[0];const ae=ue[1].flatten().stridedSlice([0],[Math.min(mt,yt)*Math.min(mt,yt)],[Math.min(mt,yt)+1]);return Xt=(0,e.lKK)(Xt,ae.sign()),yt<mt&&(Xt=Xt.transpose()),(0,e.lKK)((0,e.d_2)(this.gain),Xt.reshape(rt))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return q.className="Orthogonal",q})();e.JFn.registerClass(W);const Y={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Z(q,ot={}){return(0,m.Xv)(q,e.JFn.SerializationMap.getMap().classNameMap,ot,"initializer")}function it(q){return(0,m.k4)(q)}function at(q){if("string"==typeof q){const ot=q in Y?Y[q]:q;if("GlorotNormal"===ot)return new B;if("GlorotUniform"===ot)return new F;if("HeNormal"===ot)return new A;if("HeUniform"===ot)return new k;if("LeCunNormal"===ot)return new x;if("LeCunUniform"===ot)return new V;{const rt={};return rt.className=ot,rt.config={},Z(rt)}}return q instanceof u?q:Z(q)}},89893:(pt,R,t)=>{"use strict";t.d(R,{EY:()=>l,To:()=>e,bb:()=>E,ft:()=>s,r$:()=>g});const e=["channelsFirst","channelsLast"],s=["nearest","bilinear"],l=["valid","same","causal"],E=["max","avg"],g=["sum","mul","concat","ave"]},97301:(pt,R,t)=>{"use strict";t.d(R,{w:()=>g});var e=t(41653),s=t(71936),l=t(42946),E=t(99198);function g(c,y,m,h){let f=(0,s.un)(c);if("int32"!==f.dtype&&(f=E.wg(f,"int32")),"int"===y)return f;const p=f.shape;if(0===f.rank&&(f=(0,e.UG6)(f,-1)),"oneHot"===y&&1!==f.shape[f.shape.length-1]&&(f=(0,e.UG6)(f,-1)),f.rank>2)throw new l.Qp(`When outputMode is not int, maximum output rank is 2 Received outputMode ${y} and input shape ${p} which would result in output rank ${f.rank}.`);const u=["multiHot","oneHot"].includes(y);let C;if(C=(0,e.aOp)(f,typeof h<"u"&&"count"===y?h:[],m,u),"tfIdf"!==y)return C;if(h)return(0,e.lKK)(C,h);throw new l.Qp("When outputMode is 'tfIdf', weights must be provided.")}},53340:(pt,R,t)=>{"use strict";t.d(R,{i:()=>l});var e=t(41653),s=t(24503);function l(E,g={},c=!1){return(0,s.Xv)(E,e.JFn.SerializationMap.getMap().classNameMap,g,"layer",c)}},35814:(pt,R,t)=>{"use strict";t.d(R,{I:()=>l,i:()=>g});var e=t(10467),s=t(41653);function l(c){return E.apply(this,arguments)}function E(){return(E=(0,e.A)(function*(c){if(null==c)return;const y=[],m=[],h=[];for(const f in c){const p=c[f];if("number"!=typeof p){const u=p;y.push(u.data()),m.push(f),h.push(u)}}if(y.length>0){const f=yield Promise.all(y);for(let p=0;p<f.length;++p)c[m[p]]=f[p][0];(0,s.ASo)(h)}})).apply(this,arguments)}function g(c){if(null!=c)for(const y in c){const m=c[y];"number"!=typeof m&&m.dispose()}}},55294:(pt,R,t)=>{"use strict";t.d(R,{Jc:()=>S,Jt:()=>q,Ol:()=>C,Pg:()=>H,SO:()=>at,VW:()=>m,Xv:()=>y,Yq:()=>g,bt:()=>c,qp:()=>T});var e=t(41653),s=t(17513),l=t(99198),E=t(42946);function g(ot,rt){return(0,e.DZQ)(()=>{"float32"!==ot.dtype&&(ot=e.wgE(ot,"float32"));const et=e.czq(l.Ew(ot),rt,!0),yt=e.GSj(et.shape,(0,s.Ni)()),mt=e.RZD(e.PhQ(et,yt));return e.y4m(ot,mt)})}function c(ot,rt){return(0,e.DZQ)(()=>e.i2o(l.Ew(e.jbE(rt,ot)),-1))}function y(ot,rt){return(0,e.DZQ)(()=>e.i2o(e.tnl(e.jbE(rt,ot)),-1))}function m(ot,rt){return(0,e.DZQ)(()=>{const et=e.jbE(ot,rt),yt=e.zQh(e.tnl(ot),(0,s.Ni)(),Number.MAX_VALUE),mt=e.tnl(e.y4m(et,yt));return e.lKK(100,e.i2o(mt,-1))})}function C(ot,rt,et=!1){return(0,e.DZQ)(()=>{if(et)rt=e.Vs9(rt);else{const yt=e.czq(rt,rt.shape.length-1,!0);rt=e.y4m(rt,yt)}return rt=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)()),e.HZy(e.czq(e.lKK(e.wgE(ot,"float32"),e.Rm2(rt)),rt.shape.length-1))})}function T(ot,rt,et=!1){return(0,e.DZQ)(()=>{const yt=e.wgE(e.RIf(l.Bq(ot)),"int32"),mt=(rt=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)())).shape;return C(e.tQQ(e.Mw0(yt,mt[mt.length-1]),mt),rt,et)})}function S(ot,rt){return(0,e.DZQ)(()=>{let et;return et=e.zQh(rt,(0,s.Ni)(),1-(0,s.Ni)()),et=e.Rm2(e.y4m(et,e.jbE(1,et))),e.i2o(function D(ot,rt){if(!e.ZSL.arraysEqual(ot.shape,rt.shape))throw new E.Qp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(ot.shape)} and ${JSON.stringify(rt.shape)}`);return(0,e.DZQ)(()=>{const et=e.VVh(rt),yt=e.HZy(e.tnl(rt));return e.WQq(e.jbE(et,e.lKK(rt,ot)),e.Kko(e.oNF(yt)))})}(ot,et),-1)})}function H(ot,rt){return(0,e.DZQ)(()=>{const et=g(ot,-1),yt=g(rt,-1),mt=e.lKK(et,yt);return e.HZy(e.czq(mt,-1))})}const at={meanSquaredError:c,meanAbsoluteError:y,meanAbsolutePercentageError:m,meanSquaredLogarithmicError:function h(ot,rt){return(0,e.DZQ)(()=>{const et=e.zQh(rt,(0,s.Ni)(),Number.MAX_VALUE),yt=e.Rm2(e.WQq(1,et)),mt=e.zQh(ot,(0,s.Ni)(),Number.MAX_VALUE),St=e.Rm2(e.WQq(1,mt));return e.i2o(l.Ew(e.jbE(yt,St)),-1)})},squaredHinge:function f(ot,rt){return(0,e.DZQ)(()=>{const et=e.PhQ(0,e.jbE(1,e.lKK(ot,rt)));return e.i2o(l.Ew(et),-1)})},hinge:function p(ot,rt){return(0,e.DZQ)(()=>{const et=e.PhQ(0,e.jbE(1,e.lKK(ot,rt)));return e.i2o(et,-1)})},categoricalHinge:function u(ot,rt){return(0,e.DZQ)(()=>{const et=e.czq(e.lKK(ot,rt),-1),yt=e.T9B(e.lKK(e.jbE(1,ot),rt),-1);return e.PhQ(0,e.WQq(1,e.jbE(yt,et)))})},logcosh:function d(ot,rt){return(0,e.DZQ)(()=>{const et=Math.log(2),yt=e.jbE(rt,ot),mt=e.jbE(e.WQq(yt,e.lw0(e.lKK(-2,yt))),et);return e.i2o(mt,-1)})},categoricalCrossentropy:C,sparseCategoricalCrossentropy:T,binaryCrossentropy:S,kullbackLeiblerDivergence:function b(ot,rt){return(0,e.DZQ)(()=>{const et=e.zQh(ot,(0,s.Ni)(),1),yt=e.zQh(rt,(0,s.Ni)(),1);return e.czq(e.lKK(ot,e.Rm2(e.y4m(et,yt))),-1)})},poisson:function w(ot,rt){return(0,e.DZQ)(()=>{const et=e.Rm2(e.WQq((0,s.Ni)(),rt));return e.i2o(e.jbE(rt,e.lKK(ot,et)),-1)})},cosineProximity:H};function q(ot){if("string"==typeof ot){if(ot in at)return at[ot];let rt=`Unknown loss ${ot}`;throw ot.toLowerCase().includes("softmaxcrossentropy")&&(rt=`Unknown loss ${ot}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new E.Qp(rt)}return ot}},98552:(pt,R,t)=>{"use strict";t.d(R,{GT:()=>Y,Jc:()=>d,Jt:()=>W,Ol:()=>A,qp:()=>x,qv:()=>C,xM:()=>c,yP:()=>y});var e=t(41653),s=t(99198),l=t(42946),E=t(55294),g=t(24503);function c(Z,it){return(0,e.DZQ)(()=>{const at=e.lKK(.5,e.P61(it)),q=s.wg(e.rhj(it,at),Z.dtype);return e.i2o(e.LCg(Z,q),-1)})}function y(Z,it){return(0,e.DZQ)(()=>s.wg(e.LCg(e.FLi(Z,-1),e.FLi(it,-1)),"float32"))}function d(Z,it){return(0,E.Jc)(Z,it)}function C(Z,it){return Z.rank===it.rank&&(Z=e.r2V(Z,[Z.rank-1])),(it=e.FLi(it,-1)).dtype!==Z.dtype&&(it=e.wgE(it,Z.dtype)),e.wgE(e.LCg(Z,it),"float32")}const A=E.Ol,x=E.qp,V={binaryAccuracy:c,categoricalAccuracy:y,precision:function p(Z,it){return(0,e.DZQ)(()=>{const at=function m(Z,it){return(0,e.DZQ)(()=>e.wgE(e.czq(e.n76(e.LCg(Z,1),e.LCg(it,1))),"float32"))}(Z,it),q=function f(Z,it){return(0,e.DZQ)(()=>e.wgE(e.czq(e.n76(e.LCg(Z,0),e.LCg(it,1))),"float32"))}(Z,it),ot=e.WQq(at,q);return e.wgE(e._M9(e.rhj(ot,0),e.y4m(at,ot),0),"float32")})},categoricalCrossentropy:A,sparseCategoricalCrossentropy:x,mse:E.bt,MSE:E.bt,mae:E.Xv,MAE:E.Xv,mape:E.VW,MAPE:E.VW,cosine:E.Pg};function W(Z){if("string"==typeof Z&&Z in V)return V[Z];if("string"!=typeof Z&&null!=Z)return Z;throw new l.Qp(`Unknown metric ${Z}`)}function Y(Z){if(g.vA(null!==Z,`Unknown LossOrMetricFn ${Z}`),"string"==typeof Z)return Z;{let it;for(const at of Object.keys(E.SO))if(E.SO[at]===Z){it=at;break}if(void 0!==it)return it;for(const at of Object.keys(V))if(V[at]===Z){it=at;break}return void 0!==it?it:Z.name}}},59352:(pt,R,t)=>{"use strict";t.d(R,{Bm:()=>u,R9:()=>f});var e=t(41653),s=t(99198),l=t(24503);class g extends e.JFn.Serializable{}let c=(()=>{class d extends g{constructor(T){super(),function E(d){if(null!=d&&"object"!=typeof d)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${d}`)}(T),this.l1=null==T||null==T.l1?.01:T.l1,this.l2=null==T||null==T.l2?.01:T.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(T){return(0,e.DZQ)(()=>{let D=(0,e.Ul9)([1]);return this.hasL1&&(D=(0,e.WQq)(D,(0,e.czq)(e.lKK(this.l1,(0,e.tnl)(T))))),this.hasL2&&(D=(0,e.WQq)(D,(0,e.czq)(e.lKK(this.l2,s.Ew(T))))),e.tQQ(D,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(T,D){return new T({l1:D.l1,l2:D.l2})}}return d.className="L1L2",d})();e.JFn.registerClass(c);const h={l1l2:"L1L2"};function f(d){return(0,l.k4)(d)}function p(d,C={}){return(0,l.Xv)(d,e.JFn.SerializationMap.getMap().classNameMap,C,"regularizer")}function u(d){return null==d?null:"string"==typeof d?p({className:d in h?h[d]:d,config:{}}):d instanceof g?d:p(d)}},51367:(pt,R,t)=>{"use strict";t.d(R,{J:()=>E,Ol:()=>g,mW:()=>c});var e=t(42946),s=t(24503),l=t(89119);function E(y,m,h){if("number"==typeof y)return(0,s.fD)(y,m);if(y.length!==m)throw new e.Qp(`The ${h} argument must be an integer or tuple of ${m} integers. Received: ${y.length} elements.`);for(let f=0;f<m;++f){const p=y[f];if(!(0,l.Fq)(p))throw new e.Qp(`The ${h} argument must be an integer or tuple of ${m} integers. Received: ${JSON.stringify(y)} including a non-integer number ${p}`)}return y}function g(y,m,h,f,p=1){if(null==y)return y;let d;return d="same"===h?y:y-(m+(m-1)*(p-1))+1,Math.floor((d+f-1)/f)}function c(y,m,h,f){if(null==y)return null;if("valid"===f)y=y*m+(0,l.T9)([h-m,0]);else{if("same"!==f)throw new e.Qp(`Unsupport padding mode: ${f}.`);y*=m}return y}},24503:(pt,R,t)=>{"use strict";t.d(R,{Am:()=>w,Cb:()=>f,Cd:()=>x,E6:()=>j,HP:()=>F,U9:()=>g,Xv:()=>C,ZF:()=>H,fD:()=>l,k4:()=>u,oo:()=>B,sg:()=>k,st:()=>y,th:()=>D,uc:()=>h,vA:()=>E,wL:()=>c});var e=t(41653),s=t(42946);function l(W,Y){if(Array.isArray(W)){let Z=[];for(let it=0;it<Y;it++)Z=Z.concat(W);return Z}{const Z=new Array(Y);return Z.fill(W),Z}}function E(W,Y){if(!W)throw new s.pf(Y)}function g(W,Y){let Z=0;for(const it of W)it===Y&&Z++;return Z}function c(W){return 1===W.length?W[0]:W}function y(W){return Array.isArray(W)?W:[W]}function h(W){const Z=W.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==Z[0]?Z:"private"+Z}function f(W){return W.length<=1||-1===W.indexOf("_")?W:W.replace(/[_]+(\w|$)/g,(Y,Z)=>Z.toUpperCase())}let p={};function u(W){if(null==W)return null;const Y={};return Y.className=W.getClassName(),Y.config=W.getConfig(),Y}function d(W){if(null!=W&&"object"==typeof W)if(Array.isArray(W))W.forEach(Y=>d(Y));else{const Y=Object.keys(W);for(const Z of Y){const it=W[Z];null!=it&&"object"==typeof it&&(Array.isArray(it)||"ndarray"!==it.type||"number"!=typeof it.value?d(it):W[Z]=it.value)}}}function C(W,Y={},Z={},it="object",at=!1){if("string"==typeof W){let ot;if(W in Z)ot=Z[W];else if(W in p)ot=p[W];else if(ot=Y[W],null==ot)throw new s.Qp(`Unknown ${it}: ${W}. This may be due to one of the following reasons:\n1. The ${it} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${it} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return ot}{const q=W;if(null==q.className||null==q.config)throw new s.Qp(`${it}: Improper config format: ${JSON.stringify(q)}.\n'className' and 'config' must set.`);const ot=q.className;let rt,et;if(ot in Z?[rt,et]=Z[ot]:ot in p?[rt,et]=p.className:ot in Y&&([rt,et]=Y[ot]),null==rt)throw new s.Qp(`Unknown ${it}: ${ot}. This may be due to one of the following reasons:\n1. The ${it} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${it} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=et){const yt={};for(const Ht of Object.keys(p))yt[Ht]=p[Ht];for(const Ht of Object.keys(Z))yt[Ht]=Z[Ht];q.config.customObjects=yt;const St=Object.assign({},p);for(const Ht of Object.keys(Z))p[Ht]=Z[Ht];d(q.config);const se=et(rt,q.config,Z,at);return p=Object.assign({},St),se}{const yt=Object.assign({},p);for(const St of Object.keys(Z))p[St]=Z[St];const mt=new rt(q.config);return p=Object.assign({},yt),mt}}}function D(W,Y){return-1*function T(W,Y){return W<Y?-1:W>Y?1:0}(W,Y)}function w(W){if(null==W)return W;const Y=[];for(const Z of W)-1===Y.indexOf(Z)&&Y.push(Z);return Y}function H(W){if(null==W)throw new s.Qp(`Invalid value in obj: ${JSON.stringify(W)}`);for(const Y in W)if(W.hasOwnProperty(Y))return!1;return!0}function j(W,Y,Z){if(null!=Z&&W.indexOf(Z)<0)throw new s.Qp(`${Z} is not a valid ${Y}.  Valid values are ${W} or null/undefined.`)}function F(W,Y,Z=0,it=1/0){return E(Z>=0),E(it>=Z),Array.isArray(W)&&W.length>=Z&&W.length<=it&&W.every(at=>typeof at===Y)}function B(W,Y){Array.isArray(W)?(e.ZSL.assert(W.length>0,()=>`${Y} is unexpectedly an empty array.`),W.forEach((Z,it)=>B(Z,`element ${it+1} of ${Y}`))):e.ZSL.assert(Number.isInteger(W)&&W>0,()=>`Expected ${Y} to be a positive integer, but got ${A(W)}.`)}function A(W){return null===W?"null":Array.isArray(W)?"["+W.map(Y=>A(Y)).join(",")+"]":"string"==typeof W?`"${W}"`:`${W}`}function k(W,Y,Z){let at,it=null!=Z?Z():e.ZSL.now();return(...ot)=>{const rt=null!=Z?Z():e.ZSL.now();return rt-it<Y||(it=rt,at=W(...ot)),at}}function x(W){return"relu"===W?"relu":"linear"===W?"linear":"elu"===W?"elu":null}},89119:(pt,R,t)=>{"use strict";t.d(R,{Fq:()=>s,T9:()=>g,jk:()=>E,no:()=>l,y1:()=>f});var e=t(42946);function s(p){return p===parseInt(p.toString(),10)}function l(p,u,d){null==u&&(u=0),null==d&&(d=p.length);let C=1;for(let T=u;T<d;++T)C*=p[T];return C}function E(p){if(0===p.length)return Number.NaN;let u=Number.POSITIVE_INFINITY;for(let d=0;d<p.length;d++){const C=p[d];C<u&&(u=C)}return u}function g(p){if(0===p.length)return Number.NaN;let u=Number.NEGATIVE_INFINITY;for(let d=0;d<p.length;d++){const C=p[d];C>u&&(u=C)}return u}function f(p,u){if(u<p)throw new e.Qp(`end (${u}) < begin (${p}) is forbidden.`);const d=[];for(let C=p;C<u;++C)d.push(C);return d}},71936:(pt,R,t)=>{"use strict";t.d(R,{FS:()=>l,TT:()=>s,U$:()=>g,un:()=>E});var e=t(42946);function s(c){return Array.isArray(c)&&Array.isArray(c[0])}function l(c){return 0===c.length?[]:Array.isArray(c[0])?c:[c]}function E(c){let y;if(Array.isArray(c)){if(1!==c.length)throw new e.Qp(`Expected Tensor length to be 1; got ${c.length}`);y=c[0]}else y=c;return y}function g(c){if(Array.isArray(c)&&Array.isArray(c[0])){if(1===c.length)return c[0];throw new e.Qp(`Expected exactly 1 Shape; got ${c.length}`)}return c}},43549:(pt,R,t)=>{"use strict";function e(s){let l=0;for(const E of s)l+=0===E.shape.length?1:E.shape.reduce((g,c)=>g*c);return l}t.d(R,{Y:()=>e})},75768:(pt,R,t)=>{"use strict";t.d(R,{UM:()=>j,eR:()=>c,ex:()=>H});var e=t(41653),s=t(29887),l=t(9980);t(42946);const g="Variable";class c{constructor(A,k="float32",x=g,V=!0,W=null){this.dtype=null==k?"float32":k,this.shape=A.shape,this.id=(0,s.j)(),this.originalName=(0,l.BC)(x=null==x?g:x),this.name=(0,l.Uc)(this.originalName),this.trainable_=V,this.constraint=W,this.val=e.bvq(A,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(A){return this.assertNotDisposed(),function y(B,A){if(B.shape.toString()!==A.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(B.shape)+" vs. "+JSON.stringify(A.shape))}(this.val,A),this.val.id!==A.id&&(this.val.assign(A),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(A){this.trainable_=A,this.val.trainable=A}}function H(B){return B.map(A=>A.read())}function j(B){B.forEach(A=>{A[0].write(A[1])})}},13509:(pt,R,t)=>{"use strict";t.d(R,{r:()=>e});const e="4.22.0"},77816:(pt,R,t)=>{"use strict";t.d(R,{r:()=>e});const e="4.22.0"},2495:function(pt,R,t){var e;!function(s,l){function g(h){var f=this,p=function m(){var h=4022871197;return function(p){p=String(p);for(var u=0;u<p.length;u++){var d=.02519603282416938*(h+=p.charCodeAt(u));d-=h=d>>>0,h=(d*=h)>>>0,h+=4294967296*(d-=h)}return 2.3283064365386963e-10*(h>>>0)}}();f.next=function(){var u=2091639*f.s0+2.3283064365386963e-10*f.c;return f.s0=f.s1,f.s1=f.s2,f.s2=u-(f.c=0|u)},f.c=1,f.s0=p(" "),f.s1=p(" "),f.s2=p(" "),f.s0-=p(h),f.s0<0&&(f.s0+=1),f.s1-=p(h),f.s1<0&&(f.s1+=1),f.s2-=p(h),f.s2<0&&(f.s2+=1),p=null}function c(h,f){return f.c=h.c,f.s0=h.s0,f.s1=h.s1,f.s2=h.s2,f}function y(h,f){var p=new g(h),u=f&&f.state,d=p.next;return d.int32=function(){return 4294967296*p.next()|0},d.double=function(){return d()+11102230246251565e-32*(2097152*d()|0)},d.quick=d,u&&("object"==typeof u&&c(u,p),d.state=function(){return c(p,{})}),d}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.alea=y}(0,pt=t.nmd(pt))},84478:function(pt,R,t){var e;!function(s,l){function g(m){var h=this,f="";h.next=function(){var u=h.b,d=h.c,C=h.d,T=h.a;return u=u<<25^u>>>7^d,d=d-C|0,C=C<<24^C>>>8^T,T=T-u|0,h.b=u=u<<20^u>>>12^d,h.c=d=d-C|0,h.d=C<<16^d>>>16^T,h.a=T-u|0},h.a=0,h.b=0,h.c=-1640531527,h.d=1367130551,m===Math.floor(m)?(h.a=m/4294967296|0,h.b=0|m):f+=m;for(var p=0;p<f.length+20;p++)h.b^=0|f.charCodeAt(p),h.next()}function c(m,h){return h.a=m.a,h.b=m.b,h.c=m.c,h.d=m.d,h}function y(m,h){var f=new g(m),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.tychei=y}(0,pt=t.nmd(pt))},57850:function(pt,R,t){var e;!function(s,l){function g(m){var h=this,f="";h.x=0,h.y=0,h.z=0,h.w=0,h.next=function(){var u=h.x^h.x<<11;return h.x=h.y,h.y=h.z,h.z=h.w,h.w^=h.w>>>19^u^u>>>8},m===(0|m)?h.x=m:f+=m;for(var p=0;p<f.length+64;p++)h.x^=0|f.charCodeAt(p),h.next()}function c(m,h){return h.x=m.x,h.y=m.y,h.z=m.z,h.w=m.w,h}function y(m,h){var f=new g(m),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.xor128=y}(0,pt=t.nmd(pt))},79040:function(pt,R,t){var e;!function(s,l){function g(m){var h=this;h.next=function(){var C,T,p=h.w,u=h.X,d=h.i;return h.w=p=p+1640531527|0,T=u[d+34&127],C=u[d=d+1&127],T^=T<<13,C^=C<<17,T=u[d]=(T^=T>>>15)^(C^=C>>>12),h.i=d,T+(p^p>>>16)|0},function f(p,u){var d,C,T,D,S,b=[],w=128;for(u===(0|u)?(C=u,u=null):(u+="\0",C=0,w=Math.max(w,u.length)),T=0,D=-32;D<w;++D)u&&(C^=u.charCodeAt((D+32)%u.length)),0===D&&(S=C),C^=C<<10,C^=C>>>15,C^=C<<4,C^=C>>>13,D>=0&&(T=0==(d=b[127&D]^=C+(S=S+1640531527|0))?T+1:0);for(T>=128&&(b[127&(u&&u.length||0)]=-1),T=127,D=512;D>0;--D)C=b[T+34&127],d=b[T=T+1&127],C^=C<<13,d^=d<<17,b[T]=(C^=C>>>15)^(d^=d>>>12);p.w=S,p.X=b,p.i=T}(h,m)}function c(m,h){return h.i=m.i,h.w=m.w,h.X=m.X.slice(),h}function y(m,h){null==m&&(m=+new Date);var f=new g(m),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&(p.X&&c(p,f),u.state=function(){return c(f,{})}),u}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.xor4096=y}(0,pt=t.nmd(pt))},88114:function(pt,R,t){var e;!function(s,l){function g(m){var h=this;h.next=function(){var d,C,p=h.x,u=h.i;return d=p[u],C=(d^=d>>>7)^d<<24,C^=(d=p[u+1&7])^d>>>10,C^=(d=p[u+3&7])^d>>>3,C^=(d=p[u+4&7])^d<<7,d=p[u+7&7],p[u]=C^=(d^=d<<13)^d<<9,h.i=u+1&7,C},function f(p,u){var d,T=[];if(u===(0|u))T[0]=u;else for(u=""+u,d=0;d<u.length;++d)T[7&d]=T[7&d]<<15^u.charCodeAt(d)+T[d+1&7]<<13;for(;T.length<8;)T.push(0);for(d=0;d<8&&0===T[d];++d);for(8==d&&(T[7]=-1),p.x=T,p.i=0,d=256;d>0;--d)p.next()}(h,m)}function c(m,h){return h.x=m.x.slice(),h.i=m.i,h}function y(m,h){null==m&&(m=+new Date);var f=new g(m),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&(p.x&&c(p,f),u.state=function(){return c(f,{})}),u}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.xorshift7=y}(0,pt=t.nmd(pt))},85704:function(pt,R,t){var e;!function(s,l){function g(m){var h=this,f="";h.next=function(){var u=h.x^h.x>>>2;return h.x=h.y,h.y=h.z,h.z=h.w,h.w=h.v,(h.d=h.d+362437|0)+(h.v=h.v^h.v<<4^u^u<<1)|0},h.x=0,h.y=0,h.z=0,h.w=0,h.v=0,m===(0|m)?h.x=m:f+=m;for(var p=0;p<f.length+64;p++)h.x^=0|f.charCodeAt(p),p==f.length&&(h.d=h.x<<10^h.x>>>4),h.next()}function c(m,h){return h.x=m.x,h.y=m.y,h.z=m.z,h.w=m.w,h.v=m.v,h.d=m.d,h}function y(m,h){var f=new g(m),p=h&&h.state,u=function(){return(f.next()>>>0)/4294967296};return u.double=function(){do{var T=((f.next()>>>11)+(f.next()>>>0)/4294967296)/(1<<21)}while(0===T);return T},u.int32=f.next,u.quick=u,p&&("object"==typeof p&&c(p,f),u.state=function(){return c(f,{})}),u}l&&l.exports?l.exports=y:t.amdD&&t.amdO?void 0!==(e=function(){return y}.call(R,t,R,l))&&(l.exports=e):this.xorwow=y}(0,pt=t.nmd(pt))},97454:function(pt,R,t){var e;!function(s,l,E){var d,g=256,h=E.pow(g,6),f=E.pow(2,52),p=2*f,u=g-1;function C(j,F,B){var A=[],k=b(S((F=1==F?{entropy:!0}:F||{}).entropy?[j,H(l)]:null==j?function w(){try{var j;return d&&(j=d.randomBytes)?j=j(g):(j=new Uint8Array(g),(s.crypto||s.msCrypto).getRandomValues(j)),H(j)}catch{var F=s.navigator,B=F&&F.plugins;return[+new Date,s,B,s.screen,H(l)]}}():j,3),A),x=new T(A),V=function(){for(var W=x.g(6),Y=h,Z=0;W<f;)W=(W+Z)*g,Y*=g,Z=x.g(1);for(;W>=p;)W/=2,Y/=2,Z>>>=1;return(W+Z)/Y};return V.int32=function(){return 0|x.g(4)},V.quick=function(){return x.g(4)/4294967296},V.double=V,b(H(x.S),l),(F.pass||B||function(W,Y,Z,it){return it&&(it.S&&D(it,x),W.state=function(){return D(x,{})}),Z?(E.random=W,Y):W})(V,k,"global"in F?F.global:this==E,F.state)}function T(j){var F,B=j.length,A=this,k=0,x=A.i=A.j=0,V=A.S=[];for(B||(j=[B++]);k<g;)V[k]=k++;for(k=0;k<g;k++)V[k]=V[x=u&x+j[k%B]+(F=V[k])],V[x]=F;(A.g=function(W){for(var Y,Z=0,it=A.i,at=A.j,q=A.S;W--;)Y=q[it=u&it+1],Z=Z*g+q[u&(q[it]=q[at=u&at+Y])+(q[at]=Y)];return A.i=it,A.j=at,Z})(g)}function D(j,F){return F.i=j.i,F.j=j.j,F.S=j.S.slice(),F}function S(j,F){var k,B=[],A=typeof j;if(F&&"object"==A)for(k in j)try{B.push(S(j[k],F-1))}catch{}return B.length?B:"string"==A?j:j+"\0"}function b(j,F){for(var A,B=j+"",k=0;k<B.length;)F[u&k]=u&(A^=19*F[u&k])+B.charCodeAt(k++);return H(F)}function H(j){return String.fromCharCode.apply(0,j)}if(b(E.random(),l),pt.exports){pt.exports=C;try{d=t(41234)}catch{}}else void 0!==(e=function(){return C}.call(R,t,R,pt))&&(pt.exports=e)}(typeof self<"u"?self:this,[],Math)},85817:()=>{},18590:()=>{},4530:()=>{},8108:()=>{},80551:()=>{},41234:()=>{}}]);